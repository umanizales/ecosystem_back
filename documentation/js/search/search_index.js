var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AWSSESProvider.html",[0,0.316,1,4.257]],["body/classes/AWSSESProvider.html",[0,0.206,1,4.27,2,0.31,3,0.024,4,0.039,5,0.021,6,3.327,7,0.272,8,5.21,9,4.017,10,3.814,11,2.265,12,4.653,13,0.138,14,0.406,15,3.479,16,3.06,17,5.21,18,5.624,19,4.9,20,4.829,21,5.21,22,1.749,23,3.146,24,6.426,25,4.017,26,4.9,27,2.223,28,0.43,29,5.126,30,0.381,31,0.005,32,0.551,33,3.327,34,7.027,35,3.327,36,3.327,37,0.903,38,1.796,39,3.227,40,5.126,41,1.848,42,3.327,43,4.27,44,4.798,45,3.327,46,6.282,47,3.993,48,2.077,49,0.608,50,1.286,51,4.9,52,2.133,53,2.464,54,4.27,55,6.292,56,3.327,57,3.501,58,2.771,59,4.471,60,4.132,61,3.744,62,3.327,63,4.017,64,0.065,65,2.475,66,2.475,67,2.607,68,2.475,69,2.771,70,2.607,71,2.771,72,2.771,73,2.272,74,2.475,75,5.21,76,3.458,77,3.814,78,0.692,79,2.475,80,2.607,81,2.607,82,4.017,83,6.254,84,5.126,85,2.771,86,2.992,87,3.327,88,3.327,89,2.366,90,0.024,91,2.051,92,2.607,93,1.444,94,3.327,95,5.126,96,3.327,97,3.327,98,3.327,99,3.327,100,2.992,101,3.327,102,2.771,103,2.992,104,3.327,105,2.992,106,3.327,107,5.228,108,2.771,109,2.475,110,2.992,111,2.475,112,2.992,113,3.756,114,4.27,115,2.907,116,5.21,117,5.853,118,4.27,119,4.27,120,0.492,121,3.641,122,1.407,123,5.126,124,5.126,125,4.27,126,2.992,127,2.117,128,3.501,129,2.589,130,2.992,131,3.501,132,2.992,133,7.027,134,2.223,135,3.327,136,4.61,137,5.21,138,5.21,139,2.272,140,2.188,141,5.126,142,3.641,143,5.646,144,4.27,145,4.017,146,3.814,147,4.27,148,3.327,149,2.992,150,5.21,151,4.61,152,3.327,153,3.327,154,3.327,155,3.327,156,3.327,157,3.327,158,3.327,159,5.853,160,2.771,161,2.771,162,1.755,163,2.771,164,2.771,165,4.27,166,2.771,167,2.992,168,1.992,169,2.475,170,2.475,171,2.607,172,2.607,173,2.051,174,0.002,175,0.002]],["title/classes/AcceptInvitationDto.html",[0,0.316,176,4.004]],["body/classes/AcceptInvitationDto.html",[0,0.534,2,0.656,3,0.05,4,0.044,5,0.044,7,0.575,13,0.291,14,0.684,28,0.454,30,0.387,31,0.004,32,0.593,49,0.908,64,0.05,90,0.05,174,0.004,175,0.004,176,6.763,177,9.736,178,7.034,179,1.036,180,2.157,181,2.866,182,6.376,183,6.947,184,0.908,185,8.398,186,7.034,187,7.034,188,7.034,189,4.458,190,2.296,191,1.48]],["title/classes/Acta.html",[0,0.316,192,3.489]],["body/classes/Acta.html",[0,0.288,2,0.434,3,0.033,4,0.029,5,0.029,7,0.38,13,0.193,14,0.521,28,0.494,30,0.427,31,0.004,32,0.614,37,1.783,49,0.74,60,4.314,64,0.059,90,0.047,120,0.98,122,0.816,174,0.003,175,0.003,179,0.558,184,0.987,192,5.647,193,4.651,194,3.931,195,1.15,196,5.663,197,6.341,198,2.279,199,2.413,200,3.618,201,2.494,202,6.341,203,3.237,204,6.341,205,6.341,206,2.338,207,1.398,208,4.651,209,2.458,210,3.063,211,2.86,212,4.651,213,4.601,214,4.651,215,4.651,216,4.651,217,3.144,218,2.669,219,4.09,220,4.651,221,4.651,222,4.651,223,2.091,224,1.009,225,4.651,226,4.651,227,4.651,228,4.651,229,4.651,230,4.651,231,1.741,232,0.881,233,0.459,234,2.815,235,1.22,236,1.309,237,0.587,238,2.24,239,1.608,240,2.019,241,1.278,242,1.428,243,1.677,244,3.183,245,2.4,246,1.162,247,4.183,248,4.651]],["title/modules/ActaModule.html",[249,1.063,250,3.801]],["body/modules/ActaModule.html",[0,0.405,3,0.046,4,0.041,5,0.041,31,0.004,49,0.636,64,0.072,78,1.36,90,0.046,174,0.003,175,0.003,192,4.463,235,1.214,237,0.825,247,7.415,249,1.879,250,7.804,251,2.17,252,2.17,253,2.229,254,2.229,255,2.199,256,3.081,257,3.081,258,5.878,259,5.878,260,5.878,261,5.878,262,3.653,263,4.336,264,8.261,265,2.738,266,2.229,267,2.229,268,6.535,269,2.931,270,6.535,271,8.245,272,6.535,273,3.107,274,2.575,275,2.39,276,5.878,277,2.425,278,6.535]],["title/injectables/ActaService.html",[264,4.004,279,1.233]],["body/injectables/ActaService.html",[0,0.278,3,0.032,4,0.028,5,0.028,13,0.186,15,1.621,16,1.554,22,2.186,23,3.183,27,2.279,28,0.458,30,0.382,31,0.005,32,0.593,39,2.583,48,3.059,49,0.896,50,1.895,52,3.142,53,2.525,60,4.741,64,0.064,78,0.935,90,0.032,122,1.125,134,2.279,139,2.979,174,0.003,175,0.003,192,6.718,194,2.691,195,0.968,201,2.448,211,2.216,224,0.99,232,1.286,237,0.567,241,1.235,264,5.022,276,4.043,279,1.547,280,1.693,281,4.495,282,2.533,283,4.202,284,5.765,285,6.41,286,2.691,287,3.307,288,2.211,289,4.495,290,3.259,291,4.495,292,6.41,293,6.41,294,6.746,295,4.495,296,4.495,297,3.959,298,6.381,299,5.765,300,4.495,301,6.41,302,4.495,303,4.079,304,3.047,305,4.495,306,3.46,307,4.495,308,3.381,309,3.3,310,3.107,311,7.846,312,4.495,313,2.097,314,5.765,315,2.223,316,1.799,317,1.887,318,4.495,319,4.495,320,4.495,321,4.495,322,7.47,323,4.495,324,4.495,325,3.136,326,4.495,327,4.495,328,5.022,329,3.17,330,4.377]],["title/classes/ActivitiesConfig.html",[0,0.316,331,3.633]],["body/classes/ActivitiesConfig.html",[0,0.441,2,0.386,3,0.029,4,0.026,5,0.026,7,0.338,11,2.667,13,0.171,14,0.479,28,0.464,30,0.418,31,0.005,32,0.581,37,2.501,64,0.051,90,0.062,120,0.968,122,0.726,162,3.185,174,0.002,175,0.002,184,0.928,195,1.077,198,2.135,199,2.1,201,2.336,203,3.093,206,2.19,207,1.309,209,2.263,210,3.656,211,2.088,217,2.945,218,2.922,219,2.986,224,0.548,231,2.078,232,1.051,233,0.408,234,2.723,235,1.456,236,1.165,237,0.522,240,1.796,241,1.137,242,1.271,244,3.799,246,1.782,331,4.293,332,6.154,333,8.057,334,3.078,335,5.977,336,3.185,337,4.293,338,5.977,339,4.987,340,3.049,341,5.03,342,4.731,343,5.069,344,5.03,345,5.03,346,4.397,347,4.397,348,5.139,349,4.138,350,4.138,351,4.138,352,6.073,353,4.138,354,4.138,355,4.296,356,2.986,357,4.138,358,4.138,359,4.138,360,4.138,361,4.138,362,2.568,363,4.293,364,2.667,365,4.731,366,1.513,367,4.731,368,4.731,369,4.731,370,3.115,371,3.242,372,3.447]],["title/modules/ActivitiesConfigModule.html",[249,1.063,373,3.633]],["body/modules/ActivitiesConfigModule.html",[0,0.367,3,0.042,4,0.037,5,0.037,31,0.004,49,0.577,64,0.074,78,1.235,90,0.042,174,0.003,175,0.003,235,1.102,237,0.749,249,1.795,251,1.97,252,1.97,253,2.024,254,2.024,255,1.997,256,2.944,257,2.944,262,3.561,263,4.227,265,2.573,266,2.024,267,2.024,269,2.755,273,2.821,274,2.338,275,2.171,277,2.202,331,4.22,332,3.776,335,4.931,371,6.072,373,7.35,374,5.337,375,5.934,376,5.337,377,5.337,378,8.15,379,4.65,380,5.337,381,3.957,382,4.415,383,7.75,384,4.944,385,4.944,386,4.052,387,4.395,388,3.906,389,3.684,390,3.13,391,4.285,392,3.906,393,5.511,394,5.766,395,4.944,396,5.292,397,5.337,398,5.934]],["title/injectables/ActivitiesConfigService.html",[279,1.233,378,4.004]],["body/injectables/ActivitiesConfigService.html",[0,0.11,3,0.013,4,0.011,5,0.011,13,0.073,14,0.242,15,2.137,16,2.049,22,1.043,23,3.066,27,1.087,28,0.386,30,0.328,31,0.005,32,0.541,37,0.481,38,1.65,39,2.049,48,2.571,49,0.753,50,1.593,52,3.04,53,1.891,60,1.512,64,0.063,78,0.368,89,1.259,90,0.013,93,1.327,121,1.031,122,1.725,134,2.879,139,2.504,142,1.031,162,3.351,174,0.001,175,0.001,192,3.699,194,2.873,195,0.609,201,0.58,203,2.491,224,0.636,232,1.157,237,0.223,241,0.487,246,0.443,279,0.738,280,0.667,282,1.493,286,1.283,287,1.577,288,1.303,290,1.92,297,1.666,298,3.761,304,1.453,306,1.65,308,1.613,309,2.12,310,1.482,313,0.826,315,0.876,316,0.709,325,2.015,329,1.512,331,5.758,332,5.152,335,3.054,338,1.945,339,5.773,340,4.234,343,6.746,346,3.126,347,4.084,352,3.771,355,1.426,356,3.726,363,4.516,364,4.283,378,2.395,379,6.344,381,0.72,385,1.475,386,1.209,394,1.317,399,1.475,400,4.033,401,3.057,402,3.057,403,4.033,404,4.033,405,3.057,406,2.749,407,3.057,408,1.771,409,4.033,410,4.513,411,4.033,412,4.245,413,4.584,414,5.26,415,4.995,416,3.057,417,3.057,418,1.771,419,5.712,420,4.419,421,6.038,422,2.282,423,8.097,424,1.771,425,7.929,426,5.226,427,4.8,428,3.983,429,7.929,430,4.276,431,3.36,432,1.771,433,3.057,434,1.771,435,1.771,436,1.771,437,5.417,438,1.303,439,1.771,440,4.8,441,3.057,442,4.245,443,1.771,444,3.057,445,4.8,446,1.771,447,2.546,448,2.749,449,1.771,450,4.047,451,3.057,452,1.771,453,1.771,454,1.771,455,2.713,456,5.593,457,1.771,458,3.057,459,3.057,460,1.004,461,0.934,462,2.395,463,1.475,464,2.754,465,1.593,466,1.593,467,1.771,468,1.593,469,1.771,470,3.057,471,1.771,472,3.339,473,1.475,474,0.956,475,0.979,476,0.979,477,1.387,478,1.593,479,1.317,480,1.317,481,1.593,482,0.782,483,1.593,484,1.771,485,1.771,486,3.34,487,1.771,488,3.057,489,2.749,490,1.771,491,1.771,492,1.771,493,1.771,494,1.771,495,1.771,496,1.771,497,1.771,498,3.057,499,1.771,500,1.166,501,2.395,502,1.771,503,1.771,504,0.876,505,1.771,506,3.057,507,3.057,508,1.771,509,1.771,510,3.057,511,2.546,512,1.771,513,1.771,514,1.771,515,1.771,516,4.8,517,3.057,518,1.771,519,3.057,520,1.771,521,1.127,522,1.475,523,1.317,524,1.593,525,1.771,526,4.033,527,1.771,528,1.771,529,1.771,530,3.057,531,1.771,532,4.033,533,1.771,534,1.771,535,1.771,536,3.057,537,1.771,538,1.771,539,5.417,540,4.936,541,4.033,542,2.487,543,1.917,544,4.033,545,5.417,546,1.771,547,3.057,548,1.771,549,1.771,550,1.771,551,1.771,552,1.771,553,1.771,554,5.926,555,1.771,556,4.033,557,1.771,558,4.033,559,4.8,560,1.771,561,1.771,562,4.8,563,1.771,564,1.771,565,1.127,566,1.771,567,1.771,568,1.771,569,1.771,570,2.546,571,3.057,572,1.771,573,1.771,574,3.057,575,3.057,576,1.771,577,3.057,578,1.771,579,1.771,580,1.771,581,1.771,582,4.033,583,3.057,584,1.771,585,1.771,586,1.593,587,1.771,588,1.771,589,1.771,590,1.593,591,1.771,592,3.057,593,3.057,594,1.771,595,1.771,596,1.771,597,3.36,598,1.771,599,1.771,600,4.8,601,1.771,602,5.926,603,3.057,604,3.057,605,1.771,606,1.771,607,1.771,608,1.771,609,1.771,610,1.771,611,3.057,612,1.771,613,2.546,614,1.771,615,1.771,616,3.057,617,1.771,618,1.771,619,1.771]],["title/classes/AddTableJoinInput.html",[0,0.316,620,4.257]],["body/classes/AddTableJoinInput.html",[0,0.56,2,0.612,3,0.047,4,0.041,5,0.041,7,0.8,13,0.272,14,0.655,28,0.402,30,0.393,31,0.004,32,0.528,39,2.858,64,0.067,90,0.047,120,0.868,174,0.003,175,0.003,179,0.992,184,0.804,190,2.134,191,1.381,207,1.518,232,1.274,233,0.647,620,6.886,621,9.049,622,5.165,623,5.902,624,4.174,625,6.963,626,5.902,627,6.562,628,7.672,629,4.687,630,6.886,631,6.562,632,6.562,633,2.14,634,5.878,635,5.902,636,4.175]],["title/classes/Announcement.html",[0,0.316,637,2.975]],["body/classes/Announcement.html",[0,0.181,2,0.273,3,0.021,4,0.018,5,0.018,7,0.857,13,0.121,14,0.368,28,0.476,30,0.42,31,0.005,32,0.606,37,2.366,47,2.014,49,0.638,64,0.051,90,0.033,91,3.041,107,2.179,120,0.944,122,0.514,126,4.173,128,2,168,3.924,174,0.002,175,0.002,184,0.952,195,0.87,198,1.726,199,2.457,206,1.77,207,1.798,209,1.94,211,1.604,218,1.027,224,1.095,231,1.23,232,1.169,233,0.289,234,2.719,235,0.862,236,0.824,237,0.369,242,0.899,243,1.056,246,0.732,288,1.26,366,3.308,438,2.064,455,2.124,504,3.534,543,3.116,637,5.529,638,2.928,639,3.452,640,3.935,641,2.502,642,4.515,643,5.762,644,3.111,645,5.182,646,3.45,647,5.316,648,5.136,649,5.182,650,3.04,651,4.052,652,2.638,653,2.928,654,1.828,655,2.928,656,4.426,657,3.635,658,2.634,659,2.928,660,2.009,661,3.625,662,2.928,663,2.928,664,2.634,665,2.928,666,4.173,667,4.64,668,2.928,669,3.635,670,4.173,671,2.928,672,2.928,673,4.173,674,2.928,675,4.64,676,4.64,677,4.173,678,4.64,679,4.64,680,4.173,681,4.64,682,4.64,683,3.635,684,4.64,685,3.452,686,4.64,687,3.865,688,2.928,689,3.865,690,3.054,691,2.928,692,3.865,693,2.928,694,2.928,695,2.634,696,2.928,697,4.64,698,4.64,699,2.928,700,2.928,701,4.042,702,4.64,703,2.928,704,3.865,705,2.928,706,2.928,707,5.956,708,2.928,709,3.717,710,2.928,711,3.635,712,3.635,713,2.505,714,1.753,715,2.928,716,6.332,717,2.928,718,2.928,719,2.708,720,2.928,721,2.928,722,2.634,723,4.173,724,1.927,725,2.439,726,4.173,727,2,728,2.928,729,2.634,730,2.634,731,2.928]],["title/classes/AnnouncementApplicantArgs.html",[0,0.316,732,4.595]],["body/classes/AnnouncementApplicantArgs.html",[0,0.538,2,0.663,3,0.051,4,0.044,5,0.044,7,0.581,13,0.295,14,0.689,28,0.423,30,0.36,31,0.004,32,0.595,64,0.062,90,0.051,120,0.9,174,0.004,175,0.004,179,1.043,180,2.172,184,0.845,190,2.213,191,1.496,233,0.701,637,5.463,732,7.814,733,8.438,734,7.112,735,3.978,736,5.321,737,2.773,738,7.112,739,7.112,740,4.388]],["title/classes/AnnouncementApplicantsArgs.html",[0,0.316,741,4.595]],["body/classes/AnnouncementApplicantsArgs.html",[0,0.533,2,0.653,3,0.05,4,0.044,5,0.044,7,0.573,13,0.29,14,0.682,28,0.419,30,0.357,31,0.004,32,0.544,64,0.066,90,0.05,120,0.894,140,3.978,174,0.004,175,0.004,179,1.033,180,2.151,184,0.837,190,2.03,191,1.474,233,0.691,637,5.426,733,8.381,735,3.941,737,2.235,740,4.347,741,7.741,742,6.299,743,7.004,744,5.994,745,5.834,746,7.004,747,3.873,748,4.456,749,3.613,750,5.488]],["title/modules/AnnouncementsModule.html",[249,1.063,751,3.801]],["body/modules/AnnouncementsModule.html",[0,0.391,3,0.045,4,0.04,5,0.04,31,0.004,49,0.614,64,0.073,78,1.314,90,0.045,174,0.003,175,0.003,235,1.173,237,0.797,249,1.85,251,2.098,252,2.098,253,2.155,254,2.155,255,2.126,256,3.033,257,2.155,262,3.621,265,2.679,266,2.155,267,2.155,269,2.869,274,2.489,275,2.311,277,2.344,389,4.706,390,3.333,637,3.678,730,7.257,751,7.875,752,5.682,753,5.682,754,5.682,755,7.039,756,6.76,757,7.757,758,6.318,759,6.318,760,8.07,761,6.318,762,5.682,763,5.682,764,6.318,765,6.318]],["title/injectables/AnnouncementsService.html",[279,1.233,757,4.004]],["body/injectables/AnnouncementsService.html",[0,0.218,3,0.025,4,0.022,5,0.022,13,0.146,15,1.272,16,1.22,22,1.828,23,3.641,27,1.906,28,0.438,30,0.364,31,0.005,32,0.581,39,2.242,48,2.918,49,0.855,50,1.807,52,3.354,53,2.854,64,0.061,78,0.734,90,0.025,113,2.41,122,1.579,134,3.2,139,2.841,140,3.092,173,2.175,174,0.002,175,0.002,195,1.094,211,2.242,224,0.96,232,1.344,237,0.445,241,0.969,279,1.294,280,1.328,282,2.423,283,3.737,286,2.251,287,2.766,288,2.115,290,2.898,304,2.548,306,2.894,308,2.828,309,2.368,310,1.71,313,1.645,315,1.744,316,1.411,325,1.481,329,1.744,422,4.177,438,2.706,447,6.034,450,4.946,455,2.454,461,1.861,542,2.175,637,6.112,639,6.104,640,3.661,641,2.327,648,6.428,652,1.615,757,4.2,762,3.172,766,3.527,767,5.361,768,5.361,769,3.527,770,3.527,771,5.361,772,4.821,773,5.188,774,3.527,775,3.527,776,6.681,777,3.527,778,3.527,779,3.527,780,5.361,781,3.527,782,7.244,783,3.527,784,5.361,785,3.527,786,6.49,787,5.832,788,3.527,789,4.821,790,2.175,791,3.527,792,3.527,793,3.527,794,2.624,795,7.244,796,5.361,797,4.824,798,5.361,799,3.527,800,6.484,801,3.527,802,3.527,803,3.527,804,3.172,805,5.361,806,4.821,807,5.361,808,5.361,809,3.527,810,2.763]],["title/modules/AppModule.html",[249,1.063,811,4.004]],["body/modules/AppModule.html",[0,0.18,3,0.021,4,0.018,5,0.018,23,2.038,30,0.12,31,0.005,64,0.075,78,0.604,90,0.021,102,2.42,122,1.006,134,1.033,139,1.491,162,1.532,174,0.002,175,0.002,179,0.553,211,1.004,218,1.018,224,0.76,233,0.286,237,0.366,249,1.192,251,0.964,252,0.964,253,0.991,254,0.991,255,0.977,256,1.572,257,0.991,262,2.904,263,3.289,265,1.531,266,0.991,267,0.991,269,2.32,275,1.062,335,1.848,373,5.386,379,2.276,387,4.295,389,3.601,391,4.189,393,5.386,394,3.43,395,2.42,396,5.173,438,1.252,460,2.614,625,2.065,751,5.636,755,5.386,756,5.173,811,8.433,812,2.612,813,2.612,814,5.636,815,5.386,816,5.386,817,5.636,818,4.82,819,4.82,820,4.535,821,4.41,822,5.636,823,5.636,824,5.386,825,5.386,826,4.535,827,5.386,828,4.986,829,4.986,830,5.386,831,5.636,832,5.386,833,5.386,834,4.82,835,5.636,836,5.386,837,5.636,838,4.82,839,2.905,840,4.61,841,2.905,842,2.612,843,5.732,844,6.221,845,2.161,846,2.905,847,2.276,848,4.61,849,2.905,850,2.276,851,3.84,852,2.905,853,2.905,854,2.905,855,2.905,856,2.905,857,2.905,858,2.905,859,4.295,860,2.905,861,2.905,862,2.905,863,2.905,864,2.905,865,2.905,866,2.42,867,2.42,868,2.905,869,2.905,870,2.905,871,4.61,872,2.905,873,2.905,874,2.905,875,2.905,876,4.146,877,2.905,878,2.905,879,2.905,880,2.905,881,2.905,882,2.905,883,2.905,884,2.905,885,3.612,886,2.612,887,4.61,888,2.905,889,1.616,890,1.572,891,2.612,892,2.065,893,2.276,894,1.791,895,2.161,896,2.905,897,1.739,898,2.42,899,2.905,900,2.42,901,2.905,902,2.905,903,2.42,904,2.42,905,4.61,906,2.905,907,2.905,908,2.161,909,2.42,910,2.905,911,2.42,912,3.612,913,1.983,914,2.905,915,2.612,916,2.905,917,2.905,918,2.905,919,2.905,920,2.905,921,2.905,922,2.905,923,4.61,924,2.905,925,2.905,926,2.905,927,2.905,928,5.732,929,2.905,930,2.905,931,4.61,932,2.905,933,2.905,934,2.905,935,2.905,936,2.905,937,2.905,938,3.84,939,2.905,940,2.905,941,2.905,942,2.905,943,2.905,944,2.065,945,2.905,946,1.568,947,2.905,948,2.905,949,2.905,950,2.905,951,1.791]],["title/classes/Applicant.html",[0,0.316,952,3.251]],["body/classes/Applicant.html",[0,0.384,2,0.306,3,0.023,4,0.021,5,0.047,7,0.83,11,1.449,13,0.136,14,0.491,28,0.458,30,0.413,31,0.005,32,0.584,37,2.331,41,2.514,49,0.603,50,1.64,64,0.057,90,0.054,91,3.189,93,2.691,120,0.956,122,0.575,140,2.646,174,0.002,175,0.002,179,0.394,184,0.916,195,0.936,198,1.856,199,2.323,206,1.903,207,1.73,218,1.777,224,1.275,231,1.849,232,1.069,233,0.323,234,2.709,235,0.942,236,0.923,237,0.414,242,1.007,243,2.235,246,0.82,288,1.377,336,4.205,340,3.807,352,3.226,366,3.14,370,1.692,438,1.893,455,2.321,472,2.946,482,1.449,543,2.41,637,5.241,641,2.691,646,1.967,652,2.838,654,1.997,656,3.609,660,2.196,661,3.427,690,3.337,709,1.86,713,1.77,714,1.963,719,2.88,727,3.462,736,4.275,744,4.3,748,2.087,749,1.692,889,2.445,890,2.114,946,2.737,952,3.944,953,2.57,954,3.972,955,3.972,956,3.972,957,3.972,958,4.205,959,3.972,960,4.856,961,4.232,962,3.28,963,5.188,964,4.56,965,3.28,966,3.772,967,2.44,968,3.135,969,3.28,970,3.28,971,3.28,972,5.188,973,3.462,974,3.28,975,3.28,976,3.035,977,2.952,978,2.44,979,3.28,980,3.772,981,3.772,982,3.972,983,3.28,984,6.183,985,3.28,986,3.28,987,3.28,988,2.56,989,3.28,990,2.44,991,2.022,992,2.57,993,2.44,994,2.087,995,3.462,996,4.514,997,2.57,998,2.44,999,2.57,1000,3.226,1001,3.126,1002,3.462,1003,3.004]],["title/classes/ApplicantArgs.html",[0,0.316,1004,4.595]],["body/classes/ApplicantArgs.html",[0,0.535,2,0.657,3,0.05,4,0.044,5,0.044,7,0.576,13,0.292,14,0.685,28,0.42,30,0.358,31,0.004,32,0.545,64,0.066,90,0.05,120,0.897,140,3.99,174,0.004,175,0.004,179,1.038,180,2.16,184,0.841,190,2.038,191,1.483,232,1.254,233,0.695,735,3.957,737,2.25,740,4.364,744,6.008,745,5.873,747,3.898,748,4.486,749,3.637,750,5.524,1004,7.773,1005,7.05,1006,7.05,1007,7.05]],["title/modules/ApplicantModule.html",[249,1.063,755,3.633]],["body/modules/ApplicantModule.html",[0,0.378,3,0.043,4,0.038,5,0.038,31,0.004,49,0.594,64,0.074,78,1.27,90,0.043,174,0.003,175,0.003,235,1.134,237,0.77,249,1.82,251,2.026,252,2.026,253,2.082,254,2.082,255,2.054,256,2.983,257,2.983,262,3.588,265,2.62,266,2.082,267,2.082,269,2.806,274,2.404,275,2.232,277,2.265,381,3.893,387,4.475,388,4.017,389,4.663,390,3.219,391,4.364,392,4.017,755,7.383,821,4.595,825,5.612,952,3.883,998,5.871,1008,5.488,1009,6.103,1010,5.488,1011,5.488,1012,9.392,1013,6.103,1014,6.103,1015,7.892,1016,6.103,1017,5.084,1018,6.103,1019,4.167,1020,6.103]],["title/classes/ApplicantState.html",[0,0.316,984,3.801]],["body/classes/ApplicantState.html",[0,0.433,2,0.373,3,0.028,4,0.025,5,0.051,7,0.809,11,1.767,13,0.166,14,0.554,28,0.34,30,0.398,31,0.005,32,0.592,37,2.414,41,2.123,49,0.68,64,0.061,90,0.058,91,2.797,93,3.035,120,0.983,122,0.702,140,1.707,174,0.002,175,0.002,179,0.48,184,0.68,195,0.604,198,1.198,199,2.248,206,1.228,210,2.747,218,1.402,223,1.798,224,1.287,231,2.044,232,1.034,233,0.394,234,2.808,235,1.094,236,1.126,237,0.505,242,1.228,243,2.52,246,1,288,1.086,336,4.69,340,2.974,352,2.545,366,2.82,370,2.063,438,1.898,455,1.831,472,1.901,482,1.767,543,1.901,637,5.006,641,1.736,646,1.552,652,1.831,654,1.576,656,3.429,660,2.049,690,2.632,709,3.34,713,2.159,719,2.432,727,2.731,736,3.34,744,5.301,748,2.545,749,2.063,889,2.703,890,2.009,946,3.179,952,4.448,953,3.134,954,3.134,955,3.134,956,3.134,957,3.134,958,3.687,959,3.134,960,3.134,961,2.731,963,4.381,966,2.975,968,2.648,972,5.201,973,2.731,976,2.394,977,2.328,980,2.975,981,2.975,982,3.134,984,6.397,988,2.02,990,2.975,991,2.466,992,4.614,993,4.381,994,3.747,995,5.266,996,5.147,997,3.134,998,2.975,999,3.134,1000,3.747,1001,3.631,1002,4.022,1003,3.389,1021,3.999,1022,3.999,1023,3.999]],["title/classes/Assign.html",[0,0.316,352,3.251]],["body/classes/Assign.html",[0,0.479,2,0.447,3,0.034,4,0.03,5,0.03,7,0.391,11,3.416,13,0.198,14,0.531,28,0.376,30,0.403,31,0.005,32,0.595,37,2.481,64,0.055,90,0.065,120,0.989,122,0.84,162,2.526,174,0.003,175,0.003,184,0.752,195,0.723,198,1.434,199,2.022,201,1.569,203,2.487,206,1.471,207,0.879,209,2.1,211,1.656,217,2.769,218,2.35,219,2.369,224,0.635,231,2.221,232,1.124,233,0.472,234,2.804,235,1.556,236,1.348,237,0.604,240,2.079,241,1.316,242,1.471,244,4.061,246,1.933,331,3.405,332,5.33,333,6.978,334,3.563,335,5.61,336,2.526,337,3.405,338,6.091,339,4.265,340,2.418,341,3.989,342,3.752,343,4.766,344,3.989,345,3.989,346,3.536,347,3.536,348,4.133,352,6.091,355,4.375,356,2.369,362,2.745,363,5.499,364,3.416,365,5.252,366,2.452,367,6.059,368,6.564,369,6.564,370,3.458,371,3.752,372,3.989,1024,4.789,1025,4.789,1026,4.789]],["title/classes/Attachment.html",[0,0.316,996,3.059]],["body/classes/Attachment.html",[0,0.43,2,0.368,3,0.028,4,0.025,5,0.051,7,0.824,11,2.578,13,0.164,14,0.55,28,0.338,30,0.384,31,0.005,32,0.597,37,2.404,41,2.104,49,0.833,64,0.061,90,0.058,91,2.777,93,3.716,120,0.981,122,0.693,140,1.686,174,0.002,175,0.002,179,0.474,184,0.675,195,0.597,198,1.183,199,2.24,206,1.213,207,1.275,224,1.269,231,2.032,232,1.028,233,0.39,234,2.802,235,1.084,236,1.112,237,0.498,242,1.213,243,2.502,246,0.987,288,1.073,336,4.044,340,2.947,352,2.514,366,2.804,370,2.038,438,1.884,455,1.809,472,1.878,482,1.745,543,1.878,637,4.761,641,1.715,646,1.533,652,1.809,654,1.556,656,4.041,660,2.041,690,2.6,709,2.24,713,3.15,719,2.41,727,2.698,736,3.309,744,4.726,748,2.514,749,2.038,889,2.687,890,1.991,946,3.747,952,3.713,953,3.095,954,3.095,955,3.095,956,3.095,957,3.095,958,3.661,959,3.095,960,3.095,961,2.698,963,4.342,966,2.939,968,2.624,972,5.163,973,2.698,976,2.365,977,2.3,980,2.939,981,2.939,982,3.095,984,6.084,988,1.995,990,2.939,991,2.436,992,3.095,993,2.939,994,2.514,995,3.985,996,5.442,997,3.095,998,2.939,999,3.095,1000,4.416,1001,4.279,1002,4.739,1003,4.149,1027,6.94,1028,3.95,1029,3.95,1030,3.95]],["title/classes/AttachmentSubmit.html",[0,0.316,1031,4.257]],["body/classes/AttachmentSubmit.html",[0,0.556,2,0.527,3,0.04,4,0.035,5,0.056,7,0.801,11,3.316,13,0.234,14,0.595,28,0.41,30,0.398,31,0.004,32,0.606,49,0.909,64,0.066,90,0.04,93,4.057,120,0.955,174,0.003,175,0.003,179,1.012,180,2.106,181,2.798,184,0.82,189,4.397,190,1.333,191,1.19,207,1.548,232,0.758,233,0.557,336,2.982,633,2.182,634,5.337,636,3.597,656,4.37,713,4.052,744,5.196,747,3.126,748,3.597,749,2.917,750,4.43,952,5.712,995,3.861,996,5.374,1002,5.754,1003,4.529,1017,4.71,1031,7.784,1032,7.478,1033,5.084,1034,8.427,1035,5.653,1036,5.653,1037,5.653,1038,5.585,1039,4.71]],["title/classes/AuthCode.html",[0,0.316,1040,4.004]],["body/classes/AuthCode.html",[0,0.377,2,0.568,3,0.043,4,0.038,5,0.038,7,0.498,13,0.252,14,0.625,28,0.449,30,0.383,31,0.004,32,0.59,64,0.056,90,0.056,120,0.918,122,1.069,174,0.003,175,0.003,182,5.383,184,0.899,195,1.32,198,2.767,199,2.109,207,1.448,223,3.544,224,1.299,231,2.09,232,1.057,233,0.601,234,2.602,235,1.464,236,1.715,237,0.769,242,1.871,243,2.842,246,1.522,660,1.817,946,4.718,1040,6.176,1041,7.973,1042,9.571,1043,6.091,1044,7.089,1045,7.882,1046,5.015,1047,5.968,1048,6.091,1049,6.091,1050,7.089,1051,6.091,1052,6.091,1053,6.091,1054,6.091,1055,5.478,1056,6.091]],["title/modules/AuthCodeModule.html",[249,1.063,814,3.801]],["body/modules/AuthCodeModule.html",[0,0.421,3,0.048,4,0.043,5,0.043,31,0.004,49,0.661,64,0.072,78,1.414,90,0.048,174,0.003,175,0.003,235,1.263,237,0.858,249,1.913,251,2.257,252,2.257,253,2.318,254,2.318,255,2.287,256,3.137,257,2.318,262,3.689,265,2.806,266,2.318,267,2.318,269,3.004,274,2.678,275,2.486,277,2.522,814,7.689,866,7.039,867,5.662,1040,5.326,1041,5.662,1055,7.6,1057,6.113,1058,6.797,1059,6.113,1060,7.902,1061,6.797,1062,6.797,1063,8.45,1064,6.797,1065,6.113,1066,6.113,1067,6.797]],["title/injectables/AuthCodeService.html",[279,1.233,1060,4.004]],["body/injectables/AuthCodeService.html",[0,0.351,3,0.04,4,0.035,5,0.035,13,0.235,15,2.046,16,1.962,22,2.566,23,3.418,27,2.675,28,0.411,30,0.35,31,0.004,32,0.561,39,2.602,48,2.803,49,0.821,50,1.736,52,2.566,64,0.068,76,4.16,78,1.18,90,0.04,113,3.383,122,1.32,134,2.675,139,2.433,145,4.445,146,4.221,174,0.003,175,0.003,182,6.565,232,1.132,237,0.716,241,1.559,279,1.816,280,2.136,282,2.34,286,3.159,290,3.597,297,3.108,304,3.577,316,2.27,422,4.273,438,1.54,461,2.993,773,4.742,790,3.498,866,6.268,867,7.489,946,4.557,1040,4.445,1041,7.489,1047,3.874,1060,5.895,1065,5.102,1066,5.102,1068,5.673,1069,5.673,1070,5.673,1071,7.524,1072,7.524,1073,9.614,1074,5.673,1075,6.688,1076,5.673,1077,5.673,1078,5.102,1079,5.673,1080,5.673,1081,8.441,1082,5.673,1083,5.673,1084,4.221,1085,5.673,1086,5.673,1087,5.673,1088,4.445]],["title/guards/AuthGuard.html",[1089,4.595,1090,4.257]],["body/guards/AuthGuard.html",[0,0.347,3,0.04,4,0.035,5,0.035,7,0.458,11,2.476,13,0.232,15,3.025,16,1.938,22,2.546,23,2.983,27,1.992,28,0.408,30,0.386,31,0.004,32,0.435,39,2.581,48,2.786,49,0.816,50,1.726,52,2.546,64,0.053,78,1.166,90,0.04,113,3.356,122,1.635,134,2.653,139,2.413,174,0.003,175,0.003,218,2.942,279,1.801,422,3.548,438,2.655,859,6.306,944,3.985,946,5.429,1000,4.749,1001,5.516,1075,5.552,1090,6.217,1091,4.669,1092,8.046,1093,5.04,1094,5.847,1095,5.847,1096,6.712,1097,4.912,1098,6.321,1099,6.712,1100,8.046,1101,6.712,1102,5.04,1103,5.604,1104,6.712,1105,7.453,1106,5.04,1107,6.712,1108,5.604,1109,6.574,1110,4.669,1111,3.985,1112,5.604,1113,5.04,1114,5.04,1115,3.691,1116,5.04,1117,5.04,1118,5.04,1119,5.04,1120,5.04,1121,4.669]],["title/modules/AuthModule.html",[249,1.063,262,1.869]],["body/modules/AuthModule.html",[0,0.424,3,0.049,4,0.043,5,0.043,31,0.004,64,0.07,78,1.423,90,0.049,174,0.003,175,0.003,249,1.918,251,2.271,252,2.271,253,2.333,254,2.333,255,2.302,256,3.146,257,3.146,262,3.816,263,4.386,265,2.817,266,2.333,267,2.333,269,3.016,273,3.252,381,3.448,389,4.033,390,3.608,859,6.981,951,4.218,1110,5.698,1122,6.152,1123,6.152,1124,6.152,1125,6.84,1126,6.84,1127,8.483,1128,6.84]],["title/injectables/AuthService.html",[279,1.233,859,3.363]],["body/injectables/AuthService.html",[0,0.236,3,0.027,4,0.024,5,0.024,13,0.158,14,0.451,15,2.906,16,2.787,20,4.795,22,1.94,23,3.586,27,2.022,28,0.438,30,0.373,31,0.004,32,0.601,37,1.846,38,2.059,39,1.966,47,3.669,48,2.907,49,0.852,50,1.801,52,2.883,53,3.175,64,0.064,73,5.146,74,2.838,78,0.794,90,0.027,113,2.557,121,3.311,122,1.536,134,3.27,139,2.831,142,3.311,143,4.231,146,2.838,173,2.352,174,0.002,175,0.002,183,6.288,232,0.763,279,1.373,280,1.436,282,1.769,288,1.544,297,2.349,309,2.512,413,5.771,422,2.703,438,2.443,473,3.178,474,4.068,476,2.11,482,1.685,500,4.475,773,3.975,790,2.352,797,2.838,859,3.743,946,4.727,1075,6.965,1088,4.456,1098,2.427,1109,2.989,1115,4.18,1129,3.815,1130,6.799,1131,5.687,1132,5.114,1133,5.687,1134,5.687,1135,5.687,1136,5.687,1137,3.815,1138,3.815,1139,5.687,1140,3.815,1141,5.687,1142,5.114,1143,3.815,1144,8.419,1145,5.571,1146,5.687,1147,3.815,1148,6.777,1149,7.535,1150,5.687,1151,3.815,1152,2.872,1153,5.687,1154,7.535,1155,3.815,1156,5.687,1157,3.815,1158,5.114,1159,5.687,1160,3.815,1161,4.456,1162,3.815,1163,3.815,1164,3.431,1165,3.815,1166,3.815,1167,3.815,1168,3.815,1169,3.815,1170,6.799,1171,5.687,1172,5.687,1173,5.687,1174,3.815,1175,3.431,1176,3.815,1177,3.815,1178,3.815,1179,3.815,1180,4.231,1181,3.815,1182,3.815,1183,3.815,1184,3.815,1185,3.815,1186,3.815,1187,3.815,1188,3.431,1189,3.431,1190,5.114,1191,3.815,1192,3.431,1193,3.178,1194,3.815,1195,3.815,1196,3.815]],["title/injectables/AwsService.html",[279,1.233,1197,4.257]],["body/injectables/AwsService.html",[0,0.226,3,0.026,4,0.023,5,0.057,8,4.58,11,1.611,13,0.151,14,0.436,15,3.612,16,3.42,18,5.951,22,1.875,23,3.23,27,1.296,28,0.45,30,0.383,31,0.005,32,0.598,39,3.141,48,2.625,49,0.769,50,1.626,52,2.513,53,2.166,64,0.059,76,4.074,78,0.759,85,3.038,90,0.026,93,4.019,100,5.951,102,4.58,103,4.944,105,4.944,113,2.975,115,2.068,121,3.853,122,1.624,127,2.32,129,3.721,134,2.353,139,2.383,142,3.853,174,0.002,175,0.002,209,2.256,224,0.729,279,1.327,280,1.373,282,2.459,364,3.492,422,2.613,500,4.356,844,6.511,845,2.713,847,2.857,850,2.857,973,2.49,1003,4.181,1050,5.951,1084,4.923,1098,4.688,1111,2.593,1197,4.58,1198,3.647,1199,6.617,1200,6.617,1201,6.617,1202,6.617,1203,4.944,1204,5.498,1205,4.944,1206,4.944,1207,3.647,1208,5.498,1209,4.944,1210,7.473,1211,3.647,1212,5.239,1213,3.619,1214,5.498,1215,5.513,1216,3.647,1217,5.498,1218,4.308,1219,3.647,1220,4.944,1221,3.647,1222,4.944,1223,5.185,1224,3.647,1225,4.58,1226,7.905,1227,3.647,1228,3.647,1229,3.647,1230,3.647,1231,5.498,1232,3.647,1233,3.647,1234,3.28,1235,3.647,1236,3.28,1237,3.28,1238,3.754,1239,3.038,1240,3.647,1241,6.617,1242,3.647,1243,3.647,1244,3.647,1245,5.498,1246,3.647,1247,6.617,1248,4.944,1249,5.498,1250,5.498,1251,5.498,1252,6.617,1253,3.647,1254,3.28,1255,3.647,1256,3.647,1257,5.498,1258,6.617,1259,7.905,1260,3.647,1261,5.498,1262,5.498,1263,2.857,1264,6.617,1265,6.617,1266,5.498,1267,3.647,1268,3.647,1269,3.647,1270,3.038,1271,3.647,1272,3.647]],["title/classes/Business.html",[0,0.316,1273,3.15]],["body/classes/Business.html",[0,0.418,2,0.451,3,0.034,4,0.03,5,0.03,7,0.829,13,0.2,14,0.617,28,0.458,30,0.409,31,0.004,32,0.535,64,0.06,90,0.055,91,3.367,120,0.947,122,0.849,174,0.003,175,0.003,179,0.581,184,0.915,195,1.271,198,2.329,199,2.479,206,2.388,207,1.728,224,0.895,231,2.062,232,0.906,233,0.477,234,2.649,235,1.444,236,1.362,237,0.611,246,1.21,288,1.833,303,4.296,366,3.612,438,2.285,455,3.091,472,4,482,2.138,543,3.21,641,3.376,652,3.56,654,2.66,660,1.94,661,3.734,719,3.476,889,2.95,890,2.87,968,3.497,976,4.042,977,3.931,978,3.6,988,3.41,1273,5.653,1274,4.352,1275,4.653,1276,6.107,1277,4.839,1278,4.839,1279,4.839,1280,5.119,1281,6.072,1282,4.839,1283,4.839,1284,4.839,1285,4.839,1286,4.839,1287,4.031,1288,4.352,1289,2.676,1290,3.185]],["title/modules/BusinessModule.html",[249,1.063,815,3.633]],["body/modules/BusinessModule.html",[0,0.381,3,0.044,4,0.039,5,0.039,31,0.004,49,0.599,64,0.073,78,1.282,90,0.044,174,0.003,175,0.003,235,1.144,237,0.777,249,1.828,251,2.046,252,2.046,253,2.101,254,2.101,255,2.073,256,2.997,257,2.997,262,3.597,265,2.637,266,2.101,267,2.101,269,2.823,274,2.427,275,2.253,277,2.286,381,3.571,389,4.675,390,3.25,815,7.473,819,6.257,821,4.623,834,5.053,1019,4.207,1273,3.799,1287,6.615,1291,5.541,1292,5.541,1293,5.541,1294,6.161,1295,8.194,1296,6.161,1297,6.161,1298,7.94,1299,6.161,1300,5.541,1301,4.827,1302,4.827,1303,6.161]],["title/classes/BusinessRelationship.html",[0,0.316,1304,4.004]],["body/classes/BusinessRelationship.html",[0,0.486,2,0.459,3,0.035,4,0.031,5,0.031,7,0.728,13,0.204,14,0.542,28,0.332,30,0.382,31,0.005,32,0.578,37,2.301,64,0.063,90,0.06,91,2.733,120,0.997,122,0.863,140,2.1,174,0.003,175,0.003,179,0.591,184,0.664,195,1.345,198,1.473,199,2.362,206,1.511,209,1.855,213,2.596,217,2.032,224,1.18,231,2.247,232,0.916,233,0.485,234,2.864,235,1.574,236,1.385,237,0.621,242,1.511,246,1.23,288,1.336,347,2.596,366,3.1,430,2.339,438,2.301,455,2.253,472,4.233,480,3.661,482,2.174,543,2.339,641,2.136,652,2.253,654,1.938,660,1.954,719,2.821,889,2.972,890,3.037,968,3.811,988,2.485,1273,4.212,1289,4.339,1290,5.164,1304,6.641,1305,4.099,1306,4.807,1307,4.92,1308,4.92,1309,5.358,1310,2.485,1311,6.148,1312,3.661,1313,3.36,1314,3.131,1315,3.855,1316,4.099,1317,3.36,1318,2.946]],["title/injectables/BusinessService.html",[279,1.233,1295,4.004]],["body/injectables/BusinessService.html",[0,0.131,3,0.015,4,0.013,5,0.013,13,0.087,15,1.942,16,1.862,22,1.21,23,3.624,27,1.261,28,0.428,30,0.36,31,0.005,32,0.562,39,2.512,48,2.882,49,0.844,50,1.785,52,2.961,53,2.121,64,0.063,76,2.539,78,0.439,90,0.015,113,2.065,122,1.727,129,3.494,134,3.321,139,2.915,173,1.3,174,0.001,175,0.001,195,1.045,211,0.729,224,0.47,232,1.077,237,0.266,241,0.58,243,1.279,279,0.856,280,0.794,282,2.153,283,2.778,286,1.489,288,1.767,290,2.154,297,3.585,303,3.426,304,1.686,308,1.871,309,2.379,310,1.72,316,0.844,317,0.885,325,1.489,336,1.871,364,0.932,381,0.857,382,1.569,422,4.441,438,2.121,450,2.423,460,1.196,461,1.112,472,2.56,486,1.3,622,2.84,641,1.54,701,4.661,713,3.513,773,3.65,790,1.3,810,1.652,944,4.921,958,1.871,991,4.012,1001,1.3,1003,1.022,1084,2.639,1097,3.544,1098,4.97,1212,2.523,1213,2.335,1223,1.652,1263,1.652,1270,3.825,1273,6.185,1275,5.083,1276,5.437,1280,3.544,1290,1.388,1295,2.78,1300,1.897,1306,2.479,1312,5.624,1319,2.109,1320,3.548,1321,4.592,1322,2.639,1323,3.548,1324,4.592,1325,3.548,1326,4.592,1327,4.592,1328,4.592,1329,3.548,1330,2.109,1331,5.693,1332,4.921,1333,4.592,1334,4.006,1335,2.109,1336,3.548,1337,3.191,1338,4.842,1339,2.109,1340,3.548,1341,2.109,1342,6.508,1343,5.853,1344,3.548,1345,2.109,1346,6.12,1347,2.109,1348,5.384,1349,2.109,1350,2.109,1351,3.191,1352,2.109,1353,3.548,1354,5.765,1355,2.109,1356,4.843,1357,2.335,1358,2.109,1359,6.223,1360,2.109,1361,2.109,1362,3.548,1363,2.109,1364,2.109,1365,2.109,1366,2.109,1367,6.508,1368,2.109,1369,3.191,1370,2.109,1371,4.486,1372,2.109,1373,2.109,1374,3.548,1375,2.109,1376,2.109,1377,2.109,1378,2.109,1379,1.897,1380,4.13,1381,2.109,1382,1.652,1383,5.402,1384,2.109,1385,2.109,1386,2.109,1387,2.109,1388,1.757,1389,1.757,1390,3.548,1391,3.548,1392,2.109,1393,1.897,1394,2.109,1395,1.569,1396,1.652,1397,2.109,1398,2.109,1399,2.639,1400,3.548,1401,2.109,1402,3.548,1403,2.109,1404,2.109,1405,2.109,1406,2.109,1407,3.548,1408,2.109,1409,3.548,1410,3.548,1411,3.548,1412,3.548,1413,3.548,1414,3.548,1415,3.548,1416,4.592,1417,3.548,1418,3.548,1419,3.548,1420,3.548,1421,3.548,1422,2.78,1423,2.109,1424,2.109,1425,1.757,1426,1.342,1427,2.109,1428,2.109,1429,2.109,1430,1.757,1431,3.548,1432,2.109,1433,2.109,1434,2.109,1435,2.109,1436,2.109,1437,3.548,1438,2.109,1439,3.191,1440,3.191,1441,2.109,1442,2.109,1443,2.109,1444,2.109,1445,2.109,1446,2.109,1447,3.548,1448,2.109,1449,2.109,1450,1.652,1451,1.757,1452,2.955,1453,2.109,1454,2.109,1455,2.955,1456,2.109,1457,2.109,1458,2.109,1459,2.109,1460,2.109,1461,2.109,1462,4.13,1463,2.109,1464,3.548,1465,2.109,1466,2.109,1467,2.109,1468,2.109,1469,3.548,1470,2.109,1471,2.109,1472,2.423,1473,2.109,1474,2.109,1475,2.109,1476,2.109,1477,2.109,1478,2.78,1479,2.109]],["title/classes/CloseFormSubscriptionArgs.html",[0,0.316,1480,4.257]],["body/classes/CloseFormSubscriptionArgs.html",[0,0.526,2,0.639,3,0.049,4,0.043,5,0.043,7,0.56,13,0.284,14,0.673,28,0.413,30,0.352,31,0.004,32,0.59,50,1.747,64,0.06,90,0.049,120,0.885,174,0.003,175,0.003,179,1.02,180,2.123,184,0.826,189,3.889,190,2.004,191,1.442,207,1.259,224,0.908,232,1.238,233,0.676,646,3.581,660,1.958,735,3.889,737,2.188,740,4.29,1275,5.104,1480,7.076,1481,5.374,1482,9.231,1483,6.165,1484,6.855,1485,6.165,1486,6.855,1487,2.421]],["title/classes/ColumnGroup.html",[0,0.316,1488,4.004]],["body/classes/ColumnGroup.html",[0,0.421,2,0.634,3,0.048,4,0.043,5,0.043,7,0.752,13,0.282,14,0.67,28,0.447,30,0.398,31,0.004,32,0.561,49,0.894,64,0.065,90,0.048,93,3.992,120,0.967,174,0.003,175,0.003,179,0.816,184,0.894,207,1.248,231,2.24,233,0.67,889,2.963,890,2.318,1472,6.983,1488,6.621,1489,9.62,1490,6.797,1491,6.287,1492,6.841,1493,7.6,1494,6.797,1495,6.797,1496,6.797,1497,5.057,1498,4.642]],["title/classes/ConfigEvaluation.html",[0,0.316,1499,4.004]],["body/classes/ConfigEvaluation.html",[0,0.272,2,0.409,3,0.031,4,0.027,5,0.027,7,0.791,13,0.182,14,0.499,28,0.485,30,0.413,31,0.004,32,0.609,37,1.191,64,0.052,90,0.045,91,2.52,120,0.964,122,0.77,174,0.003,175,0.003,184,0.971,195,1.113,198,2.206,199,2.482,201,2.414,203,2.734,206,2.263,207,1.566,209,2.001,210,2.045,211,2.178,213,4.499,223,2.831,224,1.212,231,1.669,232,0.845,233,0.432,234,2.756,235,1.17,236,1.235,237,0.553,242,1.347,243,2.271,246,1.096,288,1.71,364,2.782,366,3.247,438,2.186,455,2.883,482,1.937,644,3.978,646,2.859,650,3.887,652,3.373,654,2.481,660,1.856,661,3.482,719,3.326,988,3.18,1152,3.18,1499,4.934,1500,7.481,1501,10.055,1502,4.385,1503,4.478,1504,6.297,1505,6.138,1506,5.773,1507,5.239,1508,4.385,1509,4.385,1510,4.385,1511,4.385,1512,4.385,1513,4.385,1514,4.385,1515,4.385,1516,4.385,1517,4.385,1518,4.385,1519,4.385,1520,4.385,1521,3.944,1522,4.385]],["title/modules/ConfigEvaluationsModule.html",[249,1.063,816,3.633]],["body/modules/ConfigEvaluationsModule.html",[0,0.399,3,0.046,4,0.04,5,0.04,31,0.004,49,0.627,64,0.072,78,1.341,90,0.046,174,0.003,175,0.003,235,1.197,237,0.813,249,1.867,251,2.14,252,2.14,253,2.198,254,2.198,255,2.169,256,3.061,257,3.061,262,3.639,263,4.32,265,2.713,266,2.198,267,2.198,269,2.905,273,3.063,274,2.539,275,2.357,277,2.391,364,3.61,816,7.444,885,5.049,1499,5.049,1500,4.794,1521,7.349,1523,5.795,1524,6.444,1525,5.795,1526,5.795,1527,8.245,1528,6.444,1529,5.795,1530,8.172,1531,5.795,1532,5.049,1533,5.795,1534,6.444]],["title/injectables/ConfigEvaluationsService.html",[279,1.233,1527,4.004]],["body/injectables/ConfigEvaluationsService.html",[0,0.237,3,0.027,4,0.024,5,0.024,13,0.159,15,1.38,16,1.324,22,1.945,23,3.009,27,2.027,28,0.438,30,0.373,31,0.005,32,0.562,37,1.039,39,2.791,48,2.991,49,0.876,50,1.853,52,2.99,53,2.246,64,0.064,78,0.796,90,0.027,122,1.325,134,2.027,139,2.977,174,0.002,175,0.002,195,0.861,199,0.924,201,1.254,203,2.116,224,0.903,232,1.317,237,0.483,241,1.052,279,1.376,280,1.442,282,2.348,283,2.942,286,2.394,287,2.942,288,2.192,290,3.02,297,3.802,304,2.71,306,3.078,308,3.008,309,3.01,310,1.856,313,1.786,315,1.894,316,1.532,325,3.553,328,4.467,329,2.82,330,3.894,340,2.879,356,3.37,364,4.338,406,5.128,438,2.38,448,5.128,474,4.075,475,2.117,476,2.117,522,4.75,597,4.75,650,2.02,669,4.467,773,4.624,790,2.361,885,7.213,1115,2.82,1213,2.52,1499,3,1500,6.849,1503,4.054,1506,5.338,1527,4.467,1532,3,1533,3.443,1535,3.828,1536,5.702,1537,3.828,1538,3.828,1539,5.702,1540,5.702,1541,6.324,1542,3.828,1543,7.544,1544,5.702,1545,3.828,1546,3.828,1547,3.828,1548,5.702,1549,3.828,1550,5.128,1551,6.127,1552,3.828,1553,7.504,1554,3.828,1555,5.128,1556,3.828,1557,3.828,1558,2.848,1559,3.189,1560,4.054,1561,4.75,1562,8.072,1563,3.828,1564,3.828,1565,3.828,1566,3.443,1567,3.443,1568,3.443,1569,3,1570,3.443,1571,2.848,1572,3.189,1573,3.443,1574,2.848,1575,3.443,1576,3.443,1577,5.128,1578,5.128,1579,3.443,1580,3.443,1581,5.128,1582,3.189,1583,3.189,1584,3.443,1585,3.828]],["title/modules/ConfigNotificationsModule.html",[249,1.063,1586,3.15]],["body/modules/ConfigNotificationsModule.html",[0,0.423,3,0.048,4,0.043,5,0.043,31,0.004,49,0.664,64,0.07,78,1.42,90,0.048,174,0.003,175,0.003,235,1.268,237,0.861,249,1.917,251,2.266,252,2.266,253,2.328,254,2.328,255,2.297,256,3.143,257,3.143,265,2.813,266,2.328,267,2.328,269,2.427,275,2.497,277,2.533,364,3.743,1532,5.348,1586,6.311,1587,6.139,1588,6.139,1589,6.139,1590,7.54,1591,4.343,1592,4.209,1593,6.139,1594,5.078,1595,8.472,1596,5.686,1597,6.139,1598,8.472,1599,5.348,1600,6.826]],["title/injectables/ConfigNotificationsService.html",[279,1.233,1590,3.633]],["body/injectables/ConfigNotificationsService.html",[0,0.281,3,0.032,4,0.028,5,0.028,13,0.188,15,1.635,16,1.568,22,2.2,23,3.538,27,2.293,28,0.42,30,0.435,31,0.005,32,0.593,39,2.23,48,2.868,49,0.84,50,1.777,52,2.789,53,1.786,64,0.061,76,3.566,78,0.943,90,0.032,113,2.038,122,1.516,134,3.191,139,2.427,174,0.003,175,0.003,237,0.572,241,1.246,279,1.556,280,1.707,282,2.687,286,1.903,287,3.327,290,3.271,297,2.663,313,2.114,316,1.814,325,1.903,356,3.189,364,4.08,422,3.065,438,2.437,489,6.75,657,5.881,1084,3.373,1450,3.552,1455,5.372,1532,3.552,1590,4.585,1591,5.712,1592,5.535,1597,6.75,1599,3.552,1601,4.077,1602,6.448,1603,5.799,1604,6.448,1605,4.533,1606,4.077,1607,6.448,1608,6.448,1609,7.196,1610,4.077,1611,5.922,1612,6.448,1613,9.604,1614,4.533,1615,8.175,1616,7.352,1617,5.799,1618,4.077,1619,6.448,1620,4.533,1621,3.776,1622,4.533,1623,4.533,1624,4.533,1625,4.533,1626,4.533,1627,4.533,1628,7.505,1629,4.533,1630,7.768,1631,6.448,1632,6.448,1633,4.077]],["title/classes/ConfigurationApp.html",[0,0.316,1634,4.004]],["body/classes/ConfigurationApp.html",[0,0.311,2,0.469,3,0.036,4,0.031,5,0.031,7,0.734,13,0.208,14,0.55,28,0.471,30,0.43,31,0.004,32,0.523,41,3.493,64,0.061,90,0.049,120,0.943,122,0.882,162,3.658,174,0.003,175,0.003,179,0.604,184,0.942,195,1.199,198,2.377,199,2.402,206,2.437,207,1.457,217,3.533,218,2.999,223,2.261,224,1.052,231,1.838,232,0.93,233,0.496,234,2.612,235,1.288,236,1.416,237,0.634,238,3.061,239,1.739,240,2.183,241,1.382,242,1.544,243,1.813,245,4.414,246,1.257,288,1.883,317,2.111,366,3.129,654,2.731,958,2.652,1094,5.433,1152,3.501,1634,5.433,1635,7.704,1636,9.832,1637,5.028,1638,7.137,1639,7.137,1640,5.904,1641,5.419,1642,7.137,1643,5.028,1644,5.028,1645,5.028,1646,5.028,1647,5.028,1648,5.028,1649,5.028,1650,5.028,1651,4.522,1652,5.028]],["title/modules/ConfigurationAppModule.html",[249,1.063,817,3.801]],["body/modules/ConfigurationAppModule.html",[0,0.379,3,0.043,4,0.038,5,0.038,31,0.004,49,0.595,64,0.073,78,1.272,90,0.043,162,4.168,174,0.003,175,0.003,235,1.136,237,0.772,249,1.821,251,2.03,252,2.03,253,2.086,254,2.086,255,2.058,256,2.986,257,2.986,262,3.59,263,4.261,265,2.624,266,2.086,267,2.086,269,2.809,273,2.907,274,2.409,275,2.236,277,2.269,381,3.762,389,3.756,390,3.225,396,5.396,397,5.499,817,7.727,838,5.028,894,3.77,895,4.549,900,5.093,1634,4.791,1635,4.791,1651,7.106,1653,5.499,1654,6.114,1655,5.499,1656,5.499,1657,8.185,1658,6.114,1659,6.114,1660,7.902,1661,6.114,1662,5.499,1663,5.499,1664,3.301,1665,6.114]],["title/injectables/ConfigurationAppService.html",[279,1.233,1657,4.004]],["body/injectables/ConfigurationAppService.html",[0,0.286,3,0.033,4,0.029,5,0.029,13,0.191,15,2.732,16,2.62,22,2.226,23,3.549,27,2.32,28,0.423,30,0.314,31,0.005,32,0.442,37,1.252,39,1.594,48,2.515,49,0.737,50,1.558,52,2.81,53,2.985,64,0.069,78,0.959,90,0.033,122,0.809,129,3.296,134,3.3,139,2.45,162,4.896,174,0.003,175,0.003,195,0.696,224,0.611,232,1.016,237,0.582,241,1.267,279,1.575,280,1.736,288,2.36,290,3.296,297,3.728,309,2.037,310,2.235,315,2.281,316,1.845,317,1.936,325,1.936,329,2.281,356,2.281,381,1.874,414,7.428,438,1.772,450,4.457,460,2.615,474,2.489,475,2.55,476,2.55,483,4.147,486,4.024,501,6.812,773,4.346,894,2.843,900,7.52,1152,4.558,1558,3.43,1559,3.841,1560,4.641,1561,3.841,1634,5.936,1635,7.073,1640,6.129,1657,5.114,1662,4.147,1663,4.147,1664,2.489,1666,4.611,1667,6.527,1668,6.129,1669,4.611,1670,6.474,1671,4.611,1672,4.611,1673,6.527,1674,4.611,1675,6.527,1676,4.611,1677,6.527,1678,7.898,1679,4.611,1680,4.611,1681,3.613,1682,3.841,1683,4.611,1684,4.611,1685,3.613,1686,4.611,1687,4.147,1688,4.611,1689,4.611,1690,5.87,1691,4.611,1692,3.279,1693,4.611,1694,6.311,1695,4.611,1696,4.611]],["title/classes/ContactArgs.html",[0,0.316,1697,4.257]],["body/classes/ContactArgs.html",[0,0.491,2,0.574,3,0.044,4,0.038,5,0.038,7,0.503,13,0.255,14,0.629,28,0.478,30,0.407,31,0.004,32,0.623,50,1.908,64,0.056,90,0.044,120,0.959,127,5.586,131,5.995,174,0.003,175,0.003,179,0.952,180,1.982,184,0.956,189,4.246,190,2.264,191,1.294,233,0.606,565,5.586,735,3.631,740,4.005,1487,2.502,1697,6.607,1698,8.993,1699,5.53,1700,6.878,1701,6.878,1702,5.53,1703,5.123,1704,6.149,1705,6.214,1706,6.149,1707,6.149,1708,5.53,1709,6.149]],["title/classes/ContactServiceLink.html",[0,0.316,1710,4.257]],["body/classes/ContactServiceLink.html",[0,0.458,2,0.411,3,0.031,4,0.028,5,0.028,7,0.727,13,0.183,14,0.501,28,0.393,30,0.379,31,0.005,32,0.624,37,2.591,47,3.505,49,0.831,61,4.424,64,0.045,90,0.057,120,1.009,122,0.774,174,0.003,175,0.003,184,0.785,195,0.666,198,1.32,199,2.147,201,1.445,206,1.354,209,1.717,211,1.525,213,4.259,224,1.299,231,2.14,232,0.848,233,0.435,234,2.939,235,1.499,236,1.241,237,0.556,238,2.521,242,1.354,243,2.911,245,3.813,246,1.58,288,1.197,366,2.312,651,3.585,654,1.737,660,2.05,701,2.719,711,3.455,712,3.455,713,2.38,1289,3.496,1640,3.28,1641,3.011,1710,6.725,1711,3.965,1712,6.969,1713,4.409,1714,4.409,1715,4.409,1716,4.409,1717,3.455,1718,3.28,1719,3.28,1720,3.28,1721,3.28,1722,5.499,1723,6.647,1724,3.28,1725,3.673,1726,3.965]],["title/classes/ContactServicesInput.html",[0,0.316,1727,4.004]],["body/classes/ContactServicesInput.html",[0,0.529,2,0.467,3,0.036,4,0.031,5,0.031,7,0.648,13,0.208,14,0.548,28,0.416,30,0.354,31,0.005,32,0.629,41,2.495,47,3.709,49,0.872,61,4.743,64,0.061,90,0.056,115,3.923,120,1.014,174,0.003,175,0.003,179,0.831,184,0.831,190,2.346,191,1.055,195,0.757,201,1.642,209,1.879,224,1.05,232,0.928,233,0.494,238,2.703,239,1.733,246,1.253,282,1.559,362,1.642,624,2.531,633,2.212,651,2.842,660,1.826,737,2.727,1487,2.887,1641,3.423,1712,7.262,1719,3.729,1720,3.729,1721,3.729,1722,5.147,1724,3.729,1727,6.694,1728,8.062,1729,4.175,1730,6.222,1731,5.012,1732,5.012,1733,5.012,1734,5.012,1735,3.729,1736,3.927,1737,2.43,1738,3.927,1739,7.126]],["title/classes/Content.html",[0,0.316,1740,2.758]],["body/classes/Content.html",[0,0.273,2,0.412,3,0.031,4,0.028,5,0.028,7,0.361,13,0.183,14,0.502,28,0.477,30,0.435,31,0.005,32,0.583,37,2.322,49,0.719,64,0.061,90,0.045,120,0.95,122,0.775,174,0.003,175,0.003,179,0.53,184,0.953,195,1.117,198,2.215,199,2.43,200,3.516,201,2.423,203,3.401,206,2.272,207,0.811,209,2.63,210,2.059,211,2.793,217,3.675,218,2.219,219,4.229,223,1.985,224,0.98,231,1.678,232,0.849,233,0.435,234,2.788,235,1.175,236,1.243,237,0.557,238,2.159,239,1.527,240,1.917,241,1.213,242,1.356,243,1.592,244,3.585,245,2.278,246,1.104,317,1.854,340,3.196,958,2.329,1740,5.292,1741,4.415,1742,5.691,1743,5.259,1744,5.259,1745,4.306,1746,4.415,1747,4.708,1748,5.272,1749,4.415,1750,4.415,1751,4.415,1752,4.415,1753,4.415,1754,4.415,1755,4.415,1756,4.415,1757,5.628,1758,4.415,1759,4.415,1760,3.971,1761,6.328,1762,6.328,1763,6.328,1764,3.678,1765,4.415,1766,3.971,1767,4.415]],["title/modules/ContentModule.html",[249,1.063,818,3.251]],["body/modules/ContentModule.html",[0,0.388,3,0.045,4,0.039,5,0.039,31,0.004,49,0.61,64,0.073,78,1.304,90,0.045,174,0.003,175,0.003,235,1.164,237,0.791,249,1.843,251,2.081,252,2.081,253,2.138,254,2.138,255,2.11,256,3.022,257,3.022,262,3.613,263,4.289,265,2.666,266,2.138,267,2.138,269,2.855,273,2.98,274,2.47,275,2.293,277,2.326,381,3.601,818,6.634,829,5.285,838,5.109,892,4.458,893,4.912,894,3.865,895,4.664,1664,3.384,1740,3.384,1766,7.221,1768,5.638,1769,5.638,1770,6.269,1771,5.638,1772,7.799,1773,6.269,1774,6.269,1775,8.029,1776,6.269,1777,5.222,1778,4.126,1779,6.269]],["title/injectables/ContentService.html",[279,1.233,1772,3.801]],["body/injectables/ContentService.html",[0,0.161,3,0.018,4,0.016,5,0.016,13,0.107,15,1.916,16,1.837,22,1.436,23,3.354,27,1.497,28,0.418,30,0.356,31,0.005,32,0.58,39,1.456,48,2.851,49,0.835,50,1.766,52,2.863,53,2.648,64,0.062,78,0.54,90,0.018,122,1.669,134,2.903,139,2.921,173,1.599,174,0.002,175,0.002,195,0.636,201,2.003,203,2.932,211,2.114,224,0.954,232,1.241,237,0.327,241,0.713,279,1.016,280,0.977,282,2.24,283,2.172,286,1.767,287,2.172,288,1.143,290,2.446,297,3.779,304,2.001,306,2.273,308,2.221,309,2.347,310,2.041,313,1.21,315,1.283,316,1.038,317,1.089,325,2.822,329,2.082,340,3.088,356,2.082,381,1.054,422,2.001,430,2.001,438,1.66,460,1.471,474,1.4,475,1.434,476,1.434,486,2.596,511,5.093,540,5.998,565,4.278,773,3.225,851,5.998,891,2.333,892,1.844,894,1.599,961,1.771,1097,2.771,1213,1.707,1426,2.679,1450,3.298,1574,1.93,1664,1.4,1670,5.396,1681,2.032,1682,2.161,1692,1.844,1694,2.161,1740,5.494,1742,6.046,1743,5.619,1744,1.844,1745,5.183,1757,3.497,1772,3.132,1777,2.161,1778,1.707,1780,2.594,1781,4.21,1782,4.21,1783,3.507,1784,3.786,1785,4.21,1786,2.594,1787,6.582,1788,2.594,1789,4.21,1790,4.21,1791,2.594,1792,3.786,1793,7.982,1794,2.333,1795,4.21,1796,2.594,1797,4.21,1798,4.21,1799,5.267,1800,2.594,1801,4.21,1802,2.594,1803,4.21,1804,2.594,1805,4.778,1806,2.594,1807,4.21,1808,2.594,1809,4.21,1810,4.21,1811,5.499,1812,2.594,1813,2.594,1814,6.191,1815,2.594,1816,3.786,1817,2.333,1818,2.333,1819,2.333,1820,2.333,1821,2.032,1822,2.333,1823,2.594,1824,4.21,1825,4.21,1826,4.21,1827,2.594,1828,2.594,1829,2.594,1830,7.2,1831,5.313,1832,8.755,1833,7.2,1834,2.594,1835,2.594,1836,2.594,1837,2.594,1838,2.594,1839,2.594,1840,6.114,1841,6.821,1842,2.594,1843,2.594,1844,2.594,1845,2.333,1846,2.594,1847,5.313,1848,2.594,1849,2.594,1850,2.594,1851,2.594,1852,2.594,1853,2.594,1854,2.594,1855,2.594,1856,4.21,1857,3.298,1858,2.594,1859,4.778,1860,2.161,1861,2.594,1862,2.594,1863,2.594,1864,4.778,1865,2.594,1866,2.594,1867,2.594,1868,4.21,1869,2.594,1870,2.594,1871,2.594,1872,2.594,1873,2.594,1874,2.594,1875,2.594,1876,2.333,1877,2.594,1878,2.333,1879,2.594,1880,2.594,1881,4.21,1882,4.21,1883,4.21,1884,2.594,1885,2.594,1886,4.21,1887,2.594,1888,4.21,1889,4.21,1890,2.594,1891,4.21,1892,2.594,1893,2.594]],["title/classes/CreateActaInput.html",[0,0.316,294,4.004]],["body/classes/CreateActaInput.html",[0,0.443,2,0.49,3,0.037,4,0.033,5,0.033,7,0.43,13,0.218,14,0.567,28,0.488,30,0.416,31,0.004,32,0.618,41,2.578,49,0.79,50,2.065,60,4.018,64,0.058,90,0.037,120,0.972,174,0.003,175,0.003,179,0.975,180,1.787,181,2.374,184,0.976,190,2.15,191,1.106,196,6.043,197,6.767,199,2.27,200,3.861,202,6.767,203,3.014,204,6.767,205,6.767,207,0.965,209,2.205,224,0.697,233,0.518,238,2.438,239,1.818,294,5.601,362,1.723,633,1.851,660,1.648,737,2.782,1487,2.742,1894,10.13,1895,4.728,1896,2.283,1897,5.257,1898,4.809,1899,5.257,1900,5.257,1901,5.257,1902,5.257,1903,5.257,1904,5.257,1905,5.257,1906,5.257,1907,5.257]],["title/classes/CreateActivitiesConfigInput.html",[0,0.316,442,4.004]],["body/classes/CreateActivitiesConfigInput.html",[0,0.523,2,0.633,3,0.048,4,0.042,5,0.042,7,0.554,13,0.281,14,0.669,28,0.41,30,0.35,31,0.004,32,0.561,64,0.06,90,0.048,120,0.881,174,0.003,175,0.003,179,1.013,180,2.109,181,2.802,184,0.821,190,2.167,191,1.427,203,3.567,233,0.669,332,5.846,335,5.846,337,4.823,338,6.292,339,4.316,343,4.823,355,3.936,362,3.01,364,2.996,442,6.612,633,2.185,737,2.694,1487,1.933,1811,6.1,1908,8.262,1909,5.046,1910,6.783,1911,5.65,1912,7.59]],["title/classes/CreateAnnouncementInput.html",[0,0.316,776,4.004]],["body/classes/CreateAnnouncementInput.html",[0,0.436,2,0.48,3,0.037,4,0.032,5,0.032,7,0.86,13,0.213,14,0.559,28,0.465,30,0.418,31,0.004,32,0.576,49,0.84,64,0.061,90,0.037,107,3.83,120,0.934,174,0.003,175,0.003,179,0.846,180,1.761,181,2.34,184,0.931,189,3.956,191,1.083,199,2.413,207,1.757,224,0.682,232,0.945,233,0.508,366,1.883,504,4.476,633,1.824,637,5.82,644,4.338,646,3.511,650,4.239,660,1.624,669,5.522,670,6.338,689,5.871,690,4.638,704,5.871,707,6.77,716,7.198,723,6.338,724,3.389,725,4.289,729,4.63,747,2.847,776,5.522,1913,9.742,1914,4.63,1915,5.148,1916,5.148,1917,5.148,1918,4.63,1919,4.63,1920,4.63,1921,5.148,1922,5.148,1923,5.148,1924,5.148,1925,5.148,1926,4.63,1927,5.148,1928,4.63,1929,7.226,1930,5.148,1931,4.63]],["title/classes/CreateConfigEvaluationInput.html",[0,0.316,1541,4.004]],["body/classes/CreateConfigEvaluationInput.html",[0,0.462,2,0.523,3,0.04,4,0.035,5,0.035,7,0.731,13,0.232,14,0.592,28,0.483,30,0.411,31,0.004,32,0.617,64,0.053,90,0.04,120,0.965,174,0.003,175,0.003,179,0.896,180,1.865,181,2.478,184,0.966,190,2.343,191,1.179,199,2.313,203,3.113,233,0.553,362,1.836,364,4.443,633,1.932,644,4.529,646,3.255,650,4.426,737,3.121,1487,2.127,1500,7.482,1505,6.989,1506,6.574,1507,5.966,1541,5.847,1898,2.956,1932,10.057,1933,5.04,1934,5.604,1935,5.604,1936,5.604,1937,5.604,1938,5.604,1939,5.604,1940,5.604,1941,5.604]],["title/classes/CreateConfigNotificationInput.html",[0,0.316,1609,4.257]],["body/classes/CreateConfigNotificationInput.html",[0,0.441,2,0.665,3,0.051,4,0.045,5,0.045,7,0.583,13,0.295,14,0.69,28,0.423,30,0.415,31,0.004,32,0.595,64,0.051,90,0.051,120,0.901,174,0.004,175,0.004,179,1.045,180,2.175,181,2.889,184,0.846,207,1.598,233,0.703,362,2.335,364,4.149,633,2.253,1591,5.976,1609,7.248,1630,8.447,1942,9.392,1943,5.938,1944,7.127,1945,7.127]],["title/classes/CreateContentInput.html",[0,0.316,1799,4.004]],["body/classes/CreateContentInput.html",[0,0.506,2,0.601,3,0.046,4,0.04,5,0.04,7,0.527,13,0.267,14,0.648,28,0.459,30,0.391,31,0.004,32,0.602,41,2.947,49,0.873,64,0.064,90,0.046,120,0.934,174,0.003,175,0.003,179,1.077,180,2.042,181,2.713,184,0.918,190,2.117,191,1.356,200,4.266,203,3.33,207,1.183,233,0.635,238,2.787,239,2.228,633,2.116,737,2.608,1317,5.58,1487,2.689,1740,4.844,1799,6.403,1898,3.399,1946,9.738,1947,5.795,1948,6.444,1949,6.444,1950,6.444,1951,6.444]],["title/classes/CreateEventInput.html",[0,0.316,1952,4.257]],["body/classes/CreateEventInput.html",[0,0.537,2,0.428,3,0.033,4,0.029,5,0.029,7,0.672,13,0.19,14,0.516,28,0.481,30,0.42,31,0.004,32,0.626,41,2.346,47,3.281,49,0.877,50,1.338,64,0.054,90,0.058,120,1.006,174,0.003,175,0.003,179,0.907,180,1.626,181,2.161,184,0.961,190,2.372,191,0.966,195,1.142,199,2.176,200,3.593,233,0.453,238,2.219,239,1.588,246,1.889,340,3.817,346,3.987,348,4.66,362,1.504,633,2.247,644,4.08,650,3.987,737,2.877,1487,2.569,1898,4.579,1952,5.421,1953,8.971,1954,3.265,1955,5.623,1956,4.975,1957,3.825,1958,4.591,1959,4.129,1960,4.591,1961,6.849,1962,4.591,1963,4.591,1964,3.825,1965,7.395,1966,4.591,1967,4.591,1968,7.395,1969,4.591,1970,3.825,1971,3.416]],["title/classes/CreateFormInput.html",[0,0.316,1972,4.257]],["body/classes/CreateFormInput.html",[0,0.416,2,0.449,3,0.034,4,0.03,5,0.03,7,0.856,13,0.199,14,0.533,28,0.457,30,0.397,31,0.004,32,0.602,38,4.531,49,0.859,64,0.06,90,0.034,120,0.946,174,0.003,175,0.003,179,0.931,180,2.098,184,0.914,190,1.98,191,1.012,207,1.725,233,0.474,303,5.341,336,4.089,363,4.781,504,4.368,633,1.741,646,4.05,656,2.801,673,7.548,690,5.525,713,4.94,889,2.357,890,3.013,958,3.547,1382,5.268,1487,2.517,1972,5.601,1973,9.583,1974,4.326,1975,6.458,1976,6.92,1977,6.571,1978,7.623,1979,4.81,1980,4.81,1981,4.81,1982,4.81,1983,6.724,1984,6.724,1985,4.81,1986,4.81,1987,6.992,1988,4.81,1989,4.81,1990,4.81,1991,4.81,1992,4.81,1993,4.326,1994,4.932,1995,6.724,1996,6.047,1997,6.047,1998,4.81,1999,4.326,2000,3.769,2001,3.166,2002,6.724,2003,4.81]],["title/classes/CreateFormSubscriptionInput.html",[0,0.316,2004,4.257]],["body/classes/CreateFormSubscriptionInput.html",[0,0.476,2,0.546,3,0.042,4,0.037,5,0.037,7,0.479,13,0.243,14,0.609,28,0.46,30,0.402,31,0.004,32,0.592,50,2.063,64,0.065,90,0.042,120,0.907,129,4.331,174,0.003,175,0.003,179,1.03,180,1.921,184,0.919,190,1.813,191,1.233,207,1.575,224,1.136,233,0.578,504,4.242,633,1.99,646,3.936,660,2.236,737,1.87,889,2.694,890,2.925,1275,4.742,1481,5.648,1487,2.595,1896,3.724,1994,5.457,2001,3.856,2004,6.402,2005,9.701,2006,5.859,2007,7.713,2008,5.859,2009,5.859,2010,5.859,2011,5.859,2012,7.713,2013,5.859,2014,4.591]],["title/classes/CreateFormTagInput.html",[0,0.316,2015,4.257]],["body/classes/CreateFormTagInput.html",[0,0.549,2,0.686,3,0.052,4,0.046,5,0.046,7,0.601,13,0.305,14,0.703,28,0.358,30,0.305,31,0.004,32,0.555,49,0.926,64,0.063,90,0.052,120,0.851,174,0.004,175,0.004,179,1.065,184,0.715,190,2.092,191,1.548,233,0.725,624,4.478,633,2.296,646,3.441,737,2.348,1481,5.163,2015,7.388,2016,8.868,2017,6.615,2018,6.615]],["title/classes/CreateHelpDeskInput.html",[0,0.316,2019,4.004]],["body/classes/CreateHelpDeskInput.html",[0,0.475,2,0.545,3,0.042,4,0.037,5,0.037,7,0.478,13,0.242,14,0.609,28,0.46,30,0.409,31,0.004,32,0.609,59,3.721,64,0.067,90,0.042,120,0.93,127,3.721,174,0.003,175,0.003,179,1.029,180,1.919,181,2.549,184,0.919,189,4.165,191,1.23,209,1.588,233,0.577,362,1.916,565,5.452,633,1.987,747,3.234,889,2.691,890,1.995,897,5.805,996,3.501,1507,6.093,1700,6.714,2019,6.014,2020,5.805,2021,9.696,2022,5.26,2023,5.851,2024,8.569,2025,5.64,2026,5.848,2027,5.848,2028,5.848,2029,5.26,2030,5.848,2031,5.848,2032,7.676,2033,5.848,2034,5.26,2035,6.903,2036,5.26,2037,4.158,2038,4.872,2039,6.394,2040,4.872,2041,6.903,2042,4.872,2043,4.872,2044,4.872,2045,5.848,2046,5.848]],["title/classes/CreateIntegrationInput.html",[0,0.316,2047,4.004]],["body/classes/CreateIntegrationInput.html",[0,0.515,2,0.618,3,0.047,4,0.041,5,0.041,7,0.542,13,0.275,14,0.66,28,0.442,30,0.395,31,0.004,32,0.556,41,3,64,0.068,90,0.047,120,0.915,174,0.003,175,0.003,179,1.091,180,2.079,181,2.762,182,6.209,184,0.884,189,3.809,190,2.144,191,1.395,233,0.654,362,2.172,629,5.156,633,2.154,747,3.666,889,2.917,890,2.261,1487,2.371,1898,3.497,2047,6.518,2048,9.534,2049,5.962,2050,7.853,2051,6.629,2052,6.629,2053,6.629,2054,6.629,2055,6.629,2056,5.523,2057,6.629]],["title/classes/CreateInvitationArgs.html",[0,0.316,2058,4.257]],["body/classes/CreateInvitationArgs.html",[0,0.529,2,0.646,3,0.049,4,0.043,5,0.043,7,0.566,13,0.287,14,0.678,28,0.416,30,0.354,31,0.004,32,0.541,47,4.027,64,0.066,90,0.049,120,0.89,174,0.004,175,0.004,179,1.027,180,2.137,184,0.832,189,3.915,190,2.188,191,1.458,233,0.683,474,5.228,475,3.831,476,3.831,735,3.915,740,4.318,747,3.831,1115,4.587,2058,7.123,2059,9.275,2060,6.231,2061,6.928,2062,6.928,2063,6.928,2064,6.928,2065,7.69,2066,6.231]],["title/classes/CreateNotificationInput.html",[0,0.316,2067,4.004]],["body/classes/CreateNotificationInput.html",[0,0.495,2,0.581,3,0.044,4,0.039,5,0.039,7,0.509,13,0.258,14,0.634,28,0.469,30,0.421,31,0.004,32,0.599,64,0.066,90,0.044,120,0.894,140,3.771,168,5.289,174,0.003,175,0.003,179,0.96,180,1.999,181,2.656,184,0.938,185,7.194,189,4.516,190,2.198,191,1.311,233,0.615,362,2.042,504,4.37,633,2.071,724,4.102,749,3.215,1003,4.283,1487,2.28,1943,5.192,2067,6.268,2068,9.864,2069,6.033,2070,6.232,2071,6.232,2072,6.232,2073,5.192,2074,6.232,2075,6.282,2076,6.232,2077,6.232,2078,6.232,2079,6.268]],["title/classes/CreateParticipationEventInput.html",[0,0.316,2080,4.004]],["body/classes/CreateParticipationEventInput.html",[0,0.503,2,0.595,3,0.045,4,0.04,5,0.04,7,0.522,13,0.264,14,0.644,28,0.457,30,0.389,31,0.004,32,0.601,41,2.928,60,4.418,64,0.063,90,0.045,120,0.931,174,0.003,175,0.003,179,1.072,180,2.03,181,2.696,184,0.914,190,2.218,191,1.342,233,0.629,238,2.77,239,2.206,362,2.091,430,4.246,629,5.065,633,2.102,736,5.065,737,2.851,1487,2.314,1898,3.366,1954,4.537,1957,5.315,1959,5.738,1964,5.315,1970,5.315,2080,6.363,2081,7.223,2082,8.732,2083,7.223]],["title/classes/CreatePhaseInput.html",[0,0.316,2084,4.595]],["body/classes/CreatePhaseInput.html",[0,0.436,2,0.479,3,0.037,4,0.032,5,0.032,7,0.706,13,0.358,14,0.558,28,0.486,30,0.414,31,0.004,32,0.611,49,0.781,50,1.921,64,0.05,90,0.037,120,0.968,174,0.003,175,0.003,179,0.845,180,1.759,181,2.337,184,0.972,190,2.203,191,1.081,199,2.255,207,1.661,209,2.18,224,1.064,233,0.507,355,3.283,362,2.307,633,1.823,644,4.334,647,5.973,650,4.235,651,4.553,660,2.153,737,2.887,1317,5.897,1487,2.775,1896,3.486,2084,6.331,2085,10.09,2086,4.623,2087,7.22,2088,7.22,2089,5.709,2090,4.623,2091,4.623,2092,4.623,2093,5.14,2094,5.14,2095,4.623,2096,4.623,2097,4.623,2098,4.623,2099,4.623]],["title/classes/CreateResourceInput.html",[0,0.316,2100,4.004]],["body/classes/CreateResourceInput.html",[0,0.48,2,0.554,3,0.042,4,0.037,5,0.037,7,0.486,13,0.246,14,0.615,28,0.474,30,0.421,31,0.004,32,0.593,41,2.798,49,0.84,50,1.596,64,0.065,90,0.042,120,0.952,174,0.003,175,0.003,179,1.037,180,1.939,181,2.576,184,0.947,190,2.24,191,1.251,200,4.106,203,3.205,207,1.092,209,2.345,224,0.788,233,0.586,238,2.647,239,2.056,317,2.496,633,2.009,660,1.788,737,2.922,1487,2.462,1740,4.663,1744,6.142,1821,7.174,1896,2.581,1898,3.136,2100,6.079,2101,9.921,2102,5.347,2103,5.347,2104,5.347,2105,5.945,2106,5.347,2107,5.347,2108,5.347,2109,5.347]],["title/classes/CreateResourcesReplyInput.html",[0,0.316,2110,4.257]],["body/classes/CreateResourcesReplyInput.html",[0,0.469,2,0.535,3,0.041,4,0.036,5,0.036,7,0.469,13,0.237,14,0.601,28,0.478,30,0.422,31,0.004,32,0.619,41,2.732,64,0.06,90,0.041,120,0.958,140,3.622,174,0.003,175,0.003,179,1.019,180,1.894,181,2.516,184,0.957,190,2.32,191,1.206,203,3.149,233,0.565,238,2.584,239,1.983,362,1.879,430,4.034,472,4.034,633,1.962,737,3.078,1487,2.159,1745,5.813,1757,5.586,1778,6.571,1793,7.069,1898,3.025,2110,6.312,2111,9.983,2112,5.157,2113,5.734,2114,5.734,2115,5.734,2116,5.734,2117,5.734,2118,5.734,2119,5.734]],["title/classes/CreateRolInput.html",[0,0.316,2120,4.004]],["body/classes/CreateRolInput.html",[0,0.55,2,0.688,3,0.052,4,0.046,5,0.046,7,0.603,13,0.305,14,0.704,28,0.359,30,0.305,31,0.004,32,0.556,64,0.063,90,0.052,120,0.852,174,0.004,175,0.004,179,1.066,180,2.22,181,2.949,184,0.717,190,2.095,191,1.551,233,0.727,633,2.299,737,2.353,1115,4.714,1487,2.101,2120,6.958,2121,8.88,2122,6.63,2123,7.372]],["title/classes/CreateSiteInput.html",[0,0.316,1735,3.801]],["body/classes/CreateSiteInput.html",[0,0.455,2,0.511,3,0.039,4,0.034,5,0.034,7,0.725,13,0.227,14,0.583,28,0.481,30,0.409,31,0.004,32,0.621,41,1.976,49,0.807,64,0.063,90,0.039,120,0.97,174,0.004,175,0.003,179,0.996,184,0.961,190,1.734,191,1.153,207,1.35,224,0.974,233,0.54,238,2.508,239,1.895,288,1.488,362,1.796,624,3.713,633,1.904,651,4.705,660,2.044,737,1.749,1487,2.853,1719,6.173,1720,6.173,1721,6.173,1722,4.077,1724,6.173,1727,6.947,1729,4.566,1735,5.47,1736,4.294,1896,3.192,1898,4.878,2124,10.012,2125,4.929,2126,4.929,2127,4.929,2128,4.929,2129,4.929,2130,4.929,2131,4.929,2132,4.929]],["title/classes/CreateStageInput.html",[0,0.316,2133,4.004]],["body/classes/CreateStageInput.html",[0,0.489,2,0.57,3,0.043,4,0.038,5,0.038,7,0.757,13,0.383,14,0.626,28,0.477,30,0.406,31,0.004,32,0.617,49,0.851,64,0.056,90,0.043,120,0.958,174,0.003,175,0.003,179,0.949,184,0.955,190,2.315,191,1.286,207,1.123,224,0.81,233,0.603,355,3.685,362,2.589,624,3.99,633,2.046,660,1.821,737,3.058,1487,2.252,1896,2.655,2133,6.191,2134,9.987,2135,5.499,2136,6.859,2137,7.293,2138,6.513,2139,6.114,2140,6.114,2141,6.114,2142,6.114,2143,6.114,2144,6.114]],["title/classes/CreateTableConfigInput.html",[0,0.316,2145,4.257]],["body/classes/CreateTableConfigInput.html",[0,0.519,2,0.626,3,0.048,4,0.042,5,0.042,7,0.806,13,0.278,14,0.665,28,0.408,30,0.347,31,0.004,32,0.586,49,0.959,64,0.06,90,0.048,120,0.877,162,4.823,174,0.003,175,0.003,179,1.007,184,0.815,190,2.157,191,1.412,207,1.54,232,1.125,233,0.662,622,5.524,624,4.234,633,2.171,963,6.238,1395,6.803,1908,8.223,1909,4.994,2145,6.984,2146,6.712,2147,6.712,2148,6.712,2149,6.037]],["title/classes/CreateTableInput.html",[0,0.316,2150,4.257]],["body/classes/CreateTableInput.html",[0,0.521,2,0.63,3,0.048,4,0.042,5,0.042,7,0.807,13,0.28,14,0.667,28,0.409,30,0.349,31,0.004,32,0.602,64,0.06,90,0.048,93,3.654,120,0.88,174,0.003,175,0.003,179,1.01,184,0.819,190,2.163,191,1.421,207,1.546,233,0.666,622,4.837,624,4.25,633,2.179,646,3.832,713,5.182,1218,5.292,1987,7.012,2150,7.012,2151,9.169,2152,6.754,2153,7.639,2154,6.754,2155,6.754,2156,6.754,2157,6.754]],["title/classes/CreateTypesEventInput.html",[0,0.316,2158,4.004]],["body/classes/CreateTypesEventInput.html",[0,0.51,2,0.608,3,0.046,4,0.041,5,0.041,7,0.533,13,0.27,14,0.653,28,0.439,30,0.374,31,0.004,32,0.526,41,2.969,49,0.878,50,1.694,64,0.064,90,0.046,120,0.909,174,0.003,175,0.003,179,1.083,180,2.058,181,2.734,184,0.878,190,1.942,191,1.372,200,4.29,207,1.198,209,2.45,211,2.255,233,0.643,238,2.809,239,2.255,317,3.979,362,2.137,464,6.473,633,2.132,660,1.898,737,2.082,1487,2.572,1898,3.441,1954,4.638,1957,5.433,1964,5.433,1970,5.433,2082,8.524,2158,6.452,2159,7.071,2160,5.866]],["title/classes/CreateUserInput.html",[0,0.316,2161,4.257]],["body/classes/CreateUserInput.html",[0,0.48,2,0.554,3,0.042,4,0.037,5,0.037,7,0.486,13,0.246,14,0.615,28,0.462,30,0.393,31,0.004,32,0.607,47,3.75,50,1.596,64,0.061,90,0.042,120,0.934,174,0.003,175,0.003,179,0.931,184,0.924,191,1.251,207,1.744,224,1.37,233,0.586,474,4.943,475,3.288,476,3.288,521,5.496,624,3.918,633,2.009,660,2.366,747,3.288,1145,5.496,1180,6.426,1451,6.464,2066,5.347,2161,6.464,2162,9.74,2163,5.347,2164,7.195,2165,5.945,2166,5.945,2167,5.347,2168,5.945,2169,5.347,2170,5.945]],["title/classes/CreateUserLogInput.html",[0,0.316,2171,4.257]],["body/classes/CreateUserLogInput.html",[0,0.543,2,0.674,3,0.051,4,0.045,5,0.045,7,0.59,13,0.299,14,0.695,28,0.351,30,0.299,31,0.004,41,3.163,64,0.067,90,0.051,120,0.841,174,0.004,175,0.004,179,1.134,184,0.703,190,1.704,191,1.52,233,0.712,238,2.992,239,2.498,362,2.367,438,2.382,624,4.43,629,5.357,633,2.271,1487,2.5,1664,4.735,1898,3.81,2171,7.307,2172,8.772,2173,7.223,2174,7.223]],["title/classes/Download.html",[0,0.316,1212,3.633]],["body/classes/Download.html",[0,0.314,2,0.473,3,0.036,4,0.032,5,0.056,7,0.836,13,0.21,14,0.553,28,0.464,30,0.395,31,0.004,32,0.582,49,0.876,64,0.057,90,0.05,91,3.437,120,0.931,122,0.891,174,0.003,175,0.003,184,0.927,195,1.205,198,2.388,199,2.495,206,2.449,207,1.75,224,1.057,231,1.85,232,0.936,233,0.5,234,2.535,235,1.296,236,1.429,237,0.64,242,1.559,246,1.269,288,1.895,366,3.551,438,2.332,455,3.195,482,2.242,543,4.083,622,3.681,641,3.463,652,3.651,654,2.749,660,1.98,661,3.859,719,3.548,988,3.524,1003,4.365,1152,3.524,1212,4.962,1997,7.724,2175,5.075,2176,6.978,2177,5.075,2178,5.075,2179,5.468,2180,5.813,2181,5.075,2182,6.978,2183,6.978,2184,5.075,2185,5.075,2186,5.075,2187,5.075,2188,4.564,2189,5.075]],["title/modules/DownloadsModule.html",[249,1.063,819,3.251]],["body/modules/DownloadsModule.html",[0,0.394,3,0.045,4,0.04,5,0.04,31,0.004,49,0.618,64,0.072,78,1.322,90,0.045,174,0.003,175,0.003,235,1.18,237,0.802,249,1.855,251,2.11,252,2.11,253,2.168,254,2.168,255,2.139,256,3.041,257,3.041,262,3.626,265,2.689,266,2.168,267,2.168,269,2.88,274,2.504,275,2.324,277,2.358,389,4.713,390,3.352,819,6.714,833,7.05,951,3.918,1212,4.519,1334,7.814,2188,7.285,2190,5.715,2191,6.355,2192,5.715,2193,5.715,2194,6.355,2195,6.355,2196,8.1,2197,6.355,2198,5.715,2199,6.355,2200,6.355]],["title/injectables/DownloadsService.html",[279,1.233,1334,3.801]],["body/injectables/DownloadsService.html",[0,0.356,3,0.041,4,0.036,5,0.053,13,0.238,15,2.735,16,2.623,22,2.587,23,3.02,27,2.697,28,0.369,30,0.314,31,0.004,32,0.495,39,1.986,48,2.519,49,0.826,50,1.56,52,1.959,64,0.071,78,1.195,90,0.041,115,3.257,122,1.693,129,4.562,134,2.697,139,1.857,174,0.003,175,0.003,237,0.725,241,1.578,243,2.071,279,1.831,280,2.163,290,3.615,316,2.298,422,3.606,622,4.002,1003,2.784,1152,3.831,1212,6.039,1223,7.078,1238,6.719,1334,5.644,1478,5.944,2198,5.166,2201,5.744,2202,7.586,2203,5.744,2204,5.744,2205,7.586,2206,7.586,2207,8.493,2208,5.744,2209,7.586,2210,5.166,2211,5.166,2212,5.944,2213,7.638,2214,5.744,2215,5.744,2216,5.744,2217,5.166,2218,7.638,2219,5.744,2220,5.744,2221,5.744,2222,5.744,2223,5.744,2224,5.744,2225,5.744,2226,5.744,2227,5.744,2228,5.744,2229,5.744]],["title/controllers/EmailsController.html",[2230,3.633,2231,4.257]],["body/controllers/EmailsController.html",[0,0.397,3,0.046,4,0.04,5,0.04,10,4.775,13,0.266,16,2.219,22,2.78,24,6.701,28,0.396,30,0.338,31,0.004,44,6.435,47,4.091,48,2.706,49,0.793,50,1.677,52,2.78,55,5.796,57,6.435,64,0.067,65,4.775,66,4.775,78,1.335,90,0.046,127,4.084,139,2.636,174,0.003,175,0.003,184,0.793,951,3.957,1111,4.564,1248,8.475,2230,4.564,2231,6.79,2232,6.418,2233,5.347,2234,8.151,2235,8.151,2236,6.418,2237,6.117,2238,6.418,2239,9.423,2240,9.423,2241,6.418,2242,8.151,2243,6.418,2244,5.896,2245,5.772,2246,6.418,2247,6.418,2248,6.418,2249,6.418,2250,6.418,2251,6.418]],["title/modules/EmailsModule.html",[249,1.063,820,3.059]],["body/modules/EmailsModule.html",[0,0.407,1,6.895,3,0.047,4,0.041,5,0.041,31,0.004,64,0.072,67,5.152,78,1.368,90,0.047,174,0.003,175,0.003,249,1.884,251,2.183,252,2.183,253,2.243,254,2.243,255,2.213,256,3.09,257,3.09,263,4.342,265,2.748,266,2.243,267,2.243,269,2.943,273,3.126,820,6.203,951,5.103,2231,7.546,2244,6.945,2245,5.914,2252,5.914,2253,6.575,2254,5.914,2255,5.914,2256,6.575,2257,6.575,2258,7.546,2259,6.575,2260,8.277,2261,6.895,2262,5.914,2263,6.575]],["title/interfaces/EmailsRepository.html",[12,3.801,370,2.636]],["body/interfaces/EmailsRepository.html",[3,0.047,4,0.041,5,0.041,7,0.538,10,4.892,12,6.158,13,0.272,14,0.656,24,6.76,25,7.449,26,7.449,30,0.375,31,0.004,32,0.604,44,5.652,47,3.593,51,6.485,55,5.885,57,4.49,60,4.48,61,3.936,64,0.064,65,4.892,66,4.892,68,4.892,89,4.676,90,0.059,122,1.154,128,4.49,131,4.49,168,3.936,169,4.892,170,4.892,171,5.152,172,5.152,174,0.003,175,0.003,246,1.643,370,3.392,422,4.306,946,3.55,1095,7.837,2261,5.478,2264,5.152,2265,6.575,2266,6.895]],["title/injectables/EmailsService.html",[279,1.233,2244,3.363]],["body/injectables/EmailsService.html",[0,0.218,3,0.025,4,0.022,5,0.041,12,5.386,13,0.146,15,3.074,16,2.948,17,2.935,19,2.76,20,4.955,21,2.935,22,1.827,23,3.316,24,6.524,25,4.197,26,5.077,27,2.304,28,0.352,30,0.364,31,0.005,32,0.544,39,2.948,41,1.27,43,5.398,44,5.318,46,6.425,47,4.049,48,2.404,49,0.704,50,1.489,51,5.077,52,2.21,53,2.553,54,5.398,55,6.398,57,3.658,58,2.935,59,4.606,60,4.344,61,4.334,63,4.197,64,0.066,65,2.621,66,2.621,67,2.76,68,2.621,69,2.935,70,2.76,71,2.935,72,2.935,73,5.318,74,2.621,75,5.398,76,3.583,77,3.985,78,0.733,79,2.621,80,2.76,81,2.76,82,4.197,89,2.505,90,0.025,91,2.143,92,2.76,93,1.53,107,5.386,108,2.935,109,2.621,111,2.621,113,3.833,114,4.462,115,3.037,116,4.462,117,6.487,118,4.462,119,4.462,120,0.514,121,3.119,122,1.137,125,2.935,128,2.406,131,2.406,134,1.904,136,3.169,137,4.462,138,4.462,139,2.518,142,3.119,143,5.386,144,4.462,145,4.197,146,3.985,147,4.462,150,4.462,151,3.169,159,6.031,160,2.935,161,2.935,162,1.859,163,2.935,164,6.031,165,6.031,166,2.935,167,3.169,168,2.109,169,2.621,170,2.621,171,2.76,172,2.76,174,0.002,175,0.002,279,1.293,280,1.327,460,1.998,844,5.077,845,2.621,847,2.76,850,2.76,1254,3.169,2244,3.526,2261,2.935,2267,3.523,2268,3.523,2269,3.523,2270,5.356,2271,3.523,2272,3.523,2273,3.523,2274,3.523,2275,5.356,2276,3.523,2277,3.523,2278,3.523,2279,3.523,2280,3.169,2281,3.169,2282,5.356,2283,3.523,2284,3.523,2285,3.523,2286,3.169]],["title/classes/Entrepreneur.html",[0,0.316,1306,2.758]],["body/classes/Entrepreneur.html",[0,0.446,2,0.393,3,0.03,4,0.026,5,0.026,7,0.771,13,0.175,14,0.485,28,0.466,30,0.414,31,0.005,32,0.573,37,2.146,64,0.06,90,0.056,91,3.163,120,0.976,122,0.739,140,1.799,174,0.003,175,0.003,179,0.506,184,0.932,195,1.268,198,2.157,199,2.428,206,2.212,207,1.659,209,1.956,210,2.854,217,1.74,218,2.145,224,1.16,231,2.096,232,0.821,233,0.415,234,2.789,235,1.468,236,1.186,237,0.532,242,1.294,246,1.053,288,1.661,347,3.8,366,3.386,430,2.003,438,2.279,455,2.801,472,3.991,480,3.135,482,1.861,543,2.908,641,3.128,652,3.298,654,2.41,660,2.134,661,3.383,714,2.522,719,3.265,889,2.771,890,2.864,968,3.554,988,3.09,1273,2.598,1289,3.383,1290,4.027,1304,6.194,1305,3.51,1306,4.728,1309,4.919,1310,3.09,1311,6.194,1312,5.359,1313,4.919,1314,4.584,1315,3.301,1316,3.51,1317,2.877,1318,2.522,2287,4.213,2288,4.213,2289,4.213,2290,4.213,2291,4.213,2292,4.213,2293,4.213,2294,4.213,2295,4.213,2296,4.213]],["title/modules/EntrepreneurModule.html",[249,1.063,821,2.975]],["body/modules/EntrepreneurModule.html",[0,0.369,3,0.042,4,0.037,5,0.037,31,0.004,49,0.579,64,0.074,78,1.239,90,0.042,174,0.003,175,0.003,235,1.106,237,0.752,249,1.798,251,1.978,252,1.978,253,2.032,254,2.032,255,2.004,256,2.949,257,2.949,262,3.564,265,2.579,266,2.032,267,2.032,269,2.762,274,2.346,275,2.179,277,2.21,381,3.863,387,4.405,388,3.92,389,4.632,390,3.142,391,4.296,392,3.92,815,5.524,819,6.201,821,6.091,834,4.943,1301,4.667,1302,4.667,1306,3.215,1315,6.087,1331,8.154,2297,5.357,2298,5.956,2299,5.357,2300,5.357,2301,5.956,2302,5.956,2303,7.768,2304,5.956,2305,5.956,2306,5.956,2307,5.956]],["title/classes/EntrepreneurRelationship.html",[0,0.316,1280,3.363]],["body/classes/EntrepreneurRelationship.html",[0,0.457,2,0.515,3,0.039,4,0.035,5,0.035,7,0.796,13,0.229,14,0.66,28,0.359,30,0.384,31,0.004,32,0.541,64,0.063,90,0.059,91,2.955,120,0.972,122,0.968,174,0.003,175,0.003,179,0.662,184,0.718,195,1.343,198,1.652,199,2.42,206,1.695,213,2.911,217,2.279,224,0.979,231,2.207,232,0.991,233,0.544,234,2.743,235,1.546,236,1.554,237,0.696,246,1.379,288,1.498,303,3.511,366,3.39,438,2.26,455,2.526,472,4.226,482,2.438,543,2.623,641,2.396,652,2.526,654,2.174,660,1.702,719,3.051,889,3.117,890,3.033,968,3.743,976,3.303,977,3.213,988,2.786,1273,5.715,1274,4.963,1275,5.125,1276,5.897,1280,5.48,1281,4.963,1287,4.597,1288,4.963,1289,4.084,1290,4.862,2308,5.518,2309,5.518]],["title/classes/EntrepreneurRelationship-1.html",[0,0.263,1280,2.797,1426,2.704]],["body/classes/EntrepreneurRelationship-1.html",[0,0.471,2,0.433,3,0.033,4,0.029,5,0.029,7,0.776,13,0.192,14,0.52,28,0.424,30,0.406,31,0.005,32,0.612,37,2.065,49,0.452,64,0.062,90,0.059,91,2.625,120,0.997,122,0.815,140,3.528,174,0.003,175,0.003,179,0.558,184,0.848,195,1.317,198,1.391,199,2.331,203,1.723,206,1.426,209,1.781,213,4.012,217,2.709,218,1.628,219,3.762,224,1.155,231,2.191,232,0.88,233,0.458,234,2.874,235,1.535,236,1.307,237,0.586,240,2.016,241,1.276,242,1.426,244,3.18,246,1.161,288,1.261,366,3.023,430,3.118,438,2.065,455,2.126,472,3.929,482,2.052,543,2.208,641,2.016,651,2.634,652,2.126,654,1.83,660,1.905,719,2.709,889,2.666,890,2.819,968,3.42,988,2.345,1115,3.762,1276,4.839,1280,5.44,1289,4.206,1306,3.541,1309,5.194,1310,2.345,1314,2.955,1318,3.927,2310,3.869,2311,4.644,2312,4.644,2313,4.644,2314,4.644,2315,4.644,2316,3.639,2317,3.869]],["title/classes/EntrepreneurStartupArgs.html",[0,0.316,2318,4.595]],["body/classes/EntrepreneurStartupArgs.html",[0,0.511,2,0.61,3,0.046,4,0.041,5,0.041,7,0.775,13,0.271,14,0.654,28,0.461,30,0.393,31,0.004,32,0.615,64,0.059,90,0.046,120,0.938,174,0.003,175,0.003,179,0.99,180,2.061,184,0.923,190,2.307,191,1.375,195,1.364,233,0.644,430,4.876,735,3.775,737,3.028,740,4.163,1038,4.862,1115,4.467,2318,7.415,2319,9.78,2320,6.535,2321,6.535,2322,6.535,2323,6.535,2324,6.535]],["title/classes/Evaluation.html",[0,0.316,1543,4.004]],["body/classes/Evaluation.html",[0,0.312,2,0.47,3,0.036,4,0.032,5,0.032,7,0.778,13,0.209,14,0.63,28,0.484,30,0.42,31,0.004,32,0.608,37,1.887,64,0.056,90,0.049,91,2.78,120,0.965,122,0.885,140,3.393,174,0.003,175,0.003,179,0.605,184,0.968,195,1.201,198,2.38,199,2.403,201,2.605,206,2.441,207,1.573,209,2.158,210,3.241,211,2.403,213,4.519,224,0.668,231,1.842,232,0.932,233,0.497,234,2.729,235,1.291,236,1.42,237,0.636,242,1.549,246,1.261,288,1.887,364,3.512,366,3.133,472,3.779,597,5.788,646,3.084,654,2.737,719,2.87,889,2.436,890,2.711,968,3.124,976,4.16,977,4.046,978,3.752,1503,4.941,1505,6.622,1506,6.228,1543,5.444,2325,5.043,2326,5.043,2327,5.043,2328,5.043,2329,5.043,2330,5.043,2331,5.043,2332,5.043,2333,5.043,2334,6.249,2335,5.043,2336,5.043,2337,4.536,2338,5.043]],["title/modules/EvaluationsModule.html",[249,1.063,822,3.801]],["body/modules/EvaluationsModule.html",[0,0.364,3,0.042,4,0.037,5,0.037,31,0.004,49,0.572,64,0.074,78,1.223,90,0.042,174,0.003,175,0.003,235,1.092,237,0.742,249,1.787,251,1.952,252,1.952,253,2.006,254,2.006,255,1.979,256,2.93,257,2.93,262,3.552,263,4.216,265,2.558,266,2.006,267,2.006,269,2.739,273,2.795,274,2.317,275,2.151,277,2.182,364,2.598,381,4.022,387,4.368,388,3.87,389,3.662,390,3.102,391,4.26,392,3.87,816,5.478,822,7.679,826,4.612,885,4.607,886,5.288,913,4.015,1529,5.288,1531,5.288,1543,4.607,1586,4.75,1591,3.742,1592,3.626,2337,6.928,2339,5.288,2340,5.288,2341,5.88,2342,5.288,2343,9.342,2344,5.88,2345,7.703,2346,5.88,2347,4.181,2348,5.88]],["title/classes/Event.html",[0,0.316,60,2.527]],["body/classes/Event.html",[0,0.457,2,0.341,3,0.026,4,0.023,5,0.023,7,0.603,11,2.927,13,0.151,14,0.437,28,0.481,30,0.426,31,0.005,32,0.619,37,2.149,47,3.202,49,0.84,60,2.724,64,0.052,90,0.059,120,0.995,122,0.641,174,0.002,175,0.002,179,0.439,184,0.962,194,3.297,195,1.304,198,1.984,199,2.301,200,3.15,201,2.171,203,2.044,206,2.035,207,1.217,209,2.258,210,3.691,211,2.551,213,1.928,217,2.275,218,2.774,219,3.914,223,3.558,224,1.263,231,2.098,232,0.739,233,0.36,234,2.896,235,1.47,236,1.029,237,0.461,238,1.878,239,1.264,240,1.587,241,1.004,242,1.122,243,2.853,244,3.576,245,1.886,246,1.376,340,3.346,346,3.496,348,4.086,370,1.886,420,2.406,428,3.123,438,0.992,644,3.577,650,3.496,660,0.842,701,4.086,736,2.073,1306,1.973,1310,2.781,1955,4.93,1956,4.362,1971,2.719,2349,2.864,2350,4.93,2351,3.655,2352,3.655,2353,3.655,2354,3.655,2355,3.655,2356,3.655,2357,5.488,2358,3.655,2359,3.655,2360,3.655,2361,3.655,2362,3.655,2363,5.488,2364,3.655,2365,3.655,2366,5.488,2367,3.655,2368,3.655,2369,3.655,2370,2.599,2371,5.779,2372,2.719,2373,2.864]],["title/modules/EventsModule.html",[249,1.063,396,3.489]],["body/modules/EventsModule.html",[0,0.333,3,0.038,4,0.034,5,0.034,31,0.005,49,0.523,60,2.661,64,0.075,78,1.119,90,0.038,174,0.003,175,0.003,235,0.999,237,0.679,249,1.71,250,7.044,251,1.786,252,1.786,253,1.835,254,1.835,255,1.81,256,2.804,257,2.804,262,3.463,263,4.111,265,2.411,266,1.835,267,1.835,269,2.582,273,2.557,274,2.119,275,1.968,277,1.996,381,4.098,387,4.118,388,3.541,389,3.452,390,2.838,391,4.015,392,3.541,395,4.482,396,7.115,414,8.029,431,4.482,477,4.215,820,4.347,821,4.228,824,5.163,826,4.347,827,5.163,913,3.674,1019,3.674,1586,4.477,1591,3.423,1592,3.317,2083,4.003,2347,3.826,2372,5.402,2374,4.838,2375,4.838,2376,4.838,2377,4.838,2378,7.044,2379,5.38,2380,7.261,2381,4.482,2382,5.38,2383,5.38,2384,5.38,2385,4.482,2386,5.38,2387,3.826,2388,5.38]],["title/classes/Expert.html",[0,0.316,428,2.897]],["body/classes/Expert.html",[0,0.449,2,0.398,3,0.03,4,0.027,5,0.027,7,0.774,13,0.177,14,0.49,28,0.468,30,0.415,31,0.005,32,0.595,37,2.16,49,0.601,64,0.06,90,0.057,91,3.182,120,0.973,122,0.749,174,0.003,175,0.003,179,0.513,184,0.935,195,1.275,198,2.173,199,2.433,203,2.292,206,2.229,207,1.706,209,1.971,210,1.991,217,1.763,218,1.497,219,3.055,224,1.118,231,2.109,232,0.828,233,0.421,234,2.771,235,1.477,236,1.202,237,0.539,240,1.854,241,1.173,242,1.311,244,2.994,246,1.067,288,1.677,347,2.252,366,3.398,428,4.51,430,2.936,438,2.291,455,2.828,472,3.45,482,1.886,543,2.936,641,3.151,652,3.323,654,2.433,660,2.141,661,3.416,714,3.698,719,3.285,889,2.166,890,2.476,968,2.777,988,3.119,1289,3.416,1310,3.119,1313,4.956,1314,4.618,1318,4.345,2389,3.556,2390,5.687,2391,4.269,2392,4.269,2393,4.269,2394,4.269,2395,4.269,2396,4.269,2397,4.269,2398,6.232,2399,4.269,2400,4.269,2401,4.269,2402,5.4,2403,3.345,2404,3.556]],["title/classes/ExpertEventLink.html",[0,0.316,2357,3.801]],["body/classes/ExpertEventLink.html",[0,0.496,2,0.404,3,0.031,4,0.027,5,0.027,7,0.51,11,3.537,13,0.179,14,0.495,28,0.356,30,0.393,31,0.005,32,0.625,37,2.305,47,3.839,49,0.886,60,2.143,64,0.057,90,0.063,120,1.012,122,0.76,174,0.003,175,0.003,179,0.52,184,0.712,194,2.594,195,1.376,198,1.297,199,2.251,200,2.059,201,1.42,203,1.608,206,1.331,209,2.174,211,2.159,213,3.293,217,1.789,218,1.519,219,4.198,224,1.207,231,2.25,232,0.837,233,0.427,234,2.95,235,1.577,236,1.22,237,0.547,238,2.129,239,1.498,240,1.881,241,1.191,242,1.331,243,3.061,244,3.882,245,2.235,246,1.56,340,2.188,346,2.285,348,2.671,370,2.235,420,2.852,428,4.541,438,1.176,644,2.339,650,2.285,660,0.999,701,4.937,736,2.457,1306,2.339,1310,2.188,1955,3.223,1956,2.852,1971,3.223,2349,3.394,2350,3.223,2357,5.958,2363,5.444,2366,5.444,2370,3.081,2371,6.651,2372,3.223,2373,3.394,2405,4.332,2406,4.332,2407,4.332]],["title/modules/ExpertModule.html",[249,1.063,387,2.897]],["body/modules/ExpertModule.html",[0,0.383,3,0.044,4,0.039,5,0.039,31,0.004,49,0.602,64,0.073,78,1.287,90,0.044,174,0.003,175,0.003,235,1.149,237,0.78,249,1.831,251,2.054,252,2.054,253,2.11,254,2.11,255,2.081,256,3.002,257,3.002,262,3.601,265,2.643,266,2.11,267,2.11,269,2.83,274,2.436,275,2.262,277,2.295,381,3.236,387,6.009,389,4.872,390,3.262,410,8.716,428,3.507,819,6.264,834,5.065,1301,4.846,1302,4.846,2403,6.237,2408,5.562,2409,5.562,2410,6.185,2411,5.562,2412,6.185,2413,6.185,2414,7.96,2415,6.185,2416,5.562,2417,6.185]],["title/classes/FindFormsArgs.html",[0,0.316,2418,4.257]],["body/classes/FindFormsArgs.html",[0,0.54,2,0.668,3,0.051,4,0.045,5,0.045,7,0.585,13,0.297,14,0.692,28,0.348,30,0.297,31,0.004,50,1.794,64,0.067,90,0.051,120,0.837,174,0.004,175,0.004,179,1.047,180,2.181,184,0.696,191,1.506,224,1.156,233,0.706,504,4.654,660,2.011,735,3.994,740,4.406,1487,2.486,1705,5.609,1994,6.233,2000,5.609,2001,4.712,2418,7.268,2419,8.724,2420,7.159,2421,7.159]],["title/classes/FindInvitationArgs.html",[0,0.316,2422,4.595]],["body/classes/FindInvitationArgs.html",[0,0.525,2,0.637,3,0.048,4,0.043,5,0.043,7,0.558,13,0.283,14,0.672,28,0.412,30,0.351,31,0.004,64,0.065,90,0.048,120,0.884,174,0.003,175,0.003,179,1.017,180,2.118,184,0.824,191,1.436,224,1.277,233,0.673,338,5.862,355,4.493,362,3.019,474,3.685,475,3.775,476,3.775,660,2.221,735,3.879,740,4.278,1487,2.626,1705,6.638,2060,6.139,2422,7.619,2423,9.213,2424,7.675,2425,6.826,2426,6.826]],["title/classes/FindUsersArgs.html",[0,0.316,2427,4.257]],["body/classes/FindUsersArgs.html",[0,0.503,2,0.596,3,0.045,4,0.04,5,0.04,7,0.523,13,0.265,14,0.645,28,0.435,30,0.37,31,0.004,32,0.522,41,2.932,50,1.935,64,0.067,90,0.045,120,0.903,174,0.003,175,0.003,179,1.073,184,0.87,191,1.345,224,1.316,233,0.63,238,2.773,239,2.211,450,6.105,474,5.08,475,3.535,476,3.535,521,5.689,523,6.652,624,4.106,660,2.289,735,3.723,740,4.106,1487,2.682,1705,7.005,2427,6.773,2428,9.409,2429,6.393,2430,6.393,2431,6.393,2432,6.393]],["title/classes/Form.html",[0,0.316,646,1.982]],["body/classes/Form.html",[0,0.348,2,0.35,3,0.027,4,0.024,5,0.024,7,0.813,11,1.66,13,0.156,14,0.446,28,0.476,30,0.405,31,0.005,32,0.617,37,2.432,49,0.779,50,1.156,64,0.053,90,0.053,91,3.362,93,2.441,120,0.97,122,0.659,174,0.002,175,0.002,184,0.952,195,1.018,198,2.018,199,2.382,206,2.069,207,1.6,209,1.829,210,3.735,218,2.362,223,1.689,224,1.255,231,1.786,232,1.201,233,0.37,234,2.799,235,1.251,236,1.058,237,0.474,242,1.154,243,2.697,246,1.684,288,1.527,336,3.554,364,2.484,366,3.463,370,1.938,438,2.282,455,2.574,504,3.332,543,3.555,640,4.601,641,2.925,642,5.279,646,2.181,652,3.085,654,2.215,656,4.893,657,4.405,658,3.379,660,1.937,661,3.726,709,2.13,719,3.089,1481,2.187,1975,5.612,1976,5.279,1977,5.012,1994,5.095,2000,2.944,2001,2.473,2433,3.757,2434,3.998,2435,3.757,2436,3.757,2437,3.757,2438,3.757,2439,3.757,2440,3.757,2441,7.479,2442,3.757,2443,3.757,2444,3.757,2445,3.757,2446,3.757,2447,3.379,2448,3.757,2449,3.757,2450,3.757,2451,4.183,2452,3.13,2453,3.13,2454,5.056,2455,5.056,2456,3.379,2457,3.757]],["title/classes/FormSubmission.html",[0,0.316,2458,4.595]],["body/classes/FormSubmission.html",[0,0.439,2,0.662,3,0.05,4,0.044,5,0.044,7,0.58,13,0.294,14,0.688,28,0.422,30,0.388,31,0.004,32,0.547,64,0.062,90,0.05,120,0.899,174,0.004,175,0.004,179,1.125,180,2.169,184,0.844,195,1.416,207,1.594,231,2.3,233,0.7,646,3.367,735,3.973,889,3.042,890,3.197,991,6.176,2458,7.804,2459,8.43,2460,7.096,2461,7.096,2462,7.096]],["title/classes/FormSubmissionFiles.html",[0,0.316,2463,4.257]],["body/classes/FormSubmissionFiles.html",[0,0.444,2,0.669,3,0.051,4,0.045,5,0.055,7,0.587,13,0.297,14,0.693,28,0.349,30,0.362,31,0.004,64,0.067,90,0.051,120,0.838,174,0.004,175,0.004,179,1.131,180,2.184,184,0.698,207,1.318,231,2.316,233,0.708,336,5.3,646,3.389,735,4,889,3.063,890,2.447,972,7.008,990,5.338,991,6.195,2459,7.857,2463,7.278,2464,7.175,2465,7.175]],["title/classes/FormSubscription.html",[0,0.316,2466,4.004]],["body/classes/FormSubscription.html",[0,0.284,2,0.428,3,0.033,4,0.029,5,0.029,7,0.709,13,0.19,14,0.515,28,0.475,30,0.413,31,0.004,32,0.57,37,2.051,50,1.853,64,0.062,90,0.046,120,0.947,122,0.805,129,3.814,174,0.003,175,0.003,179,0.55,184,0.95,195,1.141,198,2.262,199,2.357,206,2.319,207,1.702,209,2.051,210,2.138,223,2.061,224,1.294,231,1.723,232,0.872,233,0.452,234,2.609,235,1.207,236,1.291,237,0.579,242,1.408,243,1.653,246,1.146,288,1.765,366,3.005,504,3.735,646,3.595,654,2.561,660,2.182,709,2.6,714,3.891,719,2.685,722,4.123,889,2.648,890,2.959,967,3.411,968,2.923,991,4.656,1275,4.176,1343,5.846,1481,5.75,1994,5.733,2001,3.018,2007,6.792,2014,3.592,2447,4.123,2466,5.093,2467,8.883,2468,4.585,2469,7.802,2470,4.585,2471,4.585,2472,4.585,2473,4.585,2474,4.585,2475,4.585,2476,4.585,2477,4.585,2478,4.585,2479,4.585,2480,4.123,2481,4.585]],["title/injectables/FormSubscriptionService.html",[279,1.233,2482,4.004]],["body/injectables/FormSubscriptionService.html",[0,0.175,3,0.02,4,0.018,5,0.044,9,2.216,13,0.117,14,0.358,15,3.033,16,2.589,22,1.539,23,3.535,27,1.605,28,0.428,30,0.357,31,0.005,32,0.514,37,0.768,38,1.527,39,2.589,48,2.793,49,0.818,50,1.73,52,2.869,53,2.767,64,0.066,76,2.496,77,4.19,78,0.588,90,0.02,93,1.228,113,2.89,115,1.604,122,1.708,129,4.12,134,3.279,139,2.72,174,0.002,175,0.002,179,0.34,196,3.358,211,2.223,224,0.598,232,1.221,237,0.357,241,0.777,246,0.707,279,1.089,280,1.065,282,1.999,286,1.895,288,0.768,290,2.572,297,1.864,304,2.145,313,1.319,316,1.132,325,1.895,336,2.381,419,2.543,422,3.559,460,1.604,461,1.492,504,4.035,542,1.744,646,3.263,726,7.066,794,2.104,938,2.356,944,5.802,958,4.974,973,3.082,991,2.783,1003,1.371,1215,3.76,1225,2.356,1275,4.345,1369,4.059,1399,3.358,1439,2.543,1440,2.543,1478,3.536,1480,5.355,1481,5.219,1994,4.999,2001,1.862,2004,6.237,2179,2.216,2463,2.356,2466,5.866,2469,5.781,2482,3.536,2483,8.061,2484,2.828,2485,5.632,2486,5.632,2487,7.024,2488,5.632,2489,5.632,2490,5.632,2491,5.632,2492,6.733,2493,2.828,2494,5.365,2495,5.632,2496,6.428,2497,4.513,2498,4.513,2499,2.828,2500,2.828,2501,8.943,2502,4.513,2503,2.828,2504,2.828,2505,2.828,2506,2.828,2507,3.76,2508,4.059,2509,2.828,2510,2.828,2511,4.513,2512,2.828,2513,2.828,2514,4.513,2515,4.513,2516,2.828,2517,5.355,2518,2.828,2519,2.828,2520,5.355,2521,2.828,2522,2.828,2523,4.059,2524,5.781,2525,2.828,2526,2.543,2527,2.543,2528,2.828,2529,4.513,2530,2.828,2531,2.543,2532,2.828,2533,2.543,2534,2.828,2535,2.828,2536,2.828,2537,2.828,2538,4.059,2539,2.543,2540,2.216,2541,2.828,2542,2.828,2543,2.828,2544,2.828,2545,2.828,2546,2.828,2547,2.828,2548,5.632,2549,2.828,2550,5.632,2551,5.632,2552,2.828,2553,2.828,2554,4.513,2555,3.536,2556,2.828,2557,2.828,2558,7.487,2559,4.513,2560,2.543,2561,2.356,2562,6.428,2563,5.632,2564,2.828,2565,2.828,2566,4.513,2567,2.828,2568,2.828,2569,2.828,2570,2.828,2571,2.543,2572,4.513,2573,2.828,2574,2.828]],["title/classes/FormTag.html",[0,0.316,2451,3.801]],["body/classes/FormTag.html",[0,0.331,2,0.498,3,0.038,4,0.033,5,0.033,7,0.814,13,0.221,14,0.573,28,0.46,30,0.391,31,0.004,32,0.564,49,0.797,64,0.058,90,0.051,91,3.511,120,0.927,122,0.938,174,0.003,175,0.003,184,0.919,195,1.237,198,2.453,199,2.513,206,2.516,207,1.684,213,2.819,224,1.085,231,1.916,232,0.97,233,0.527,234,2.471,235,1.343,236,1.505,237,0.674,242,1.641,246,1.336,288,1.963,366,3.594,438,2.383,455,3.31,482,2.361,543,3.436,641,3.556,646,2.805,652,3.75,654,2.848,660,2.023,661,3.997,719,3.625,977,4.209,988,3.65,1481,5.625,1977,5.378,2451,5.378,2452,8.049,2575,5.344,2576,5.344,2577,5.344,2578,5.344,2579,5.344,2580,5.344,2581,5.344,2582,4.806,2583,5.344]],["title/injectables/FormTagService.html",[279,1.233,2584,4.004]],["body/injectables/FormTagService.html",[0,0.269,3,0.031,4,0.027,5,0.027,13,0.18,15,1.566,16,1.502,22,2.133,23,3.651,27,2.224,28,0.444,30,0.367,31,0.004,32,0.576,39,2.534,48,2.938,49,0.861,50,1.82,52,3.018,53,3.486,64,0.063,78,0.904,90,0.031,113,1.953,122,1.553,134,3.146,139,2.862,173,2.678,174,0.003,175,0.003,195,0.656,224,0.829,232,1.223,237,0.548,241,1.194,279,1.51,280,1.636,282,2.494,283,4.137,286,2.626,288,2.177,290,3.208,297,3.655,303,3.98,304,2.973,308,3.299,309,3.753,310,3.032,313,2.026,315,2.149,316,1.738,325,3.366,461,2.292,542,2.678,641,2.716,646,3.895,794,3.232,810,3.404,1322,4.653,1346,4.901,1351,5.625,1481,5.434,1977,6.944,2015,7.078,2451,5.453,2453,3.619,2526,3.907,2561,5.21,2584,4.901,2585,8.394,2586,4.344,2587,4.344,2588,4.344,2589,6.255,2590,6.255,2591,4.344,2592,9.873,2593,5.21,2594,4.344,2595,4.344,2596,4.344,2597,4.344,2598,7.775,2599,4.344,2600,6.255,2601,4.344,2602,6.255,2603,4.344,2604,6.255,2605,4.344,2606,4.344,2607,6.255,2608,5.625]],["title/modules/FormsModule.html",[249,1.063,756,3.489]],["body/modules/FormsModule.html",[0,0.338,3,0.039,4,0.034,5,0.034,9,4.272,31,0.004,49,0.805,64,0.074,78,1.134,90,0.039,115,3.092,174,0.003,175,0.003,235,1.537,237,0.688,249,1.722,251,1.811,252,1.811,253,1.86,254,1.86,255,1.835,256,2.823,257,2.823,262,3.477,265,2.433,266,1.86,267,1.86,269,2.605,274,2.148,275,1.994,277,2.023,389,4.519,390,2.876,646,3.768,756,7.182,958,2.876,2451,4.057,2452,4.542,2453,4.542,2456,6.59,2466,4.272,2467,4.904,2480,6.59,2482,7.448,2483,6.59,2494,7.012,2527,4.904,2531,4.904,2533,4.904,2582,6.59,2584,7.448,2585,6.59,2609,4.904,2610,4.904,2611,4.904,2612,4.904,2613,8.549,2614,5.453,2615,5.453,2616,7.327,2617,5.453,2618,7.327,2619,5.453,2620,5.453,2621,7.327,2622,5.453,2623,5.453,2624,7.327,2625,5.453,2626,5.453,2627,5.453]],["title/injectables/FormsService.html",[279,1.233,2494,3.489]],["body/injectables/FormsService.html",[0,0.252,3,0.029,4,0.025,5,0.025,13,0.169,15,1.469,16,1.409,22,2.037,23,3.62,27,2.123,28,0.435,30,0.37,31,0.004,32,0.569,39,2.444,48,2.969,49,0.892,50,1.839,52,2.952,53,3.263,64,0.065,78,0.848,90,0.029,113,1.832,122,1.569,129,3.015,134,3.077,139,2.799,173,2.513,174,0.002,175,0.002,195,0.616,199,0.984,224,0.54,232,1.293,237,0.514,241,1.12,279,1.441,280,1.534,282,2.42,286,2.507,288,2.249,290,3.113,297,3.421,304,2.838,308,3.15,309,3.659,310,1.975,313,1.901,315,2.016,316,1.63,325,1.711,364,4.308,422,2.838,438,2.696,447,6.482,461,2.15,640,4.077,641,2.592,642,3.193,646,3.93,652,1.866,772,5.37,773,5.195,790,2.513,797,5.789,806,3.665,1097,3.93,1322,4.442,1338,5.258,1357,5.121,1399,3.032,1430,3.395,1972,7.21,2418,6.482,2434,4.246,2494,4.077,2560,3.665,2593,4.974,2608,5.37,2628,4.075,2629,4.075,2630,4.075,2631,5.971,2632,4.075,2633,5.971,2634,4.075,2635,4.075,2636,5.971,2637,4.075,2638,4.075,2639,6.9,2640,4.075,2641,3.665,2642,5.971,2643,3.665,2644,4.075,2645,4.075,2646,4.075,2647,4.075,2648,5.971,2649,5.971,2650,5.971,2651,5.971,2652,4.075,2653,4.075,2654,4.075,2655,4.075]],["title/classes/GetSubmittedFilesArgs.html",[0,0.316,2656,4.595]],["body/classes/GetSubmittedFilesArgs.html",[0,0.528,2,0.643,3,0.049,4,0.043,5,0.043,7,0.564,13,0.286,14,0.676,28,0.415,30,0.353,31,0.004,32,0.54,64,0.066,90,0.049,120,0.888,174,0.004,175,0.004,179,1.024,180,2.132,184,0.829,189,4.238,190,1.627,191,1.452,233,0.68,504,4.579,727,6.321,735,3.905,740,4.307,1275,5.119,1481,5.39,1487,1.966,1994,6.153,2001,4.541,2014,5.405,2073,7.104,2656,7.67,2657,9.257,2658,6.899,2659,6.899,2660,6.899]],["title/guards/GqlAuthGuard.html",[1089,4.595,2661,4.595]],["body/guards/GqlAuthGuard.html",[0,0.339,3,0.039,4,0.034,5,0.034,7,0.448,11,2.421,13,0.227,15,2.992,16,1.895,22,2.508,23,2.95,27,1.948,28,0.404,30,0.383,31,0.004,32,0.429,39,2.542,48,2.755,49,0.807,50,1.707,52,2.508,64,0.059,78,1.14,90,0.039,113,3.306,122,1.67,134,2.614,139,2.378,174,0.003,175,0.003,218,2.909,233,0.54,279,1.775,422,3.495,438,2.64,859,6.266,944,3.897,946,5.405,1000,4.678,1001,5.467,1075,5.47,1091,4.566,1092,7.974,1093,4.929,1094,5.761,1095,5.761,1096,6.612,1097,4.839,1098,6.289,1099,6.612,1100,7.974,1101,6.612,1102,4.929,1104,6.612,1105,7.386,1106,4.929,1107,6.612,1109,6.501,1110,4.566,1111,3.897,1113,4.929,1114,4.929,1115,3.636,1116,4.929,1117,4.929,1118,4.929,1119,4.929,1120,4.929,1121,4.566,2661,6.612,2662,8.866,2663,5.481,2664,5.481,2665,5.481,2666,4.929,2667,4.929,2668,5.481]],["title/classes/HelpDeskFilterInput.html",[0,0.316,2669,4.257]],["body/classes/HelpDeskFilterInput.html",[0,0.496,2,0.582,3,0.044,4,0.039,5,0.039,7,0.51,13,0.259,14,0.635,28,0.454,30,0.399,31,0.004,32,0.576,64,0.066,90,0.044,120,0.848,174,0.003,175,0.003,179,1.062,180,2.002,181,2.659,184,0.907,189,3.667,191,1.314,233,0.616,355,4.351,362,2.046,565,5.627,633,2.074,692,7.366,747,3.453,889,2.189,890,2.13,994,5.627,1487,2.749,2020,5.774,2035,5.616,2036,5.616,2037,4.44,2041,5.616,2669,6.672,2670,9.645,2671,6.349,2672,6.244,2673,7.953,2674,8.009,2675,6.244,2676,6.244,2677,6.244,2678,6.244,2679,6.244,2680,6.244,2681,8.843,2682,6.244,2683,4.44,2684,4.646,2685,5.616,2686,8.009]],["title/modules/HelpDeskModule.html",[249,1.063,823,3.801]],["body/modules/HelpDeskModule.html",[0,0.376,3,0.043,4,0.038,5,0.038,31,0.004,49,0.591,64,0.074,78,1.265,90,0.043,174,0.003,175,0.003,235,1.129,237,0.767,249,1.816,251,2.019,252,2.019,253,2.074,254,2.074,255,2.046,256,2.978,257,2.978,262,3.584,263,4.255,265,2.614,266,2.074,267,2.074,269,2.799,273,2.89,274,2.395,275,2.224,277,2.256,381,3.753,391,4.353,392,4.002,821,4.584,823,7.72,826,4.713,897,4.713,898,5.065,1019,4.152,2020,3.64,2347,4.323,2687,5.468,2688,5.468,2689,5.468,2690,6.08,2691,8.178,2692,6.08,2693,6.08,2694,7.873,2695,6.08,2696,4.523,2697,6.08,2698,4.523,2699,6.558,2700,5.065,2701,5.065,2702,6.08]],["title/injectables/HelpDeskService.html",[279,1.233,2691,4.004]],["body/injectables/HelpDeskService.html",[0,0.185,3,0.021,4,0.019,5,0.019,13,0.124,14,0.374,15,2.393,16,2.295,20,1.905,22,1.61,23,3.358,27,1.678,28,0.417,30,0.363,31,0.005,32,0.531,37,1.282,38,1.616,39,2.778,48,2.764,49,0.81,50,1.712,52,2.74,53,2.303,64,0.067,78,0.623,90,0.021,113,1.346,121,3.404,122,1.539,134,2.728,139,2.893,140,2.015,142,3.404,168,3.5,173,1.846,174,0.002,175,0.002,195,0.883,199,1.411,201,1.915,209,0.813,211,1.035,224,0.775,232,1.2,237,0.378,241,0.823,279,1.14,280,1.127,282,2.064,283,2.436,286,1.982,287,2.436,288,1.802,290,2.655,297,3.17,304,2.244,306,2.549,308,2.491,309,2.582,310,2.289,313,1.396,315,1.481,316,1.198,325,1.982,329,2.335,330,3.224,356,1.481,381,1.217,412,6.523,422,3.155,438,1.282,460,1.697,461,1.579,468,2.692,474,1.616,475,1.655,476,1.655,486,3.604,500,5.051,504,2.335,542,1.846,565,4.223,586,2.692,692,3.933,724,1.97,749,1.544,773,3.501,790,1.846,797,2.227,890,1.994,897,5.71,898,7.307,994,4.223,1003,2.289,1331,6.523,1357,5.051,1382,3.699,1426,1.905,1558,2.227,1559,2.494,1560,2.129,1611,2.911,1692,2.129,1743,2.129,2019,6.013,2020,5.251,2023,2.044,2037,2.129,2069,2.044,2075,2.129,2237,6.38,2540,3.699,2669,5.528,2671,6.218,2673,4.246,2683,2.129,2684,2.227,2691,3.699,2698,4.937,2700,2.494,2701,2.494,2703,2.993,2704,4.87,2705,4.721,2706,4.246,2707,2.993,2708,5.919,2709,2.993,2710,4.721,2711,4.721,2712,2.993,2713,6.294,2714,4.721,2715,2.993,2716,4.721,2717,2.993,2718,4.721,2719,4.721,2720,2.993,2721,2.993,2722,2.993,2723,7.137,2724,2.993,2725,4.721,2726,2.993,2727,4.246,2728,2.993,2729,2.993,2730,2.993,2731,3.933,2732,2.692,2733,2.993,2734,2.993,2735,2.993,2736,2.993,2737,2.494,2738,2.993,2739,2.692,2740,2.692,2741,4.721,2742,4.721,2743,2.692,2744,2.993,2745,2.993,2746,2.993,2747,2.993,2748,4.721,2749,2.993,2750,2.993,2751,2.993,2752,2.993,2753,2.993,2754,4.721,2755,2.993,2756,2.993,2757,2.993,2758,2.692,2759,2.993,2760,4.721,2761,4.721,2762,2.993,2763,2.993,2764,2.494,2765,2.494,2766,2.692,2767,2.692,2768,2.993,2769,2.993,2770,2.993,2771,2.993,2772,2.993,2773,2.494,2774,2.993,2775,4.246,2776,2.692,2777,2.993,2778,2.692,2779,2.993,2780,2.692,2781,2.993]],["title/classes/HelpDeskTicket.html",[0,0.316,2698,3.801]],["body/classes/HelpDeskTicket.html",[0,0.4,2,0.425,3,0.032,4,0.028,5,0.028,7,0.372,13,0.189,14,0.513,28,0.474,30,0.419,31,0.004,32,0.607,37,2.349,64,0.066,90,0.053,120,0.946,122,0.799,127,2.897,174,0.003,175,0.003,179,0.547,184,0.948,195,1.136,198,2.253,199,2.17,201,2.465,206,2.31,207,1.382,209,2.224,210,2.123,211,2.236,217,1.88,218,1.596,223,3.382,224,1.225,231,1.715,232,0.868,233,0.449,234,2.66,235,1.201,236,1.282,237,0.574,238,2.206,239,1.574,240,1.977,241,1.251,242,1.398,243,2.713,245,2.349,246,1.138,362,1.492,565,4.787,709,4.645,897,3.872,994,4.787,996,2.725,1310,3.266,1507,5.349,1700,5.894,1743,5.349,1747,4.812,1748,5.388,2020,5.904,2023,5.137,2025,5.695,2037,4.599,2038,3.792,2039,5.388,2040,3.792,2042,3.792,2043,3.792,2044,3.792,2237,3.109,2671,4.257,2683,6.152,2684,3.387,2698,4.812,2699,3.792,2737,3.792,2782,8.87,2783,4.094,2784,4.552,2785,4.552,2786,5.894,2787,4.552,2788,4.552,2789,4.552,2790,4.552,2791,4.552,2792,4.552,2793,4.552,2794,4.552,2795,4.094,2796,4.094,2797,4.094]],["title/classes/Hours.html",[0,0.316,339,3.251]],["body/classes/Hours.html",[0,0.454,2,0.684,3,0.052,4,0.046,5,0.046,7,0.6,13,0.304,14,0.702,28,0.357,30,0.367,31,0.004,32,0.428,59,4.669,64,0.063,90,0.052,93,3.186,120,0.849,174,0.004,175,0.004,179,1.142,184,0.714,207,1.348,231,2.348,233,0.724,238,3.021,239,2.537,332,5.635,339,6.434,735,4.055,2798,7.338,2799,7.965,2800,7.338]],["title/interfaces/IAttachment.html",[370,2.636,1002,3.489]],["body/interfaces/IAttachment.html",[0,0.438,3,0.029,4,0.026,5,0.052,7,0.812,11,1.805,13,0.169,14,0.561,30,0.388,31,0.005,32,0.606,37,2.43,41,2.157,49,0.843,64,0.062,90,0.059,91,2.832,93,3.761,120,0.986,122,0.717,140,1.744,174,0.002,175,0.002,179,0.49,195,0.617,198,1.223,199,2.26,206,1.255,224,1.278,231,2.065,232,1.045,233,0.403,234,2.818,235,1.111,236,1.15,237,0.515,242,1.255,243,2.552,246,1.021,288,1.109,336,4.11,340,3.021,352,2.6,366,2.849,370,2.108,438,1.922,455,1.87,472,1.942,482,1.805,543,1.942,637,4.828,641,1.774,646,1.585,652,1.87,654,1.609,656,3.483,660,2.063,690,2.689,709,2.317,713,2.205,719,2.471,727,2.79,736,3.392,744,4.803,748,2.6,749,2.108,889,2.731,890,2.04,946,3.821,952,3.806,953,3.201,954,3.201,955,3.201,956,3.201,957,3.201,958,3.733,959,3.201,960,3.201,961,2.79,963,4.451,966,3.039,968,2.69,972,5.265,973,2.79,976,2.446,977,2.379,980,3.039,981,3.039,982,3.201,984,6.169,988,2.063,990,3.039,991,2.519,992,3.201,993,3.039,994,2.6,995,4.085,996,4.964,997,3.201,998,3.039,999,3.201,1000,4.503,1001,4.364,1002,4.833,1003,4.199,2264,3.201]],["title/classes/Integration.html",[0,0.316,2801,4.004]],["body/classes/Integration.html",[0,0.339,2,0.511,3,0.039,4,0.034,5,0.034,7,0.795,13,0.227,14,0.583,28,0.463,30,0.409,31,0.004,32,0.555,41,2.651,64,0.063,90,0.052,120,0.933,122,0.962,174,0.003,175,0.003,179,0.658,182,5.666,184,0.926,195,1.253,198,2.485,199,2.442,206,2.548,207,1.628,223,2.464,224,1.225,231,1.949,232,0.986,233,0.54,234,2.496,235,1.366,236,1.543,237,0.692,242,1.683,243,2.651,246,1.37,288,1.996,366,3.243,629,4.705,654,2.896,660,1.695,709,4.169,719,3.037,889,2.578,890,1.869,967,4.077,968,3.306,977,4.281,1152,3.713,2050,7.744,2056,4.566,2801,5.761,2802,5.481,2803,6.612,2804,5.481,2805,4.929,2806,4.294,2807,5.481,2808,5.481,2809,6.612,2810,6.612,2811,6.612,2812,5.481,2813,5.481,2814,5.481,2815,4.929,2816,5.481]],["title/modules/IntegrationsModule.html",[249,1.063,824,3.633]],["body/modules/IntegrationsModule.html",[0,0.396,3,0.045,4,0.04,5,0.04,31,0.004,49,0.622,64,0.073,78,1.33,90,0.045,174,0.003,175,0.003,235,1.187,237,0.807,249,1.86,251,2.123,252,2.123,253,2.181,254,2.181,255,2.151,256,3.05,257,3.05,262,3.632,263,4.311,265,2.7,266,2.181,267,2.181,269,2.891,273,3.039,274,2.519,275,2.338,277,2.372,381,3.305,820,4.867,824,7.435,2387,4.546,2801,5.009,2815,7.312,2817,5.749,2818,5.749,2819,5.749,2820,6.393,2821,8.236,2822,6.393,2823,6.393,2824,8.131,2825,6.393,2826,5.749,2827,6.393]],["title/injectables/IntegrationsService.html",[279,1.233,2821,4.004]],["body/injectables/IntegrationsService.html",[0,0.179,3,0.02,4,0.018,5,0.018,13,0.119,14,0.363,15,1.653,16,1.585,22,1.563,23,3.251,27,1.63,28,0.4,30,0.379,31,0.005,32,0.557,37,0.783,38,2.474,39,2.841,47,1.99,48,2.158,49,0.734,50,1.337,52,2.576,53,2.56,59,4.805,61,3.415,64,0.063,76,1.595,78,0.6,90,0.02,92,2.26,113,3.56,120,0.277,121,3.784,122,1.485,129,3.813,134,3.148,139,2.56,142,3.784,174,0.002,175,0.002,211,3.162,224,1.254,237,0.364,241,0.792,246,0.721,265,3.112,279,1.106,280,1.086,282,2.022,283,3.353,286,1.211,288,1.245,290,2.6,297,3.583,309,2.52,313,1.345,316,1.154,317,1.211,325,1.924,329,1.426,355,3.308,356,1.426,364,2.52,381,1.172,460,1.635,461,1.521,486,1.778,500,4.278,646,1.119,946,3.509,1003,2.765,1044,5.13,1098,1.835,1121,3.818,1213,1.898,1275,4.176,1422,3.591,1426,2.917,1430,5.414,1740,1.557,1745,1.679,1956,4.668,2047,5.092,2050,4.47,2056,2.402,2237,3.13,2244,5.408,2739,5.13,2801,7.738,2821,3.591,2826,2.593,2828,2.884,2829,5.705,2830,4.584,2831,6.499,2832,4.584,2833,6.499,2834,5.705,2835,2.884,2836,4.584,2837,4.584,2838,4.584,2839,2.884,2840,7.092,2841,2.884,2842,2.884,2843,2.884,2844,4.584,2845,4.584,2846,2.884,2847,2.884,2848,2.884,2849,5.845,2850,7.092,2851,6.499,2852,2.884,2853,6.499,2854,4.584,2855,2.593,2856,4.584,2857,2.884,2858,4.122,2859,5.705,2860,2.884,2861,4.584,2862,2.884,2863,2.402,2864,2.884,2865,4.584,2866,2.884,2867,2.402,2868,2.884,2869,2.884,2870,6.499,2871,2.884,2872,2.884,2873,2.884,2874,2.884,2875,5.705,2876,2.884,2877,5.705,2878,2.884,2879,2.884,2880,2.884,2881,2.884,2882,2.884,2883,2.884,2884,2.884,2885,5.705,2886,5.705,2887,5.705,2888,5.705,2889,4.584,2890,4.584,2891,4.584,2892,4.584,2893,4.584,2894,4.584,2895,2.884,2896,2.884,2897,2.884,2898,2.884,2899,2.884,2900,2.884,2901,2.593,2902,2.884,2903,2.884,2904,4.584,2905,2.884,2906,2.884,2907,2.884,2908,2.884,2909,2.884,2910,2.884,2911,2.884,2912,2.884,2913,2.884,2914,2.884,2915,2.884,2916,4.584,2917,2.884,2918,2.884,2919,2.884,2920,2.884,2921,2.884,2922,2.884,2923,2.884,2924,2.884,2925,2.884,2926,2.884,2927,2.884,2928,2.884,2929,2.884,2930,2.884,2931,2.884,2932,2.884,2933,2.884,2934,2.884,2935,2.884,2936,2.884,2937,2.884,2938,2.884,2939,2.884,2940,2.884,2941,2.884,2942,2.884,2943,2.884,2944,2.884,2945,2.884,2946,2.884,2947,2.884,2948,2.884,2949,2.884,2950,2.884,2951,2.884,2952,2.884,2953,2.884,2954,2.884,2955,2.884,2956,2.884,2957,2.884,2958,2.884,2959,2.884,2960,2.884,2961,2.884,2962,2.884,2963,2.884,2964,2.884,2965,2.884,2966,4.584,2967,2.884,2968,4.584,2969,6.499,2970,2.884,2971,2.884,2972,2.884]],["title/classes/Invitation.html",[0,0.316,2973,3.489]],["body/classes/Invitation.html",[0,0.299,2,0.45,3,0.034,4,0.03,5,0.03,7,0.635,13,0.279,14,0.534,28,0.485,30,0.417,31,0.004,32,0.568,37,1.829,39,1.668,47,3.371,64,0.065,90,0.034,120,0.947,122,0.847,139,2.179,140,3.314,174,0.003,175,0.003,179,0.579,182,5.302,184,0.96,195,1.173,198,2.325,199,2.352,206,2.384,207,1.624,209,1.31,224,1.114,231,1.786,232,0.904,233,0.476,234,2.743,235,1.252,236,1.358,237,0.609,242,1.482,243,1.74,438,1.829,474,4.537,475,2.668,476,2.668,482,2.131,629,4.403,640,5.302,660,1.553,749,2.489,889,2.362,890,2.648,967,3.59,968,3.03,1088,6.083,1115,3.84,1152,3.403,1426,3.07,1748,4.019,2805,4.339,2806,5.279,2809,6.06,2810,6.06,2811,6.06,2973,5.739,2974,4.825,2975,5.279,2976,5.279,2977,6.983,2978,6.738,2979,4.825,2980,4.825,2981,4.825,2982,4.825,2983,4.825,2984,4.825,2985,6.06,2986,4.825,2987,6.738,2988,6.738,2989,6.738,2990,4.825,2991,4.825,2992,4.825,2993,7.001,2994,4.825,2995,4.825,2996,4.825,2997,4.825,2998,4.339,2999,4.339,3000,6.738,3001,4.825,3002,4.825,3003,4.825]],["title/controllers/InvitationsController.html",[2230,3.633,3004,4.257]],["body/controllers/InvitationsController.html",[0,0.437,3,0.05,4,0.044,5,0.044,13,0.293,16,2.443,22,2.952,28,0.344,30,0.293,31,0.004,48,2.346,49,0.687,50,1.453,52,2.41,64,0.066,78,1.47,90,0.05,127,4.495,139,2.285,140,3.694,174,0.004,175,0.004,176,7.977,184,0.687,951,4.356,1111,5.024,2230,5.024,2233,5.886,2237,4.825,2973,5.91,2975,5.536,3004,7.209,3005,7.065,3006,8.654,3007,7.065,3008,8.654,3009,7.065,3010,7.783,3011,6.96,3012,6.354,3013,6.354,3014,6.354,3015,7.065,3016,7.065,3017,7.065]],["title/modules/InvitationsModule.html",[249,1.063,825,3.633]],["body/modules/InvitationsModule.html",[0,0.376,3,0.043,4,0.038,5,0.038,31,0.004,49,0.591,64,0.073,78,1.265,90,0.043,174,0.003,175,0.003,235,1.129,237,0.767,249,1.816,251,2.019,252,2.019,253,2.074,254,2.074,255,2.046,256,2.978,257,2.978,262,3.584,263,4.255,265,2.614,266,2.074,267,2.074,269,2.799,273,2.89,274,2.395,275,2.224,277,2.256,389,4.658,390,3.207,820,5.866,825,7.52,951,4.854,2387,4.323,2973,4.152,3004,7.273,3011,7.766,3012,5.468,3018,5.468,3019,5.468,3020,6.08,3021,5.468,3022,6.08,3023,7.873,3024,6.08,3025,6.08,3026,7.873,3027,5.468,3028,6.08]],["title/injectables/InvitationsService.html",[279,1.233,3011,3.801]],["body/injectables/InvitationsService.html",[0,0.168,3,0.019,4,0.017,5,0.017,13,0.112,15,2.648,16,2.54,20,3.991,22,1.487,23,3.383,27,1.55,28,0.391,30,0.352,31,0.005,32,0.517,37,0.736,38,1.463,39,3.262,46,3.417,47,4.096,48,2.667,49,0.828,50,1.652,52,2.634,53,2.471,59,2.775,64,0.068,73,4.283,74,2.016,76,2.411,77,4.666,78,0.564,90,0.019,113,3.911,121,1.577,122,1.58,134,3.434,139,2.497,140,1.861,142,1.577,143,2.016,144,2.257,149,3.922,174,0.002,175,0.002,176,4.914,182,5.661,183,4.666,195,0.947,199,0.654,224,0.359,232,0.841,237,0.342,241,0.745,279,1.053,280,1.02,282,2.402,283,2.25,286,2.297,288,1.486,290,2.509,297,3.034,316,1.084,325,1.137,338,3.482,342,2.123,355,3.426,356,2.157,413,5.273,422,2.981,438,2.406,461,2.3,473,2.257,475,1.498,476,1.498,482,1.197,542,1.671,570,2.257,629,3.898,640,1.85,749,1.398,773,1.429,790,1.671,797,2.016,844,6.051,845,2.016,847,2.123,850,2.123,859,5.083,961,1.85,1088,2.123,1109,3.417,1115,3.102,1145,2.775,1158,2.437,1175,3.922,1180,2.016,1188,2.437,1189,2.437,1192,2.437,1193,2.257,1213,1.783,1357,4.525,1583,2.257,2058,5.225,2179,2.123,2212,3.417,2217,2.437,2244,5.083,2424,2.257,2555,4.914,2571,2.437,2863,2.257,2973,7.073,2977,2.437,2993,2.257,2998,2.437,2999,3.922,3010,4.921,3011,3.244,3013,2.437,3014,2.437,3027,2.437,3029,2.709,3030,6.272,3031,6.272,3032,4.361,3033,2.709,3034,2.709,3035,4.361,3036,2.709,3037,2.709,3038,5.64,3039,4.361,3040,2.709,3041,2.709,3042,4.921,3043,2.709,3044,4.361,3045,2.709,3046,4.361,3047,3.922,3048,2.709,3049,4.361,3050,2.709,3051,4.361,3052,2.709,3053,2.709,3054,2.709,3055,6.182,3056,2.709,3057,2.437,3058,2.709,3059,2.709,3060,2.709,3061,4.361,3062,2.709,3063,2.709,3064,2.709,3065,2.709,3066,2.709,3067,2.709,3068,5.225,3069,2.709,3070,2.709,3071,5.472,3072,2.123,3073,2.709,3074,2.437,3075,2.709,3076,2.709,3077,4.361,3078,5.472,3079,4.361,3080,4.361,3081,4.361,3082,4.361,3083,4.361,3084,2.437,3085,2.709,3086,2.709,3087,2.709,3088,2.709,3089,2.709,3090,2.709,3091,8.032,3092,2.709,3093,2.709,3094,4.361,3095,5.472,3096,2.709,3097,3.417,3098,5.472,3099,2.709,3100,4.361,3101,2.709,3102,2.709,3103,2.709,3104,2.709,3105,2.709,3106,4.361,3107,2.709,3108,2.709,3109,2.437,3110,2.709,3111,4.361,3112,2.437,3113,2.709]],["title/classes/LastContentOutput.html",[0,0.316,3114,4.595]],["body/classes/LastContentOutput.html",[0,0.511,2,0.611,3,0.047,4,0.041,5,0.041,7,0.535,13,0.271,14,0.654,28,0.462,30,0.393,31,0.004,64,0.067,90,0.047,120,0.993,174,0.003,175,0.003,179,1.085,180,2.063,181,2.741,184,0.923,190,1.545,191,1.378,231,2.189,233,0.646,238,2.234,239,2.264,355,4.66,1487,1.866,1740,5.539,1777,5.455,1841,8.131,1859,8.131,1864,8.131,1876,8.131,3114,7.424,3115,9.786,3116,6.549,3117,6.549,3118,6.549,3119,6.549,3120,6.549]],["title/classes/LinkExpertsToPhaseArgs.html",[0,0.316,3121,4.595]],["body/classes/LinkExpertsToPhaseArgs.html",[0,0.521,2,0.629,3,0.048,4,0.042,5,0.042,7,0.551,13,0.279,14,0.666,28,0.446,30,0.379,31,0.004,32,0.607,49,0.891,64,0.06,90,0.048,120,0.92,174,0.003,175,0.003,179,1.009,180,2.101,184,0.891,189,4.194,190,2.262,191,1.418,203,3.559,233,0.665,346,4.832,735,3.849,740,4.245,1487,1.921,1701,6.586,1703,5.615,3121,7.56,3122,8.626,3123,6.062,3124,8.239,3125,6.74,3126,6.74,3127,6.74]],["title/classes/LinkStartupToPhaseArgs.html",[0,0.316,3128,4.595]],["body/classes/LinkStartupToPhaseArgs.html",[0,0.521,2,0.629,3,0.048,4,0.042,5,0.042,7,0.551,13,0.279,14,0.666,28,0.446,30,0.379,31,0.004,32,0.607,49,0.891,64,0.06,90,0.048,120,0.92,174,0.003,175,0.003,179,1.009,180,2.101,184,0.891,189,4.194,190,2.262,191,1.418,203,3.559,233,0.665,347,4.832,735,3.849,740,4.245,1487,1.921,1699,6.062,1701,6.586,1702,6.062,1703,5.615,1708,6.062,3124,8.239,3128,7.56,3129,9.591,3130,6.74]],["title/classes/LinkStartupsExpertsArgs.html",[0,0.316,3131,4.595]],["body/classes/LinkStartupsExpertsArgs.html",[0,0.574,2,0.572,3,0.044,4,0.038,5,0.038,7,0.502,13,0.254,14,0.628,28,0.427,30,0.397,31,0.004,32,0.602,49,0.597,64,0.066,90,0.044,120,0.942,174,0.003,175,0.003,179,0.951,180,1.98,184,0.853,189,4.015,190,2.069,191,1.291,195,0.927,203,3.709,207,1.127,224,0.813,233,0.605,246,1.534,347,5.273,633,2.051,636,3.905,660,1.826,735,3.627,740,4,1487,2.257,1701,6.206,2402,4.566,2416,5.52,3122,8.335,3123,5.52,3131,7.124,3132,7.888,3133,6.137,3134,6.137,3135,9.594,3136,5.52,3137,6.137,3138,7.306]],["title/classes/LinkWithTargetsArgs.html",[0,0.316,3139,4.595]],["body/classes/LinkWithTargetsArgs.html",[0,0.536,2,0.659,3,0.05,4,0.044,5,0.044,7,0.578,13,0.293,14,0.686,28,0.421,30,0.358,31,0.004,32,0.594,64,0.061,90,0.05,120,0.897,174,0.004,175,0.004,179,1.039,180,2.163,184,0.842,190,2.207,191,1.487,233,0.697,735,3.962,740,4.37,1038,6.96,1346,7.33,1388,7.794,1452,7.794,3139,7.783,3140,7.065,3141,7.783,3142,7.065,3143,7.065]],["title/classes/LinkWithTargetsByRequestArgs.html",[0,0.316,1371,4.257]],["body/classes/LinkWithTargetsByRequestArgs.html",[0,0.569,2,0.633,3,0.048,4,0.042,5,0.042,7,0.554,13,0.281,14,0.669,28,0.41,30,0.398,31,0.004,32,0.536,64,0.068,90,0.048,120,0.881,174,0.003,175,0.003,179,1.013,180,2.109,184,0.821,190,2.167,191,1.427,233,0.669,634,6.001,636,4.316,735,3.864,740,4.262,1038,6.279,1098,6.117,1354,8.237,1371,7.03,1379,6.1,1388,7.653,1389,7.653,1452,7.653,3141,6.1,3144,6.783,3145,6.783,3146,6.783,3147,6.783]],["title/modules/LoggerModule.html",[249,1.063,263,2.218]],["body/modules/LoggerModule.html",[0,0.463,3,0.053,4,0.047,5,0.047,20,4.756,31,0.004,64,0.064,73,7.181,78,1.555,90,0.053,174,0.004,175,0.004,249,1.994,251,2.482,252,2.482,253,2.549,254,2.549,255,2.515,256,3.054,257,3.27,263,4.412,265,2.973,266,2.549,267,2.549,1152,3.774,3148,6.722,3149,6.722,3150,7.474]],["title/classes/Notification.html",[0,0.316,1611,3.15]],["body/classes/Notification.html",[0,0.535,2,0.556,3,0.042,4,0.037,5,0.037,7,0.487,13,0.247,14,0.616,27,2.118,28,0.499,30,0.433,31,0.004,32,0.599,39,2.686,48,1.978,49,0.579,50,1.778,64,0.061,90,0.042,122,1.045,129,4.366,140,3.69,168,5.175,174,0.003,175,0.003,195,1.306,199,2.429,201,2.833,209,2.109,337,5.524,504,4.276,724,3.92,749,3.073,1003,4.191,1213,3.92,1338,6.432,1611,5.649,2069,5.904,2075,6.147,2079,6.087,3151,5.956,3152,9.162,3153,7.768,3154,7.768,3155,5.956,3156,5.956,3157,5.956,3158,5.956,3159,5.956,3160,5.956,3161,5.956,3162,5.956,3163,6.986,3164,5.956,3165,5.956,3166,5.956,3167,5.357,3168,5.956,3169,5.956]],["title/classes/Notification-1.html",[0,0.263,1426,2.704,1611,2.62]],["body/classes/Notification-1.html",[0,0.314,2,0.473,3,0.036,4,0.032,5,0.032,7,0.414,13,0.21,14,0.553,28,0.485,30,0.423,31,0.004,32,0.596,37,2.164,39,1.752,64,0.061,90,0.05,120,0.965,122,0.889,140,3.402,168,4.771,174,0.003,175,0.003,184,0.969,195,1.204,198,2.386,199,2.467,201,2.611,206,2.447,207,1.576,209,2.164,210,2.363,211,2.41,218,1.777,223,4.046,224,1.345,231,1.848,232,0.935,233,0.5,234,2.732,235,1.295,236,1.427,237,0.639,242,1.556,243,3.245,246,1.267,362,1.66,438,1.893,504,3.941,660,1.607,661,2.802,724,3.335,749,2.614,1003,3.863,1611,4.298,2069,5.442,2075,5.666,2079,5.462,3170,5.067,3171,4.588,3172,5.067,3173,5.067,3174,5.067,3175,5.067,3176,5.067,3177,5.067,3178,5.067,3179,5.067,3180,5.067,3181,5.067,3182,4.557,3183,5.067]],["title/modules/NotificationsModule.html",[249,1.063,826,3.059]],["body/modules/NotificationsModule.html",[0,0.375,3,0.043,4,0.038,5,0.038,31,0.004,49,0.589,64,0.074,78,1.26,90,0.043,174,0.003,175,0.003,235,1.125,237,0.764,241,2.158,249,1.813,251,2.011,252,2.011,253,2.066,254,2.066,255,2.038,256,2.973,257,2.973,265,2.608,266,2.066,267,2.066,269,2.792,275,2.215,277,2.248,317,2.543,364,2.676,381,2.462,387,3.435,388,3.987,821,3.526,826,6.245,836,6.961,912,4.746,913,5.363,1019,4.136,1586,6.036,1592,3.735,1594,4.506,1596,5.046,1611,3.735,2708,7.418,3182,7.063,3184,5.447,3185,5.447,3186,6.057,3187,5.447,3188,9.084,3189,6.057,3190,7.853,3191,5.447,3192,6.057,3193,6.057,3194,6.057]],["title/injectables/NotificationsService.html",[279,1.233,2708,3.633]],["body/injectables/NotificationsService.html",[0,0.194,3,0.022,4,0.02,5,0.02,13,0.13,14,0.388,15,1.767,16,1.695,20,1.997,22,1.672,23,3.476,27,1.742,28,0.423,30,0.35,31,0.005,32,0.57,37,0.852,38,1.695,39,2.926,41,1.132,48,2.809,49,0.823,50,1.74,52,2.79,53,3.084,60,1.553,61,1.879,64,0.068,76,1.736,78,0.653,89,2.232,90,0.022,113,3.063,121,3.966,122,1.526,134,2.908,139,2.736,142,3.966,174,0.002,175,0.002,195,0.911,201,1.975,211,1.695,224,0.799,232,1.166,237,0.396,241,0.863,246,1.225,279,1.183,280,1.182,282,2.435,286,2.057,287,2.528,288,1.849,290,2.725,297,3.234,303,3.118,304,2.33,306,2.645,308,2.585,309,2.663,310,2.376,313,1.464,315,1.553,316,1.256,317,2.057,325,2.057,329,2.424,330,3.346,364,1.387,428,1.78,431,2.615,438,1.331,461,1.656,481,2.823,500,5.569,501,3.84,504,2.981,542,1.936,565,1.997,724,2.066,773,2.585,1046,3.118,1097,3.226,1306,1.695,1389,5.674,1399,2.335,1590,5.815,1592,1.936,1594,2.335,1611,6.137,1621,4.082,1682,2.615,1783,4.082,1953,2.823,1961,2.615,2067,7.311,2492,2.823,2501,2.823,2523,2.823,2524,2.823,2538,4.407,2539,2.823,2540,2.46,2704,5.022,2708,3.485,2743,4.407,2764,5.022,2765,2.615,3072,2.46,3132,2.823,3171,4.483,3191,2.823,3195,3.139,3196,4.9,3197,4.9,3198,3.139,3199,3.139,3200,4.9,3201,4.9,3202,3.139,3203,4.9,3204,3.139,3205,4.9,3206,3.139,3207,4.9,3208,4.9,3209,3.139,3210,3.139,3211,3.139,3212,7.243,3213,3.139,3214,4.9,3215,3.139,3216,3.139,3217,3.139,3218,3.139,3219,3.139,3220,2.46,3221,2.615,3222,2.615,3223,2.823,3224,2.823,3225,2.232,3226,3.139,3227,3.139,3228,3.139,3229,3.139,3230,4.9,3231,6.028,3232,3.139,3233,4.9,3234,3.139,3235,4.9,3236,3.139,3237,3.139,3238,5.421,3239,7.829,3240,3.139,3241,3.139,3242,4.082,3243,4.9,3244,4.9,3245,3.139,3246,6.028,3247,6.126,3248,3.139,3249,3.139,3250,3.139,3251,2.823,3252,4.9,3253,4.9,3254,3.139,3255,3.139,3256,4.407,3257,4.9,3258,3.139]],["title/classes/OthersInput.html",[0,0.316,3259,4.595]],["body/classes/OthersInput.html",[0,0.542,2,0.672,3,0.051,4,0.045,5,0.045,7,0.589,13,0.299,14,0.694,28,0.351,30,0.363,31,0.004,61,5.65,64,0.067,90,0.051,120,0.84,174,0.004,175,0.004,179,1.133,180,2.189,181,2.909,184,0.701,189,3.3,190,1.7,191,1.516,207,1.324,233,0.711,633,2.268,889,3.071,890,3.349,1487,2.054,2773,6.004,3259,7.878,3260,7.207,3261,7.207,3262,7.207,3263,7.207,3264,7.207,3265,7.207]],["title/classes/ParticipantEventLink.html",[0,0.316,2363,3.801]],["body/classes/ParticipantEventLink.html",[0,0.492,2,0.398,3,0.03,4,0.027,5,0.027,7,0.504,11,3.511,13,0.177,14,0.489,28,0.387,30,0.398,31,0.005,32,0.625,37,2.29,47,3.818,49,0.882,60,2.109,64,0.056,90,0.062,120,1.01,122,0.748,174,0.003,175,0.003,179,0.512,184,0.773,194,2.552,195,1.37,198,1.277,199,2.241,200,2.027,201,1.397,203,1.582,206,1.309,207,0.783,209,2.158,211,2.134,213,3.255,217,1.761,218,1.495,219,4.172,224,1.202,231,2.236,232,0.828,233,0.42,234,2.945,235,1.567,236,1.2,237,0.538,238,2.105,239,1.474,240,1.851,241,1.172,242,1.309,243,3.041,244,3.853,245,2.2,246,1.542,340,2.153,346,2.249,348,2.629,370,2.2,420,2.806,428,3.499,438,1.158,644,2.302,650,2.249,660,1.422,661,2.358,701,4.901,736,3.499,1306,3.331,1310,2.153,1955,3.172,1956,2.806,1971,5.396,2349,3.341,2350,3.172,2357,5.396,2363,5.914,2366,5.396,2370,3.032,2371,6.609,2372,3.172,2373,3.341,3266,4.264,3267,4.264,3268,4.264,3269,4.264]],["title/classes/ParticipationEvent.html",[0,0.316,3270,4.004]],["body/classes/ParticipationEvent.html",[0,0.335,2,0.505,3,0.038,4,0.034,5,0.034,7,0.443,13,0.224,14,0.578,28,0.472,30,0.422,31,0.004,32,0.594,60,4.795,64,0.063,90,0.052,120,0.946,122,0.95,174,0.003,175,0.003,179,0.65,184,0.943,195,1.246,198,2.47,199,2.29,206,2.533,207,1.515,217,3.645,218,3.094,219,4.692,224,0.718,231,1.934,232,0.978,233,0.534,234,2.593,235,1.355,236,1.525,237,0.683,238,2.488,239,1.873,240,2.352,241,1.488,242,1.663,244,3.998,245,2.794,246,1.354,430,4.378,629,4.677,736,4.677,1306,3.938,1956,4.801,2081,7.334,3270,5.715,3271,9.857,3272,4.871,3273,7.294,3274,4.871,3275,5.416,3276,4.871,3277,4.871,3278,4.871,3279,4.871,3280,5.416,3281,4.871,3282,5.416]],["title/modules/ParticipationEventsModule.html",[249,1.063,2378,3.801]],["body/modules/ParticipationEventsModule.html",[0,0.399,3,0.046,4,0.04,5,0.04,31,0.004,49,0.627,64,0.072,78,1.341,90,0.046,174,0.003,175,0.003,235,1.197,237,0.813,249,1.867,251,2.14,252,2.14,253,2.198,254,2.198,255,2.169,256,3.061,257,3.061,262,3.639,263,4.32,265,2.713,266,2.198,267,2.198,269,2.905,273,3.063,274,2.539,275,2.357,277,2.391,477,5.049,479,4.794,2081,4.794,2083,6.08,2378,7.788,2381,5.368,2385,5.368,3270,5.049,3281,7.349,3283,5.795,3284,6.444,3285,5.795,3286,5.795,3287,8.245,3288,5.795,3289,8.172,3290,5.795,3291,6.444]],["title/injectables/ParticipationEventsService.html",[279,1.233,3287,4.004]],["body/injectables/ParticipationEventsService.html",[0,0.289,3,0.033,4,0.029,5,0.029,13,0.193,15,1.684,16,1.615,22,2.247,23,2.712,27,2.342,28,0.453,30,0.375,31,0.004,32,0.596,39,1.615,48,3.01,49,0.882,50,1.865,52,3.092,53,1.84,60,4.848,64,0.064,78,0.972,90,0.033,122,0.82,134,1.661,139,2.931,174,0.003,175,0.003,195,0.706,224,0.619,232,1.216,237,0.589,241,1.284,279,1.59,280,1.759,282,2.577,283,4.275,284,5.924,286,2.765,288,2.372,290,3.315,297,3.929,299,5.924,304,3.131,309,2.063,310,2.264,313,2.179,315,2.31,316,1.869,325,3.203,328,5.161,329,2.31,479,3.475,736,5.394,2080,6.845,2081,7.077,2083,7.293,2385,7.924,3225,4.684,3270,3.66,3287,5.161,3290,4.201,3292,4.201,3293,6.587,3294,4.671,3295,4.201,3296,6.587,3297,6.587,3298,4.671,3299,9.802,3300,4.671,3301,6.587,3302,4.671,3303,6.587,3304,4.671,3305,4.671,3306,7.924,3307,4.671,3308,4.671,3309,4.671,3310,6.587,3311,4.671,3312,4.671,3313,4.671,3314,4.671]],["title/classes/Phase.html",[0,0.316,203,1.896]],["body/classes/Phase.html",[0,0.227,2,0.342,3,0.026,4,0.023,5,0.023,7,0.815,13,0.306,14,0.438,28,0.488,30,0.428,31,0.005,32,0.598,37,2.668,49,0.719,64,0.047,90,0.039,120,0.967,122,0.644,174,0.002,175,0.002,184,0.975,195,1.004,198,1.99,199,2.445,201,2.177,203,3.301,206,2.041,207,1.634,209,2.803,210,1.712,211,2.556,217,2.282,223,1.651,224,1.264,231,1.465,232,0.741,233,0.362,234,2.788,235,1.026,236,1.034,237,0.463,242,1.128,243,2.396,246,0.918,288,1.5,355,2.577,356,1.816,366,2.704,438,1.5,482,1.622,524,4.97,640,4.537,644,3.587,647,4.944,648,5.206,650,3.505,651,4.496,654,2.177,660,1.92,664,3.302,701,3.407,711,4.33,712,4.33,713,2.983,714,3.308,964,3.302,1318,3.308,1747,5.899,2087,5.976,2088,5.976,2089,5.638,2806,2.877,2985,3.302,3315,3.671,3316,6.645,3317,5.535,3318,3.671,3319,7.393,3320,3.671,3321,3.671,3322,3.671,3323,3.671,3324,3.671,3325,3.671,3326,3.671,3327,3.671,3328,3.671,3329,3.671,3330,3.671,3331,3.671,3332,3.671,3333,3.671,3334,3.671,3335,5.526,3336,3.671,3337,3.671,3338,3.671,3339,3.671,3340,3.302,3341,3.671]],["title/classes/PhaseExpertRelationship.html",[0,0.316,2398,4.004]],["body/classes/PhaseExpertRelationship.html",[0,0.485,2,0.458,3,0.035,4,0.031,5,0.031,7,0.728,13,0.203,14,0.541,28,0.381,30,0.391,31,0.005,32,0.6,37,2.3,49,0.824,64,0.063,90,0.06,91,2.73,120,0.992,122,0.862,174,0.003,175,0.003,179,0.59,184,0.762,195,1.344,198,1.471,199,2.361,203,3.143,206,1.509,209,1.853,210,2.291,213,2.592,217,2.029,218,2.392,219,3.878,224,1.179,231,2.246,232,0.915,233,0.484,234,2.842,235,1.573,236,1.383,237,0.62,240,2.133,241,1.35,242,1.509,244,3.308,246,1.228,288,1.334,347,4.136,366,3.098,428,3.869,430,3.244,438,2.3,455,2.249,472,2.335,482,2.17,543,2.335,641,2.133,652,2.249,654,1.935,660,1.952,719,2.818,889,2.392,890,2.327,968,2.209,988,2.481,1289,4.335,1310,2.481,1313,3.355,1314,3.126,1318,2.941,2389,4.093,2390,3.849,2398,6.637,2402,6.302,2403,3.849,2404,4.093,3342,4.913,3343,4.913,3344,4.913]],["title/classes/PhaseRelationship.html",[0,0.316,1309,3.489]],["body/classes/PhaseRelationship.html",[0,0.479,2,0.447,3,0.034,4,0.03,5,0.03,7,0.747,13,0.198,14,0.531,28,0.376,30,0.396,31,0.005,32,0.612,37,2.1,49,0.752,64,0.063,90,0.06,91,2.682,120,1.001,122,0.84,140,3.576,174,0.003,175,0.003,179,0.575,184,0.752,195,1.332,198,1.434,199,2.348,203,2.487,206,1.471,209,1.82,213,3.536,217,1.978,218,1.679,219,3.825,224,1.168,231,2.221,232,0.899,233,0.472,234,2.887,235,1.556,236,1.348,237,0.604,240,2.079,241,1.316,242,1.471,244,3.249,246,1.197,288,1.3,366,3.064,430,3.186,438,2.1,455,2.193,472,3.186,482,2.116,543,2.277,641,2.079,651,2.716,652,2.193,654,1.887,660,1.931,719,2.769,889,2.711,890,2.638,968,3.014,988,2.418,1115,2.369,1276,4.265,1280,5.09,1289,4.276,1306,2.585,1309,5.72,1310,2.418,1314,3.047,1318,4.63,2310,3.989,2316,3.752,2317,3.989,3345,4.789,3346,4.789,3347,4.789]],["title/modules/PhasesModule.html",[249,1.063,827,3.633]],["body/modules/PhasesModule.html",[0,0.327,3,0.038,4,0.033,5,0.033,31,0.005,49,0.514,64,0.075,78,1.099,90,0.038,174,0.003,175,0.003,203,1.96,235,0.981,237,0.667,249,1.694,251,1.754,252,1.754,253,1.802,254,1.802,255,1.778,256,2.778,257,2.778,262,3.445,263,4.089,265,2.382,266,1.802,267,1.802,269,2.55,273,2.511,274,2.081,275,1.932,277,1.96,332,3.362,373,6.697,379,4.139,381,3.984,387,4.067,388,3.477,389,4.477,390,2.787,391,3.966,392,3.477,818,5.993,826,4.294,827,7.5,828,6.199,829,4.721,832,5.1,838,4.564,876,4.751,892,3.757,893,4.139,894,3.257,895,3.931,913,3.608,1586,4.422,1591,3.362,1592,3.257,1664,2.852,1778,3.477,2347,3.757,3340,6.45,3348,4.751,3349,5.283,3350,4.751,3351,4.751,3352,9.189,3353,5.283,3354,5.283,3355,7.172,3356,5.283,3357,5.283,3358,4.401,3359,5.283,3360,5.283,3361,5.283]],["title/classes/Rating.html",[0,0.316,3362,4.595]],["body/classes/Rating.html",[0,0.401,2,0.605,3,0.046,4,0.041,5,0.041,7,0.53,13,0.269,14,0.65,28,0.46,30,0.392,31,0.004,32,0.597,64,0.058,90,0.046,120,0.936,174,0.003,175,0.003,184,0.92,195,1.359,207,1.191,223,4.046,224,1.341,231,2.175,232,1.1,233,0.639,234,2.663,235,1.524,236,1.825,237,0.818,242,1.991,243,3.245,355,3.826,362,2.688,438,2.443,1046,5.22,1152,4.142,3362,8.506,3363,6.483,3364,8.093,3365,6.483,3366,6.483,3367,6.483,3368,6.483]],["title/classes/RemoveTableJoinInput.html",[0,0.316,3369,4.257]],["body/classes/RemoveTableJoinInput.html",[0,0.525,2,0.637,3,0.048,4,0.043,5,0.043,7,0.81,13,0.283,14,0.672,28,0.412,30,0.351,31,0.004,32,0.589,64,0.06,90,0.048,93,4.301,120,0.884,174,0.003,175,0.003,179,1.017,184,0.824,190,2.173,191,1.436,207,1.556,232,1.292,233,0.673,622,5.226,623,6.139,624,4.278,625,6.024,626,6.139,633,2.193,3369,7.058,3370,9.213,3371,6.826,3372,6.826,3373,6.826,3374,6.826]],["title/classes/Resource.html",[0,0.316,1757,3.363]],["body/classes/Resource.html",[0,0.299,2,0.451,3,0.034,4,0.03,5,0.03,7,0.395,13,0.2,14,0.535,28,0.48,30,0.435,31,0.004,32,0.596,37,2.283,49,0.756,64,0.063,90,0.048,120,0.957,122,0.848,174,0.003,175,0.003,179,0.58,184,0.96,195,1.174,198,2.327,199,2.383,200,3.694,201,2.546,203,3.283,206,2.386,207,0.887,209,2.68,211,2.908,217,3.884,218,2.724,219,4.159,223,2.173,224,1.03,231,1.788,232,0.905,233,0.476,234,2.779,235,1.253,236,1.36,237,0.61,238,2.301,239,1.671,240,2.098,241,1.328,242,1.484,243,1.742,244,3.27,245,2.493,246,1.208,317,2.832,709,3.825,958,2.549,1740,4.776,1744,5.525,1745,3.927,1747,3.595,1757,4.44,1821,6.589,2109,4.346,3375,4.832,3376,5.619,3377,6.066,3378,6.066,3379,4.832,3380,4.832,3381,4.832,3382,4.832,3383,4.832,3384,4.832,3385,4.832,3386,4.832,3387,4.832,3388,4.832,3389,4.832,3390,4.346,3391,4.832]],["title/modules/ResourcesModule.html",[249,1.063,828,3.363]],["body/modules/ResourcesModule.html",[0,0.39,3,0.045,4,0.039,5,0.039,31,0.004,49,0.613,64,0.073,78,1.312,90,0.045,174,0.003,175,0.003,235,1.171,237,0.796,249,1.848,251,2.094,252,2.094,253,2.151,254,2.151,255,2.122,256,3.03,257,3.03,262,3.619,263,4.296,265,2.676,266,2.151,267,2.151,269,2.865,273,2.997,274,2.484,275,2.306,277,2.34,381,3.276,818,5.128,828,6.868,829,4.15,892,4.484,893,4.941,1745,3.671,1757,4.15,3358,5.253,3390,7.248,3392,5.671,3393,6.305,3394,5.671,3395,5.671,3396,8.22,3397,6.305,3398,6.305,3399,8.059,3400,6.305,3401,5.671,3402,6.305]],["title/modules/ResourcesRepliesModule.html",[249,1.063,829,3.363]],["body/modules/ResourcesRepliesModule.html",[0,0.352,3,0.04,4,0.036,5,0.036,31,0.005,49,0.553,64,0.075,78,1.182,90,0.04,174,0.003,175,0.003,235,1.056,237,0.717,249,1.758,251,1.887,252,1.887,253,1.939,254,1.939,255,1.913,256,2.882,257,2.882,262,3.518,263,4.176,265,2.501,266,1.939,267,1.939,269,2.678,273,2.702,274,2.239,275,2.079,277,2.109,381,4.099,389,3.581,390,2.998,391,4.165,392,3.741,818,4.793,820,4.509,821,4.386,826,4.509,828,4.958,829,6.757,892,4.041,913,3.881,1019,3.881,1586,4.644,1591,3.616,1592,3.504,1745,4.386,1778,3.741,1787,8.609,1817,5.111,2347,4.041,2387,4.041,3358,4.734,3403,5.111,3404,5.111,3405,5.683,3406,5.111,3407,5.683,3408,7.532,3409,5.683,3410,6.774,3411,4.734,3412,5.683,3413,5.683,3414,5.683,3415,5.683]],["title/classes/ResourcesReply.html",[0,0.316,3411,4.257]],["body/classes/ResourcesReply.html",[0,0.251,2,0.378,3,0.029,4,0.025,5,0.025,7,0.73,13,0.168,14,0.559,28,0.479,30,0.428,31,0.004,32,0.596,37,2.244,41,2.145,64,0.066,90,0.042,91,2.38,120,0.952,122,0.711,140,3.008,174,0.002,175,0.002,179,0.487,184,0.957,195,1.064,198,2.11,199,2.293,201,2.309,203,3.313,206,2.164,207,1.425,209,2.346,210,3.855,211,2.057,217,3.206,218,2.721,219,4.53,224,0.934,231,1.577,232,0.798,233,0.4,234,2.711,235,1.105,236,1.142,237,0.512,240,1.76,241,1.114,242,1.245,244,3.763,246,1.013,288,1.615,317,1.702,366,2.839,430,4.244,438,1.101,472,3.35,480,3.017,482,1.791,654,2.344,685,4.426,719,2.457,889,2.086,890,1.383,958,2.139,968,2.675,976,3.561,977,3.464,978,3.017,1046,3.785,1740,4.19,1745,3.464,1757,5.877,1760,3.646,1778,6.531,1793,5.87,3410,3.646,3411,4.956,3416,9.922,3417,4.055,3418,4.661,3419,6.337,3420,6.337,3421,4.055,3422,4.055,3423,4.055,3424,4.055,3425,4.055,3426,4.055,3427,4.055,3428,4.055,3429,4.055,3430,4.055,3431,5.949,3432,4.055,3433,4.055,3434,4.055,3435,4.055,3436,4.055,3437,4.055]],["title/injectables/ResourcesService.html",[279,1.233,3396,4.004]],["body/injectables/ResourcesService.html",[0,0.266,3,0.031,4,0.027,5,0.027,13,0.178,15,2.238,16,2.146,22,2.117,23,3.371,27,2.207,28,0.453,30,0.385,31,0.005,32,0.589,39,2.759,48,3.09,49,0.905,50,1.914,52,3.101,53,2.87,64,0.065,78,0.894,90,0.031,122,1.4,134,2.836,139,2.94,174,0.003,175,0.003,195,0.937,201,2.387,211,2.146,224,0.965,232,1.219,237,0.542,241,1.181,279,1.498,280,1.618,282,2.743,286,2.606,287,3.202,288,2.166,290,3.192,297,3.642,304,2.95,306,3.35,308,3.274,309,3.218,310,3.009,313,2.004,315,2.126,316,1.72,325,2.606,329,3.07,381,1.747,460,2.437,486,2.65,511,6.646,1097,4.085,1740,5.024,1745,5.521,1757,6.337,1772,6.924,1783,5.17,1814,6.251,1878,3.865,2100,6.63,3396,4.863,3401,3.865,3438,4.298,3439,6.206,3440,6.206,3441,4.298,3442,4.298,3443,6.206,3444,6.206,3445,4.298,3446,6.206,3447,4.298,3448,6.206,3449,4.298,3450,6.206,3451,4.298,3452,4.298,3453,4.298,3454,6.646,3455,4.298,3456,5.582,3457,4.298,3458,4.298,3459,6.206,3460,4.298,3461,4.298,3462,4.298,3463,4.298,3464,4.298,3465,6.206,3466,4.298,3467,6.206,3468,4.298]],["title/classes/Rol.html",[0,0.316,1115,2.527]],["body/classes/Rol.html",[0,0.358,2,0.539,3,0.041,4,0.036,5,0.036,7,0.769,13,0.239,14,0.603,28,0.47,30,0.419,31,0.004,32,0.6,37,1.568,49,0.828,64,0.054,90,0.054,120,0.945,122,1.013,174,0.003,175,0.003,184,0.94,195,1.286,198,2.55,199,2.465,206,2.615,207,1.564,210,2.693,218,2.025,223,3.423,224,1.247,231,2.018,232,1.021,233,0.569,234,2.549,235,1.414,236,1.626,237,0.729,242,1.774,243,2.745,246,1.443,288,2.067,366,3.311,521,4.844,654,2.999,719,3.144,1047,5.815,1115,3.765,1152,3.844,3469,5.775,3470,5.775,3471,5.775,3472,5.775,3473,5.775,3474,5.775,3475,5.775,3476,5.194,3477,5.775]],["title/modules/RolModule.html",[249,1.063,830,3.633]],["body/modules/RolModule.html",[0,0.416,3,0.048,4,0.042,5,0.042,31,0.004,49,0.653,64,0.071,78,1.396,90,0.048,174,0.003,175,0.003,235,1.247,237,0.847,249,1.902,251,2.229,252,2.229,253,2.29,254,2.29,255,2.259,256,3.119,257,3.119,262,3.677,265,2.784,266,2.29,267,2.29,269,2.981,274,2.644,275,2.455,277,2.491,830,7.394,1115,3.32,3476,7.54,3478,6.037,3479,6.037,3480,6.037,3481,6.712,3482,7.872,3483,6.712,3484,6.712,3485,8.384,3486,6.712,3487,6.037,3488,6.712]],["title/injectables/RolService.html",[279,1.233,3482,3.801]],["body/injectables/RolService.html",[0,0.27,3,0.031,4,0.027,5,0.027,11,1.924,13,0.18,15,1.571,16,1.506,22,2.138,23,3.694,27,1.549,28,0.454,30,0.409,31,0.005,32,0.576,39,2.538,48,2.941,49,0.861,50,1.822,52,3.113,53,3.489,64,0.065,78,0.906,90,0.031,113,2.818,122,1.409,134,3.149,139,2.864,174,0.003,175,0.003,195,1.109,224,0.577,232,1.295,237,0.55,241,1.197,279,1.513,280,1.64,282,2.497,283,4.142,286,2.631,287,3.233,288,2.18,290,3.212,297,3.658,304,2.979,306,3.383,309,3.243,310,3.038,313,2.032,315,2.154,316,1.743,317,1.829,325,3.082,329,2.154,356,2.154,461,2.298,521,5.412,542,3.864,794,4.662,1115,5.103,1152,3.165,1603,5.636,1617,5.636,1668,6.59,2120,6.665,3482,4.662,3487,3.917,3489,4.356,3490,4.356,3491,4.356,3492,6.267,3493,6.267,3494,4.356,3495,4.356,3496,4.356,3497,4.356,3498,4.356,3499,4.91,3500,4.356,3501,7.781,3502,4.356,3503,5.636,3504,3.917,3505,4.356,3506,4.356,3507,4.356,3508,3.917,3509,4.356,3510,4.356,3511,4.356,3512,6.267,3513,4.356,3514,6.267,3515,4.356,3516,6.267,3517,4.356]],["title/classes/SearchBatchInput.html",[0,0.316,3518,4.595]],["body/classes/SearchBatchInput.html",[0,0.532,2,0.652,3,0.05,4,0.044,5,0.044,7,0.571,13,0.289,14,0.681,28,0.418,30,0.386,31,0.004,32,0.592,50,1.998,64,0.066,90,0.05,120,0.893,174,0.004,175,0.004,179,1.118,180,2.149,181,2.854,184,0.836,189,3.2,190,1.648,191,1.47,233,0.689,633,2.226,889,2.45,890,2.384,1487,2.653,1898,4.535,3518,7.731,3519,6.988,3520,9.31,3521,9.31,3522,6.988,3523,6.988]],["title/classes/SelectApplicantsArgs.html",[0,0.316,3524,4.595]],["body/classes/SelectApplicantsArgs.html",[0,0.492,2,0.575,3,0.044,4,0.039,5,0.039,7,0.504,13,0.255,14,0.629,28,0.467,30,0.407,31,0.004,32,0.597,41,2.863,64,0.068,90,0.044,120,0.943,174,0.003,175,0.003,179,1.055,180,1.985,184,0.934,190,2.189,191,1.296,233,0.608,629,4.982,707,7.272,725,5.132,735,3.635,737,2.804,740,4.01,742,5.541,744,3.799,747,3.407,748,3.92,749,3.179,889,2.784,890,2.101,1487,2.263,1898,3.25,1931,5.541,3524,7.141,3525,9.834,3526,8.786,3527,8.786,3528,8.786,3529,8.786,3530,6.161,3531,6.161,3532,6.161,3533,6.161,3534,6.161,3535,6.161,3536,5.541]],["title/classes/SendEmailInput.html",[0,0.316,44,3.489]],["body/classes/SendEmailInput.html",[0,0.506,2,0.601,3,0.046,4,0.04,5,0.04,7,0.527,13,0.267,14,0.648,28,0.474,30,0.403,31,0.004,32,0.607,37,2.437,38,4.844,44,5.58,64,0.046,90,0.046,128,6.128,131,6.128,168,5.372,174,0.003,175,0.003,179,0.981,180,2.042,181,2.713,184,0.947,189,4.459,191,1.356,1487,2.836,2065,7.349,3537,9.95,3538,6.444,3539,6.444,3540,8.974,3541,6.444,3542,6.444,3543,6.444,3544,6.444,3545,6.444]],["title/classes/SendGridProvider.html",[0,0.316,2258,4.257]],["body/classes/SendGridProvider.html",[0,0.226,2,0.34,3,0.026,4,0.023,5,0.041,7,0.298,9,4.304,10,4.087,11,2.427,12,4.92,13,0.151,14,0.435,15,3.275,16,3.14,17,5.509,19,5.181,20,2.318,21,5.509,22,1.874,23,3.229,24,6.851,25,4.304,26,5.181,27,2.351,28,0.419,30,0.389,31,0.005,32,0.562,39,3.14,41,1.981,43,4.576,44,5.028,46,6.508,47,4.081,48,2.196,49,0.716,50,1.36,51,5.181,52,2.256,53,2.605,54,4.576,55,6.131,57,3.751,58,3.034,59,4.685,60,4.264,61,3.959,63,5.181,64,0.066,65,2.71,66,2.71,67,2.854,68,2.71,69,3.034,70,2.854,71,3.034,72,3.034,73,2.487,74,2.71,75,5.509,76,4.072,77,4.087,78,0.758,79,2.71,80,2.854,81,2.854,82,4.304,89,2.59,90,0.026,91,2.198,92,2.854,93,1.581,107,5.879,108,3.034,109,2.71,110,3.276,111,2.71,112,3.276,113,4.083,114,5.509,115,3.75,116,4.576,117,6.919,118,4.576,119,4.576,120,0.527,121,3.85,122,1.513,125,4.576,128,3.751,130,3.276,131,3.751,132,3.276,134,2.351,137,3.034,138,3.034,139,2.138,142,3.85,143,6.18,145,5.181,146,4.92,147,5.509,150,3.034,159,6.134,160,3.034,161,3.034,162,1.921,163,3.034,164,6.582,165,6.919,166,3.034,168,3.288,169,2.71,170,2.71,171,2.854,172,2.854,174,0.002,175,0.002,590,3.276,996,3.959,1740,1.966,1794,3.276,2218,3.276,2258,4.576,2280,3.276,2281,3.276,2286,3.276,3084,3.276,3546,3.642,3547,5.493,3548,5.493,3549,3.642,3550,3.642,3551,3.642,3552,3.642,3553,3.642,3554,4.94,3555,3.642,3556,3.642,3557,3.276,3558,3.642,3559,5.493,3560,3.642,3561,3.642,3562,3.642,3563,3.642,3564,3.642,3565,3.642,3566,3.642,3567,3.642,3568,3.642,3569,3.642,3570,3.642,3571,3.642,3572,5.493,3573,3.642,3574,3.642,3575,3.642,3576,3.642,3577,3.642,3578,3.642]],["title/classes/SignUpInput.html",[0,0.316,3579,4.595]],["body/classes/SignUpInput.html",[0,0.424,2,0.638,3,0.049,4,0.043,5,0.043,7,0.559,13,0.283,14,0.673,28,0.449,30,0.382,31,0.004,32,0.589,47,4.004,50,1.745,64,0.06,90,0.049,120,0.969,174,0.003,175,0.003,179,1.018,180,2.12,181,2.817,183,6.861,184,0.897,218,2.398,224,1.124,233,0.675,474,3.693,476,3.783,633,2.196,660,1.577,1164,6.152,1317,5.793,1692,4.864,3068,7.682,3579,7.63,3580,9.641,3581,6.84,3582,6.84,3583,6.84,3584,6.84,3585,6.84]],["title/classes/Site.html",[0,0.316,1718,3.801]],["body/classes/Site.html",[0,0.421,2,0.355,3,0.027,4,0.024,5,0.024,7,0.776,13,0.158,14,0.45,28,0.468,30,0.41,31,0.005,32,0.621,37,2.496,47,2.467,49,0.783,61,2.281,64,0.04,90,0.054,120,0.994,122,0.669,174,0.003,175,0.002,184,0.935,195,1.026,198,2.035,199,2.259,201,2.226,206,2.087,207,1.688,209,1.845,210,2.65,211,1.965,218,1.992,223,1.713,224,1.275,231,1.997,232,0.762,233,0.376,234,2.89,235,1.399,236,1.073,237,0.481,238,2.317,242,1.17,243,2.716,245,3.505,246,1.42,288,1.543,366,2.755,651,4.568,654,2.238,660,2.217,701,3.503,711,4.452,712,4.452,713,3.067,714,5.057,1289,2.107,1640,4.227,1641,2.602,1710,6.274,1711,3.427,1712,5.323,1717,4.452,1718,4.227,1719,5.055,1720,5.055,1721,5.055,1722,5.055,1723,6.11,1724,5.055,1725,3.174,1726,3.427,3586,3.81,3587,3.81,3588,3.81,3589,3.81,3590,3.81,3591,3.81,3592,3.81,3593,3.81,3594,3.81,3595,3.81,3596,3.81,3597,3.81]],["title/modules/SitesModule.html",[249,1.063,831,3.801]],["body/modules/SitesModule.html",[0,0.405,3,0.046,4,0.041,5,0.041,31,0.004,49,0.636,64,0.072,78,1.36,90,0.046,174,0.003,175,0.003,235,1.214,237,0.825,249,1.879,251,2.17,252,2.17,253,2.229,254,2.229,255,2.199,256,3.081,257,3.081,262,3.653,263,4.336,265,2.738,266,2.229,267,2.229,269,2.931,273,3.107,274,2.575,275,2.39,277,2.425,831,7.804,1718,4.862,1725,6.868,3598,5.878,3599,5.878,3600,5.878,3601,6.535,3602,8.261,3603,6.535,3604,6.535,3605,8.245,3606,6.535,3607,5.878,3608,6.535]],["title/injectables/SitesService.html",[279,1.233,3602,4.004]],["body/injectables/SitesService.html",[0,0.31,3,0.036,4,0.031,5,0.031,7,0.409,13,0.207,15,1.804,16,1.73,22,2.357,23,3.294,27,2.457,28,0.451,30,0.371,31,0.005,32,0.573,39,2.39,48,2.975,49,0.871,50,1.843,52,3.056,53,2.723,64,0.066,78,1.041,90,0.036,115,5.637,122,1.213,134,2.457,139,2.897,174,0.003,175,0.003,195,1.044,201,2.264,211,1.73,224,1.049,232,1.274,237,0.631,241,1.375,279,1.668,280,1.884,282,2.656,283,4.405,286,2.902,287,3.566,288,2.318,290,3.416,297,3.526,304,3.285,306,3.731,308,3.646,309,3.497,310,3.35,313,2.334,315,2.475,316,2.002,317,2.101,325,2.902,328,5.415,329,3.418,330,4.719,1641,4.719,1718,3.723,1735,6.666,1736,5.415,1738,7.582,3602,5.415,3607,4.501,3609,5.004,3610,5.004,3611,5.004,3612,6.911,3613,6.911,3614,5.004,3615,5.004,3616,5.004,3617,5.004,3618,5.004,3619,5.004,3620,5.004,3621,5.004,3622,5.004,3623,5.004,3624,6.911]],["title/classes/Stage.html",[0,0.316,2089,3.633]],["body/classes/Stage.html",[0,0.309,2,0.466,3,0.036,4,0.031,5,0.031,7,0.791,13,0.353,14,0.547,28,0.483,30,0.412,31,0.004,32,0.607,37,1.874,49,0.769,64,0.049,90,0.049,120,0.963,122,0.877,174,0.003,175,0.003,184,0.967,195,1.195,198,2.369,199,2.399,201,2.592,206,2.429,207,1.567,209,2.148,210,2.33,211,2.387,223,4.026,224,1.342,231,1.83,232,0.926,233,0.493,234,2.723,235,1.282,236,1.407,237,0.63,242,1.535,243,3.229,246,1.249,288,1.874,355,3.22,362,2.262,366,3.121,654,2.72,660,1.591,714,2.991,719,2.852,1318,4.133,2089,4.909,2136,6.198,2137,6.59,2138,5.885,3625,4.997,3626,6.209,3627,4.997,3628,4.997,3629,4.997,3630,4.997,3631,4.997,3632,4.997,3633,4.997,3634,4.997,3635,4.997,3636,4.997,3637,4.494,3638,4.997]],["title/modules/StagesModule.html",[249,1.063,832,3.633]],["body/modules/StagesModule.html",[0,0.405,3,0.046,4,0.041,5,0.041,31,0.004,49,0.636,64,0.072,78,1.36,90,0.046,174,0.003,175,0.003,235,1.214,237,0.825,249,1.879,251,2.17,252,2.17,253,2.229,254,2.229,255,2.199,256,3.081,257,3.081,262,3.653,263,4.336,265,2.738,266,2.229,267,2.229,269,2.931,273,3.107,274,2.575,275,2.39,277,2.425,832,7.459,2089,4.647,3637,7.415,3639,5.878,3640,5.878,3641,6.535,3642,5.878,3643,8.261,3644,6.535,3645,6.535,3646,8.245,3647,6.535,3648,5.878,3649,6.535]],["title/injectables/StagesService.html",[279,1.233,3643,4.004]],["body/injectables/StagesService.html",[0,0.246,3,0.028,4,0.025,5,0.025,11,1.756,13,0.355,15,1.433,16,1.374,22,2,23,3.542,27,2.084,28,0.443,30,0.392,31,0.005,32,0.566,37,1.079,39,2.408,48,2.848,49,0.834,50,1.765,52,3.026,53,3.029,64,0.063,78,0.827,90,0.028,91,2.787,122,1.222,134,3.237,139,2.774,174,0.002,175,0.002,195,1.238,201,1.302,224,1.019,232,1.19,237,0.502,241,1.092,279,1.415,280,1.497,282,2.391,283,3.967,286,2.461,287,3.025,288,2.087,290,3.076,297,3.175,304,2.787,306,3.165,308,3.093,309,3.077,310,2.842,313,1.854,315,1.966,316,1.59,317,1.669,325,2.924,329,3.445,355,3.249,356,1.966,993,5.72,1426,3.73,1558,2.957,1560,4.169,1668,6.382,1685,3.114,1690,7.715,1694,4.884,2089,6.611,2133,6.424,3499,4.593,3626,6.914,3643,4.593,3648,3.575,3650,3.975,3651,5.862,3652,3.975,3653,3.975,3654,5.862,3655,5.862,3656,3.975,3657,3.975,3658,3.975,3659,5.862,3660,9.106,3661,7.688,3662,3.975,3663,5.862,3664,5.862,3665,5.272,3666,5.862,3667,3.975,3668,3.975,3669,7.586,3670,3.975,3671,5.272,3672,3.975,3673,3.975,3674,3.975,3675,3.975,3676,3.975,3677,3.975,3678,3.975,3679,3.975,3680,3.975,3681,3.975,3682,3.975,3683,3.975,3684,3.975,3685,6.965,3686,5.862,3687,5.862,3688,5.862]],["title/classes/Startup.html",[0,0.316,430,2.429]],["body/classes/Startup.html",[0,0.443,2,0.389,3,0.03,4,0.026,5,0.026,7,0.782,13,0.173,14,0.481,28,0.465,30,0.416,31,0.005,32,0.603,37,1.944,49,0.406,64,0.059,90,0.056,91,3.147,120,0.984,122,0.732,140,2.592,174,0.002,175,0.002,179,0.501,184,0.93,195,1.263,198,2.144,199,2.424,203,1.547,206,2.199,207,1.654,209,1.944,210,2.832,217,1.722,218,2.129,219,3.003,224,1.156,231,2.085,232,0.814,233,0.411,234,2.827,235,1.461,236,1.174,237,0.526,240,1.81,241,1.146,242,1.281,244,2.943,246,1.042,288,1.649,366,3.376,430,3.739,438,2.136,455,2.78,472,3.739,482,1.842,543,2.886,641,3.109,651,4.061,652,3.279,654,2.392,660,2.127,661,3.358,714,2.496,719,3.249,889,2.511,890,2.683,968,3.22,988,3.066,1115,2.062,1276,5.005,1280,5.178,1289,3.358,1306,2.251,1309,5.372,1310,3.066,1314,4.556,1318,4.709,2310,3.474,2316,3.267,2317,3.474,3689,4.17,3690,4.17,3691,4.17,3692,4.17,3693,4.17,3694,4.17,3695,4.17,3696,4.17,3697,4.17,3698,4.17]],["title/classes/StartupLink.html",[0,0.316,2402,3.801]],["body/classes/StartupLink.html",[0,0.49,2,0.466,3,0.036,4,0.031,5,0.031,7,0.732,13,0.207,14,0.547,28,0.336,30,0.384,31,0.005,32,0.602,37,2.317,49,0.83,64,0.064,90,0.061,91,2.762,120,0.994,122,0.877,174,0.003,175,0.003,179,0.6,184,0.671,195,1.353,198,1.496,199,2.37,203,2.562,206,1.535,209,1.874,213,2.636,217,2.064,218,1.752,219,3.912,224,1.187,231,2.262,232,0.926,233,0.493,234,2.85,235,1.585,236,1.407,237,0.63,240,2.169,241,1.373,242,1.535,244,3.347,246,1.249,288,1.357,347,2.636,366,3.121,428,3.915,430,4.056,438,2.317,455,2.288,472,2.375,482,2.207,543,2.375,641,2.169,652,2.288,654,1.968,660,1.967,719,2.852,889,2.42,890,2.355,968,2.247,988,2.523,1289,4.374,1310,2.523,1313,3.412,1314,3.179,1318,2.991,2389,4.162,2390,3.915,2398,6.198,2402,6.348,2403,3.915,2404,4.162,3699,4.997,3700,4.997]],["title/modules/StartupModule.html",[249,1.063,391,2.826]],["body/modules/StartupModule.html",[0,0.379,3,0.044,4,0.038,5,0.038,31,0.004,49,0.596,64,0.074,78,1.274,90,0.044,174,0.003,175,0.003,235,1.138,237,0.773,249,1.823,251,2.034,252,2.034,253,2.09,254,2.09,255,2.061,256,2.989,257,2.989,262,3.591,265,2.627,266,2.09,267,2.09,269,2.813,274,2.413,275,2.241,277,2.273,381,3.897,387,4.486,388,4.032,391,5.745,412,8.187,430,2.912,819,6.248,820,4.736,821,4.606,834,5.034,1019,4.183,1301,4.8,1302,4.8,2316,6.199,2387,4.356,3701,5.509,3702,5.509,3703,5.509,3704,6.126,3705,6.126,3706,6.126,3707,7.911,3708,6.126,3709,6.126,3710,6.126]],["title/classes/StartupRelationship.html",[0,0.316,1311,4.004]],["body/classes/StartupRelationship.html",[0,0.477,2,0.443,3,0.034,4,0.03,5,0.03,7,0.719,13,0.197,14,0.529,28,0.406,30,0.396,31,0.005,32,0.58,37,2.267,64,0.062,90,0.059,91,2.668,120,0.992,122,0.834,140,3.288,174,0.003,175,0.003,179,0.571,184,0.812,195,1.328,198,1.424,199,2.344,206,1.46,207,0.873,209,1.811,213,3.518,217,1.963,218,1.667,224,1.165,231,2.214,232,0.894,233,0.469,234,2.848,235,1.551,236,1.338,237,0.6,242,1.46,246,1.188,288,1.291,347,2.508,366,3.054,430,3.17,438,2.267,455,2.176,472,4.18,480,3.537,482,2.1,543,2.26,641,2.064,652,2.176,654,1.873,660,1.925,719,2.754,889,2.927,890,2.999,968,3.754,988,2.4,1273,2.931,1289,4.259,1290,5.07,1304,6.035,1305,3.96,1306,4.747,1309,5.702,1310,2.4,1311,6.542,1312,3.537,1313,3.246,1314,3.025,1315,3.725,1316,3.96,1317,4.554,1318,4.611,3711,4.754,3712,4.754,3713,4.754,3714,4.754,3715,4.754]],["title/controllers/StorageController.html",[2230,3.633,3716,4.257]],["body/controllers/StorageController.html",[0,0.401,3,0.046,4,0.04,5,0.04,7,0.529,13,0.268,16,2.237,22,2.794,23,3.541,28,0.398,30,0.268,31,0.004,48,2.72,49,0.797,50,1.685,52,2.794,64,0.058,78,1.346,90,0.046,115,3.669,122,1.438,127,5.721,134,2.913,139,2.649,174,0.003,175,0.003,184,0.797,282,2.548,422,4.493,951,3.989,973,5.594,1003,3.971,1111,4.601,1225,6.825,1238,6.139,1239,5.39,1270,7.873,1912,5.819,2180,5.39,2230,4.601,2233,5.39,2237,6.139,2740,8.086,3716,6.825,3717,6.47,3718,8.193,3719,6.47,3720,6.47,3721,6.47,3722,6.47,3723,6.47,3724,6.47,3725,6.47,3726,6.47,3727,6.47,3728,6.47,3729,6.47]],["title/modules/StorageModule.html",[249,1.063,833,3.633]],["body/modules/StorageModule.html",[0,0.439,3,0.05,4,0.044,5,0.044,31,0.004,64,0.069,78,1.476,90,0.05,115,4.024,174,0.004,175,0.004,249,1.95,251,2.356,252,2.356,253,2.42,254,2.42,255,2.388,256,2.96,257,3.197,265,2.881,266,2.42,267,2.42,833,7.123,951,5.35,1197,7.229,1238,7.115,1239,5.911,2262,6.382,3716,7.809,3730,6.382,3731,6.382,3732,7.096,3733,7.096,3734,7.096,3735,7.096]],["title/classes/StorageService.html",[0,0.316,1238,3.489]],["body/classes/StorageService.html",[0,0.391,2,0.589,3,0.045,4,0.04,5,0.04,7,0.516,13,0.262,22,2.753,28,0.432,30,0.368,31,0.004,32,0.6,48,2.952,49,0.865,50,1.829,52,3.033,64,0.045,90,0.045,93,4.298,115,4.576,129,4.49,174,0.003,175,0.003,422,4.706,1203,7.996,1205,7.996,1206,7.996,1209,5.682,1210,8.903,1213,5.312,1220,5.682,1222,5.682,1223,6.967,1238,5.511,2180,6.722,2211,8.425,2213,5.682,2266,6.722,3736,6.318,3737,10.288,3738,10.37,3739,6.318,3740,6.318,3741,6.318,3742,6.318]],["title/classes/SubmitAnnouncementDocInput.html",[0,0.316,3743,4.595]],["body/classes/SubmitAnnouncementDocInput.html",[0,0.484,2,0.561,3,0.043,4,0.038,5,0.038,7,0.833,13,0.249,14,0.62,28,0.447,30,0.395,31,0.004,32,0.595,64,0.062,90,0.043,120,0.914,174,0.003,175,0.003,179,1.042,180,1.953,181,2.595,184,0.894,189,4.21,190,1.843,191,1.265,207,1.689,232,1.233,233,0.593,504,2.973,633,2.023,637,6.126,646,3.032,689,6.511,690,3.957,736,5.405,889,2.74,890,2.962,991,5.354,3743,7.029,3744,9.531,3745,6.012,3746,8.684,3747,7.029,3748,6.012,3749,6.012,3750,6.012,3751,6.012,3752,6.012,3753,6.012]],["title/classes/SubmitFileInput.html",[0,0.316,2520,4.257]],["body/classes/SubmitFileInput.html",[0,0.486,2,0.564,3,0.043,4,0.038,5,0.058,7,0.834,13,0.25,14,0.622,28,0.448,30,0.382,31,0.004,32,0.608,64,0.056,90,0.043,93,3.406,120,0.916,174,0.003,175,0.003,179,0.942,180,2.303,184,0.896,189,4.219,190,1.85,191,1.272,207,1.692,232,1.052,233,0.596,633,2.031,646,3.705,727,6.52,735,3.591,958,4.138,1003,3.802,1215,7.254,1275,4.815,1478,6.822,1481,5.559,2520,6.534,3747,7.054,3754,9.548,3755,6.045,3756,6.045,3757,6.045,3758,6.045,3759,6.045,3760,6.045,3761,6.045]],["title/classes/SubmitFormSubscriptionArgs.html",[0,0.316,2517,4.257]],["body/classes/SubmitFormSubscriptionArgs.html",[0,0.53,2,0.648,3,0.049,4,0.043,5,0.043,7,0.568,13,0.288,14,0.679,28,0.416,30,0.385,31,0.004,32,0.542,64,0.066,90,0.049,120,0.89,129,4.688,174,0.004,175,0.004,179,1.114,180,2.14,184,0.833,190,2.19,191,1.461,232,1.245,233,0.685,646,3.602,735,3.92,737,2.733,740,4.324,889,3.002,890,3.167,1481,5.405,1483,6.244,1485,6.244,2517,7.133,3762,9.284,3763,6.943]],["title/classes/Table.html",[0,0.316,622,2.695]],["body/classes/Table.html",[0,0.316,2,0.476,3,0.036,4,0.032,5,0.032,7,0.824,13,0.29,14,0.556,28,0.453,30,0.395,31,0.004,32,0.582,37,1.387,50,1.917,64,0.066,90,0.05,93,3.043,120,0.916,122,0.896,174,0.003,175,0.003,179,0.613,184,0.907,195,1.209,207,1.712,218,1.791,224,1.265,231,1.858,232,0.94,233,0.504,234,2.425,235,1.6,236,1.438,237,0.644,243,2.885,246,1.277,622,5.129,625,3.632,628,6.27,630,5.839,646,3.501,660,1.616,713,4.649,714,3.058,889,3.019,890,1.742,1218,4.002,1472,6.52,1488,6.27,1491,5.214,1492,5.953,1493,7.745,1497,3.8,1498,4.786,1987,5.839,2153,6.666,2434,4.984,3764,5.107,3765,6.303,3766,8.002,3767,7.518,3768,5.107,3769,7.009,3770,5.107,3771,5.107,3772,4.593,3773,5.107,3774,7.196,3775,5.107,3776,5.107,3777,5.107,3778,4.593,3779,4.593,3780,5.107]],["title/classes/TableConfig.html",[0,0.316,3781,4.004]],["body/classes/TableConfig.html",[0,0.323,2,0.487,3,0.037,4,0.033,5,0.033,7,0.744,13,0.216,14,0.564,28,0.457,30,0.415,31,0.004,32,0.57,37,1.932,49,0.787,64,0.065,90,0.051,91,2.848,120,0.921,122,0.917,174,0.003,175,0.003,179,0.627,184,0.913,195,1.223,199,2.196,207,1.596,218,2.495,223,3.2,224,1.295,231,1.887,232,1.166,233,0.515,234,2.642,235,1.322,236,1.471,237,0.659,240,2.268,241,1.435,243,2.919,244,2.532,246,1.306,334,3.886,366,2.603,543,3.383,622,5.157,641,3.515,660,2.004,661,2.888,889,2.838,890,2.761,967,3.886,968,3.2,1289,3.936,1290,4.685,1395,7.146,1472,5.528,1492,6.023,1497,3.886,1498,3.567,3765,6.401,3772,4.697,3781,5.576,3782,8.638,3783,7.117,3784,7.281,3785,5.223,3786,5.223,3787,5.223,3788,5.223,3789,5.223,3790,7.117,3791,5.223,3792,4.697,3793,5.223]],["title/injectables/TableConfigService.html",[279,1.233,1332,3.633]],["body/injectables/TableConfigService.html",[0,0.269,3,0.031,4,0.027,5,0.027,13,0.18,15,2.253,16,2.161,22,2.131,23,3.593,27,2.221,28,0.43,30,0.366,31,0.004,32,0.576,39,2.771,48,2.937,49,0.86,50,1.819,52,2.897,53,2.885,64,0.066,78,0.902,90,0.031,113,1.951,122,1.49,129,4.711,134,3.019,139,2.746,173,2.675,174,0.003,175,0.003,195,0.655,224,0.575,232,1.251,237,0.547,241,1.192,279,1.508,280,1.634,282,1.944,286,2.623,288,2.176,290,3.206,297,3.653,304,2.97,308,3.296,309,3.54,310,3.029,313,2.023,316,1.736,325,2.623,364,4.36,386,2.962,399,3.614,422,3.809,438,1.178,461,3.296,462,3.399,622,5.363,635,3.901,641,2.713,773,2.288,790,2.675,810,3.399,1322,4.649,1332,4.443,1338,5.449,1395,6.782,1396,7.143,1455,5.205,1472,5.001,1498,2.962,2145,6.675,2494,6.225,2507,3.614,2561,3.614,2593,5.205,3781,6.278,3794,7.323,3795,4.338,3796,4.338,3797,6.248,3798,4.338,3799,8.013,3800,4.338,3801,4.338,3802,6.248,3803,4.338,3804,4.338,3805,4.338,3806,3.901,3807,4.338,3808,4.338,3809,6.248,3810,6.248,3811,4.338,3812,3.901,3813,6.248,3814,4.338,3815,6.248,3816,4.338]],["title/classes/TableJoin.html",[0,0.316,628,4.004]],["body/classes/TableJoin.html",[0,0.494,2,0.578,3,0.044,4,0.039,5,0.039,7,0.507,13,0.257,14,0.632,28,0.452,30,0.399,31,0.004,32,0.575,37,1.682,49,0.857,64,0.068,90,0.057,93,3.825,120,0.923,122,1.087,174,0.003,175,0.003,179,0.744,184,0.905,189,4.258,191,1.304,218,2.172,231,2.113,233,0.611,234,2.709,235,1.48,236,1.745,237,0.782,246,1.549,628,6.245,633,2.063,646,3.418,889,2.794,890,2.114,1290,5.246,1487,2.271,1491,5.93,1492,6.555,1497,4.61,1498,4.231,3767,6.639,3774,5.573,3817,9.622,3818,6.196,3819,7.924,3820,6.196,3821,6.196,3822,8.81,3823,6.196,3824,6.196,3825,6.196,3826,6.196]],["title/modules/TableModule.html",[249,1.063,834,3.251]],["body/modules/TableModule.html",[0,0.366,3,0.042,4,0.037,5,0.037,31,0.004,49,0.752,64,0.073,78,1.23,90,0.042,174,0.003,175,0.003,235,1.436,237,0.746,249,1.792,251,1.963,252,1.963,253,2.017,254,2.017,255,1.99,256,2.938,257,2.938,262,3.557,265,2.567,266,2.017,267,2.017,269,2.749,274,2.329,275,2.163,277,2.194,381,3.142,382,4.399,384,4.925,386,4.038,389,4.623,390,3.119,622,4.82,756,5.279,763,5.317,834,6.65,1332,7.392,1396,6.058,3779,6.953,3781,4.633,3782,5.317,3792,6.953,3827,5.317,3828,5.317,3829,5.912,3830,5.317,3831,7.62,3832,5.912,3833,7.731,3834,5.912,3835,7.731,3836,5.912,3837,5.912,3838,5.912,3839,5.912]],["title/injectables/TableService.html",[279,1.233,3831,4.004]],["body/injectables/TableService.html",[0,0.214,3,0.025,4,0.022,5,0.022,13,0.143,15,2.312,16,2.217,22,1.803,23,3.553,27,1.879,28,0.412,30,0.371,31,0.005,32,0.308,39,2.672,48,2.813,49,0.871,50,1.743,52,2.778,53,1.364,59,3.363,64,0.066,76,3.545,78,0.72,90,0.025,93,3.355,113,2.883,122,1.72,129,1.749,134,3.183,139,2.825,162,1.827,174,0.002,175,0.002,195,0.523,203,1.285,224,0.951,232,0.962,237,0.437,241,0.952,279,1.276,280,1.304,282,2.717,286,2.219,287,2.727,290,2.871,297,3.192,313,1.615,316,1.385,325,2.219,381,1.407,382,2.576,422,4.415,460,1.964,461,2.788,486,2.135,620,5.977,622,5.47,625,4.559,646,1.343,787,7.326,1084,3.933,1275,2.923,1332,6.025,1337,4.754,1357,4.22,1396,2.713,1450,2.713,1472,5.966,1488,2.713,1633,3.114,2150,5.977,2153,4.403,2494,5.966,2507,2.885,3047,4.754,3369,5.977,3418,2.713,3767,7.609,3778,3.114,3806,3.114,3812,3.114,3819,3.114,3831,4.142,3840,3.463,3841,6.411,3842,6.411,3843,5.286,3844,6.411,3845,3.463,3846,3.463,3847,5.286,3848,3.463,3849,3.463,3850,3.463,3851,3.463,3852,3.463,3853,3.463,3854,5.286,3855,3.463,3856,3.463,3857,3.463,3858,3.463,3859,3.463,3860,3.463,3861,3.463,3862,3.463,3863,5.286,3864,3.463,3865,3.463,3866,3.463,3867,6.411,3868,3.463,3869,3.463,3870,5.286,3871,3.463,3872,5.286,3873,3.463,3874,5.286,3875,3.463,3876,3.463,3877,7.175,3878,5.286,3879,3.463,3880,3.463,3881,3.463,3882,3.463,3883,3.463,3884,3.463,3885,3.463,3886,5.286,3887,3.463,3888,5.286,3889,5.286,3890,3.463,3891,6.411,3892,3.463,3893,3.463,3894,3.463,3895,3.463,3896,3.463,3897,3.463,3898,3.463,3899,3.463,3900,3.463,3901,3.463,3902,3.463,3903,3.463,3904,3.463,3905,3.463,3906,3.463,3907,3.463,3908,3.463,3909,3.463,3910,3.463,3911,3.463,3912,3.463]],["title/classes/TeamCoachLink.html",[0,0.316,2366,3.801]],["body/classes/TeamCoachLink.html",[0,0.496,2,0.404,3,0.031,4,0.027,5,0.027,7,0.51,11,3.535,13,0.179,14,0.494,28,0.356,30,0.393,31,0.005,32,0.625,37,2.303,47,3.837,49,0.886,60,2.14,64,0.057,90,0.063,120,1.012,122,0.759,174,0.003,175,0.003,179,0.519,184,0.711,194,2.59,195,1.376,198,1.296,199,2.25,200,2.057,201,1.418,203,1.605,206,1.329,209,2.173,211,2.156,213,3.29,217,1.787,218,1.517,219,4.196,224,1.207,231,2.249,232,0.836,233,0.427,234,2.949,235,1.576,236,1.218,237,0.546,238,2.127,239,1.496,240,1.878,241,1.189,242,1.329,243,3.059,244,3.879,245,2.232,246,1.559,340,2.185,346,2.282,348,2.668,370,2.232,420,4.105,428,3.536,438,1.693,644,2.336,650,2.282,660,0.997,701,4.934,736,2.453,1306,2.336,1310,2.185,1955,3.219,1956,2.848,1971,3.219,2349,3.39,2350,3.219,2357,5.44,2363,5.44,2366,5.954,2370,4.435,2371,6.647,2372,3.219,2373,3.39,3913,4.326,3914,4.326,3915,4.326]],["title/classes/TemplateInput.html",[0,0.316,57,3.489]],["body/classes/TemplateInput.html",[0,0.555,2,0.6,3,0.046,4,0.04,5,0.04,7,0.526,13,0.266,14,0.647,28,0.397,30,0.391,31,0.004,37,1.746,55,7.072,57,5.573,64,0.071,68,4.785,79,6.67,81,5.039,82,5.039,90,0.046,109,4.785,111,4.785,129,4.527,139,2.639,174,0.003,175,0.003,179,0.98,180,2.04,181,2.71,184,0.794,190,2.115,191,1.353,211,2.822,634,5.803,636,4.092,747,3.556,968,2.892,1558,4.785,1560,5.803,3055,7.34,3916,6.431,3917,6.431,3918,8.161,3919,6.431,3920,6.431,3921,6.431,3922,8.161,3923,6.431,3924,6.431,3925,6.431,3926,6.431,3927,6.431,3928,6.431,3929,6.431]],["title/classes/TermsOfUse.html",[0,0.316,3930,4.004]],["body/classes/TermsOfUse.html",[0,0.34,2,0.512,3,0.039,4,0.034,5,0.034,7,0.449,13,0.227,14,0.584,28,0.463,30,0.415,31,0.004,32,0.577,37,2.409,49,0.808,64,0.063,90,0.052,120,0.933,122,0.963,174,0.003,175,0.003,179,0.659,184,0.926,195,1.254,198,2.487,199,2.443,200,3.947,206,2.55,207,1.008,217,3.43,218,2.581,223,3.31,224,1.289,231,1.951,232,0.987,233,0.541,234,2.681,235,1.367,236,1.546,237,0.693,238,2.511,239,1.898,240,2.384,241,1.509,242,1.686,243,2.654,245,2.832,246,1.372,317,2.305,346,3.883,656,4.286,908,5.476,958,2.896,1740,4.483,2976,5.767,3665,6.62,3930,5.767,3931,7.623,3932,9.729,3933,5.49,3934,5.49,3935,5.49,3936,5.49,3937,5.49,3938,5.49,3939,5.49,3940,4.937,3941,5.49]],["title/modules/TermsOfUseModule.html",[249,1.063,835,3.801]],["body/modules/TermsOfUseModule.html",[0,0.399,3,0.046,4,0.04,5,0.04,31,0.004,49,0.627,64,0.072,78,1.341,90,0.046,174,0.003,175,0.003,235,1.197,237,0.813,249,1.867,251,2.14,252,2.14,253,2.198,254,2.198,255,2.169,256,3.061,257,3.061,262,3.639,263,4.32,265,2.713,266,2.198,267,2.198,269,2.905,273,3.063,274,2.539,275,2.357,277,2.391,835,7.788,908,6.08,909,5.368,3930,5.049,3931,5.049,3940,7.349,3942,5.795,3943,5.795,3944,5.795,3945,6.444,3946,8.245,3947,6.444,3948,6.444,3949,8.172,3950,6.444,3951,5.795,3952,5.795,3953,6.444]],["title/injectables/TermsOfUseService.html",[279,1.233,3946,4.004]],["body/injectables/TermsOfUseService.html",[0,0.335,3,0.038,4,0.034,5,0.034,13,0.224,15,1.95,16,1.87,22,2.485,27,2.59,28,0.429,30,0.341,31,0.005,32,0.553,39,2.519,48,2.736,49,0.943,50,1.695,52,2.811,64,0.065,78,1.125,90,0.038,139,2.977,174,0.003,175,0.003,195,0.817,224,1.092,232,1.105,237,0.682,241,1.486,246,1.351,279,1.759,280,2.036,283,4.549,286,3.059,288,2.394,290,3.528,297,3.642,306,2.919,309,2.389,310,3.532,315,2.674,316,2.163,317,2.27,325,3.059,329,3.604,355,2.522,908,7.21,909,7.668,1616,6.552,2867,4.504,2976,7.43,3930,5.709,3931,7.212,3946,5.709,3951,4.863,3952,4.863,3954,5.407,3955,5.407,3956,5.407,3957,7.286,3958,5.407,3959,7.286,3960,5.407,3961,8.209,3962,5.407,3963,4.863,3964,5.407,3965,5.407,3966,4.863,3967,5.407,3968,5.407,3969,7.286,3970,5.407,3971,5.407,3972,5.407]],["title/modules/TicketCategoriesModule.html",[249,1.063,2696,3.801]],["body/modules/TicketCategoriesModule.html",[0,0.437,3,0.05,4,0.044,5,0.044,31,0.004,49,0.686,64,0.071,78,1.467,90,0.05,174,0.004,175,0.004,235,1.309,237,0.89,249,1.944,251,2.341,252,2.341,253,2.405,254,2.405,255,2.372,256,3.188,257,2.405,265,2.87,266,2.405,267,2.405,269,2.506,275,2.578,277,2.616,2020,4.22,2025,4.64,2696,7.57,3973,6.34,3974,6.34,3975,7.973,3976,7.05,3977,7.05,3978,8.642,3979,7.05,3980,7.773,3981,6.34,3982,7.05]],["title/injectables/TicketCategoriesService.html",[279,1.233,3975,4.004]],["body/injectables/TicketCategoriesService.html",[0,0.258,3,0.03,4,0.026,5,0.026,13,0.172,14,0.48,15,1.5,16,1.438,20,2.646,22,2.067,23,3.481,27,2.155,28,0.438,30,0.346,31,0.005,32,0.549,37,1.129,38,2.245,39,3.015,48,2.773,49,0.812,50,1.718,52,2.849,64,0.064,76,2.3,78,1.261,90,0.03,113,2.725,121,4.163,122,1.379,134,2.969,139,2.701,142,4.163,174,0.002,175,0.002,195,1.08,201,1.363,224,0.948,232,1.313,237,0.525,241,1.143,279,1.463,280,1.566,282,2.598,283,4.053,286,2.544,287,3.127,288,2.268,290,3.144,297,3.245,304,2.881,306,3.272,308,3.197,309,3.159,310,2.016,313,1.94,315,2.057,316,1.664,325,2.544,329,2.998,330,4.139,422,4.384,461,2.194,500,6.191,501,3.259,542,2.564,897,5.522,1399,3.094,2020,5.522,2023,6.855,2025,3.989,2671,6.071,2704,5.957,2713,4.749,2758,3.74,2764,5.049,2765,3.465,2766,3.74,2767,3.74,3247,3.74,3251,3.74,3256,5.451,3975,4.749,3981,3.74,3983,4.159,3984,4.159,3985,4.159,3986,6.061,3987,4.159,3988,9.223,3989,4.159,3990,4.159,3991,4.159,3992,4.159,3993,9.405,3994,4.159,3995,6.061,3996,4.159,3997,6.061,3998,4.159,3999,4.159,4000,4.159,4001,3.465,4002,4.159,4003,4.159,4004,4.159,4005,4.159,4006,4.159,4007,6.061]],["title/classes/TicketCategory.html",[0,0.316,2025,3.363]],["body/classes/TicketCategory.html",[0,0.362,2,0.545,3,0.042,4,0.037,5,0.037,7,0.478,13,0.242,14,0.609,28,0.472,30,0.402,31,0.004,32,0.585,37,1.588,49,0.833,64,0.055,90,0.055,120,0.948,122,1.026,174,0.003,175,0.003,184,0.943,195,1.294,198,2.566,199,2.34,201,2.808,206,2.632,207,1.574,209,2.326,210,2.728,211,2.654,223,3.451,224,1.309,231,2.035,232,1.03,233,0.577,234,2.561,235,1.426,236,1.646,237,0.738,242,1.796,243,2.768,246,1.462,656,4.469,897,4.595,1275,4.245,2020,5.916,2023,5.242,2025,5.052,2136,6.714,2671,5.052,3980,5.26,4008,5.848,4009,5.848,4010,5.848,4011,5.848,4012,5.848,4013,5.848,4014,5.848,4015,5.848]],["title/classes/TicketChild.html",[0,0.316,2786,4.004]],["body/classes/TicketChild.html",[0,0.441,2,0.487,3,0.037,4,0.033,5,0.033,7,0.427,13,0.216,14,0.564,28,0.442,30,0.411,31,0.004,32,0.61,37,2.198,64,0.068,90,0.058,120,0.971,122,0.917,127,5.151,174,0.003,175,0.003,179,0.627,195,0.789,198,1.564,199,2.098,201,1.711,206,1.604,209,2.36,211,1.806,224,1.152,231,1.887,232,0.955,233,0.515,234,2.752,235,1.322,236,1.471,237,0.659,238,2.428,239,1.806,240,2.268,241,1.435,242,1.604,243,2.919,245,2.695,246,1.306,362,1.711,565,3.324,709,4.036,897,3.127,994,3.324,996,4.846,1310,2.638,1507,3.714,1700,4.093,1743,3.714,2020,5.619,2023,3.567,2025,5.329,2037,5.061,2038,4.351,2039,6.744,2040,4.351,2042,6.744,2043,6.744,2044,6.744,2237,4.86,2671,3.438,2683,5.756,2684,3.886,2698,3.886,2699,4.351,2737,4.351,2782,8.441,2783,4.697,2786,6.343,2795,4.697,2796,6.401,2797,4.697,4016,5.223,4017,5.223,4018,5.223,4019,5.223,4020,5.223]],["title/classes/TypesEvent.html",[0,0.316,426,3.801]],["body/classes/TypesEvent.html",[0,0.307,2,0.462,3,0.035,4,0.031,5,0.031,7,0.695,13,0.205,14,0.544,28,0.483,30,0.415,31,0.004,32,0.585,37,2.423,49,0.766,64,0.06,90,0.049,120,0.961,122,0.869,174,0.003,175,0.003,179,0.594,184,0.965,194,4.107,195,1.189,198,2.357,199,2.229,200,3.742,201,2.579,206,2.417,207,1.446,209,2.66,210,4.163,211,3.193,217,2.045,218,1.736,223,2.226,224,1.043,231,1.819,232,0.92,233,0.488,234,2.717,235,1.274,236,1.394,237,0.625,238,2.34,239,1.712,240,2.149,241,1.36,242,1.52,243,1.785,245,2.554,246,1.237,317,3.305,426,5.104,464,6.844,478,9.013,958,2.612,977,3.994,2159,6.168,3272,4.452,3274,4.452,3276,4.452,3277,4.452,3278,4.452,3279,4.452,4021,7.872,4022,7.872,4023,4.951,4024,4.951,4025,4.951,4026,4.951,4027,4.951,4028,4.452,4029,4.951]],["title/modules/TypesEventsModule.html",[249,1.063,393,3.633]],["body/modules/TypesEventsModule.html",[0,0.399,3,0.046,4,0.04,5,0.04,31,0.004,49,0.627,64,0.072,78,1.341,90,0.046,174,0.003,175,0.003,235,1.197,237,0.813,249,1.867,251,2.14,252,2.14,253,2.198,254,2.198,255,2.169,256,3.061,257,3.061,262,3.639,263,4.32,265,2.713,266,2.198,267,2.198,269,2.905,273,3.063,274,2.539,275,2.357,277,2.391,317,3.431,393,7.444,394,4.794,415,7.829,426,4.794,464,4.4,477,5.049,479,4.794,2381,5.368,3288,5.795,4028,7.349,4030,5.795,4031,5.795,4032,6.444,4033,5.795,4034,8.172,4035,5.049,4036,6.444]],["title/injectables/TypesEventsService.html",[279,1.233,415,3.801]],["body/injectables/TypesEventsService.html",[0,0.28,3,0.032,4,0.028,5,0.028,11,2,13,0.187,15,1.632,16,1.565,22,2.197,23,3.413,27,2.29,28,0.449,30,0.421,31,0.005,32,0.56,39,2.825,48,2.867,49,0.84,50,1.776,52,3.06,53,2.538,60,4.667,64,0.066,78,0.942,90,0.032,122,1.13,134,2.905,139,2.792,174,0.003,175,0.003,194,4.891,195,0.973,201,2.111,211,1.565,224,0.994,232,1.238,237,0.571,241,1.244,279,1.555,280,1.705,282,2.541,283,4.215,286,2.705,287,3.324,288,2.218,290,3.269,297,3.375,304,3.062,306,3.478,308,3.398,309,3.313,310,3.123,313,2.111,315,2.239,316,1.811,317,3.625,325,3.149,329,3.186,330,5.579,356,2.239,394,7.02,415,4.793,426,3.368,463,3.771,464,6.443,466,4.071,479,3.368,1152,3.253,1668,6.675,1685,3.547,2158,6.401,3225,4.581,3292,4.071,3295,4.071,3499,5.047,4035,3.547,4037,4.527,4038,6.442,4039,6.442,4040,4.527,4041,4.527,4042,4.527,4043,4.527,4044,4.527,4045,4.527,4046,8.17,4047,6.806,4048,4.527,4049,4.527,4050,4.527,4051,6.442,4052,4.527,4053,4.527,4054,4.527,4055,4.527,4056,6.442]],["title/classes/TypesNotification.html",[0,0.316,4057,4.004]],["body/classes/TypesNotification.html",[0,0.571,2,0.638,3,0.049,4,0.043,5,0.043,7,0.559,13,0.283,14,0.673,28,0.413,30,0.399,31,0.004,32,0.578,49,0.897,64,0.06,90,0.06,120,0.885,122,1.2,174,0.003,175,0.003,184,0.825,195,1.393,207,1.256,223,3.076,224,1.124,231,2.249,232,1.138,233,0.675,234,2.388,235,1.576,236,1.926,237,0.863,243,2.466,246,1.71,1611,5.231,4057,6.647,4058,6.557,4059,9.222,4060,6.84,4061,6.84,4062,6.84,4063,6.152,4064,6.84]],["title/modules/TypesNotificationsModule.html",[249,1.063,836,3.633]],["body/modules/TypesNotificationsModule.html",[0,0.433,3,0.05,4,0.044,5,0.044,31,0.004,49,0.68,64,0.071,78,1.454,90,0.05,174,0.004,175,0.004,235,1.298,237,0.882,249,1.937,251,2.32,252,2.32,253,2.384,254,2.384,255,2.352,256,3.176,257,2.384,265,2.854,266,2.384,267,2.384,269,2.485,275,2.556,277,2.593,317,3.609,836,7.22,912,5.476,1593,6.285,1594,5.199,1596,5.822,1599,5.476,4035,5.476,4057,5.476,4058,4.969,4063,7.731,4065,6.285,4066,6.285,4067,7.956,4068,8.596,4069,6.988]],["title/injectables/TypesNotificationsService.html",[279,1.233,4067,4.004]],["body/injectables/TypesNotificationsService.html",[0,0.391,3,0.045,4,0.04,5,0.04,11,2.791,13,0.262,15,2.278,16,2.185,22,2.753,23,3.519,27,2.869,28,0.432,30,0.262,31,0.004,48,2.098,49,0.614,50,1.299,52,2.753,53,2.489,64,0.069,78,1.314,90,0.045,134,2.869,139,2.043,174,0.003,175,0.003,237,0.797,241,1.736,279,1.948,280,2.379,290,3.748,316,2.528,317,4.064,356,3.125,912,7.34,1599,4.95,1601,5.682,1606,5.682,1610,5.682,1618,5.682,1668,7.365,1685,4.95,3171,6.166,3220,4.95,3222,5.263,3499,6.323,4035,4.95,4057,4.95,4058,6.662,4067,6.323,4070,9.368,4071,6.318,4072,8.07,4073,6.318,4074,6.318,4075,6.318,4076,6.318,4077,6.318]],["title/classes/UpdateActaInput.html",[0,0.316,311,4.257]],["body/classes/UpdateActaInput.html",[0,0.412,2,0.443,3,0.034,4,0.03,5,0.03,7,0.388,13,0.197,14,0.528,28,0.478,30,0.407,31,0.004,32,0.603,41,2.402,49,0.749,50,2.136,64,0.059,90,0.034,120,0.954,174,0.003,175,0.003,179,0.924,180,1.665,181,2.212,184,0.957,190,1.968,191,0.999,195,1.163,196,5.726,197,6.411,199,2.199,200,3.659,201,2.522,202,6.411,204,6.411,205,6.411,207,1.783,209,2.474,224,1.286,232,0.893,233,0.468,238,2.272,239,1.641,282,1.476,294,3.719,311,5.549,314,4.269,362,1.555,633,1.725,660,2.394,737,1.515,1487,2.722,1737,2.301,1895,4.269,1896,4.063,4078,9.943,4079,4.747,4080,4.747,4081,6.661,4082,4.747,4083,4.747,4084,4.747,4085,4.747,4086,4.747,4087,4.747,4088,4.747,4089,4.747,4090,2.504,4091,4.747]],["title/classes/UpdateActivitiesConfigInput.html",[0,0.316,456,4.257]],["body/classes/UpdateActivitiesConfigInput.html",[0,0.536,2,0.426,3,0.032,4,0.029,5,0.029,7,0.373,11,2.863,13,0.189,14,0.514,28,0.45,30,0.413,31,0.004,32,0.552,50,1.687,64,0.062,90,0.032,120,0.964,174,0.003,175,0.003,179,0.778,180,1.62,181,2.152,184,0.9,190,1.529,191,0.961,195,1.138,201,2.469,207,1.652,209,2.046,224,1.192,232,1.011,233,0.45,246,1.62,282,1.42,332,6.017,335,6.44,338,5.888,346,4.569,347,4.569,348,4.646,355,3.825,362,2.687,363,4.608,365,5.078,367,5.078,368,3.577,369,3.577,385,3.803,386,3.118,420,4.266,421,5.828,442,5.078,456,5.399,462,3.577,633,2.123,636,2.905,660,2.297,737,1.457,1487,2.637,1737,3.142,1896,2.814,1909,3.397,1911,3.803,1978,5.399,3136,7.376,3138,7.495,4090,2.408,4092,7.878,4093,6.481,4094,8.661,4095,4.565,4096,10.048,4097,4.565,4098,4.565,4099,4.565,4100,4.565,4101,4.565]],["title/classes/UpdateAnnouncementInput.html",[0,0.316,786,4.257]],["body/classes/UpdateAnnouncementInput.html",[0,0.421,2,0.455,3,0.035,4,0.031,5,0.031,7,0.691,13,0.202,14,0.539,28,0.481,30,0.41,31,0.004,32,0.612,49,0.76,50,2.143,64,0.056,90,0.035,120,0.949,174,0.003,175,0.003,179,0.816,180,1.698,181,2.256,184,0.95,189,4.318,190,1.603,191,1.027,195,1.18,199,2.219,207,1.766,209,1.845,224,1.275,232,0.911,233,0.482,282,1.519,633,1.759,644,4.219,645,7.028,647,5.814,648,6.123,649,7.028,650,4.122,651,4.431,660,2.382,737,1.559,776,3.826,786,5.66,789,4.392,1737,2.367,1914,4.392,1918,4.392,1919,8.269,1920,4.392,1926,4.392,1928,4.392,1929,7.028,4090,2.576,4102,9.996,4103,4.883,4104,4.883,4105,6.795,4106,4.883,4107,4.883,4108,4.883,4109,4.883,4110,4.883]],["title/classes/UpdateApplicantInput.html",[0,0.316,4111,4.595]],["body/classes/UpdateApplicantInput.html",[0,0.454,2,0.684,3,0.052,4,0.046,5,0.046,7,0.6,13,0.304,14,0.702,28,0.357,30,0.304,31,0.004,64,0.063,90,0.052,120,0.849,174,0.004,175,0.004,179,1.063,180,2.214,181,2.941,184,0.714,207,1.348,232,1.276,233,0.724,282,2.283,355,4.131,362,2.902,633,2.293,1032,7.378,1737,3.557,4090,3.871,4111,7.965,4112,7.338,4113,7.338,4114,7.338,4115,7.338,4116,7.338]],["title/classes/UpdateApplicantStateInput.html",[0,0.316,1039,4.257]],["body/classes/UpdateApplicantStateInput.html",[0,0.557,2,0.53,3,0.04,4,0.036,5,0.056,7,0.735,11,2.511,13,0.235,14,0.597,28,0.438,30,0.418,31,0.004,32,0.603,49,0.733,64,0.067,90,0.04,93,3.27,120,0.956,174,0.003,175,0.003,179,1.014,180,2.112,181,2.805,184,0.875,189,4.404,190,1.34,191,1.196,232,1.133,233,0.56,336,4.457,633,2.187,634,5.356,636,3.616,656,3.309,713,3.068,744,5.547,745,4.734,747,3.143,748,3.616,749,2.932,750,4.453,952,5.956,995,5.77,996,4.509,1002,5.144,1003,3.651,1017,4.734,1031,7.797,1032,7.797,1033,5.111,1038,5.604,1039,6.275,2073,6.275,4117,5.683,4118,5.683,4119,5.683,4120,5.683,4121,5.683]],["title/classes/UpdateConfigEvaluationInput.html",[0,0.316,1553,4.257]],["body/classes/UpdateConfigEvaluationInput.html",[0,0.456,2,0.513,3,0.039,4,0.034,5,0.034,7,0.726,13,0.228,14,0.584,28,0.463,30,0.395,31,0.004,32,0.577,50,1.96,64,0.059,90,0.039,120,0.934,174,0.003,175,0.003,179,0.885,180,1.842,181,2.447,184,0.927,190,1.738,191,1.157,195,1.255,199,2.3,201,2.723,207,1.7,209,2.257,224,1.227,232,0.988,233,0.542,282,1.711,362,1.802,364,4.37,633,1.908,644,4.487,650,4.384,660,2.333,737,1.755,1487,2.716,1500,7.241,1507,5.91,1541,5.774,1553,6.139,1555,4.946,1737,3.572,1896,4.019,1933,4.946,4090,2.901,4122,9.733,4123,5.499,4124,5.499,4125,5.499,4126,5.499,4127,5.499,4128,5.499]],["title/classes/UpdateConfigurationAppInput.html",[0,0.316,1678,4.257]],["body/classes/UpdateConfigurationAppInput.html",[0,0.462,2,0.523,3,0.04,4,0.035,5,0.035,7,0.458,13,0.232,14,0.592,28,0.466,30,0.397,31,0.004,32,0.543,41,3.582,50,1.535,64,0.06,90,0.04,120,0.938,162,5.159,174,0.003,175,0.003,179,1.007,181,2.478,184,0.932,190,1.76,191,1.179,195,1.267,207,1.711,224,1.235,232,1.001,233,0.553,238,3.178,239,1.938,362,1.836,633,1.932,660,2.341,737,1.789,1487,2.731,1635,7.662,1638,7.546,1639,7.546,1640,6.242,1641,5.73,1642,7.546,1678,6.217,1737,2.717,1896,4.045,4129,9.779,4130,5.604,4131,5.604,4132,5.604,4133,5.604,4134,5.604,4135,5.604,4136,5.604]],["title/classes/UpdateContentInput.html",[0,0.316,1814,4.004]],["body/classes/UpdateContentInput.html",[0,0.474,2,0.542,3,0.041,4,0.036,5,0.036,7,0.475,13,0.241,14,0.606,28,0.459,30,0.391,31,0.004,32,0.576,41,2.758,50,2.06,64,0.065,90,0.041,120,0.929,174,0.003,175,0.003,179,1.026,180,1.912,181,2.54,184,0.917,190,1.804,191,1.224,195,1.291,200,4.062,201,2.8,207,1.667,209,2.465,224,1.203,232,1.026,233,0.574,238,2.609,239,2.011,282,1.809,362,1.906,633,1.98,660,2.308,737,1.857,1487,2.688,1737,2.82,1740,4.613,1744,6.077,1799,4.557,1814,5.993,1816,5.231,1896,3.942,1947,5.231,4090,3.068,4137,9.682,4138,5.817,4139,5.817,4140,5.817,4141,5.817,4142,5.817,4143,5.817]],["title/classes/UpdateEventInput.html",[0,0.316,4144,4.595]],["body/classes/UpdateEventInput.html",[0,0.403,2,0.428,3,0.033,4,0.029,5,0.029,7,0.672,13,0.19,14,0.515,28,0.48,30,0.409,31,0.004,32,0.552,41,2.344,49,0.735,50,2.107,64,0.058,90,0.033,120,0.957,174,0.003,175,0.003,179,0.907,180,1.625,181,2.158,184,0.961,190,1.533,191,0.965,195,1.141,199,2.175,200,3.59,201,2.475,207,1.793,209,2.446,224,1.294,232,0.872,233,0.452,238,2.217,239,1.585,282,1.426,346,3.984,348,4.656,362,1.502,633,1.683,644,4.077,650,3.984,660,2.401,737,1.463,1487,2.815,1737,2.222,1896,4.239,1952,3.819,1954,3.26,1956,4.971,1961,6.845,1965,7.39,1968,7.39,2350,5.619,3225,3.26,4090,2.419,4144,5.846,4145,9.973,4146,4.585,4147,4.585,4148,4.585,4149,4.585,4150,4.585,4151,4.585,4152,4.585,4153,4.585,4154,4.585,4155,4.585,4156,4.585,4157,4.585]],["title/classes/UpdateExpertInput.html",[0,0.316,4158,4.595]],["body/classes/UpdateExpertInput.html",[0,0.514,2,0.616,3,0.047,4,0.041,5,0.041,7,0.54,13,0.273,14,0.658,28,0.441,30,0.376,31,0.004,32,0.6,50,1.958,64,0.059,90,0.047,120,0.913,174,0.003,175,0.003,179,0.996,180,2.074,184,0.883,190,1.957,191,1.389,195,1.371,207,1.524,224,1.1,232,1.113,233,0.651,633,2.148,660,2.194,735,3.799,737,2.107,1313,6.197,1487,2.586,1896,3.603,2390,7.11,4158,7.463,4159,9.52,4160,6.602,4161,6.602,4162,6.602,4163,6.602]],["title/classes/UpdateFormInput.html",[0,0.316,2639,4.257]],["body/classes/UpdateFormInput.html",[0,0.51,2,0.431,3,0.033,4,0.029,5,0.029,7,0.674,11,2.04,13,0.191,14,0.518,28,0.476,30,0.414,31,0.004,32,0.616,49,0.802,50,2.034,64,0.062,90,0.033,93,2.005,120,0.966,174,0.003,175,0.003,179,0.784,180,1.633,184,0.951,190,1.541,191,0.972,195,1.145,199,1.577,207,1.705,209,1.774,224,1.257,232,0.876,233,0.455,246,1.154,336,4,504,3.75,633,1.963,634,4.646,636,2.938,641,3.292,642,5.94,660,2.337,737,1.474,747,2.553,1451,3.847,1487,2.574,1896,3.777,1974,4.153,1975,6.316,1976,5.94,1977,5.641,1993,4.153,1994,5.245,1999,4.153,2000,3.618,2001,3.039,2012,7.823,2454,5.876,2455,4.153,2639,5.442,2641,4.153,3138,7.246,4164,9.89,4165,4.618,4166,4.618,4167,4.618,4168,8.698,4169,4.618,4170,4.618,4171,4.618,4172,4.618,4173,4.618,4174,4.618,4175,4.618,4176,4.618,4177,4.618]],["title/classes/UpdateFormTagInput.html",[0,0.316,2598,4.257]],["body/classes/UpdateFormTagInput.html",[0,0.534,2,0.656,3,0.05,4,0.044,5,0.044,7,0.575,13,0.291,14,0.684,28,0.42,30,0.357,31,0.004,32,0.583,49,0.908,64,0.061,90,0.05,120,0.896,174,0.004,175,0.004,179,1.036,184,0.839,190,2.202,191,1.48,195,1.41,232,1.158,233,0.694,624,4.358,633,2.235,646,3.623,737,2.755,1481,5.437,2017,6.326,2018,6.326,2598,7.19,4178,9.337,4179,7.034]],["title/classes/UpdateHelpDeskInput.html",[0,0.316,2723,4.257]],["body/classes/UpdateHelpDeskInput.html",[0,0.49,2,0.571,3,0.044,4,0.038,5,0.038,7,0.501,13,0.254,14,0.627,28,0.426,30,0.384,31,0.004,32,0.559,50,1.905,64,0.07,90,0.044,120,0.888,174,0.003,175,0.003,179,1.052,180,1.977,181,2.627,184,0.852,190,1.866,191,1.289,195,1.324,207,1.453,224,1.048,232,1.061,233,0.604,282,1.905,362,2.007,633,2.048,660,2.135,737,1.955,747,3.387,889,2.774,890,2.09,897,5.74,994,5.576,1487,2.497,1737,2.97,1743,6.231,1896,2.66,2019,4.8,2020,5.544,2022,5.509,2029,5.509,2034,5.509,2037,4.356,2683,4.356,2684,4.558,2685,5.509,2700,5.103,2701,5.103,2723,6.59,2727,5.509,2786,6.866,4090,3.232,4180,9.261,4181,6.126,4182,6.126,4183,6.126]],["title/classes/UpdateIntegrationInput.html",[0,0.316,4184,4.595]],["body/classes/UpdateIntegrationInput.html",[0,0.452,2,0.681,3,0.052,4,0.046,5,0.046,7,0.597,13,0.303,14,0.7,28,0.355,30,0.303,31,0.004,64,0.063,90,0.052,120,0.847,174,0.004,175,0.004,179,1.06,180,2.207,181,2.932,184,0.71,207,1.342,232,1.273,233,0.72,282,2.272,355,4.119,362,2.894,633,2.287,1737,4.281,2047,6.92,2049,6.57,2855,6.57,4090,3.854,4184,7.943,4185,8.832,4186,7.305]],["title/classes/UpdateNotificationInput.html",[0,0.316,3212,4.257]],["body/classes/UpdateNotificationInput.html",[0,0.552,2,0.593,3,0.045,4,0.04,5,0.04,7,0.52,13,0.263,14,0.642,28,0.434,30,0.369,31,0.004,32,0.52,50,1.931,64,0.069,90,0.045,120,0.901,140,3.806,174,0.003,175,0.003,179,0.972,180,2.025,181,2.689,184,0.867,189,2.91,190,1.91,191,1.704,195,1.347,201,2.921,207,1.167,209,2.421,224,0.842,232,1.086,233,0.627,282,1.977,362,2.082,633,2.097,660,1.867,737,2.028,749,3.279,1487,2.541,1621,5.294,1737,3.926,1896,2.759,1898,3.352,1943,5.294,2067,6.347,2069,6.088,2079,4.979,3212,6.748,4090,3.352,4187,9.389,4188,6.355,4189,6.355,4190,6.355,4191,6.355]],["title/classes/UpdateParticipationEventInput.html",[0,0.316,3306,4.257]],["body/classes/UpdateParticipationEventInput.html",[0,0.514,2,0.616,3,0.047,4,0.041,5,0.041,7,0.54,13,0.273,14,0.658,28,0.404,30,0.344,31,0.004,32,0.484,41,2.992,50,1.707,64,0.068,90,0.047,120,0.87,174,0.003,175,0.003,179,1.089,180,2.074,181,2.755,184,0.807,190,1.957,191,1.389,195,1.371,207,1.212,224,0.875,232,1.113,233,0.651,238,2.83,239,2.283,282,2.054,362,2.163,629,5.146,633,2.148,660,1.913,737,2.107,1487,2.365,1737,4.022,1896,2.867,1954,4.695,2080,6.502,2081,6.752,2083,7.083,3225,4.695,3306,6.913,4090,3.483,4192,8.161,4193,6.602,4194,6.602]],["title/classes/UpdatePhaseInput.html",[0,0.316,4195,4.595]],["body/classes/UpdatePhaseInput.html",[0,0.442,2,0.49,3,0.037,4,0.033,5,0.033,7,0.712,13,0.361,14,0.566,28,0.476,30,0.405,31,0.004,32,0.603,49,0.789,50,2.125,64,0.051,90,0.037,120,0.952,174,0.003,175,0.003,179,0.857,180,1.785,181,2.371,184,0.952,190,1.684,191,1.104,195,1.226,199,2.269,207,1.766,224,1.274,232,0.958,233,0.518,355,3.33,362,2.34,633,1.849,644,4.381,647,6.038,650,4.281,651,4.602,660,2.382,737,1.675,1487,2.789,1896,4.175,2086,4.72,2090,4.72,2091,4.72,2092,4.72,2095,4.72,2096,4.72,2097,4.72,2098,4.72,2099,4.72,4195,6.422,4196,9.923]],["title/classes/UpdateResourceInput.html",[0,0.316,3454,4.257]],["body/classes/UpdateResourceInput.html",[0,0.483,2,0.559,3,0.043,4,0.037,5,0.037,7,0.49,13,0.248,14,0.618,28,0.463,30,0.394,31,0.004,32,0.555,41,2.811,49,0.843,50,1.889,64,0.065,90,0.043,120,0.936,174,0.003,175,0.003,179,1.041,180,1.949,181,2.589,184,0.926,190,2.045,191,1.26,195,1.309,200,4.121,201,2.84,207,1.432,209,2.65,224,1.033,232,1.046,233,0.591,238,2.659,239,2.071,282,1.863,362,1.962,633,2.019,660,2.116,737,2.489,1487,2.617,1737,2.903,1744,6.164,1896,3.385,1898,3.16,2100,4.693,2102,5.386,2103,5.386,2104,5.386,2106,5.386,2107,5.386,2108,5.386,3454,6.495,3456,5.386,4090,3.16,4197,9.76,4198,5.989]],["title/classes/UpdateResourcesReplyInput.html",[0,0.316,4199,4.595]],["body/classes/UpdateResourcesReplyInput.html",[0,0.465,2,0.528,3,0.04,4,0.035,5,0.035,7,0.463,13,0.235,14,0.596,28,0.455,30,0.387,31,0.004,32,0.581,41,2.71,50,2.048,64,0.064,90,0.04,120,0.922,140,3.6,174,0.003,175,0.003,179,1.012,180,1.878,181,2.495,184,0.909,190,1.773,191,1.192,195,1.274,207,1.65,209,2.29,224,1.19,232,1.008,233,0.558,238,2.563,239,1.958,282,1.762,362,1.856,472,4.009,633,1.946,660,2.295,737,1.808,1487,2.664,1737,3.643,1745,5.709,1778,6.325,1896,3.9,2110,6.26,2112,5.093,3419,7.585,3420,7.585,4090,2.988,4199,6.759,4200,9.609,4201,5.663,4202,5.663,4203,5.663,4204,5.663,4205,5.663,4206,5.663]],["title/classes/UpdateRolInput.html",[0,0.316,3501,4.257]],["body/classes/UpdateRolInput.html",[0,0.509,2,0.606,3,0.046,4,0.041,5,0.041,7,0.531,13,0.269,14,0.651,28,0.438,30,0.373,31,0.004,32,0.598,49,0.876,50,1.689,64,0.064,90,0.046,120,0.908,174,0.003,175,0.003,179,0.986,180,2.053,181,2.727,184,0.876,190,1.937,191,1.367,195,1.361,207,1.508,224,1.088,232,1.102,233,0.641,282,2.021,362,2.128,633,2.126,660,2.182,737,2.073,1047,6.151,1487,2.567,1737,3.149,1896,3.566,2120,5.09,2122,5.842,3501,6.842,3503,5.842,4090,3.427,4207,9.465,4208,6.496,4209,6.496,4210,6.496,4211,6.496]],["title/classes/UpdateSiteInput.html",[0,0.316,1738,4.004]],["body/classes/UpdateSiteInput.html",[0,0.505,2,0.42,3,0.032,4,0.028,5,0.028,7,0.704,13,0.186,14,0.509,28,0.473,30,0.403,31,0.005,32,0.627,41,2.314,47,2.786,49,0.838,50,1.676,61,2.695,64,0.058,90,0.053,115,2.553,120,1.003,174,0.004,175,0.003,179,0.898,184,0.946,190,2.294,191,0.947,195,1.129,201,2.45,207,1.178,209,2.03,224,0.991,232,0.861,233,0.444,238,2.55,239,1.557,246,1.125,282,1.4,362,1.475,624,3.24,633,2.11,651,4.24,660,1.986,737,1.437,1487,2.833,1641,3.074,1712,5.858,1719,5.562,1720,5.562,1721,5.562,1722,4.774,1724,5.562,1727,6.385,1728,8.85,1729,3.75,1730,4.048,1735,3.349,1736,3.527,1737,2.182,1738,5.027,1739,6.724,1896,2.786,1898,4.862,2125,4.048,2126,4.048,2127,4.048,2128,4.048,2129,4.048,2130,4.048,2131,4.048,2132,4.048,4212,4.502,4213,4.502]],["title/classes/UpdateStageInput.html",[0,0.316,3669,4.257]],["body/classes/UpdateStageInput.html",[0,0.439,2,0.484,3,0.037,4,0.032,5,0.032,7,0.709,13,0.359,14,0.562,28,0.475,30,0.404,31,0.004,32,0.61,49,0.785,50,2.122,64,0.057,90,0.037,120,0.949,174,0.003,175,0.003,179,0.851,184,0.949,190,1.671,191,1.092,195,1.219,201,2.644,207,1.761,209,2.191,224,1.271,232,0.95,233,0.512,282,1.614,355,3.305,362,2.322,624,3.578,633,1.835,660,2.378,737,1.656,1487,2.782,1737,2.516,1896,4.163,2133,4.066,2135,4.667,2136,6.322,2137,6.721,2138,6.003,3669,5.903,3671,4.667,4090,2.738,4214,9.899,4215,5.19,4216,5.19,4217,5.19,4218,5.19,4219,5.19,4220,5.19,4221,5.19,4222,5.19,4223,5.19]],["title/classes/UpdateTableConfigInput.html",[0,0.316,4224,4.595]],["body/classes/UpdateTableConfigInput.html",[0,0.485,2,0.562,3,0.043,4,0.038,5,0.038,7,0.492,13,0.249,14,0.62,28,0.448,30,0.395,31,0.004,32,0.556,49,0.845,50,2.01,64,0.065,90,0.043,120,0.915,174,0.003,175,0.003,179,1.043,184,0.895,190,2.249,191,1.267,195,1.313,207,1.596,224,1.152,232,1.05,233,0.594,622,5.031,624,3.951,633,2.026,660,2.253,737,1.922,889,3.047,890,2.965,1395,7.095,1472,5.935,1487,2.622,1492,6.467,1497,4.481,1498,4.113,1909,4.481,1911,5.017,2149,5.417,3784,7.817,4092,7.945,4224,7.037,4225,8.692,4226,6.023,4227,6.023]],["title/classes/UpdateTermsOfUseInput.html",[0,0.316,3961,4.257]],["body/classes/UpdateTermsOfUseInput.html",[0,0.485,2,0.563,3,0.043,4,0.038,5,0.038,7,0.493,13,0.25,14,0.621,28,0.448,30,0.381,31,0.004,32,0.589,41,2.825,49,0.846,50,1.894,64,0.065,90,0.043,120,0.915,174,0.003,175,0.003,179,1.044,184,0.896,190,1.848,191,1.27,195,1.314,200,4.135,207,1.598,224,1.153,232,1.051,233,0.595,238,2.672,239,2.087,282,1.877,362,1.977,624,3.956,633,2.028,660,2.254,737,1.926,908,7.276,1487,2.624,1737,2.925,1740,4.696,1896,3.777,3931,7.477,3961,6.526,3963,5.427,3966,5.427,4228,9.542,4229,6.034,4230,6.034,4231,6.034,4232,6.034,4233,6.034]],["title/classes/UpdateTypesEventInput.html",[0,0.316,4047,4.257]],["body/classes/UpdateTypesEventInput.html",[0,0.482,2,0.557,3,0.042,4,0.037,5,0.037,7,0.488,13,0.247,14,0.617,28,0.446,30,0.38,31,0.004,32,0.454,41,2.804,50,2.005,64,0.065,90,0.042,120,0.912,174,0.003,175,0.003,179,1.039,180,1.944,181,2.582,184,0.892,190,1.834,191,1.256,195,1.307,200,4.113,201,2.835,207,1.589,209,2.647,211,2.063,224,1.031,232,1.043,233,0.588,238,2.653,239,2.063,282,1.856,317,4.093,362,1.955,464,6.493,633,2.014,660,2.247,737,1.905,1487,2.613,1737,2.893,1896,3.377,1954,4.243,2158,4.675,2159,6.78,2160,5.367,3225,4.243,4047,6.479,4090,3.148,4192,8.552,4234,5.967,4235,5.967,4236,5.967,4237,5.967,4238,5.967]],["title/classes/UpdateUserConfigInput.html",[0,0.316,4239,4.257]],["body/classes/UpdateUserConfigInput.html",[0,0.519,2,0.626,3,0.048,4,0.042,5,0.042,7,0.549,13,0.278,14,0.665,28,0.445,30,0.379,31,0.004,32,0.586,64,0.065,90,0.048,120,0.919,174,0.003,175,0.003,179,1.098,184,0.889,190,2.259,191,1.412,195,1.381,233,0.662,238,2.86,239,2.321,438,2.6,624,4.234,633,2.171,737,2.918,1145,5.818,1664,5.17,1909,4.994,3171,6.018,4092,7.978,4239,6.984,4240,6.712,4241,6.712,4242,6.712]],["title/classes/UpdateUserInput.html",[0,0.316,4243,4.595]],["body/classes/UpdateUserInput.html",[0,0.457,2,0.515,3,0.039,4,0.035,5,0.035,7,0.451,13,0.229,14,0.586,28,0.474,30,0.403,31,0.004,32,0.614,41,2.663,47,3.615,50,1.829,64,0.059,90,0.039,120,0.95,174,0.003,175,0.003,179,0.999,184,0.947,190,1.742,191,1.161,195,1.258,207,1.752,224,1.264,232,0.991,233,0.544,238,2.519,239,1.908,523,6.194,624,3.73,633,1.912,660,2.371,737,1.761,1047,5.685,1145,5.297,1180,6.194,1487,2.776,1896,4.141,2163,4.963,2164,6.935,2167,4.963,2169,4.963,4243,6.642,4244,9.899,4245,5.518,4246,5.518,4247,5.518,4248,5.518,4249,5.518]],["title/classes/User.html",[0,0.316,438,1.387]],["body/classes/User.html",[0,0.228,2,0.344,3,0.026,4,0.023,5,0.023,7,0.804,13,0.153,14,0.44,28,0.474,30,0.416,31,0.005,32,0.601,37,2.157,47,2.893,49,0.359,50,1.717,64,0.059,90,0.039,91,2.965,120,0.951,122,0.647,174,0.002,175,0.002,179,0.443,183,4.125,184,0.949,195,1.006,198,1.995,199,2.331,206,2.046,207,1.754,209,2.419,217,1.523,218,2.336,219,2.743,224,1.33,231,1.47,232,0.994,233,0.364,234,2.719,235,1.03,236,1.038,237,0.465,238,1.891,239,1.275,240,1.601,241,1.014,242,1.133,243,2.672,244,1.788,245,1.903,246,0.922,288,1.506,366,3.052,438,2.593,455,2.539,474,3.597,475,2.04,476,2.04,521,2.347,523,4.957,652,3.051,654,2.184,656,4.859,660,2.202,661,3.066,695,3.317,709,2.091,714,2.208,719,3.061,980,2.744,1046,3.528,1047,4.55,1075,4.125,1115,4.282,1145,4.24,1180,4.957,1193,5.551,1310,2.8,1317,3.787,1692,2.623,1747,2.744,1996,6.664,2164,5.551,2555,4.345,2806,2.89,2901,4.987,3112,5.992,3317,5.551,4250,3.688,4251,3.688,4252,3.688,4253,3.688,4254,3.688,4255,5.545,4256,3.688,4257,5.545,4258,5.545,4259,3.688,4260,3.688,4261,3.688,4262,3.688,4263,3.688,4264,3.688,4265,3.688,4266,3.688,4267,3.688,4268,3.688,4269,3.688,4270,3.688,4271,3.317,4272,3.688,4273,3.688,4274,3.073,4275,3.317,4276,3.688]],["title/classes/UserConfig.html",[0,0.316,4277,4.004]],["body/classes/UserConfig.html",[0,0.394,2,0.594,3,0.045,4,0.04,5,0.04,7,0.521,13,0.264,14,0.643,28,0.434,30,0.389,31,0.004,32,0.566,64,0.067,90,0.058,120,0.901,122,1.117,162,4.278,174,0.003,175,0.003,179,0.764,184,0.868,195,1.348,207,1.169,217,2.63,218,2.232,223,2.863,224,1.075,231,2.15,232,1.088,233,0.628,234,2.512,235,1.506,236,1.793,237,0.803,238,2.766,239,2.202,240,2.765,241,1.75,243,2.296,245,3.285,246,1.592,334,4.738,1046,5.16,1145,5.678,1664,5.072,3171,6.387,4277,6.355,4278,9.396,4279,8.11,4280,8.11,4281,6.368,4282,6.368,4283,6.368,4284,5.727,4285,6.368]],["title/modules/UserConfigModule.html",[249,1.063,837,3.801]],["body/modules/UserConfigModule.html",[0,0.406,3,0.047,4,0.041,5,0.041,31,0.004,49,0.638,64,0.072,78,1.365,90,0.047,174,0.003,175,0.003,235,1.219,237,0.828,249,1.883,251,2.179,252,2.179,253,2.238,254,2.238,255,2.208,256,3.087,257,2.238,262,3.656,265,2.745,266,2.238,267,2.238,269,2.939,274,2.585,275,2.4,277,2.435,380,5.902,382,4.882,384,5.466,386,4.481,438,2.244,837,7.762,911,5.466,913,4.481,1586,6.164,1591,4.175,1592,4.046,1664,3.542,4277,5.142,4284,7.434,4286,5.902,4287,6.562,4288,5.902,4289,7.833,4290,8.266,4291,5.142,4292,6.562]],["title/injectables/UserConfigService.html",[279,1.233,4289,4.004]],["body/injectables/UserConfigService.html",[0,0.283,3,0.033,4,0.029,5,0.029,13,0.19,15,2.341,16,2.245,22,2.215,23,3.47,27,2.309,28,0.399,30,0.34,31,0.005,32,0.525,48,2.727,49,0.799,50,1.689,52,2.574,53,2.973,64,0.068,78,0.952,90,0.033,91,1.832,93,2.819,122,1.625,134,2.683,139,2.995,162,2.415,174,0.003,175,0.003,195,0.692,237,0.578,241,1.258,279,1.567,280,1.724,282,2.554,286,2.726,288,2.23,290,3.286,297,2.682,309,2.869,315,2.264,316,1.832,325,1.922,364,4.252,381,1.861,386,3.126,399,3.814,438,2.749,460,2.596,462,3.587,482,2.022,486,2.823,657,3.587,666,4.117,911,7.223,976,2.741,1145,5.225,1590,6.729,1591,2.913,1592,2.823,1594,3.406,1664,4.681,2212,5.088,3171,3.013,3220,5.088,3221,3.814,3222,3.814,4058,3.255,4239,7.502,4277,3.587,4289,5.088,4291,3.587,4293,4.578,4294,4.578,4295,6.494,4296,6.494,4297,4.578,4298,5.84,4299,4.578,4300,6.494,4301,4.578,4302,6.494,4303,4.578,4304,4.578,4305,4.578,4306,4.578,4307,4.578,4308,4.578,4309,4.578,4310,4.578,4311,4.578,4312,4.578,4313,4.578,4314,4.578,4315,4.578,4316,7.546,4317,4.578,4318,6.494,4319,4.578,4320,7.546,4321,4.578,4322,4.578,4323,4.578,4324,4.578,4325,6.494,4326,4.578,4327,4.578,4328,6.494,4329,4.578,4330,4.578,4331,4.578,4332,4.578]],["title/classes/UserLog.html",[0,0.316,4333,4.004]],["body/classes/UserLog.html",[0,0.365,2,0.549,3,0.042,4,0.037,5,0.037,7,0.809,13,0.244,14,0.682,28,0.444,30,0.402,31,0.004,32,0.45,64,0.061,90,0.055,91,3.086,120,0.908,122,1.034,174,0.003,175,0.003,179,0.707,184,0.887,195,1.299,198,2.575,199,2.474,206,2.641,207,1.675,224,0.781,231,2.045,232,1.034,233,0.581,234,2.171,235,1.433,236,1.659,237,0.743,242,1.809,246,1.472,288,2.094,366,3.337,629,4.876,654,3.038,719,3.186,889,2.704,890,2.933,968,3.468,976,4.617,977,5.312,978,4.383,1046,4.908,1664,5.112,4001,6.425,4333,6.043,4334,9.47,4335,5.891,4336,5.891,4337,5.891,4338,5.891,4339,5.891,4340,5.298,4341,5.891]],["title/modules/UserLogModule.html",[249,1.063,838,3.251]],["body/modules/UserLogModule.html",[0,0.391,3,0.045,4,0.04,5,0.04,31,0.004,49,0.614,64,0.071,78,1.314,90,0.045,174,0.003,175,0.003,235,1.173,237,0.797,249,1.85,251,2.098,252,2.098,253,2.155,254,2.155,255,2.126,256,3.033,257,3.033,262,3.621,263,4.298,265,2.679,266,2.155,267,2.155,269,2.869,273,3.003,274,2.489,275,2.311,277,2.344,381,3.614,391,3.494,438,2.191,818,4.02,828,4.158,838,6.641,894,3.895,1664,3.411,1670,7.166,1681,4.95,4291,4.95,4333,4.95,4340,7.257,4342,5.682,4343,5.682,4344,5.682,4345,6.318,4346,6.318,4347,8.07,4348,6.318,4349,5.682,4350,6.318]],["title/injectables/UserLogService.html",[279,1.233,1670,3.489]],["body/injectables/UserLogService.html",[0,0.178,3,0.02,4,0.018,5,0.018,13,0.236,15,1.039,16,0.996,22,1.562,23,3.008,27,1.628,28,0.438,30,0.359,31,0.005,32,0.562,38,2.473,39,3.203,41,2.056,48,2.879,49,0.843,50,1.784,52,3.019,53,2.246,64,0.056,78,0.599,90,0.02,91,1.153,122,1.604,129,3.28,134,2.027,139,2.862,174,0.002,175,0.002,198,1.372,199,2.262,224,0.861,232,0.614,237,0.364,241,0.792,279,1.106,280,1.085,282,2.348,283,3.351,286,1.923,287,2.363,288,1.244,290,2.599,297,3.909,304,2.177,306,2.473,309,2.023,313,1.344,316,1.153,317,1.21,325,2.727,329,1.425,343,2.049,356,3.506,438,2.73,540,2.4,629,1.634,669,6.435,773,4.575,790,1.776,894,5.637,1046,4.803,1148,6.375,1310,2.879,1357,3.753,1462,5.127,1551,2.591,1566,2.591,1567,2.591,1568,2.591,1569,2.257,1570,2.591,1571,2.144,1572,2.4,1573,2.591,1574,2.144,1575,2.591,1576,2.591,1577,7.387,1578,4.119,1579,2.591,1580,2.591,1581,4.119,1582,2.4,1583,5.411,1584,5.842,1664,4.936,1670,3.128,1745,3.319,2171,5.905,2179,2.257,2706,4.119,2867,2.4,3072,3.589,3167,5.127,3238,5.127,3242,5.905,3418,4.467,4001,3.816,4291,2.257,4333,2.257,4349,2.591,4351,2.881,4352,6.496,4353,4.58,4354,4.58,4355,4.58,4356,4.58,4357,4.58,4358,2.881,4359,2.881,4360,4.58,4361,4.58,4362,2.881,4363,8.213,4364,2.881,4365,4.58,4366,2.881,4367,2.881,4368,2.881,4369,6.496,4370,5.701,4371,7.118,4372,4.58,4373,2.881,4374,4.58,4375,2.881,4376,4.119,4377,2.881,4378,4.58,4379,2.881,4380,4.58,4381,2.881,4382,4.58,4383,2.881,4384,2.881,4385,2.881,4386,5.127,4387,2.881,4388,2.881,4389,2.881,4390,2.881,4391,2.881,4392,2.881,4393,2.881,4394,2.881,4395,6.496,4396,5.701,4397,4.58,4398,5.701,4399,2.881,4400,2.881,4401,5.701,4402,5.701,4403,5.701,4404,5.701,4405,2.881,4406,5.842,4407,6.496,4408,4.58,4409,4.58,4410,4.58,4411,4.58,4412,4.58,4413,4.58,4414,4.58,4415,2.881,4416,4.58,4417,2.881,4418,4.58,4419,4.119,4420,4.58,4421,5.127,4422,4.58,4423,2.881,4424,2.881,4425,4.58,4426,3.816,4427,2.881,4428,5.701,4429,2.881]],["title/modules/UsersModule.html",[249,1.063,389,2.429]],["body/modules/UsersModule.html",[0,0.387,3,0.044,4,0.039,5,0.039,31,0.004,49,0.609,64,0.074,78,1.302,90,0.044,174,0.003,175,0.003,235,1.162,237,0.789,249,1.841,251,2.077,252,2.077,253,2.134,254,2.134,255,2.105,256,3.019,257,3.019,262,2.933,265,2.663,266,2.134,267,2.134,269,2.851,274,2.465,275,2.288,277,2.322,381,3.923,389,4.882,413,7.157,438,1.699,820,4.801,826,4.801,830,7.021,838,5.103,894,3.858,895,4.655,1664,3.378,2347,4.449,2387,4.449,4275,7.212,4430,5.627,4431,6.257,4432,5.627,4433,5.627,4434,6.257,4435,6.257,4436,8.019,4437,6.257,4438,5.627,4439,6.257,4440,6.257]],["title/injectables/UsersService.html",[279,1.233,413,3.489]],["body/injectables/UsersService.html",[0,0.145,3,0.017,4,0.015,5,0.015,13,0.097,15,2.295,16,2.201,19,3.031,22,1.32,23,3.642,24,2.751,27,1.375,28,0.434,30,0.395,31,0.005,32,0.574,39,2.371,47,2.495,48,2.921,49,0.855,50,1.809,52,3,53,3.465,59,3.657,64,0.061,78,0.487,90,0.017,113,2.862,121,1.362,122,1.604,128,1.598,131,1.598,134,3.34,139,2.955,140,2.111,142,1.362,168,2.316,174,0.002,175,0.002,195,0.584,209,1.343,211,0.809,224,0.655,232,1.018,237,0.295,241,0.643,279,0.934,280,0.881,282,1.788,286,1.624,288,1.97,290,2.299,297,3.813,303,4.362,309,2.185,316,0.936,325,2.413,329,1.157,381,0.951,413,2.642,430,1.112,438,2.77,450,2.642,460,1.327,461,1.234,486,3.05,500,1.54,504,1.157,521,2.462,523,2.878,542,2.386,677,3.48,680,3.48,683,1.833,685,3.68,701,2.386,724,1.54,749,1.207,794,2.878,804,2.104,894,1.443,903,1.949,904,1.949,1003,1.134,1046,5.406,1097,2.547,1115,3.391,1132,3.48,1142,3.48,1145,5.874,1190,2.104,1275,4.698,1310,3.214,1322,3.68,1338,5.101,1346,3.031,1357,4.776,1571,1.741,1572,3.223,1664,1.263,1670,5.182,1681,1.833,1697,5.302,1698,2.104,1784,3.48,1805,3.48,1857,3.876,1976,3.031,2069,1.598,2075,1.664,2161,1.949,2244,4.994,2427,4.787,2555,3.031,2643,2.104,2708,4.526,2731,3.223,2732,2.104,2773,1.949,2775,4.449,2776,2.104,2778,2.104,2780,2.104,2863,1.949,2973,2.642,3042,4.449,3072,1.833,3074,2.104,3097,1.833,3242,3.223,3317,1.949,3482,5.398,3557,2.104,4298,3.48,4421,2.104,4426,3.223,4438,2.104,4441,2.34,4442,5.747,4443,3.869,4444,3.869,4445,3.869,4446,3.869,4447,3.869,4448,3.869,4449,3.869,4450,2.34,4451,4.946,4452,2.34,4453,3.869,4454,2.34,4455,3.869,4456,2.34,4457,2.34,4458,2.34,4459,2.34,4460,2.34,4461,3.869,4462,2.34,4463,3.869,4464,2.34,4465,3.869,4466,2.34,4467,3.869,4468,2.34,4469,3.869,4470,2.34,4471,3.869,4472,2.34,4473,3.869,4474,2.34,4475,2.34,4476,5.747,4477,2.34,4478,3.869,4479,6.856,4480,2.34,4481,4.946,4482,2.34,4483,2.34,4484,2.34,4485,2.34,4486,2.34,4487,2.34,4488,2.34,4489,4.946,4490,2.34,4491,2.34,4492,3.869,4493,2.34,4494,2.34,4495,2.34,4496,2.34,4497,2.34,4498,2.34,4499,2.34,4500,2.34,4501,2.34,4502,2.34,4503,2.34,4504,2.34,4505,3.869,4506,2.34,4507,2.34,4508,2.34,4509,2.34,4510,2.34,4511,4.946,4512,2.34,4513,3.48,4514,2.104,4515,2.34,4516,2.34,4517,2.34,4518,2.34,4519,2.34,4520,4.946,4521,2.34,4522,3.223,4523,2.104,4524,2.34,4525,2.34,4526,2.34,4527,2.34,4528,3.869,4529,3.869,4530,3.869,4531,3.869,4532,3.869,4533,4.946,4534,4.946,4535,4.946,4536,2.34,4537,2.34,4538,2.34,4539,2.34,4540,2.34,4541,2.34,4542,2.34,4543,2.34,4544,3.869,4545,2.34,4546,1.949,4547,3.869,4548,2.34,4549,2.34,4550,2.34,4551,3.223,4552,2.34,4553,2.34,4554,2.34,4555,2.34,4556,1.949,4557,2.34,4558,2.34,4559,2.34,4560,2.34,4561,2.34,4562,2.34]],["title/classes/activities.html",[0,0.316,335,3.251]],["body/classes/activities.html",[0,0.484,2,0.455,3,0.035,4,0.031,5,0.031,7,0.399,11,3.452,13,0.202,14,0.539,28,0.33,30,0.398,31,0.005,32,0.593,37,2.496,64,0.056,90,0.065,120,0.991,122,0.857,162,2.576,174,0.003,175,0.003,184,0.661,195,0.738,198,1.462,199,2.039,201,1.6,203,2.521,206,1.5,207,0.897,209,2.122,211,1.689,217,2.017,218,1.712,219,2.415,224,0.647,231,2.24,232,1.233,233,0.482,234,2.814,235,1.569,236,1.375,237,0.616,240,2.12,241,1.342,242,1.5,244,4.095,246,1.953,331,3.472,332,4.972,333,6.51,334,3.633,335,5.85,336,2.576,337,3.472,338,6.12,339,4.323,340,2.466,341,4.068,342,3.826,343,5.557,344,4.068,345,4.068,346,3.584,347,3.584,348,4.189,352,6.002,355,4.399,356,2.415,362,2.768,363,5.557,364,3.452,365,6.123,366,1.786,367,5.324,368,5.324,369,5.324,370,3.506,371,3.826,372,4.068,4563,4.883,4564,4.883]],["title/dependencies.html",[252,2.044,4565,3.821]],["body/dependencies.html",[0,0.497,8,7.38,30,0.26,31,0.004,70,4.912,78,1.304,85,6.689,86,5.638,174,0.003,175,0.003,179,1.121,191,1.319,199,1.513,233,0.618,237,0.791,239,2.168,241,1.723,252,2.081,317,2.632,629,3.555,636,3.989,842,5.638,845,4.664,890,2.138,903,5.222,904,5.222,915,5.638,938,5.222,1098,3.989,1144,7.221,1161,4.912,1234,5.638,1236,5.638,1237,5.638,2210,5.638,2212,4.912,2858,5.638,3163,5.638,4566,8.029,4567,6.269,4568,6.269,4569,9.657,4570,6.269,4571,6.269,4572,8.029,4573,6.269,4574,6.269,4575,6.269,4576,8.029,4577,8.029,4578,6.269,4579,6.269,4580,6.269,4581,6.269,4582,6.269,4583,6.269,4584,6.269,4585,5.638,4586,6.269,4587,6.269,4588,6.269,4589,6.269,4590,6.269,4591,6.269,4592,6.269,4593,6.269,4594,6.269,4595,6.269,4596,6.269,4597,6.269,4598,6.269,4599,6.269,4600,6.269,4601,6.269,4602,6.269,4603,6.269,4604,6.269,4605,6.269,4606,6.269,4607,6.269,4608,6.269,4609,6.269,4610,6.269,4611,6.269]],["title/miscellaneous/enumerations.html",[4612,3.021,4613,5.536]],["body/miscellaneous/enumerations.html",[10,2.349,13,0.131,31,0.004,38,5.905,47,1.371,79,3.663,129,2.486,174,0.002,175,0.002,196,3.663,265,1.635,317,3.295,346,3.605,347,2.597,428,2.792,438,1.337,474,2.658,475,1.746,504,1.562,521,2.009,570,4.101,613,4.101,622,1.666,639,3.663,646,1.91,707,3.857,716,4.101,744,3.035,952,2.009,961,5.059,966,3.663,995,3.362,1152,2.486,1161,3.857,1276,4.348,1312,3.663,1498,4.132,1503,3.501,1611,4.213,1745,3.978,1778,2.078,1818,4.427,1819,2.84,1820,4.427,1821,3.857,1822,2.84,1845,6.145,1994,3.132,2014,2.474,2020,2.947,2023,2.156,2025,3.24,2050,3.857,2069,3.362,2075,3.501,2334,4.427,2434,2.245,2683,3.501,2713,2.474,2731,4.101,2803,2.84,2973,3.362,2975,2.474,2993,4.101,3038,4.427,3097,3.857,3171,3.983,3223,4.427,3224,2.84,3364,4.427,3377,4.427,3418,2.474,3536,4.427,4058,2.245,4274,4.101,4514,4.427,4612,2.245,4613,2.84,4614,4.923,4615,4.923,4616,7.848,4617,3.158,4618,7.848,4619,4.427,4620,4.427,4621,3.158,4622,4.923,4623,3.158,4624,4.923,4625,5.04,4626,2.63,4627,3.158,4628,4.923,4629,3.158,4630,4.923,4631,4.923,4632,3.158,4633,4.923,4634,4.923,4635,4.923,4636,4.923,4637,3.158,4638,2.84,4639,4.427,4640,4.923,4641,6.145,4642,3.158,4643,4.923,4644,4.923,4645,4.923,4646,4.923,4647,4.923,4648,4.923,4649,4.923,4650,4.923,4651,4.923,4652,2.84,4653,3.158,4654,3.158,4655,3.158,4656,4.923,4657,3.158,4658,4.427,4659,4.923,4660,4.923,4661,4.923,4662,4.923,4663,2.474,4664,2.84,4665,4.101,4666,4.101,4667,4.101,4668,4.101,4669,4.101,4670,4.101,4671,4.101,4672,4.101,4673,4.101,4674,4.101,4675,4.101,4676,4.101,4677,4.101,4678,4.101,4679,4.101,4680,4.101,4681,4.101,4682,4.101,4683,4.101,4684,4.101,4685,4.101,4686,4.101,4687,4.101,4688,4.101,4689,4.101,4690,4.101,4691,4.101,4692,4.101,4693,4.101,4694,4.101,4695,4.101,4696,4.101,4697,4.101,4698,4.101,4699,4.101,4700,4.101,4701,4.101,4702,4.101,4703,4.101,4704,4.101,4705,4.101,4706,4.101,4707,4.101,4708,4.101,4709,4.101,4710,4.101,4711,4.101,4712,4.101,4713,4.101,4714,4.101,4715,4.101,4716,4.101,4717,4.101,4718,4.101,4719,4.101,4720,4.101,4721,4.101,4722,4.101,4723,4.101,4724,4.923,4725,4.101,4726,4.101,4727,4.923,4728,6.833,4729,4.923,4730,3.158,4731,4.923,4732,3.158,4733,4.101,4734,4.923,4735,4.923,4736,4.923,4737,4.923,4738,4.923,4739,3.158,4740,4.427,4741,4.427,4742,4.427]],["title/miscellaneous/functions.html",[4612,3.021,4743,5.128]],["body/miscellaneous/functions.html",[0,0.449,5,0.045,7,0.719,13,0.301,30,0.301,31,0.004,48,2.92,49,0.855,50,1.809,63,5.685,169,6.544,170,6.544,174,0.004,175,0.004,255,3.185,364,3.205,438,1.97,773,4.64,946,3.917,1000,4.617,1001,4.474,1003,4.264,1078,7.91,1094,5.685,1152,3.664,1218,6.892,2540,5.685,2849,6.525,3554,7.91,4371,6.525,4386,8.513,4406,6.525,4612,5.159,4626,6.044,4663,5.685,4743,6.044,4744,7.256,4745,7.256,4746,7.256,4747,7.256,4748,7.256,4749,7.256,4750,8.796,4751,8.796,4752,6.525,4753,7.256,4754,6.525]],["title/index.html",[13,0.176,4755,4.249,4756,4.249]],["body/index.html",[4,0.042,7,0.553,31,0.004,174,0.003,175,0.003,625,4.813,704,5.639,1152,3.418,1425,5.639,1687,6.087,2266,5.639,3378,6.087,4585,6.087,4641,6.087,4658,6.087,4733,5.639,4757,6.769,4758,6.769,4759,8.428,4760,6.769,4761,6.769,4762,6.769,4763,6.769,4764,6.769,4765,9.178,4766,6.769,4767,6.769,4768,6.769,4769,9.178,4770,10.217,4771,6.769,4772,6.769,4773,10.075,4774,6.769,4775,8.428,4776,6.769,4777,6.769,4778,6.769,4779,6.769,4780,8.428,4781,8.428,4782,6.769,4783,6.769,4784,6.769,4785,6.769,4786,8.428,4787,8.428,4788,6.769,4789,6.769,4790,6.769,4791,6.769,4792,6.769,4793,6.769,4794,6.769,4795,6.769,4796,6.769,4797,6.087,4798,6.769,4799,6.769,4800,6.769,4801,6.769,4802,6.769,4803,6.769,4804,6.087]],["title/interfaces/item_permission.html",[370,2.636,4805,4.257]],["body/interfaces/item_permission.html",[3,0.021,4,0.019,5,0.019,7,0.244,13,0.124,14,0.373,30,0.242,31,0.005,32,0.34,38,2.543,41,1.076,64,0.021,90,0.054,93,3.328,122,1.024,139,2.143,174,0.002,175,0.002,192,3.985,194,2.82,203,3.086,209,1.584,211,1.032,298,4.572,339,2.998,340,4.426,346,2.485,347,3.805,356,1.476,370,1.54,420,1.965,430,2.239,438,0.811,639,3.505,683,2.339,685,5.97,687,3.924,709,1.693,773,2.485,897,2.82,946,3.577,1000,4.216,1001,4.085,1095,2.339,1152,1.507,1273,2.905,1276,2.998,1491,3.505,1503,3.35,1569,5.192,1571,2.221,1574,2.221,1717,3.691,1764,2.487,1857,7.534,1860,3.924,2138,5.366,2264,2.339,2370,2.123,2434,3.35,2671,3.101,3376,3.924,4522,3.924,4546,4.861,4551,6.385,4556,3.924,4625,7.301,4663,2.339,4664,2.685,4665,3.924,4666,3.924,4667,3.924,4668,3.924,4669,3.924,4670,3.924,4671,3.924,4672,3.924,4673,3.924,4674,3.924,4675,3.924,4676,3.924,4677,3.924,4678,3.924,4679,3.924,4680,3.924,4681,3.924,4682,3.924,4683,3.924,4684,3.924,4685,3.924,4686,3.924,4687,3.924,4688,3.924,4689,3.924,4690,3.924,4691,3.924,4692,3.924,4693,3.924,4694,3.924,4695,3.924,4696,3.924,4697,3.924,4698,3.924,4699,3.924,4700,3.924,4701,3.924,4702,3.924,4703,3.924,4704,3.924,4705,3.924,4706,3.924,4707,3.924,4708,3.924,4709,3.924,4710,3.924,4711,3.924,4712,3.924,4713,3.924,4714,3.924,4715,3.924,4716,3.924,4717,3.924,4718,3.924,4719,3.924,4720,3.924,4721,3.924,4722,3.924,4723,3.924,4725,2.487,4726,3.924,4752,2.685,4805,4.861,4806,6.487,4807,2.985,4808,4.237,4809,4.237,4810,4.237,4811,2.685,4812,4.237,4813,2.685,4814,8.648,4815,8.49,4816,2.685,4817,7.698,4818,5.248,4819,2.685,4820,2.685,4821,8.398,4822,2.685,4823,8.832,4824,2.685,4825,4.237,4826,2.685,4827,4.237,4828,2.685,4829,2.685,4830,5.248,4831,2.685,4832,4.237,4833,7.48,4834,2.685,4835,2.685,4836,2.685,4837,4.237,4838,2.685,4839,2.685,4840,2.685,4841,2.685,4842,2.685,4843,2.685,4844,2.685,4845,2.685,4846,2.685,4847,4.237,4848,2.685,4849,2.685,4850,2.685,4851,2.685,4852,2.685,4853,2.685,4854,2.685,4855,4.237,4856,2.685,4857,2.685,4858,2.685,4859,2.685,4860,2.685,4861,5.248,4862,5.248,4863,2.685,4864,2.685,4865,2.685,4866,2.685,4867,5.248,4868,2.685,4869,4.237,4870,2.685,4871,2.685,4872,2.685,4873,2.685,4874,4.237,4875,2.685,4876,2.685,4877,2.685,4878,2.685,4879,4.237,4880,2.685,4881,4.237,4882,4.237,4883,2.685,4884,2.685,4885,2.685,4886,2.685,4887,2.685,4888,2.685,4889,4.237,4890,2.685,4891,4.237,4892,2.685,4893,2.685,4894,5.248,4895,2.685,4896,2.685,4897,4.237,4898,2.685,4899,2.685,4900,2.685,4901,2.685,4902,2.685,4903,2.685,4904,2.685,4905,6.487,4906,2.685,4907,2.685,4908,2.685,4909,2.685,4910,2.685,4911,2.685,4912,4.237,4913,2.685,4914,2.685,4915,2.685,4916,2.685,4917,4.237,4918,4.237,4919,2.685,4920,2.685,4921,2.685,4922,2.685,4923,2.685,4924,2.685,4925,2.685,4926,2.685,4927,2.685,4928,2.685,4929,2.685,4930,2.685,4931,2.685,4932,2.685,4933,4.711,4934,2.985,4935,2.985]],["title/modules.html",[251,2.328]],["body/modules.html",[31,0.003,174,0.003,175,0.003,250,4.084,251,1.823,262,2.008,263,2.384,373,3.904,387,3.113,389,2.61,391,3.036,393,3.904,396,3.749,751,4.084,755,3.904,756,3.749,811,4.301,814,4.084,815,3.904,816,3.904,817,4.084,818,3.493,819,3.493,820,3.287,821,3.196,822,4.084,823,4.084,824,3.904,825,3.904,826,3.287,827,3.904,828,3.614,829,3.614,830,3.904,831,4.084,832,3.904,833,3.904,834,3.493,835,4.084,836,3.904,837,4.084,838,3.493,1586,3.385,2378,4.084,2696,4.084,4733,9.073,4936,10.891,4937,10.891,4938,10.891]],["title/overview.html",[4939,6.305]],["body/overview.html",[2,0.196,31,0.004,73,3.663,174,0.001,175,0.001,249,0.436,250,5.799,251,0.696,252,0.696,253,0.715,254,0.715,255,0.706,256,0.715,257,0.715,258,1.886,259,1.886,260,1.886,261,1.886,262,3.676,263,4.133,264,5.407,265,1.172,266,0.715,267,0.715,280,0.789,373,5.699,374,1.886,376,1.886,377,1.886,378,5.407,387,4.837,389,4.323,391,4.31,393,5.542,396,5.825,410,5.749,412,5.407,413,4.713,414,5.407,415,5.134,751,6.233,752,1.886,753,1.886,754,1.886,755,5.699,756,6.078,757,3.583,811,8.265,812,1.886,813,1.886,814,5.134,815,5.836,816,5.542,817,5.799,818,5.099,819,5.593,820,4.514,821,4.778,822,5.799,823,5.799,824,5.542,825,6.065,826,4.798,827,6.401,828,5.275,829,5.13,830,5.362,831,5.799,832,5.542,833,4.257,834,5.222,835,5.799,836,4.613,837,5.61,838,4.959,859,4.542,951,1.293,1008,1.886,1010,1.886,1011,1.886,1012,6.206,1057,1.886,1059,1.886,1060,3.583,1091,1.747,1122,1.886,1123,1.886,1124,1.886,1238,3.663,1263,2.766,1291,1.886,1292,1.886,1293,1.886,1295,5.407,1331,5.407,1332,4.907,1334,5.134,1422,1.643,1523,1.886,1525,1.886,1526,1.886,1527,5.407,1586,4.255,1587,1.886,1588,1.886,1589,1.886,1590,4.907,1653,1.886,1655,1.886,1656,1.886,1657,5.407,1670,4.713,1768,1.886,1769,1.886,1771,1.886,1772,5.134,1787,5.749,2190,1.886,2192,1.886,2193,1.886,2244,4.542,2252,1.886,2254,1.886,2255,1.886,2264,1.643,2297,1.886,2299,1.886,2300,1.886,2339,1.886,2340,1.886,2342,1.886,2343,6.206,2374,1.886,2375,1.886,2376,1.886,2377,1.886,2378,5.799,2408,1.886,2409,1.886,2411,1.886,2482,3.583,2494,4.713,2584,3.583,2609,1.886,2610,1.886,2611,1.886,2612,1.886,2613,4.112,2687,1.886,2688,1.886,2689,1.886,2691,5.407,2696,3.991,2708,4.907,2817,1.886,2818,1.886,2819,1.886,2821,5.407,3011,5.134,3018,1.886,3019,1.886,3021,1.886,3148,1.886,3149,1.886,3184,1.886,3185,1.886,3187,1.886,3188,4.824,3283,1.886,3285,1.886,3286,1.886,3287,5.407,3348,1.886,3350,1.886,3351,1.886,3352,6.206,3392,1.886,3394,1.886,3395,1.886,3396,5.407,3403,1.886,3404,1.886,3406,1.886,3478,1.886,3479,1.886,3480,1.886,3482,5.134,3598,1.886,3599,1.886,3600,1.886,3602,5.407,3639,1.886,3640,1.886,3642,1.886,3643,5.407,3701,1.886,3702,1.886,3703,1.886,3730,1.886,3731,1.886,3827,1.886,3828,1.886,3830,1.886,3831,3.583,3942,1.886,3943,1.886,3944,1.886,3946,5.407,3973,1.886,3974,1.886,3975,3.583,4030,1.886,4031,1.886,4033,1.886,4065,1.886,4066,1.886,4067,3.583,4286,1.886,4288,1.886,4289,3.583,4342,1.886,4343,1.886,4344,1.886,4430,1.886,4432,1.886,4433,1.886,4939,1.886,4940,2.097,4941,2.097,4942,2.097]],["title/properties.html",[14,0.488,4565,3.821]],["body/properties.html",[7,0.672,14,0.651,31,0.004,174,0.004,175,0.004,4797,7.39,4804,7.39,4943,8.217,4944,8.217,4945,8.217]],["title/miscellaneous/variables.html",[4612,3.021,4946,5.536]],["body/miscellaneous/variables.html",[0,0.098,13,0.066,30,0.373,31,0.005,32,0.093,37,2.302,38,4.379,39,3,41,1.606,49,0.875,76,0.879,80,2.18,93,1.208,109,1.182,111,1.182,113,2.003,120,0.152,122,1.447,139,2.059,173,3.927,174,0.001,175,0.001,192,2.534,194,2.222,195,1.264,200,3.312,203,2.363,211,2.754,224,1.35,232,0.213,287,0.82,298,2.908,303,1.011,317,1.558,336,1.958,337,1.13,338,2.362,339,1.771,340,3.518,346,1.468,347,2.671,356,3.15,420,2.932,428,0.901,430,1.323,438,1.892,450,1.085,463,2.318,464,1.085,465,1.429,474,1.502,475,0.879,521,3.545,522,2.318,613,1.324,622,0.838,630,1.324,639,2.07,683,1.245,685,4.464,687,2.318,713,0.858,719,0.656,773,0.838,851,1.324,897,1.666,944,1.979,946,2.734,958,0.838,968,1.251,976,0.951,981,1.182,1000,1.771,1001,1.716,1047,4.098,1090,1.324,1098,2.835,1105,2.318,1115,1.376,1152,1.405,1161,3.491,1263,1.245,1273,1.716,1275,0.879,1276,1.771,1354,1.324,1356,3.338,1357,1.832,1359,2.503,1380,1.429,1382,1.245,1383,2.503,1393,2.503,1422,1.245,1425,3.711,1426,1.771,1491,2.761,1503,1.13,1550,1.429,1560,1.13,1561,2.318,1569,3.491,1571,1.182,1574,1.182,1582,1.324,1692,1.979,1717,2.18,1764,1.324,1792,1.429,1857,6.642,1860,2.318,1978,3.711,2138,1.182,2159,2.18,2370,3.168,2424,3.092,2434,1.979,2508,1.429,2666,2.503,2667,2.503,2671,1.832,2713,1.245,2799,4.554,2975,1.245,2976,1.245,3057,2.503,3068,1.324,3097,1.245,3109,1.429,3171,1.046,3220,2.18,3221,1.324,3376,1.324,3504,2.503,3508,1.429,4058,1.13,4271,2.503,4274,2.318,4376,1.429,4419,1.429,4426,2.318,4513,1.429,4522,2.318,4523,2.503,4546,3.092,4551,4.641,4556,2.318,4612,1.13,4619,1.429,4620,2.503,4625,4.641,4626,3.092,4638,2.503,4639,3.338,4652,1.429,4663,1.245,4665,4.641,4666,3.092,4667,3.711,4668,3.711,4669,3.711,4670,3.711,4671,3.711,4672,4.641,4673,3.092,4674,3.711,4675,3.711,4676,3.092,4677,3.092,4678,3.092,4679,3.711,4680,3.711,4681,3.711,4682,3.711,4683,3.711,4684,3.092,4685,3.092,4686,3.092,4687,3.092,4688,3.092,4689,3.092,4690,3.092,4691,3.711,4692,3.092,4693,3.092,4694,3.092,4695,3.092,4696,2.318,4697,3.092,4698,3.092,4699,4.641,4700,2.318,4701,3.092,4702,3.092,4703,3.092,4704,2.318,4705,4.641,4706,3.092,4707,4.641,4708,4.641,4709,4.999,4710,4.641,4711,4.641,4712,4.641,4713,3.711,4714,3.711,4715,3.711,4716,3.711,4717,3.092,4718,4.218,4719,4.218,4720,4.218,4721,4.218,4722,3.092,4723,3.092,4725,1.324,4726,2.318,4740,1.429,4741,3.338,4742,3.338,4743,1.324,4754,1.429,4805,1.324,4806,1.429,4808,2.503,4809,2.503,4810,2.503,4811,1.429,4812,3.338,4813,1.429,4814,7.414,4815,7.164,4816,1.429,4817,6.015,4818,3.338,4819,1.429,4820,1.429,4821,7.02,4822,1.429,4823,7.717,4824,1.429,4825,2.503,4826,1.429,4827,4.007,4828,1.429,4829,1.429,4830,3.338,4831,1.429,4832,2.503,4833,5.728,4834,1.429,4835,1.429,4836,1.429,4837,2.503,4838,1.429,4839,1.429,4840,1.429,4841,1.429,4842,1.429,4843,1.429,4844,1.429,4845,1.429,4846,1.429,4847,2.503,4848,1.429,4849,1.429,4850,1.429,4851,1.429,4852,1.429,4853,1.429,4854,1.429,4855,2.503,4856,1.429,4857,1.429,4858,1.429,4859,1.429,4860,1.429,4861,4.007,4862,4.007,4863,1.429,4864,1.429,4865,1.429,4866,1.429,4867,3.338,4868,1.429,4869,2.503,4870,1.429,4871,1.429,4872,1.429,4873,1.429,4874,2.503,4875,1.429,4876,1.429,4877,1.429,4878,1.429,4879,2.503,4880,1.429,4881,2.503,4882,2.503,4883,1.429,4884,2.503,4885,1.429,4886,1.429,4887,1.429,4888,1.429,4889,2.503,4890,1.429,4891,2.503,4892,1.429,4893,1.429,4894,3.338,4895,1.429,4896,1.429,4897,4.007,4898,1.429,4899,1.429,4900,1.429,4901,1.429,4902,1.429,4903,1.429,4904,1.429,4905,4.554,4906,1.429,4907,1.429,4908,1.429,4909,1.429,4910,1.429,4911,1.429,4912,2.503,4913,1.429,4914,1.429,4915,1.429,4916,1.429,4917,2.503,4918,2.503,4919,1.429,4920,1.429,4921,2.503,4922,1.429,4923,1.429,4924,1.429,4925,1.429,4926,1.429,4927,1.429,4928,2.503,4929,1.429,4930,2.503,4931,1.429,4932,1.429,4946,1.429,4947,2.783,4948,1.589,4949,2.783,4950,2.783,4951,1.589,4952,2.783,4953,1.589,4954,2.783,4955,1.589,4956,2.783,4957,1.589,4958,2.783,4959,2.783,4960,1.589,4961,2.783,4962,1.589,4963,2.783,4964,1.589,4965,1.589,4966,1.589,4967,4.455,4968,2.783,4969,2.783,4970,2.783,4971,2.783,4972,2.783,4973,5.064,4974,1.589,4975,2.783,4976,2.783,4977,2.783,4978,2.783,4979,1.589,4980,1.589,4981,1.589,4982,5.064,4983,1.589,4984,1.589,4985,1.589,4986,2.783,4987,1.589,4988,1.589,4989,3.711,4990,1.589,4991,1.589,4992,1.589,4993,3.711,4994,1.589,4995,1.589,4996,1.589,4997,1.589,4998,6.369,4999,2.783,5000,2.783,5001,1.589,5002,1.589,5003,1.589,5004,1.589,5005,1.589,5006,1.589,5007,1.589,5008,1.589,5009,3.711,5010,1.589,5011,1.589,5012,1.589,5013,1.589,5014,1.589,5015,1.589,5016,1.589,5017,1.589,5018,1.589,5019,1.589,5020,1.589,5021,1.589,5022,2.783,5023,2.783,5024,1.589,5025,1.589,5026,2.783,5027,1.589,5028,1.589,5029,1.589,5030,1.589,5031,1.589,5032,1.589,5033,1.589,5034,1.589,5035,1.589,5036,1.589,5037,1.589,5038,1.589,5039,2.783,5040,2.783,5041,2.783,5042,1.589,5043,1.589,5044,1.589,5045,1.589,5046,1.589,5047,1.589,5048,1.589,5049,1.589,5050,1.589,5051,3.711,5052,2.783,5053,2.783,5054,2.783,5055,2.783,5056,1.589,5057,1.589,5058,1.589,5059,1.589,5060,1.589,5061,1.589,5062,1.589,5063,1.589,5064,2.783,5065,1.589,5066,1.589,5067,2.783,5068,1.589,5069,1.589,5070,1.589,5071,1.589,5072,1.589,5073,1.589,5074,1.589,5075,1.589,5076,1.589,5077,1.589,5078,1.589,5079,1.589,5080,1.589,5081,1.589,5082,1.589,5083,1.589,5084,6.967,5085,6.967,5086,1.589,5087,1.589,5088,1.589,5089,1.589,5090,1.589,5091,1.589,5092,1.589,5093,1.589,5094,1.589,5095,1.589,5096,1.589,5097,1.589,5098,1.589,5099,1.589,5100,1.589,5101,1.589,5102,1.589,5103,1.589,5104,2.783,5105,3.711,5106,1.589,5107,1.589,5108,1.589,5109,1.589,5110,1.589,5111,1.589,5112,1.589,5113,1.589,5114,2.783,5115,2.783,5116,2.783,5117,2.783,5118,1.589,5119,1.589,5120,1.589,5121,1.589,5122,1.589,5123,1.589,5124,1.589,5125,1.589]]],"invertedIndex":[["",{"_index":31,"title":{},"body":{"classes/AWSSESProvider.html":{},"classes/AcceptInvitationDto.html":{},"classes/Acta.html":{},"modules/ActaModule.html":{},"injectables/ActaService.html":{},"classes/ActivitiesConfig.html":{},"modules/ActivitiesConfigModule.html":{},"injectables/ActivitiesConfigService.html":{},"classes/AddTableJoinInput.html":{},"classes/Announcement.html":{},"classes/AnnouncementApplicantArgs.html":{},"classes/AnnouncementApplicantsArgs.html":{},"modules/AnnouncementsModule.html":{},"injectables/AnnouncementsService.html":{},"modules/AppModule.html":{},"classes/Applicant.html":{},"classes/ApplicantArgs.html":{},"modules/ApplicantModule.html":{},"classes/ApplicantState.html":{},"classes/Assign.html":{},"classes/Attachment.html":{},"classes/AttachmentSubmit.html":{},"classes/AuthCode.html":{},"modules/AuthCodeModule.html":{},"injectables/AuthCodeService.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/AwsService.html":{},"classes/Business.html":{},"modules/BusinessModule.html":{},"classes/BusinessRelationship.html":{},"injectables/BusinessService.html":{},"classes/CloseFormSubscriptionArgs.html":{},"classes/ColumnGroup.html":{},"classes/ConfigEvaluation.html":{},"modules/ConfigEvaluationsModule.html":{},"injectables/ConfigEvaluationsService.html":{},"modules/ConfigNotificationsModule.html":{},"injectables/ConfigNotificationsService.html":{},"classes/ConfigurationApp.html":{},"modules/ConfigurationAppModule.html":{},"injectables/ConfigurationAppService.html":{},"classes/ContactArgs.html":{},"classes/ContactServiceLink.html":{},"classes/ContactServicesInput.html":{},"classes/Content.html":{},"modules/ContentModule.html":{},"injectables/ContentService.html":{},"classes/CreateActaInput.html":{},"classes/CreateActivitiesConfigInput.html":{},"classes/CreateAnnouncementInput.html":{},"classes/CreateConfigEvaluationInput.html":{},"classes/CreateConfigNotificationInput.html":{},"classes/CreateContentInput.html":{},"classes/CreateEventInput.html":{},"classes/CreateFormInput.html":{},"classes/CreateFormSubscriptionInput.html":{},"classes/CreateFormTagInput.html":{},"classes/CreateHelpDeskInput.html":{},"classes/CreateIntegrationInput.html":{},"classes/CreateInvitationArgs.html":{},"classes/CreateNotificationInput.html":{},"classes/CreateParticipationEventInput.html":{},"classes/CreatePhaseInput.html":{},"classes/CreateResourceInput.html":{},"classes/CreateResourcesReplyInput.html":{},"classes/CreateRolInput.html":{},"classes/CreateSiteInput.html":{},"classes/CreateStageInput.html":{},"classes/CreateTableConfigInput.html":{},"classes/CreateTableInput.html":{},"classes/CreateTypesEventInput.html":{},"classes/CreateUserInput.html":{},"classes/CreateUserLogInput.html":{},"classes/Download.html":{},"modules/DownloadsModule.html":{},"injectables/DownloadsService.html":{},"controllers/EmailsController.html":{},"modules/EmailsModule.html":{},"interfaces/EmailsRepository.html":{},"injectables/EmailsService.html":{},"classes/Entrepreneur.html":{},"modules/EntrepreneurModule.html":{},"classes/EntrepreneurRelationship.html":{},"classes/EntrepreneurRelationship-1.html":{},"classes/EntrepreneurStartupArgs.html":{},"classes/Evaluation.html":{},"modules/EvaluationsModule.html":{},"classes/Event.html":{},"modules/EventsModule.html":{},"classes/Expert.html":{},"classes/ExpertEventLink.html":{},"modules/ExpertModule.html":{},"classes/FindFormsArgs.html":{},"classes/FindInvitationArgs.html":{},"classes/FindUsersArgs.html":{},"classes/Form.html":{},"classes/FormSubmission.html":{},"classes/FormSubmissionFiles.html":{},"classes/FormSubscription.html":{},"injectables/FormSubscriptionService.html":{},"classes/FormTag.html":{},"injectables/FormTagService.html":{},"modules/FormsModule.html":{},"injectables/FormsService.html":{},"classes/GetSubmittedFilesArgs.html":{},"guards/GqlAuthGuard.html":{},"classes/HelpDeskFilterInput.html":{},"modules/HelpDeskModule.html":{},"injectables/HelpDeskService.html":{},"classes/HelpDeskTicket.html":{},"classes/Hours.html":{},"interfaces/IAttachment.html":{},"classes/Integration.html":{},"modules/IntegrationsModule.html":{},"injectables/IntegrationsService.html":{},"classes/Invitation.html":{},"controllers/InvitationsController.html":{},"modules/InvitationsModule.html":{},"injectables/InvitationsService.html":{},"classes/LastContentOutput.html":{},"classes/LinkExpertsToPhaseArgs.html":{},"classes/LinkStartupToPhaseArgs.html":{},"classes/LinkStartupsExpertsArgs.html":{},"classes/LinkWithTargetsArgs.html":{},"classes/LinkWithTargetsByRequestArgs.html":{},"modules/LoggerModule.html":{},"classes/Notification.html":{},"classes/Notification-1.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"classes/OthersInput.html":{},"classes/ParticipantEventLink.html":{},"classes/ParticipationEvent.html":{},"modules/ParticipationEventsModule.html":{},"injectables/ParticipationEventsService.html":{},"classes/Phase.html":{},"classes/PhaseExpertRelationship.html":{},"classes/PhaseRelationship.html":{},"modules/PhasesModule.html":{},"classes/Rating.html":{},"classes/RemoveTableJoinInput.html":{},"classes/Resource.html":{},"modules/ResourcesModule.html":{},"modules/ResourcesRepliesModule.html":{},"classes/ResourcesReply.html":{},"injectables/ResourcesService.html":{},"classes/Rol.html":{},"modules/RolModule.html":{},"injectables/RolService.html":{},"classes/SearchBatchInput.html":{},"classes/SelectApplicantsArgs.html":{},"classes/SendEmailInput.html":{},"classes/SendGridProvider.html":{},"classes/SignUpInput.html":{},"classes/Site.html":{},"modules/SitesModule.html":{},"injectables/SitesService.html":{},"classes/Stage.html":{},"modules/StagesModule.html":{},"injectables/StagesService.html":{},"classes/Startup.html":{},"classes/StartupLink.html":{},"modules/StartupModule.html":{},"classes/StartupRelationship.html":{},"controllers/StorageController.html":{},"modules/StorageModule.html":{},"classes/StorageService.html":{},"classes/SubmitAnnouncementDocInput.html":{},"classes/SubmitFileInput.html":{},"classes/SubmitFormSubscriptionArgs.html":{},"classes/Table.html":{},"classes/TableConfig.html":{},"injectables/TableConfigService.html":{},"classes/TableJoin.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"classes/TeamCoachLink.html":{},"classes/TemplateInput.html":{},"classes/TermsOfUse.html":{},"modules/TermsOfUseModule.html":{},"injectables/TermsOfUseService.html":{},"modules/TicketCategoriesModule.html":{},"injectables/TicketCategoriesService.html":{},"classes/TicketCategory.html":{},"classes/TicketChild.html":{},"classes/TypesEvent.html":{},"modules/TypesEventsModule.html":{},"injectables/TypesEventsService.html":{},"classes/TypesNotification.html":{},"modules/TypesNotificationsModule.html":{},"injectables/TypesNotificationsService.html":{},"classes/UpdateActaInput.html":{},"classes/UpdateActivitiesConfigInput.html":{},"classes/UpdateAnnouncementInput.html":{},"classes/UpdateApplicantInput.html":{},"classes/UpdateApplicantStateInput.html":{},"classes/UpdateConfigEvaluationInput.html":{},"classes/UpdateConfigurationAppInput.html":{},"classes/UpdateContentInput.html":{},"classes/UpdateEventInput.html":{},"classes/UpdateExpertInput.html":{},"classes/UpdateFormInput.html":{},"classes/UpdateFormTagInput.html":{},"classes/UpdateHelpDeskInput.html":{},"classes/UpdateIntegrationInput.html":{},"classes/UpdateNotificationInput.html":{},"classes/UpdateParticipationEventInput.html":{},"classes/UpdatePhaseInput.html":{},"classes/UpdateResourceInput.html":{},"classes/UpdateResourcesReplyInput.html":{},"classes/UpdateRolInput.html":{},"classes/UpdateSiteInput.html":{},"classes/UpdateStageInput.html":{},"classes/UpdateTableConfigInput.html":{},"classes/UpdateTermsOfUseInput.html":{},"classes/UpdateTypesEventInput.html":{},"classes/UpdateUserConfigInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"classes/UserConfig.html":{},"modules/UserConfigModule.html":{},"injectables/UserConfigService.html":{},"classes/UserLog.html":{},"modules/UserLogModule.html":{},"injectables/UserLogService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/activities.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"interfaces/item_permission.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":356,"title":{},"body":{"classes/ActivitiesConfig.html":{},"injectables/ActivitiesConfigService.html":{},"classes/Assign.html":{},"injectables/ConfigEvaluationsService.html":{},"injectables/ConfigNotificationsService.html":{},"injectables/ConfigurationAppService.html":{},"injectables/ContentService.html":{},"injectables/HelpDeskService.html":{},"injectables/IntegrationsService.html":{},"injectables/InvitationsService.html":{},"classes/Phase.html":{},"injectables/RolService.html":{},"injectables/StagesService.html":{},"injectables/TypesEventsService.html":{},"injectables/TypesNotificationsService.html":{},"injectables/UserLogService.html":{},"classes/activities.html":{},"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["0.0.1",{"_index":4944,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":4610,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":4589,"title":{},"body":{"dependencies.html":{}}}],["0.3.2",{"_index":4601,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":4588,"title":{},"body":{"dependencies.html":{}}}],["01",{"_index":99,"title":{},"body":{"classes/AWSSESProvider.html":{}}}],["0})@field(undefined",{"_index":3327,"title":{},"body":{"classes/Phase.html":{}}}],["1",{"_index":1426,"title":{"classes/EntrepreneurRelationship-1.html":{},"classes/Notification-1.html":{}},"body":{"injectables/BusinessService.html":{},"injectables/ContentService.html":{},"injectables/HelpDeskService.html":{},"injectables/IntegrationsService.html":{},"classes/Invitation.html":{},"injectables/StagesService.html":{},"miscellaneous/variables.html":{}}}],["1.22.2",{"_index":4599,"title":{},"body":{"dependencies.html":{}}}],["1.5.0",{"_index":4587,"title":{},"body":{"dependencies.html":{}}}],["10.0.1",{"_index":4575,"title":{},"body":{"dependencies.html":{}}}],["10.2.3",{"_index":4569,"title":{},"body":{"dependencies.html":{}}}],["10.3.1",{"_index":4596,"title":{},"body":{"dependencies.html":{}}}],["11.10.1",{"_index":4597,"title":{},"body":{"dependencies.html":{}}}],["12",{"_index":98,"title":{},"body":{"classes/AWSSESProvider.html":{}}}],["12.0.7",{"_index":4568,"title":{},"body":{"dependencies.html":{}}}],["12.0.8",{"_index":4573,"title":{},"body":{"dependencies.html":{}}}],["148",{"_index":4942,"title":{},"body":{"overview.html":{}}}],["16.8.0",{"_index":4598,"title":{},"body":{"dependencies.html":{}}}],["17.10.1",{"_index":4606,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":1422,"title":{},"body":{"injectables/BusinessService.html":{},"injectables/IntegrationsService.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["2.0.0",{"_index":4600,"title":{},"body":{"dependencies.html":{}}}],["2.0.2",{"_index":4572,"title":{},"body":{"dependencies.html":{}}}],["2.29.4",{"_index":4607,"title":{},"body":{"dependencies.html":{}}}],["2.30.0",{"_index":4594,"title":{},"body":{"dependencies.html":{}}}],["2010",{"_index":97,"title":{},"body":{"classes/AWSSESProvider.html":{}}}],["24",{"_index":1268,"title":{},"body":{"injectables/AwsService.html":{}}}],["25",{"_index":3046,"title":{},"body":{"injectables/InvitationsService.html":{}}}],["3",{"_index":1263,"title":{},"body":{"injectables/AwsService.html":{},"injectables/BusinessService.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["3.0.1",{"_index":4570,"title":{},"body":{"dependencies.html":{}}}],["3.12.1",{"_index":4586,"title":{},"body":{"dependencies.html":{}}}],["3.400.0",{"_index":4566,"title":{},"body":{"dependencies.html":{}}}],["3.421.0",{"_index":4567,"title":{},"body":{"dependencies.html":{}}}],["4.0.0",{"_index":4579,"title":{},"body":{"dependencies.html":{}}}],["4.3.0",{"_index":4595,"title":{},"body":{"dependencies.html":{}}}],["41",{"_index":4940,"title":{},"body":{"overview.html":{}}}],["42",{"_index":4941,"title":{},"body":{"overview.html":{}}}],["59",{"_index":1581,"title":{},"body":{"injectables/ConfigEvaluationsService.html":{},"injectables/UserLogService.html":{}}}],["6.0.0",{"_index":4604,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":1050,"title":{},"body":{"classes/AuthCode.html":{},"injectables/AwsService.html":{}}}],["646f953cc2305c411d73f700",{"_index":459,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["7.0.3",{"_index":4592,"title":{},"body":{"dependencies.html":{}}}],["7.1.10",{"_index":4581,"title":{},"body":{"dependencies.html":{}}}],["7.5.0",{"_index":4608,"title":{},"body":{"dependencies.html":{}}}],["7.7.0",{"_index":4583,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":5121,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9.0.0",{"_index":4611,"title":{},"body":{"dependencies.html":{}}}],["99",{"_index":5120,"title":{},"body":{"miscellaneous/variables.html":{}}}],["999",{"_index":1582,"title":{},"body":{"injectables/ConfigEvaluationsService.html":{},"injectables/UserLogService.html":{},"miscellaneous/variables.html":{}}}],["9999",{"_index":5119,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_buildmatch([request.globalfilter",{"_index":4988,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_buildmatch(request.filter",{"_index":4983,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_buildmatch(request.foreignfilter",{"_index":4985,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_id",{"_index":195,"title":{},"body":{"classes/Acta.html":{},"injectables/ActaService.html":{},"classes/ActivitiesConfig.html":{},"injectables/ActivitiesConfigService.html":{},"classes/Announcement.html":{},"injectables/AnnouncementsService.html":{},"classes/Applicant.html":{},"classes/ApplicantState.html":{},"classes/Assign.html":{},"classes/Attachment.html":{},"classes/AuthCode.html":{},"classes/Business.html":{},"classes/BusinessRelationship.html":{},"injectables/BusinessService.html":{},"classes/ConfigEvaluation.html":{},"injectables/ConfigEvaluationsService.html":{},"classes/ConfigurationApp.html":{},"injectables/ConfigurationAppService.html":{},"classes/ContactServiceLink.html":{},"classes/ContactServicesInput.html":{},"classes/Content.html":{},"injectables/ContentService.html":{},"classes/CreateEventInput.html":{},"classes/Download.html":{},"classes/Entrepreneur.html":{},"classes/EntrepreneurRelationship.html":{},"classes/EntrepreneurRelationship-1.html":{},"classes/EntrepreneurStartupArgs.html":{},"classes/Evaluation.html":{},"classes/Event.html":{},"classes/Expert.html":{},"classes/ExpertEventLink.html":{},"classes/Form.html":{},"classes/FormSubmission.html":{},"classes/FormSubscription.html":{},"classes/FormTag.html":{},"injectables/FormTagService.html":{},"injectables/FormsService.html":{},"injectables/HelpDeskService.html":{},"classes/HelpDeskTicket.html":{},"interfaces/IAttachment.html":{},"classes/Integration.html":{},"classes/Invitation.html":{},"injectables/InvitationsService.html":{},"classes/LinkStartupsExpertsArgs.html":{},"classes/Notification.html":{},"classes/Notification-1.html":{},"injectables/NotificationsService.html":{},"classes/ParticipantEventLink.html":{},"classes/ParticipationEvent.html":{},"injectables/ParticipationEventsService.html":{},"classes/Phase.html":{},"classes/PhaseExpertRelationship.html":{},"classes/PhaseRelationship.html":{},"classes/Rating.html":{},"classes/Resource.html":{},"classes/ResourcesReply.html":{},"injectables/ResourcesService.html":{},"classes/Rol.html":{},"injectables/RolService.html":{},"classes/Site.html":{},"injectables/SitesService.html":{},"classes/Stage.html":{},"injectables/StagesService.html":{},"classes/Startup.html":{},"classes/StartupLink.html":{},"classes/StartupRelationship.html":{},"classes/Table.html":{},"classes/TableConfig.html":{},"injectables/TableConfigService.html":{},"injectables/TableService.html":{},"classes/TeamCoachLink.html":{},"classes/TermsOfUse.html":{},"injectables/TermsOfUseService.html":{},"injectables/TicketCategoriesService.html":{},"classes/TicketCategory.html":{},"classes/TicketChild.html":{},"classes/TypesEvent.html":{},"injectables/TypesEventsService.html":{},"classes/TypesNotification.html":{},"classes/UpdateActaInput.html":{},"classes/UpdateActivitiesConfigInput.html":{},"classes/UpdateAnnouncementInput.html":{},"classes/UpdateConfigEvaluationInput.html":{},"classes/UpdateConfigurationAppInput.html":{},"classes/UpdateContentInput.html":{},"classes/UpdateEventInput.html":{},"classes/UpdateExpertInput.html":{},"classes/UpdateFormInput.html":{},"classes/UpdateFormTagInput.html":{},"classes/UpdateHelpDeskInput.html":{},"classes/UpdateNotificationInput.html":{},"classes/UpdateParticipationEventInput.html":{},"classes/UpdatePhaseInput.html":{},"classes/UpdateResourceInput.html":{},"classes/UpdateResourcesReplyInput.html":{},"classes/UpdateRolInput.html":{},"classes/UpdateSiteInput.html":{},"classes/UpdateStageInput.html":{},"classes/UpdateTableConfigInput.html":{},"classes/UpdateTermsOfUseInput.html":{},"classes/UpdateTypesEventInput.html":{},"classes/UpdateUserConfigInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"classes/UserConfig.html":{},"injectables/UserConfigService.html":{},"classes/UserLog.html":{},"injectables/UsersService.html":{},"classes/activities.html":{},"miscellaneous/variables.html":{}}}],["_id.tostring",{"_index":4323,"title":{},"body":{"injectables/UserConfigService.html":{}}}],["_logger",{"_index":2704,"title":{},"body":{"injectables/HelpDeskService.html":{},"injectables/NotificationsService.html":{},"injectables/TicketCategoriesService.html":{}}}],["_params",{"_index":4964,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_read",{"_index":2221,"title":{},"body":{"injectables/DownloadsService.html":{}}}],["_user",{"_index":1076,"title":{},"body":{"injectables/AuthCodeService.html":{}}}],["abstract",{"_index":3738,"title":{},"body":{"classes/StorageService.html":{}}}],["accept",{"_index":3010,"title":{},"body":{"controllers/InvitationsController.html":{},"injectables/InvitationsService.html":{}}}],["accept(undefined",{"_index":3036,"title":{},"body":{"injectables/InvitationsService.html":{}}}],["acceptance",{"_index":3065,"title":{},"body":{"injectables/InvitationsService.html":{}}}],["accepted",{"_index":3038,"title":{},"body":{"injectables/InvitationsService.html":{},"miscellaneous/enumerations.html":{}}}],["acceptinvitation",{"_index":3006,"title":{},"body":{"controllers/InvitationsController.html":{}}}],["acceptinvitation(@body",{"_index":3016,"title":{},"body":{"controllers/InvitationsController.html":{}}}],["acceptinvitation(acceptinvitationdto",{"_index":3007,"title":{},"body":{"controllers/InvitationsController.html":{}}}],["acceptinvitationdto",{"_index":176,"title":{"classes/AcceptInvitationDto.html":{}},"body":{"classes/AcceptInvitationDto.html":{},"controllers/InvitationsController.html":{},"injectables/InvitationsService.html":{}}}],["access",{"_index":5053,"title":{},"body":{"miscellaneous/variables.html":{}}}],["access_token",{"_index":2890,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["accesskeyid",{"_index":103,"title":{},"body":{"classes/AWSSESProvider.html":{},"injectables/AwsService.html":{}}}],["accessors",{"_index":2978,"title":{},"body":{"classes/Invitation.html":{}}}],["account",{"_index":1075,"title":{},"body":{"injectables/AuthCodeService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"guards/GqlAuthGuard.html":{},"classes/User.html":{}}}],["account_credentials",{"_index":2872,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["account_id",{"_index":2873,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["accountid",{"_index":1313,"title":{},"body":{"classes/BusinessRelationship.html":{},"classes/Entrepreneur.html":{},"classes/Expert.html":{},"classes/PhaseExpertRelationship.html":{},"classes/StartupLink.html":{},"classes/StartupRelationship.html":{},"classes/UpdateExpertInput.html":{}}}],["accounts",{"_index":4664,"title":{},"body":{"miscellaneous/enumerations.html":{},"interfaces/item_permission.html":{}}}],["aceptar",{"_index":4541,"title":{},"body":{"injectables/UsersService.html":{}}}],["acta",{"_index":192,"title":{"classes/Acta.html":{}},"body":{"classes/Acta.html":{},"modules/ActaModule.html":{},"injectables/ActaService.html":{},"injectables/ActivitiesConfigService.html":{},"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["acta.input",{"_index":314,"title":{},"body":{"injectables/ActaService.html":{},"classes/UpdateActaInput.html":{}}}],["acta.input.ts",{"_index":1895,"title":{},"body":{"classes/CreateActaInput.html":{},"classes/UpdateActaInput.html":{}}}],["acta.input.ts:11",{"_index":1903,"title":{},"body":{"classes/CreateActaInput.html":{}}}],["acta.input.ts:12",{"_index":4079,"title":{},"body":{"classes/UpdateActaInput.html":{}}}],["acta.input.ts:15",{"_index":1904,"title":{},"body":{"classes/CreateActaInput.html":{}}}],["acta.input.ts:16",{"_index":4086,"title":{},"body":{"classes/UpdateActaInput.html":{}}}],["acta.input.ts:19",{"_index":1906,"title":{},"body":{"classes/CreateActaInput.html":{}}}],["acta.input.ts:20",{"_index":4087,"title":{},"body":{"classes/UpdateActaInput.html":{}}}],["acta.input.ts:23",{"_index":1900,"title":{},"body":{"classes/CreateActaInput.html":{}}}],["acta.input.ts:24",{"_index":4088,"title":{},"body":{"classes/UpdateActaInput.html":{}}}],["acta.input.ts:27",{"_index":1907,"title":{},"body":{"classes/CreateActaInput.html":{}}}],["acta.input.ts:28",{"_index":4083,"title":{},"body":{"classes/UpdateActaInput.html":{}}}],["acta.input.ts:31",{"_index":1899,"title":{},"body":{"classes/CreateActaInput.html":{}}}],["acta.input.ts:32",{"_index":4089,"title":{},"body":{"classes/UpdateActaInput.html":{}}}],["acta.input.ts:35",{"_index":1905,"title":{},"body":{"classes/CreateActaInput.html":{}}}],["acta.input.ts:36",{"_index":4082,"title":{},"body":{"classes/UpdateActaInput.html":{}}}],["acta.input.ts:39",{"_index":1901,"title":{},"body":{"classes/CreateActaInput.html":{}}}],["acta.input.ts:40",{"_index":4084,"title":{},"body":{"classes/UpdateActaInput.html":{}}}],["acta.input.ts:43",{"_index":1902,"title":{},"body":{"classes/CreateActaInput.html":{}}}],["acta.input.ts:44",{"_index":4080,"title":{},"body":{"classes/UpdateActaInput.html":{}}}],["acta.input.ts:47",{"_index":1897,"title":{},"body":{"classes/CreateActaInput.html":{}}}],["acta.input.ts:48",{"_index":4085,"title":{},"body":{"classes/UpdateActaInput.html":{}}}],["acta.name",{"_index":278,"title":{},"body":{"modules/ActaModule.html":{}}}],["acta.resolver",{"_index":272,"title":{},"body":{"modules/ActaModule.html":{}}}],["acta.service",{"_index":270,"title":{},"body":{"modules/ActaModule.html":{}}}],["acta/acta.module",{"_index":2383,"title":{},"body":{"modules/EventsModule.html":{}}}],["actamodel",{"_index":292,"title":{},"body":{"injectables/ActaService.html":{}}}],["actamodule",{"_index":250,"title":{"modules/ActaModule.html":{}},"body":{"modules/ActaModule.html":{},"modules/EventsModule.html":{},"modules.html":{},"overview.html":{}}}],["actaresolver",{"_index":271,"title":{},"body":{"modules/ActaModule.html":{}}}],["actas",{"_index":298,"title":{},"body":{"injectables/ActaService.html":{},"injectables/ActivitiesConfigService.html":{},"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["actas.find",{"_index":588,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["actas_close",{"_index":4712,"title":{},"body":{"miscellaneous/enumerations.html":{},"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["actas_create",{"_index":4710,"title":{},"body":{"miscellaneous/enumerations.html":{},"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["actas_edit",{"_index":4711,"title":{},"body":{"miscellaneous/enumerations.html":{},"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["actas_view",{"_index":4709,"title":{},"body":{"miscellaneous/enumerations.html":{},"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["actaschema",{"_index":247,"title":{},"body":{"classes/Acta.html":{},"modules/ActaModule.html":{}}}],["actaservice",{"_index":264,"title":{"injectables/ActaService.html":{}},"body":{"modules/ActaModule.html":{},"injectables/ActaService.html":{},"overview.html":{}}}],["actasexpert",{"_index":587,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["actasexpert.push(acta",{"_index":591,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["action",{"_index":3971,"title":{},"body":{"injectables/TermsOfUseService.html":{}}}],["activated",{"_index":4806,"title":{},"body":{"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["active",{"_index":3064,"title":{},"body":{"injectables/InvitationsService.html":{}}}],["actividad",{"_index":4908,"title":{},"body":{"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["activities",{"_index":335,"title":{"classes/activities.html":{}},"body":{"classes/ActivitiesConfig.html":{},"modules/ActivitiesConfigModule.html":{},"injectables/ActivitiesConfigService.html":{},"modules/AppModule.html":{},"classes/Assign.html":{},"classes/CreateActivitiesConfigInput.html":{},"classes/UpdateActivitiesConfigInput.html":{},"classes/activities.html":{}}}],["activitiesconfig",{"_index":331,"title":{"classes/ActivitiesConfig.html":{}},"body":{"classes/ActivitiesConfig.html":{},"modules/ActivitiesConfigModule.html":{},"injectables/ActivitiesConfigService.html":{},"classes/Assign.html":{},"classes/activities.html":{}}}],["activitiesconfig.name",{"_index":398,"title":{},"body":{"modules/ActivitiesConfigModule.html":{}}}],["activitiesconfigmodule",{"_index":373,"title":{"modules/ActivitiesConfigModule.html":{}},"body":{"modules/ActivitiesConfigModule.html":{},"modules/AppModule.html":{},"modules/PhasesModule.html":{},"modules.html":{},"overview.html":{}}}],["activitiesconfigresolver",{"_index":383,"title":{},"body":{"modules/ActivitiesConfigModule.html":{}}}],["activitiesconfigschema",{"_index":371,"title":{},"body":{"classes/ActivitiesConfig.html":{},"modules/ActivitiesConfigModule.html":{},"classes/Assign.html":{},"classes/activities.html":{}}}],["activitiesconfigservice",{"_index":378,"title":{"injectables/ActivitiesConfigService.html":{}},"body":{"modules/ActivitiesConfigModule.html":{},"injectables/ActivitiesConfigService.html":{},"overview.html":{}}}],["activitiesforteamcoach",{"_index":400,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["activity",{"_index":343,"title":{},"body":{"classes/ActivitiesConfig.html":{},"injectables/ActivitiesConfigService.html":{},"classes/Assign.html":{},"classes/CreateActivitiesConfigInput.html":{},"injectables/UserLogService.html":{},"classes/activities.html":{}}}],["activity._id.tostring",{"_index":539,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["activity.isdeleted",{"_index":577,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["activityid",{"_index":369,"title":{},"body":{"classes/ActivitiesConfig.html":{},"classes/Assign.html":{},"classes/UpdateActivitiesConfigInput.html":{},"classes/activities.html":{}}}],["activitysetup",{"_index":4094,"title":{},"body":{"classes/UpdateActivitiesConfigInput.html":{}}}],["actualización",{"_index":5064,"title":{},"body":{"miscellaneous/variables.html":{}}}],["add",{"_index":1792,"title":{},"body":{"injectables/ContentService.html":{},"miscellaneous/variables.html":{}}}],["added",{"_index":4309,"title":{},"body":{"injectables/UserConfigService.html":{}}}],["additional",{"_index":976,"title":{},"body":{"classes/Applicant.html":{},"classes/ApplicantState.html":{},"classes/Attachment.html":{},"classes/Business.html":{},"classes/EntrepreneurRelationship.html":{},"classes/Evaluation.html":{},"interfaces/IAttachment.html":{},"classes/ResourcesReply.html":{},"injectables/UserConfigService.html":{},"classes/UserLog.html":{},"miscellaneous/variables.html":{}}}],["addon",{"_index":2899,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["addresource",{"_index":1781,"title":{},"body":{"injectables/ContentService.html":{}}}],["addresource(contentid",{"_index":1790,"title":{},"body":{"injectables/ContentService.html":{}}}],["addtablejoin",{"_index":3841,"title":{},"body":{"injectables/TableService.html":{}}}],["addtablejoin(undefined",{"_index":3848,"title":{},"body":{"injectables/TableService.html":{}}}],["addtablejoininput",{"_index":620,"title":{"classes/AddTableJoinInput.html":{}},"body":{"classes/AddTableJoinInput.html":{},"injectables/TableService.html":{}}}],["addtoset",{"_index":1450,"title":{},"body":{"injectables/BusinessService.html":{},"injectables/ConfigNotificationsService.html":{},"injectables/ContentService.html":{},"injectables/TableService.html":{}}}],["admin",{"_index":1161,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["admin.auth().createuser",{"_index":1186,"title":{},"body":{"injectables/AuthService.html":{}}}],["admin.auth().deleteuser(uid",{"_index":1195,"title":{},"body":{"injectables/AuthService.html":{}}}],["admin.auth().getuser(decodedtoken.uid",{"_index":1178,"title":{},"body":{"injectables/AuthService.html":{}}}],["admin.auth().updateuser(uid",{"_index":1194,"title":{},"body":{"injectables/AuthService.html":{}}}],["admin.auth().verifyidtoken(idtoken",{"_index":1171,"title":{},"body":{"injectables/AuthService.html":{}}}],["admin.credential.cert(serviceaccount",{"_index":1168,"title":{},"body":{"injectables/AuthService.html":{}}}],["admin.initializeapp",{"_index":1166,"title":{},"body":{"injectables/AuthService.html":{}}}],["admin.serviceaccount",{"_index":1169,"title":{},"body":{"injectables/AuthService.html":{}}}],["administrador",{"_index":5106,"title":{},"body":{"miscellaneous/variables.html":{}}}],["administrator",{"_index":3104,"title":{},"body":{"injectables/InvitationsService.html":{}}}],["adminuser",{"_index":3042,"title":{},"body":{"injectables/InvitationsService.html":{},"injectables/UsersService.html":{}}}],["adminuser.uid",{"_index":3074,"title":{},"body":{"injectables/InvitationsService.html":{},"injectables/UsersService.html":{}}}],["advise",{"_index":4660,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["agenda",{"_index":2895,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["aggregate(aggregationpipeline",{"_index":1417,"title":{},"body":{"injectables/BusinessService.html":{}}}],["aggregatebuildoptions",{"_index":1380,"title":{},"body":{"injectables/BusinessService.html":{},"miscellaneous/variables.html":{}}}],["aggregation",{"_index":4970,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aggregation.push",{"_index":5002,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aggregation.push(...lookups",{"_index":5015,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aggregation.push(...output",{"_index":5035,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aggregation.push(foreignmatch",{"_index":5019,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aggregation.push(foreignsort",{"_index":5028,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aggregation.push(globalmatch",{"_index":5020,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aggregation.push(idsorting",{"_index":5024,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aggregation.push(match",{"_index":5014,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aggregation.push(project",{"_index":5007,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aggregation.push(sort",{"_index":5027,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aggregation.push(virtualfields",{"_index":5008,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aggregationpipeline",{"_index":1414,"title":{},"body":{"injectables/BusinessService.html":{}}}],["al",{"_index":4536,"title":{},"body":{"injectables/UsersService.html":{}}}],["allocated",{"_index":423,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["allocation",{"_index":341,"title":{},"body":{"classes/ActivitiesConfig.html":{},"classes/Assign.html":{},"classes/activities.html":{}}}],["allocations",{"_index":345,"title":{},"body":{"classes/ActivitiesConfig.html":{},"classes/Assign.html":{},"classes/activities.html":{}}}],["allow_acta",{"_index":5084,"title":{},"body":{"miscellaneous/variables.html":{}}}],["allow_files",{"_index":5085,"title":{},"body":{"miscellaneous/variables.html":{}}}],["allow_multiple_devices",{"_index":2906,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["already",{"_index":2555,"title":{},"body":{"injectables/FormSubscriptionService.html":{},"injectables/InvitationsService.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["alternative_host_update_polls",{"_index":2946,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["alternative_hosts",{"_index":2889,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["alternative_hosts_email_notification",{"_index":2908,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["always",{"_index":5016,"title":{},"body":{"miscellaneous/variables.html":{}}}],["amazing",{"_index":4791,"title":{},"body":{"index.html":{}}}],["america/bogota",{"_index":2961,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["amount",{"_index":5011,"title":{},"body":{"miscellaneous/variables.html":{}}}],["announcement",{"_index":637,"title":{"classes/Announcement.html":{}},"body":{"classes/Announcement.html":{},"classes/AnnouncementApplicantArgs.html":{},"classes/AnnouncementApplicantsArgs.html":{},"modules/AnnouncementsModule.html":{},"injectables/AnnouncementsService.html":{},"classes/Applicant.html":{},"classes/ApplicantState.html":{},"classes/Attachment.html":{},"classes/CreateAnnouncementInput.html":{},"interfaces/IAttachment.html":{},"classes/SubmitAnnouncementDocInput.html":{}}}],["announcement.input",{"_index":789,"title":{},"body":{"injectables/AnnouncementsService.html":{},"classes/UpdateAnnouncementInput.html":{}}}],["announcement.input.ts",{"_index":1914,"title":{},"body":{"classes/CreateAnnouncementInput.html":{},"classes/UpdateAnnouncementInput.html":{}}}],["announcement.input.ts:12",{"_index":4103,"title":{},"body":{"classes/UpdateAnnouncementInput.html":{}}}],["announcement.input.ts:13",{"_index":1922,"title":{},"body":{"classes/CreateAnnouncementInput.html":{}}}],["announcement.input.ts:16",{"_index":4107,"title":{},"body":{"classes/UpdateAnnouncementInput.html":{}}}],["announcement.input.ts:17",{"_index":1916,"title":{},"body":{"classes/CreateAnnouncementInput.html":{}}}],["announcement.input.ts:20",{"_index":4104,"title":{},"body":{"classes/UpdateAnnouncementInput.html":{}}}],["announcement.input.ts:24",{"_index":1920,"title":{},"body":{"classes/CreateAnnouncementInput.html":{},"classes/UpdateAnnouncementInput.html":{}}}],["announcement.input.ts:28",{"_index":1928,"title":{},"body":{"classes/CreateAnnouncementInput.html":{},"classes/UpdateAnnouncementInput.html":{}}}],["announcement.input.ts:32",{"_index":4106,"title":{},"body":{"classes/UpdateAnnouncementInput.html":{}}}],["announcement.input.ts:34",{"_index":1926,"title":{},"body":{"classes/CreateAnnouncementInput.html":{},"classes/UpdateAnnouncementInput.html":{}}}],["announcement.input.ts:38",{"_index":4109,"title":{},"body":{"classes/UpdateAnnouncementInput.html":{}}}],["announcement.input.ts:40",{"_index":1924,"title":{},"body":{"classes/CreateAnnouncementInput.html":{}}}],["announcement.input.ts:42",{"_index":4108,"title":{},"body":{"classes/UpdateAnnouncementInput.html":{}}}],["announcement.input.ts:46",{"_index":1918,"title":{},"body":{"classes/CreateAnnouncementInput.html":{},"classes/UpdateAnnouncementInput.html":{}}}],["announcement.name",{"_index":765,"title":{},"body":{"modules/AnnouncementsModule.html":{}}}],["announcementapplicantargs",{"_index":732,"title":{"classes/AnnouncementApplicantArgs.html":{}},"body":{"classes/AnnouncementApplicantArgs.html":{}}}],["announcementapplicantsargs",{"_index":741,"title":{"classes/AnnouncementApplicantsArgs.html":{}},"body":{"classes/AnnouncementApplicantsArgs.html":{}}}],["announcementmodel",{"_index":771,"title":{},"body":{"injectables/AnnouncementsService.html":{}}}],["announcements",{"_index":639,"title":{},"body":{"classes/Announcement.html":{},"injectables/AnnouncementsService.html":{},"miscellaneous/enumerations.html":{},"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["announcements.resolver",{"_index":761,"title":{},"body":{"modules/AnnouncementsModule.html":{}}}],["announcements.service",{"_index":759,"title":{},"body":{"modules/AnnouncementsModule.html":{}}}],["announcements/announcements.module",{"_index":875,"title":{},"body":{"modules/AppModule.html":{}}}],["announcements_challenges",{"_index":4695,"title":{},"body":{"miscellaneous/enumerations.html":{},"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["announcements_create",{"_index":4697,"title":{},"body":{"miscellaneous/enumerations.html":{},"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["announcements_edit",{"_index":4698,"title":{},"body":{"miscellaneous/enumerations.html":{},"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["announcements_edit_challenge",{"_index":4696,"title":{},"body":{"miscellaneous/enumerations.html":{},"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["announcements_view",{"_index":4694,"title":{},"body":{"miscellaneous/enumerations.html":{},"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["announcementschema",{"_index":730,"title":{},"body":{"classes/Announcement.html":{},"modules/AnnouncementsModule.html":{}}}],["announcementsmodule",{"_index":751,"title":{"modules/AnnouncementsModule.html":{}},"body":{"modules/AnnouncementsModule.html":{},"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["announcementsresolver",{"_index":760,"title":{},"body":{"modules/AnnouncementsModule.html":{}}}],["announcementsservice",{"_index":757,"title":{"injectables/AnnouncementsService.html":{}},"body":{"modules/AnnouncementsModule.html":{},"injectables/AnnouncementsService.html":{},"overview.html":{}}}],["announcementtarget",{"_index":3746,"title":{},"body":{"classes/SubmitAnnouncementDocInput.html":{}}}],["announcementtargets",{"_index":707,"title":{},"body":{"classes/Announcement.html":{},"classes/CreateAnnouncementInput.html":{},"classes/SelectApplicantsArgs.html":{},"miscellaneous/enumerations.html":{}}}],["announcementtargets.entrepreneurs",{"_index":728,"title":{},"body":{"classes/Announcement.html":{}}}],["announcementtypes",{"_index":716,"title":{},"body":{"classes/Announcement.html":{},"classes/CreateAnnouncementInput.html":{},"miscellaneous/enumerations.html":{}}}],["announcent",{"_index":670,"title":{},"body":{"classes/Announcement.html":{},"classes/CreateAnnouncementInput.html":{}}}],["anonymous",{"_index":982,"title":{},"body":{"classes/Applicant.html":{},"classes/ApplicantState.html":{},"classes/Attachment.html":{},"interfaces/IAttachment.html":{}}}],["ans",{"_index":501,"title":{},"body":{"injectables/ActivitiesConfigService.html":{},"injectables/ConfigurationAppService.html":{},"injectables/NotificationsService.html":{},"injectables/TicketCategoriesService.html":{}}}],["ans.toobject",{"_index":3251,"title":{},"body":{"injectables/NotificationsService.html":{},"injectables/TicketCategoriesService.html":{}}}],["ans[k",{"_index":503,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["ansdata",{"_index":2969,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["answer",{"_index":2796,"title":{},"body":{"classes/HelpDeskTicket.html":{},"classes/TicketChild.html":{}}}],["answerby",{"_index":2043,"title":{},"body":{"classes/CreateHelpDeskInput.html":{},"classes/HelpDeskTicket.html":{},"classes/TicketChild.html":{}}}],["answerbyid",{"_index":2044,"title":{},"body":{"classes/CreateHelpDeskInput.html":{},"classes/HelpDeskTicket.html":{},"classes/TicketChild.html":{}}}],["answered",{"_index":4655,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["api",{"_index":92,"title":{},"body":{"classes/AWSSESProvider.html":{},"injectables/EmailsService.html":{},"injectables/IntegrationsService.html":{},"classes/SendGridProvider.html":{}}}],["apikey",{"_index":17,"title":{},"body":{"classes/AWSSESProvider.html":{},"injectables/EmailsService.html":{},"classes/SendGridProvider.html":{}}}],["apiversion",{"_index":96,"title":{},"body":{"classes/AWSSESProvider.html":{}}}],["apizoom",{"_index":2829,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["apollo",{"_index":4584,"title":{},"body":{"dependencies.html":{}}}],["apollo/server/plugin/landingpage/default",{"_index":855,"title":{},"body":{"modules/AppModule.html":{}}}],["apollodriver",{"_index":840,"title":{},"body":{"modules/AppModule.html":{}}}],["apollodriverconfig",{"_index":841,"title":{},"body":{"modules/AppModule.html":{}}}],["apolloserverpluginlandingpagelocaldefault",{"_index":854,"title":{},"body":{"modules/AppModule.html":{}}}],["app",{"_index":1152,"title":{},"body":{"injectables/AuthService.html":{},"classes/ConfigEvaluation.html":{},"classes/ConfigurationApp.html":{},"injectables/ConfigurationAppService.html":{},"classes/Download.html":{},"injectables/DownloadsService.html":{},"classes/Integration.html":{},"classes/Invitation.html":{},"modules/LoggerModule.html":{},"classes/Rating.html":{},"classes/Rol.html":{},"injectables/RolService.html":{},"injectables/TypesEventsService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["app.entity",{"_index":1663,"title":{},"body":{"modules/ConfigurationAppModule.html":{},"injectables/ConfigurationAppService.html":{}}}],["app.entity.ts",{"_index":1637,"title":{},"body":{"classes/ConfigurationApp.html":{}}}],["app.entity.ts:12",{"_index":1643,"title":{},"body":{"classes/ConfigurationApp.html":{}}}],["app.entity.ts:16",{"_index":1647,"title":{},"body":{"classes/ConfigurationApp.html":{}}}],["app.entity.ts:20",{"_index":1650,"title":{},"body":{"classes/ConfigurationApp.html":{}}}],["app.entity.ts:24",{"_index":1648,"title":{},"body":{"classes/ConfigurationApp.html":{}}}],["app.entity.ts:28",{"_index":1644,"title":{},"body":{"classes/ConfigurationApp.html":{}}}],["app.entity.ts:32",{"_index":1645,"title":{},"body":{"classes/ConfigurationApp.html":{}}}],["app.entity.ts:35",{"_index":1646,"title":{},"body":{"classes/ConfigurationApp.html":{}}}],["app.entity.ts:38",{"_index":1649,"title":{},"body":{"classes/ConfigurationApp.html":{}}}],["app.input",{"_index":1680,"title":{},"body":{"injectables/ConfigurationAppService.html":{}}}],["app.input.ts",{"_index":4130,"title":{},"body":{"classes/UpdateConfigurationAppInput.html":{}}}],["app.input.ts:12",{"_index":4131,"title":{},"body":{"classes/UpdateConfigurationAppInput.html":{}}}],["app.input.ts:16",{"_index":4134,"title":{},"body":{"classes/UpdateConfigurationAppInput.html":{}}}],["app.input.ts:20",{"_index":4136,"title":{},"body":{"classes/UpdateConfigurationAppInput.html":{}}}],["app.input.ts:24",{"_index":4135,"title":{},"body":{"classes/UpdateConfigurationAppInput.html":{}}}],["app.input.ts:28",{"_index":4132,"title":{},"body":{"classes/UpdateConfigurationAppInput.html":{}}}],["app.input.ts:32",{"_index":4133,"title":{},"body":{"classes/UpdateConfigurationAppInput.html":{}}}],["app.module",{"_index":901,"title":{},"body":{"modules/AppModule.html":{}}}],["app.module.ts",{"_index":1658,"title":{},"body":{"modules/ConfigurationAppModule.html":{}}}],["app.resolver",{"_index":1661,"title":{},"body":{"modules/ConfigurationAppModule.html":{}}}],["app.service",{"_index":1659,"title":{},"body":{"modules/ConfigurationAppModule.html":{}}}],["app.service.ts",{"_index":1666,"title":{},"body":{"injectables/ConfigurationAppService.html":{}}}],["app.service.ts:12",{"_index":1671,"title":{},"body":{"injectables/ConfigurationAppService.html":{}}}],["app.service.ts:25",{"_index":1676,"title":{},"body":{"injectables/ConfigurationAppService.html":{}}}],["app.service.ts:35",{"_index":1672,"title":{},"body":{"injectables/ConfigurationAppService.html":{}}}],["app.service.ts:42",{"_index":1679,"title":{},"body":{"injectables/ConfigurationAppService.html":{}}}],["app.service.ts:60",{"_index":1674,"title":{},"body":{"injectables/ConfigurationAppService.html":{}}}],["app/configuration",{"_index":900,"title":{},"body":{"modules/AppModule.html":{},"modules/ConfigurationAppModule.html":{},"injectables/ConfigurationAppService.html":{}}}],["app/dto/update",{"_index":4129,"title":{},"body":{"classes/UpdateConfigurationAppInput.html":{}}}],["app/entities/configuration",{"_index":1636,"title":{},"body":{"classes/ConfigurationApp.html":{}}}],["appconfiguration",{"_index":847,"title":{},"body":{"modules/AppModule.html":{},"injectables/AwsService.html":{},"injectables/EmailsService.html":{},"injectables/InvitationsService.html":{}}}],["appenvironments",{"_index":849,"title":{},"body":{"modules/AppModule.html":{}}}],["appenvironments.development",{"_index":930,"title":{},"body":{"modules/AppModule.html":{}}}],["applicant",{"_index":952,"title":{"classes/Applicant.html":{}},"body":{"classes/Applicant.html":{},"modules/ApplicantModule.html":{},"classes/ApplicantState.html":{},"classes/Attachment.html":{},"classes/AttachmentSubmit.html":{},"interfaces/IAttachment.html":{},"classes/UpdateApplicantStateInput.html":{},"miscellaneous/enumerations.html":{}}}],["applicant.args.ts",{"_index":734,"title":{},"body":{"classes/AnnouncementApplicantArgs.html":{}}}],["applicant.args.ts:10",{"_index":738,"title":{},"body":{"classes/AnnouncementApplicantArgs.html":{}}}],["applicant.args.ts:14",{"_index":739,"title":{},"body":{"classes/AnnouncementApplicantArgs.html":{}}}],["applicant.input",{"_index":4115,"title":{},"body":{"classes/UpdateApplicantInput.html":{}}}],["applicant.input.ts",{"_index":4112,"title":{},"body":{"classes/UpdateApplicantInput.html":{}}}],["applicant.input.ts:10",{"_index":4113,"title":{},"body":{"classes/UpdateApplicantInput.html":{}}}],["applicant.name",{"_index":1020,"title":{},"body":{"modules/ApplicantModule.html":{}}}],["applicant.resolver",{"_index":1016,"title":{},"body":{"modules/ApplicantModule.html":{}}}],["applicant.service",{"_index":1014,"title":{},"body":{"modules/ApplicantModule.html":{}}}],["applicant/applicant.module",{"_index":877,"title":{},"body":{"modules/AppModule.html":{}}}],["applicantargs",{"_index":1004,"title":{"classes/ApplicantArgs.html":{}},"body":{"classes/ApplicantArgs.html":{}}}],["applicantmodule",{"_index":755,"title":{"modules/ApplicantModule.html":{}},"body":{"modules/AnnouncementsModule.html":{},"modules/AppModule.html":{},"modules/ApplicantModule.html":{},"modules.html":{},"overview.html":{}}}],["applicantresolver",{"_index":1015,"title":{},"body":{"modules/ApplicantModule.html":{}}}],["applicants.args.ts",{"_index":742,"title":{},"body":{"classes/AnnouncementApplicantsArgs.html":{},"classes/SelectApplicantsArgs.html":{}}}],["applicants.args.ts:11",{"_index":743,"title":{},"body":{"classes/AnnouncementApplicantsArgs.html":{}}}],["applicants.args.ts:13",{"_index":3530,"title":{},"body":{"classes/SelectApplicantsArgs.html":{}}}],["applicants.args.ts:15",{"_index":746,"title":{},"body":{"classes/AnnouncementApplicantsArgs.html":{}}}],["applicants.args.ts:17",{"_index":3535,"title":{},"body":{"classes/SelectApplicantsArgs.html":{}}}],["applicants.args.ts:21",{"_index":3531,"title":{},"body":{"classes/SelectApplicantsArgs.html":{}}}],["applicants.args.ts:25",{"_index":3533,"title":{},"body":{"classes/SelectApplicantsArgs.html":{}}}],["applicants.args.ts:29",{"_index":3532,"title":{},"body":{"classes/SelectApplicantsArgs.html":{}}}],["applicantschema",{"_index":998,"title":{},"body":{"classes/Applicant.html":{},"modules/ApplicantModule.html":{},"classes/ApplicantState.html":{},"classes/Attachment.html":{},"interfaces/IAttachment.html":{}}}],["applicantservice",{"_index":1012,"title":{},"body":{"modules/ApplicantModule.html":{},"overview.html":{}}}],["applicantstate",{"_index":984,"title":{"classes/ApplicantState.html":{}},"body":{"classes/Applicant.html":{},"classes/ApplicantState.html":{},"classes/Attachment.html":{},"interfaces/IAttachment.html":{}}}],["application/x",{"_index":2878,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["applications",{"_index":4764,"title":{},"body":{"index.html":{}}}],["applicationstates",{"_index":744,"title":{},"body":{"classes/AnnouncementApplicantsArgs.html":{},"classes/Applicant.html":{},"classes/ApplicantArgs.html":{},"classes/ApplicantState.html":{},"classes/Attachment.html":{},"classes/AttachmentSubmit.html":{},"interfaces/IAttachment.html":{},"classes/SelectApplicantsArgs.html":{},"classes/UpdateApplicantStateInput.html":{},"miscellaneous/enumerations.html":{}}}],["applicationstates.enrolled",{"_index":997,"title":{},"body":{"classes/Applicant.html":{},"classes/ApplicantState.html":{},"classes/Attachment.html":{},"interfaces/IAttachment.html":{}}}],["applogger",{"_index":73,"title":{},"body":{"classes/AWSSESProvider.html":{},"injectables/AuthService.html":{},"injectables/EmailsService.html":{},"injectables/InvitationsService.html":{},"modules/LoggerModule.html":{},"classes/SendGridProvider.html":{},"overview.html":{}}}],["apply",{"_index":4998,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appmodule",{"_index":811,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approval_type",{"_index":2909,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["approved",{"_index":4661,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["aprobado",{"_index":4728,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["aqu&iacute",{"_index":4539,"title":{},"body":{"injectables/UsersService.html":{}}}],["args",{"_index":735,"title":{},"body":{"classes/AnnouncementApplicantArgs.html":{},"classes/AnnouncementApplicantsArgs.html":{},"classes/ApplicantArgs.html":{},"classes/CloseFormSubscriptionArgs.html":{},"classes/ContactArgs.html":{},"classes/CreateInvitationArgs.html":{},"classes/EntrepreneurStartupArgs.html":{},"classes/FindFormsArgs.html":{},"classes/FindInvitationArgs.html":{},"classes/FindUsersArgs.html":{},"classes/FormSubmission.html":{},"classes/FormSubmissionFiles.html":{},"classes/GetSubmittedFilesArgs.html":{},"classes/Hours.html":{},"classes/LinkExpertsToPhaseArgs.html":{},"classes/LinkStartupToPhaseArgs.html":{},"classes/LinkStartupsExpertsArgs.html":{},"classes/LinkWithTargetsArgs.html":{},"classes/LinkWithTargetsByRequestArgs.html":{},"classes/SelectApplicantsArgs.html":{},"classes/SubmitFileInput.html":{},"classes/SubmitFormSubscriptionArgs.html":{},"classes/UpdateExpertInput.html":{}}}],["args/close",{"_index":2534,"title":{},"body":{"injectables/FormSubscriptionService.html":{}}}],["args/create",{"_index":3053,"title":{},"body":{"injectables/InvitationsService.html":{}}}],["args/find",{"_index":2643,"title":{},"body":{"injectables/FormsService.html":{},"injectables/UsersService.html":{}}}],["args/submit",{"_index":2528,"title":{},"body":{"injectables/FormSubscriptionService.html":{}}}],["argstype",{"_index":740,"title":{},"body":{"classes/AnnouncementApplicantArgs.html":{},"classes/AnnouncementApplicantsArgs.html":{},"classes/ApplicantArgs.html":{},"classes/CloseFormSubscriptionArgs.html":{},"classes/ContactArgs.html":{},"classes/CreateInvitationArgs.html":{},"classes/EntrepreneurStartupArgs.html":{},"classes/FindFormsArgs.html":{},"classes/FindInvitationArgs.html":{},"classes/FindUsersArgs.html":{},"classes/GetSubmittedFilesArgs.html":{},"classes/LinkExpertsToPhaseArgs.html":{},"classes/LinkStartupToPhaseArgs.html":{},"classes/LinkStartupsExpertsArgs.html":{},"classes/LinkWithTargetsArgs.html":{},"classes/LinkWithTargetsByRequestArgs.html":{},"classes/SelectApplicantsArgs.html":{},"classes/SubmitFormSubscriptionArgs.html":{}}}],["array",{"_index":4274,"title":{},"body":{"classes/User.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["asesoría",{"_index":5087,"title":{},"body":{"miscellaneous/variables.html":{}}}],["asignar",{"_index":4890,"title":{},"body":{"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["assessmentavailable",{"_index":4650,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["assign",{"_index":352,"title":{"classes/Assign.html":{}},"body":{"classes/ActivitiesConfig.html":{},"injectables/ActivitiesConfigService.html":{},"classes/Applicant.html":{},"classes/ApplicantState.html":{},"classes/Assign.html":{},"classes/Attachment.html":{},"interfaces/IAttachment.html":{},"classes/activities.html":{}}}],["assign_item",{"_index":469,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["assigned",{"_index":363,"title":{},"body":{"classes/ActivitiesConfig.html":{},"injectables/ActivitiesConfigService.html":{},"classes/Assign.html":{},"classes/CreateFormInput.html":{},"classes/UpdateActivitiesConfigInput.html":{},"classes/activities.html":{}}}],["assignsetup",{"_index":4096,"title":{},"body":{"classes/UpdateActivitiesConfigInput.html":{}}}],["associated",{"_index":963,"title":{},"body":{"classes/Applicant.html":{},"classes/ApplicantState.html":{},"classes/Attachment.html":{},"classes/CreateTableConfigInput.html":{},"interfaces/IAttachment.html":{}}}],["async",{"_index":23,"title":{},"body":{"classes/AWSSESProvider.html":{},"injectables/ActaService.html":{},"injectables/ActivitiesConfigService.html":{},"injectables/AnnouncementsService.html":{},"modules/AppModule.html":{},"injectables/AuthCodeService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AwsService.html":{},"injectables/BusinessService.html":{},"injectables/ConfigEvaluationsService.html":{},"injectables/ConfigNotificationsService.html":{},"injectables/ConfigurationAppService.html":{},"injectables/ContentService.html":{},"injectables/DownloadsService.html":{},"injectables/EmailsService.html":{},"injectables/FormSubscriptionService.html":{},"injectables/FormTagService.html":{},"injectables/FormsService.html":{},"guards/GqlAuthGuard.html":{},"injectables/HelpDeskService.html":{},"injectables/IntegrationsService.html":{},"injectables/InvitationsService.html":{},"injectables/NotificationsService.html":{},"injectables/ParticipationEventsService.html":{},"injectables/ResourcesService.html":{},"injectables/RolService.html":{},"classes/SendGridProvider.html":{},"injectables/SitesService.html":{},"injectables/StagesService.html":{},"controllers/StorageController.html":{},"injectables/TableConfigService.html":{},"injectables/TableService.html":{},"injectables/TicketCategoriesService.html":{},"injectables/TypesEventsService.html":{},"injectables/TypesNotificationsService.html":{},"injectables/UserConfigService.html":{},"injectables/UserLogService.html":{},"injectables/UsersService.html":{}}}],["attachment",{"_index":996,"title":{"classes/Attachment.html":{}},"body":{"classes/Applicant.html":{},"classes/ApplicantState.html":{},"classes/Attachment.html":{},"classes/AttachmentSubmit.html":{},"classes/CreateHelpDeskInput.html":{},"classes/HelpDeskTicket.html":{},"interfaces/IAttachment.html":{},"classes/SendGridProvider.html":{},"classes/TicketChild.html":{},"classes/UpdateApplicantStateInput.html":{}}}],["attachmentsubmit",{"_index":1031,"title":{"classes/AttachmentSubmit.html":{}},"body":{"classes/AttachmentSubmit.html":{},"classes/UpdateApplicantStateInput.html":{}}}],["attempted",{"_index":5052,"title":{},"body":{"miscellaneous/variables.html":{}}}],["attendance",{"_index":1765,"title":{},"body":{"classes/Content.html":{}}}],["attendancetype",{"_index":1955,"title":{},"body":{"classes/CreateEventInput.html":{},"classes/Event.html":{},"classes/ExpertEventLink.html":{},"classes/ParticipantEventLink.html":{},"classes/TeamCoachLink.html":{}}}],["attendedby",{"_index":1763,"title":{},"body":{"classes/Content.html":{}}}],["audio",{"_index":2910,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["auth",{"_index":866,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthCodeModule.html":{},"injectables/AuthCodeService.html":{}}}],["auth.controller",{"_index":1128,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.guard.ts",{"_index":1093,"title":{},"body":{"guards/AuthGuard.html":{},"guards/GqlAuthGuard.html":{}}}],["auth.guard.ts:12",{"_index":1103,"title":{},"body":{"guards/AuthGuard.html":{}}}],["auth.guard.ts:13",{"_index":2663,"title":{},"body":{"guards/GqlAuthGuard.html":{}}}],["auth.guard.ts:18",{"_index":1106,"title":{},"body":{"guards/AuthGuard.html":{},"guards/GqlAuthGuard.html":{}}}],["auth.guard.ts:33",{"_index":1108,"title":{},"body":{"guards/AuthGuard.html":{}}}],["auth.guard.ts:34",{"_index":2664,"title":{},"body":{"guards/GqlAuthGuard.html":{}}}],["auth.service",{"_index":1110,"title":{},"body":{"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"guards/GqlAuthGuard.html":{}}}],["auth/auth.module",{"_index":853,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/auth.service",{"_index":860,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/types/auth",{"_index":1682,"title":{},"body":{"injectables/ConfigurationAppService.html":{},"injectables/ContentService.html":{},"injectables/NotificationsService.html":{}}}],["authcode",{"_index":1040,"title":{"classes/AuthCode.html":{}},"body":{"classes/AuthCode.html":{},"modules/AuthCodeModule.html":{},"injectables/AuthCodeService.html":{}}}],["authcode.name",{"_index":1067,"title":{},"body":{"modules/AuthCodeModule.html":{}}}],["authcodemodel",{"_index":1071,"title":{},"body":{"injectables/AuthCodeService.html":{}}}],["authcodemodule",{"_index":814,"title":{"modules/AuthCodeModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthCodeModule.html":{},"modules.html":{},"overview.html":{}}}],["authcoderesolver",{"_index":1063,"title":{},"body":{"modules/AuthCodeModule.html":{}}}],["authcodeschema",{"_index":1055,"title":{},"body":{"classes/AuthCode.html":{},"modules/AuthCodeModule.html":{}}}],["authcodeservice",{"_index":1060,"title":{"injectables/AuthCodeService.html":{}},"body":{"modules/AuthCodeModule.html":{},"injectables/AuthCodeService.html":{},"overview.html":{}}}],["authcontroller",{"_index":1127,"title":{},"body":{"modules/AuthModule.html":{}}}],["authentication_exception",{"_index":2912,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["authguard",{"_index":1090,"title":{"guards/AuthGuard.html":{}},"body":{"guards/AuthGuard.html":{},"miscellaneous/variables.html":{}}}],["authmodule",{"_index":262,"title":{"modules/AuthModule.html":{}},"body":{"modules/ActaModule.html":{},"modules/ActivitiesConfigModule.html":{},"modules/AnnouncementsModule.html":{},"modules/AppModule.html":{},"modules/ApplicantModule.html":{},"modules/AuthCodeModule.html":{},"modules/AuthModule.html":{},"modules/BusinessModule.html":{},"modules/ConfigEvaluationsModule.html":{},"modules/ConfigurationAppModule.html":{},"modules/ContentModule.html":{},"modules/DownloadsModule.html":{},"modules/EntrepreneurModule.html":{},"modules/EvaluationsModule.html":{},"modules/EventsModule.html":{},"modules/ExpertModule.html":{},"modules/FormsModule.html":{},"modules/HelpDeskModule.html":{},"modules/IntegrationsModule.html":{},"modules/InvitationsModule.html":{},"modules/ParticipationEventsModule.html":{},"modules/PhasesModule.html":{},"modules/ResourcesModule.html":{},"modules/ResourcesRepliesModule.html":{},"modules/RolModule.html":{},"modules/SitesModule.html":{},"modules/StagesModule.html":{},"modules/StartupModule.html":{},"modules/TableModule.html":{},"modules/TermsOfUseModule.html":{},"modules/TypesEventsModule.html":{},"modules/UserConfigModule.html":{},"modules/UserLogModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":4797,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authorization",{"_index":1044,"title":{},"body":{"classes/AuthCode.html":{},"injectables/IntegrationsService.html":{}}}],["authorize",{"_index":1185,"title":{},"body":{"injectables/AuthService.html":{}}}],["authservice",{"_index":859,"title":{"injectables/AuthService.html":{}},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/GqlAuthGuard.html":{},"injectables/InvitationsService.html":{},"overview.html":{}}}],["authservice.validatetoken(token",{"_index":948,"title":{},"body":{"modules/AppModule.html":{}}}],["authuser",{"_index":773,"title":{},"body":{"injectables/AnnouncementsService.html":{},"injectables/AuthCodeService.html":{},"injectables/AuthService.html":{},"injectables/BusinessService.html":{},"injectables/ConfigEvaluationsService.html":{},"injectables/ConfigurationAppService.html":{},"injectables/ContentService.html":{},"injectables/FormsService.html":{},"injectables/HelpDeskService.html":{},"injectables/InvitationsService.html":{},"injectables/NotificationsService.html":{},"injectables/TableConfigService.html":{},"injectables/UserLogService.html":{},"miscellaneous/functions.html":{},"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["auto_add_invited_external_users",{"_index":2949,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["auto_recording",{"_index":2913,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["autoschemafile",{"_index":940,"title":{},"body":{"modules/AppModule.html":{}}}],["available",{"_index":107,"title":{},"body":{"classes/AWSSESProvider.html":{},"classes/Announcement.html":{},"classes/CreateAnnouncementInput.html":{},"injectables/EmailsService.html":{},"classes/SendGridProvider.html":{}}}],["available.'})@isdate",{"_index":1923,"title":{},"body":{"classes/CreateAnnouncementInput.html":{}}}],["available.'})@prop({type",{"_index":705,"title":{},"body":{"classes/Announcement.html":{}}}],["avoid",{"_index":544,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["await",{"_index":134,"title":{},"body":{"classes/AWSSESProvider.html":{},"injectables/ActaService.html":{},"injectables/ActivitiesConfigService.html":{},"injectables/AnnouncementsService.html":{},"modules/AppModule.html":{},"injectables/AuthCodeService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AwsService.html":{},"injectables/BusinessService.html":{},"injectables/ConfigEvaluationsService.html":{},"injectables/ConfigNotificationsService.html":{},"injectables/ConfigurationAppService.html":{},"injectables/ContentService.html":{},"injectables/DownloadsService.html":{},"injectables/EmailsService.html":{},"injectables/FormSubscriptionService.html":{},"injectables/FormTagService.html":{},"injectables/FormsService.html":{},"guards/GqlAuthGuard.html":{},"injectables/HelpDeskService.html":{},"injectables/IntegrationsService.html":{},"injectables/InvitationsService.html":{},"injectables/NotificationsService.html":{},"injectables/ParticipationEventsService.html":{},"injectables/ResourcesService.html":{},"injectables/RolService.html":{},"classes/SendGridProvider.html":{},"injectables/SitesService.html":{},"injectables/StagesService.html":{},"controllers/StorageController.html":{},"injectables/TableConfigService.html":{},"injectables/TableService.html":{},"injectables/TicketCategoriesService.html":{},"injectables/TypesEventsService.html":{},"injectables/TypesNotificationsService.html":{},"injectables/UserConfigService.html":{},"injectables/UserLogService.html":{},"injectables/UsersService.html":{}}}],["aws",{"_index":8,"title":{},"body":{"classes/AWSSESProvider.html":{},"injectables/AwsService.html":{},"dependencies.html":{}}}],["aws/aws.service",{"_index":3734,"title":{},"body":{"modules/StorageModule.html":{}}}],["awss3publicuri",{"_index":1255,"title":{},"body":{"injectables/AwsService.html":{}}}],["awsservice",{"_index":1197,"title":{"injectables/AwsService.html":{}},"body":{"injectables/AwsService.html":{},"modules/StorageModule.html":{}}}],["awssesprovider",{"_index":1,"title":{"classes/AWSSESProvider.html":{}},"body":{"classes/AWSSESProvider.html":{},"modules/EmailsModule.html":{}}}],["axios",{"_index":2858,"title":{},"body":{"injectables/IntegrationsService.html":{},"dependencies.html":{}}}],["axios(config",{"_index":2886,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["ayuda",{"_index":4862,"title":{},"body":{"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["backers",{"_index":4792,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":75,"title":{},"body":{"classes/AWSSESProvider.html":{},"injectables/EmailsService.html":{},"classes/SendGridProvider.html":{}}}],["bag",{"_index":4810,"title":{},"body":{"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["base",{"_index":4882,"title":{},"body":{"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["basephase",{"_index":2087,"title":{},"body":{"classes/CreatePhaseInput.html":{},"classes/Phase.html":{}}}],["basic",{"_index":2881,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["batch",{"_index":340,"title":{},"body":{"classes/ActivitiesConfig.html":{},"injectables/ActivitiesConfigService.html":{},"classes/Applicant.html":{},"classes/ApplicantState.html":{},"classes/Assign.html":{},"classes/Attachment.html":{},"injectables/ConfigEvaluationsService.html":{},"classes/Content.html":{},"injectables/ContentService.html":{},"classes/CreateEventInput.html":{},"classes/Event.html":{},"classes/ExpertEventLink.html":{},"interfaces/IAttachment.html":{},"classes/ParticipantEventLink.html":{},"classes/TeamCoachLink.html":{},"classes/activities.html":{},"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["batches",{"_index":524,"title":{},"body":{"injectables/ActivitiesConfigService.html":{},"classes/Phase.html":{}}}],["batchid",{"_index":1811,"title":{},"body":{"injectables/ContentService.html":{},"classes/CreateActivitiesConfigInput.html":{}}}],["batchids",{"_index":3520,"title":{},"body":{"classes/SearchBatchInput.html":{}}}],["bearer",{"_index":1121,"title":{},"body":{"guards/AuthGuard.html":{},"guards/GqlAuthGuard.html":{},"injectables/IntegrationsService.html":{}}}],["bearertoken",{"_index":4947,"title":{},"body":{"miscellaneous/variables.html":{}}}],["begin",{"_index":1577,"title":{},"body":{"injectables/ConfigEvaluationsService.html":{},"injectables/UserLogService.html":{}}}],["begin.sethours(0",{"_index":1579,"title":{},"body":{"injectables/ConfigEvaluationsService.html":{},"injectables/UserLogService.html":{}}}],["belongs",{"_index":3335,"title":{},"body":{"classes/Phase.html":{}}}],["benefactors",{"_index":1638,"title":{},"body":{"classes/ConfigurationApp.html":{},"classes/UpdateConfigurationAppInput.html":{}}}],["between",{"_index":1290,"title":{},"body":{"classes/Business.html":{},"classes/BusinessRelationship.html":{},"injectables/BusinessService.html":{},"classes/Entrepreneur.html":{},"classes/EntrepreneurRelationship.html":{},"classes/StartupRelationship.html":{},"classes/TableConfig.html":{},"classes/TableJoin.html":{}}}],["body",{"_index":127,"title":{},"body":{"classes/AWSSESProvider.html":{},"injectables/AwsService.html":{},"classes/ContactArgs.html":{},"classes/CreateHelpDeskInput.html":{},"controllers/EmailsController.html":{},"classes/HelpDeskTicket.html":{},"controllers/InvitationsController.html":{},"controllers/StorageController.html":{},"classes/TicketChild.html":{}}}],["body.name",{"_index":3726,"title":{},"body":{"controllers/StorageController.html":{}}}],["body.publicfile",{"_index":3727,"title":{},"body":{"controllers/StorageController.html":{}}}],["bolsa",{"_index":4904,"title":{},"body":{"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["boolean",{"_index":209,"title":{},"body":{"classes/Acta.html":{},"classes/ActivitiesConfig.html":{},"classes/Announcement.html":{},"classes/Assign.html":{},"injectables/AwsService.html":{},"classes/BusinessRelationship.html":{},"classes/ConfigEvaluation.html":{},"classes/ContactServiceLink.html":{},"classes/ContactServicesInput.html":{},"classes/Content.html":{},"classes/CreateActaInput.html":{},"classes/CreateHelpDeskInput.html":{},"classes/CreatePhaseInput.html":{},"classes/CreateResourceInput.html":{},"classes/CreateTypesEventInput.html":{},"classes/Entrepreneur.html":{},"classes/EntrepreneurRelationship-1.html":{},"classes/Evaluation.html":{},"classes/Event.html":{},"classes/Expert.html":{},"classes/ExpertEventLink.html":{},"classes/Form.html":{},"classes/FormSubscription.html":{},"injectables/HelpDeskService.html":{},"classes/HelpDeskTicket.html":{},"classes/Invitation.html":{},"classes/Notification.html":{},"classes/Notification-1.html":{},"classes/ParticipantEventLink.html":{},"classes/Phase.html":{},"classes/PhaseExpertRelationship.html":{},"classes/PhaseRelationship.html":{},"classes/Resource.html":{},"classes/ResourcesReply.html":{},"classes/Site.html":{},"classes/Stage.html":{},"classes/Startup.html":{},"classes/StartupLink.html":{},"classes/StartupRelationship.html":{},"classes/TeamCoachLink.html":{},"classes/TicketCategory.html":{},"classes/TicketChild.html":{},"classes/TypesEvent.html":{},"classes/UpdateActaInput.html":{},"classes/UpdateActivitiesConfigInput.html":{},"classes/UpdateAnnouncementInput.html":{},"classes/UpdateConfigEvaluationInput.html":{},"classes/UpdateContentInput.html":{},"classes/UpdateEventInput.html":{},"classes/UpdateFormInput.html":{},"classes/UpdateNotificationInput.html":{},"classes/UpdateResourceInput.html":{},"classes/UpdateResourcesReplyInput.html":{},"classes/UpdateSiteInput.html":{},"classes/UpdateStageInput.html":{},"classes/UpdateTypesEventInput.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"classes/activities.html":{},"interfaces/item_permission.html":{}}}],["bootstrap",{"_index":255,"title":{},"body":{"modules/ActaModule.html":{},"modules/ActivitiesConfigModule.html":{},"modules/AnnouncementsModule.html":{},"modules/AppModule.html":{},"modules/ApplicantModule.html":{},"modules/AuthCodeModule.html":{},"modules/AuthModule.html":{},"modules/BusinessModule.html":{},"modules/ConfigEvaluationsModule.html":{},"modules/ConfigNotificationsModule.html":{},"modules/ConfigurationAppModule.html":{},"modules/ContentModule.html":{},"modules/DownloadsModule.html":{},"modules/EmailsModule.html":{},"modules/EntrepreneurModule.html":{},"modules/EvaluationsModule.html":{},"modules/EventsModule.html":{},"modules/ExpertModule.html":{},"modules/FormsModule.html":{},"modules/HelpDeskModule.html":{},"modules/IntegrationsModule.html":{},"modules/InvitationsModule.html":{},"modules/LoggerModule.html":{},"modules/NotificationsModule.html":{},"modules/ParticipationEventsModule.html":{},"modules/PhasesModule.html":{},"modules/ResourcesModule.html":{},"modules/ResourcesRepliesModule.html":{},"modules/RolModule.html":{},"modules/SitesModule.html":{},"modules/StagesModule.html":{},"modules/StartupModule.html":{},"modules/StorageModule.html":{},"modules/TableModule.html":{},"modules/TermsOfUseModule.html":{},"modules/TicketCategoriesModule.html":{},"modules/TypesEventsModule.html":{},"modules/TypesNotificationsModule.html":{},"modules/UserConfigModule.html":{},"modules/UserLogModule.html":{},"modules/UsersModule.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["borrar",{"_index":4859,"title":{},"body":{"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["break",{"_index":1694,"title":{},"body":{"injectables/ConfigurationAppService.html":{},"injectables/ContentService.html":{},"injectables/StagesService.html":{}}}],["breakout_room",{"_index":2915,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["browse",{"_index":4938,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":4936,"title":{},"body":{"modules.html":{}}}],["bucket",{"_index":1258,"title":{},"body":{"injectables/AwsService.html":{}}}],["bucketname",{"_index":1219,"title":{},"body":{"injectables/AwsService.html":{}}}],["bucketname}/${filekey",{"_index":1256,"title":{},"body":{"injectables/AwsService.html":{}}}],["buffer",{"_index":1223,"title":{},"body":{"injectables/AwsService.html":{},"injectables/BusinessService.html":{},"injectables/DownloadsService.html":{},"classes/StorageService.html":{}}}],["buffer.from",{"_index":2882,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["buffer.from(ics.tostring()).tostring('base64",{"_index":3573,"title":{},"body":{"classes/SendGridProvider.html":{}}}],["build",{"_index":1382,"title":{},"body":{"injectables/BusinessService.html":{},"classes/CreateFormInput.html":{},"injectables/HelpDeskService.html":{},"miscellaneous/variables.html":{}}}],["buildaggregationfromrequest",{"_index":4950,"title":{},"body":{"miscellaneous/variables.html":{}}}],["building",{"_index":4760,"title":{},"body":{"index.html":{}}}],["buildnotification",{"_index":2705,"title":{},"body":{"injectables/HelpDeskService.html":{}}}],["buildnotification(ticket",{"_index":2711,"title":{},"body":{"injectables/HelpDeskService.html":{}}}],["buildworkbookbuffer",{"_index":5110,"title":{},"body":{"miscellaneous/variables.html":{}}}],["busca",{"_index":1842,"title":{},"body":{"injectables/ContentService.html":{}}}],["business",{"_index":1273,"title":{"classes/Business.html":{}},"body":{"classes/Business.html":{},"modules/BusinessModule.html":{},"classes/BusinessRelationship.html":{},"injectables/BusinessService.html":{},"classes/Entrepreneur.html":{},"classes/EntrepreneurRelationship.html":{},"classes/StartupRelationship.html":{},"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["business.'})@prop",{"_index":1282,"title":{},"body":{"classes/Business.html":{}}}],["business.name",{"_index":1303,"title":{},"body":{"modules/BusinessModule.html":{}}}],["business.resolver",{"_index":1299,"title":{},"body":{"modules/BusinessModule.html":{}}}],["business.service",{"_index":1297,"title":{},"body":{"modules/BusinessModule.html":{}}}],["business/business.module",{"_index":879,"title":{},"body":{"modules/AppModule.html":{}}}],["businesses",{"_index":1312,"title":{},"body":{"classes/BusinessRelationship.html":{},"injectables/BusinessService.html":{},"classes/Entrepreneur.html":{},"classes/StartupRelationship.html":{},"miscellaneous/enumerations.html":{}}}],["businesses.map((document",{"_index":1438,"title":{},"body":{"injectables/BusinessService.html":{}}}],["businessestolink",{"_index":1437,"title":{},"body":{"injectables/BusinessService.html":{}}}],["businessmodel",{"_index":1336,"title":{},"body":{"injectables/BusinessService.html":{}}}],["businessmodule",{"_index":815,"title":{"modules/BusinessModule.html":{}},"body":{"modules/AppModule.html":{},"modules/BusinessModule.html":{},"modules/EntrepreneurModule.html":{},"modules.html":{},"overview.html":{}}}],["businessrelationship",{"_index":1304,"title":{"classes/BusinessRelationship.html":{}},"body":{"classes/BusinessRelationship.html":{},"classes/Entrepreneur.html":{},"classes/StartupRelationship.html":{}}}],["businessresolver",{"_index":1298,"title":{},"body":{"modules/BusinessModule.html":{}}}],["businessschema",{"_index":1287,"title":{},"body":{"classes/Business.html":{},"modules/BusinessModule.html":{},"classes/EntrepreneurRelationship.html":{}}}],["businessservice",{"_index":1295,"title":{"injectables/BusinessService.html":{}},"body":{"modules/BusinessModule.html":{},"injectables/BusinessService.html":{},"overview.html":{}}}],["businessupdateresult",{"_index":1447,"title":{},"body":{"injectables/BusinessService.html":{}}}],["calchours",{"_index":401,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["calchours(config",{"_index":417,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["calchoursexpert",{"_index":402,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["calchoursexpert(config",{"_index":424,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["calchoursstartups",{"_index":403,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["calchoursstartups(config",{"_index":434,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["calchoursteamcoach",{"_index":404,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["calchoursteamcoach(config",{"_index":436,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["calculated",{"_index":5003,"title":{},"body":{"miscellaneous/variables.html":{}}}],["calendar",{"_index":4659,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["calendar/calendar.module",{"_index":888,"title":{},"body":{"modules/AppModule.html":{}}}],["calendar_type",{"_index":2921,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["calendarmodule",{"_index":887,"title":{},"body":{"modules/AppModule.html":{}}}],["calendlylink",{"_index":2390,"title":{},"body":{"classes/Expert.html":{},"classes/PhaseExpertRelationship.html":{},"classes/StartupLink.html":{},"classes/UpdateExpertInput.html":{}}}],["calificado",{"_index":5068,"title":{},"body":{"miscellaneous/variables.html":{}}}],["call",{"_index":956,"title":{},"body":{"classes/Applicant.html":{},"classes/ApplicantState.html":{},"classes/Attachment.html":{},"interfaces/IAttachment.html":{}}}],["cambios",{"_index":2774,"title":{},"body":{"injectables/HelpDeskService.html":{}}}],["can't",{"_index":2571,"title":{},"body":{"injectables/FormSubscriptionService.html":{},"injectables/InvitationsService.html":{}}}],["canactivate",{"_index":1100,"title":{},"body":{"guards/AuthGuard.html":{},"guards/GqlAuthGuard.html":{}}}],["canactivate(context",{"_index":1104,"title":{},"body":{"guards/AuthGuard.html":{},"guards/GqlAuthGuard.html":{}}}],["cancel",{"_index":3030,"title":{},"body":{"injectables/InvitationsService.html":{}}}],["cancel(id",{"_index":3039,"title":{},"body":{"injectables/InvitationsService.html":{}}}],["case",{"_index":1560,"title":{},"body":{"injectables/ConfigEvaluationsService.html":{},"injectables/ConfigurationAppService.html":{},"injectables/HelpDeskService.html":{},"injectables/StagesService.html":{},"classes/TemplateInput.html":{},"miscellaneous/variables.html":{}}}],["cases",{"_index":3929,"title":{},"body":{"classes/TemplateInput.html":{}}}],["catch",{"_index":142,"title":{},"body":{"classes/AWSSESProvider.html":{},"injectables/ActivitiesConfigService.html":{},"injectables/AuthService.html":{},"injectables/AwsService.html":{},"injectables/EmailsService.html":{},"injectables/HelpDeskService.html":{},"injectables/IntegrationsService.html":{},"injectables/InvitationsService.html":{},"injectables/NotificationsService.html":{},"classes/SendGridProvider.html":{},"injectables/TicketCategoriesService.html":{},"injectables/UsersService.html":{}}}],["categories.resolver",{"_index":3979,"title":{},"body":{"modules/TicketCategoriesModule.html":{}}}],["categories.service",{"_index":3977,"title":{},"body":{"modules/TicketCategoriesModule.html":{}}}],["categories/categories.module",{"_index":2697,"title":{},"body":{"modules/HelpDeskModule.html":{}}}],["categoriesresolver",{"_index":3978,"title":{},"body":{"modules/TicketCategoriesModule.html":{}}}],["category",{"_index":2023,"title":{},"body":{"classes/CreateHelpDeskInput.html":{},"injectables/HelpDeskService.html":{},"classes/HelpDeskTicket.html":{},"injectables/TicketCategoriesService.html":{},"classes/TicketCategory.html":{},"classes/TicketChild.html":{},"miscellaneous/enumerations.html":{}}}],["category.enum",{"_index":2038,"title":{},"body":{"classes/CreateHelpDeskInput.html":{},"classes/HelpDeskTicket.html":{},"classes/TicketChild.html":{}}}],["category.enum.ts",{"_index":4635,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["category.input",{"_index":3997,"title":{},"body":{"injectables/TicketCategoriesService.html":{}}}],["category.toobject",{"_index":4005,"title":{},"body":{"injectables/TicketCategoriesService.html":{}}}],["cerrar",{"_index":4889,"title":{},"body":{"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["challenge",{"_index":4640,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["challenger",{"_index":4742,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["change",{"_index":782,"title":{},"body":{"injectables/AnnouncementsService.html":{}}}],["channel",{"_index":2523,"title":{},"body":{"injectables/FormSubscriptionService.html":{},"injectables/NotificationsService.html":{}}}],["channelsnotificationenum",{"_index":3216,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["channelsnotificationenum.entrepreneurnotification",{"_index":3232,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["channelsnotificationenum.expertnotification",{"_index":3236,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["channelsnotificationenum.startupnotification",{"_index":3234,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["channelsnotificationenum.usernotification",{"_index":3229,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["checkstatedisplayuser",{"_index":1782,"title":{},"body":{"injectables/ContentService.html":{}}}],["checkstatedisplayuser(sprints",{"_index":1795,"title":{},"body":{"injectables/ContentService.html":{}}}],["child",{"_index":1883,"title":{},"body":{"injectables/ContentService.html":{}}}],["child.hide",{"_index":1885,"title":{},"body":{"injectables/ContentService.html":{}}}],["child.isdeleted",{"_index":1884,"title":{},"body":{"injectables/ContentService.html":{}}}],["child.resources.filter",{"_index":1887,"title":{},"body":{"injectables/ContentService.html":{}}}],["childrenof",{"_index":2088,"title":{},"body":{"classes/CreatePhaseInput.html":{},"classes/Phase.html":{}}}],["childs",{"_index":1743,"title":{},"body":{"classes/Content.html":{},"injectables/ContentService.html":{},"injectables/HelpDeskService.html":{},"classes/HelpDeskTicket.html":{},"classes/TicketChild.html":{},"classes/UpdateHelpDeskInput.html":{}}}],["childssprint",{"_index":1882,"title":{},"body":{"injectables/ContentService.html":{}}}],["childssprint.push",{"_index":1890,"title":{},"body":{"injectables/ContentService.html":{}}}],["class",{"_index":0,"title":{"classes/AWSSESProvider.html":{},"classes/AcceptInvitationDto.html":{},"classes/Acta.html":{},"classes/ActivitiesConfig.html":{},"classes/AddTableJoinInput.html":{},"classes/Announcement.html":{},"classes/AnnouncementApplicantArgs.html":{},"classes/AnnouncementApplicantsArgs.html":{},"classes/Applicant.html":{},"classes/ApplicantArgs.html":{},"classes/ApplicantState.html":{},"classes/Assign.html":{},"classes/Attachment.html":{},"classes/AttachmentSubmit.html":{},"classes/AuthCode.html":{},"classes/Business.html":{},"classes/BusinessRelationship.html":{},"classes/CloseFormSubscriptionArgs.html":{},"classes/ColumnGroup.html":{},"classes/ConfigEvaluation.html":{},"classes/ConfigurationApp.html":{},"classes/ContactArgs.html":{},"classes/ContactServiceLink.html":{},"classes/ContactServicesInput.html":{},"classes/Content.html":{},"classes/CreateActaInput.html":{},"classes/CreateActivitiesConfigInput.html":{},"classes/CreateAnnouncementInput.html":{},"classes/CreateConfigEvaluationInput.html":{},"classes/CreateConfigNotificationInput.html":{},"classes/CreateContentInput.html":{},"classes/CreateEventInput.html":{},"classes/CreateFormInput.html":{},"classes/CreateFormSubscriptionInput.html":{},"classes/CreateFormTagInput.html":{},"classes/CreateHelpDeskInput.html":{},"classes/CreateIntegrationInput.html":{},"classes/CreateInvitationArgs.html":{},"classes/CreateNotificationInput.html":{},"classes/CreateParticipationEventInput.html":{},"classes/CreatePhaseInput.html":{},"classes/CreateResourceInput.html":{},"classes/CreateResourcesReplyInput.html":{},"classes/CreateRolInput.html":{},"classes/CreateSiteInput.html":{},"classes/CreateStageInput.html":{},"classes/CreateTableConfigInput.html":{},"classes/CreateTableInput.html":{},"classes/CreateTypesEventInput.html":{},"classes/CreateUserInput.html":{},"classes/CreateUserLogInput.html":{},"classes/Download.html":{},"classes/Entrepreneur.html":{},"classes/EntrepreneurRelationship.html":{},"classes/EntrepreneurRelationship-1.html":{},"classes/EntrepreneurStartupArgs.html":{},"classes/Evaluation.html":{},"classes/Event.html":{},"classes/Expert.html":{},"classes/ExpertEventLink.html":{},"classes/FindFormsArgs.html":{},"classes/FindInvitationArgs.html":{},"classes/FindUsersArgs.html":{},"classes/Form.html":{},"classes/FormSubmission.html":{},"classes/FormSubmissionFiles.html":{},"classes/FormSubscription.html":{},"classes/FormTag.html":{},"classes/GetSubmittedFilesArgs.html":{},"classes/HelpDeskFilterInput.html":{},"classes/HelpDeskTicket.html":{},"classes/Hours.html":{},"classes/Integration.html":{},"classes/Invitation.html":{},"classes/LastContentOutput.html":{},"classes/LinkExpertsToPhaseArgs.html":{},"classes/LinkStartupToPhaseArgs.html":{},"classes/LinkStartupsExpertsArgs.html":{},"classes/LinkWithTargetsArgs.html":{},"classes/LinkWithTargetsByRequestArgs.html":{},"classes/Notification.html":{},"classes/Notification-1.html":{},"classes/OthersInput.html":{},"classes/ParticipantEventLink.html":{},"classes/ParticipationEvent.html":{},"classes/Phase.html":{},"classes/PhaseExpertRelationship.html":{},"classes/PhaseRelationship.html":{},"classes/Rating.html":{},"classes/RemoveTableJoinInput.html":{},"classes/Resource.html":{},"classes/ResourcesReply.html":{},"classes/Rol.html":{},"classes/SearchBatchInput.html":{},"classes/SelectApplicantsArgs.html":{},"classes/SendEmailInput.html":{},"classes/SendGridProvider.html":{},"classes/SignUpInput.html":{},"classes/Site.html":{},"classes/Stage.html":{},"classes/Startup.html":{},"classes/StartupLink.html":{},"classes/StartupRelationship.html":{},"classes/StorageService.html":{},"classes/SubmitAnnouncementDocInput.html":{},"classes/SubmitFileInput.html":{},"classes/SubmitFormSubscriptionArgs.html":{},"classes/Table.html":{},"classes/TableConfig.html":{},"classes/TableJoin.html":{},"classes/TeamCoachLink.html":{},"classes/TemplateInput.html":{},"classes/TermsOfUse.html":{},"classes/TicketCategory.html":{},"classes/TicketChild.html":{},"classes/TypesEvent.html":{},"classes/TypesNotification.html":{},"classes/UpdateActaInput.html":{},"classes/UpdateActivitiesConfigInput.html":{},"classes/UpdateAnnouncementInput.html":{},"classes/UpdateApplicantInput.html":{},"classes/UpdateApplicantStateInput.html":{},"classes/UpdateConfigEvaluationInput.html":{},"classes/UpdateConfigurationAppInput.html":{},"classes/UpdateContentInput.html":{},"classes/UpdateEventInput.html":{},"classes/UpdateExpertInput.html":{},"classes/UpdateFormInput.html":{},"classes/UpdateFormTagInput.html":{},"classes/UpdateHelpDeskInput.html":{},"classes/UpdateIntegrationInput.html":{},"classes/UpdateNotificationInput.html":{},"classes/UpdateParticipationEventInput.html":{},"classes/UpdatePhaseInput.html":{},"classes/UpdateResourceInput.html":{},"classes/UpdateResourcesReplyInput.html":{},"classes/UpdateRolInput.html":{},"classes/UpdateSiteInput.html":{},"classes/UpdateStageInput.html":{},"classes/UpdateTableConfigInput.html":{},"classes/UpdateTermsOfUseInput.html":{},"classes/UpdateTypesEventInput.html":{},"classes/UpdateUserConfigInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"classes/UserConfig.html":{},"classes/UserLog.html":{},"classes/activities.html":{}},"body":{"classes/AWSSESProvider.html":{},"classes/AcceptInvitationDto.html":{},"classes/Acta.html":{},"modules/ActaModule.html":{},"injectables/ActaService.html":{},"classes/ActivitiesConfig.html":{},"modules/ActivitiesConfigModule.html":{},"injectables/ActivitiesConfigService.html":{},"classes/AddTableJoinInput.html":{},"classes/Announcement.html":{},"classes/AnnouncementApplicantArgs.html":{},"classes/AnnouncementApplicantsArgs.html":{},"modules/AnnouncementsModule.html":{},"injectables/AnnouncementsService.html":{},"modules/AppModule.html":{},"classes/Applicant.html":{},"classes/ApplicantArgs.html":{},"modules/ApplicantModule.html":{},"classes/ApplicantState.html":{},"classes/Assign.html":{},"classes/Attachment.html":{},"classes/AttachmentSubmit.html":{},"classes/AuthCode.html":{},"modules/AuthCodeModule.html":{},"injectables/AuthCodeService.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/AwsService.html":{},"classes/Business.html":{},"modules/BusinessModule.html":{},"classes/BusinessRelationship.html":{},"injectables/BusinessService.html":{},"classes/CloseFormSubscriptionArgs.html":{},"classes/ColumnGroup.html":{},"classes/ConfigEvaluation.html":{},"modules/ConfigEvaluationsModule.html":{},"injectables/ConfigEvaluationsService.html":{},"modules/ConfigNotificationsModule.html":{},"injectables/ConfigNotificationsService.html":{},"classes/ConfigurationApp.html":{},"modules/ConfigurationAppModule.html":{},"injectables/ConfigurationAppService.html":{},"classes/ContactArgs.html":{},"classes/ContactServiceLink.html":{},"classes/ContactServicesInput.html":{},"classes/Content.html":{},"modules/ContentModule.html":{},"injectables/ContentService.html":{},"classes/CreateActaInput.html":{},"classes/CreateActivitiesConfigInput.html":{},"classes/CreateAnnouncementInput.html":{},"classes/CreateConfigEvaluationInput.html":{},"classes/CreateConfigNotificationInput.html":{},"classes/CreateContentInput.html":{},"classes/CreateEventInput.html":{},"classes/CreateFormInput.html":{},"classes/CreateFormSubscriptionInput.html":{},"classes/CreateFormTagInput.html":{},"classes/CreateHelpDeskInput.html":{},"classes/CreateIntegrationInput.html":{},"classes/CreateInvitationArgs.html":{},"classes/CreateNotificationInput.html":{},"classes/CreateParticipationEventInput.html":{},"classes/CreatePhaseInput.html":{},"classes/CreateResourceInput.html":{},"classes/CreateResourcesReplyInput.html":{},"classes/CreateRolInput.html":{},"classes/CreateSiteInput.html":{},"classes/CreateStageInput.html":{},"classes/CreateTableConfigInput.html":{},"classes/CreateTableInput.html":{},"classes/CreateTypesEventInput.html":{},"classes/CreateUserInput.html":{},"classes/CreateUserLogInput.html":{},"classes/Download.html":{},"modules/DownloadsModule.html":{},"injectables/DownloadsService.html":{},"controllers/EmailsController.html":{},"modules/EmailsModule.html":{},"injectables/EmailsService.html":{},"classes/Entrepreneur.html":{},"modules/EntrepreneurModule.html":{},"classes/EntrepreneurRelationship.html":{},"classes/EntrepreneurRelationship-1.html":{},"classes/EntrepreneurStartupArgs.html":{},"classes/Evaluation.html":{},"modules/EvaluationsModule.html":{},"classes/Event.html":{},"modules/EventsModule.html":{},"classes/Expert.html":{},"classes/ExpertEventLink.html":{},"modules/ExpertModule.html":{},"classes/FindFormsArgs.html":{},"classes/FindInvitationArgs.html":{},"classes/FindUsersArgs.html":{},"classes/Form.html":{},"classes/FormSubmission.html":{},"classes/FormSubmissionFiles.html":{},"classes/FormSubscription.html":{},"injectables/FormSubscriptionService.html":{},"classes/FormTag.html":{},"injectables/FormTagService.html":{},"modules/FormsModule.html":{},"injectables/FormsService.html":{},"classes/GetSubmittedFilesArgs.html":{},"guards/GqlAuthGuard.html":{},"classes/HelpDeskFilterInput.html":{},"modules/HelpDeskModule.html":{},"injectables/HelpDeskService.html":{},"classes/HelpDeskTicket.html":{},"classes/Hours.html":{},"interfaces/IAttachment.html":{},"classes/Integration.html":{},"modules/IntegrationsModule.html":{},"injectables/IntegrationsService.html":{},"classes/Invitation.html":{},"controllers/InvitationsController.html":{},"modules/InvitationsModule.html":{},"injectables/InvitationsService.html":{},"classes/LastContentOutput.html":{},"classes/LinkExpertsToPhaseArgs.html":{},"classes/LinkStartupToPhaseArgs.html":{},"classes/LinkStartupsExpertsArgs.html":{},"classes/LinkWithTargetsArgs.html":{},"classes/LinkWithTargetsByRequestArgs.html":{},"modules/LoggerModule.html":{},"classes/Notification.html":{},"classes/Notification-1.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"classes/OthersInput.html":{},"classes/ParticipantEventLink.html":{},"classes/ParticipationEvent.html":{},"modules/ParticipationEventsModule.html":{},"injectables/ParticipationEventsService.html":{},"classes/Phase.html":{},"classes/PhaseExpertRelationship.html":{},"classes/PhaseRelationship.html":{},"modules/PhasesModule.html":{},"classes/Rating.html":{},"classes/RemoveTableJoinInput.html":{},"classes/Resource.html":{},"modules/ResourcesModule.html":{},"modules/ResourcesRepliesModule.html":{},"classes/ResourcesReply.html":{},"injectables/ResourcesService.html":{},"classes/Rol.html":{},"modules/RolModule.html":{},"injectables/RolService.html":{},"classes/SearchBatchInput.html":{},"classes/SelectApplicantsArgs.html":{},"classes/SendEmailInput.html":{},"classes/SendGridProvider.html":{},"classes/SignUpInput.html":{},"classes/Site.html":{},"modules/SitesModule.html":{},"injectables/SitesService.html":{},"classes/Stage.html":{},"modules/StagesModule.html":{},"injectables/StagesService.html":{},"classes/Startup.html":{},"classes/StartupLink.html":{},"modules/StartupModule.html":{},"classes/StartupRelationship.html":{},"controllers/StorageController.html":{},"modules/StorageModule.html":{},"classes/StorageService.html":{},"classes/SubmitAnnouncementDocInput.html":{},"classes/SubmitFileInput.html":{},"classes/SubmitFormSubscriptionArgs.html":{},"classes/Table.html":{},"classes/TableConfig.html":{},"injectables/TableConfigService.html":{},"classes/TableJoin.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"classes/TeamCoachLink.html":{},"classes/TemplateInput.html":{},"classes/TermsOfUse.html":{},"modules/TermsOfUseModule.html":{},"injectables/TermsOfUseService.html":{},"modules/TicketCategoriesModule.html":{},"injectables/TicketCategoriesService.html":{},"classes/TicketCategory.html":{},"classes/TicketChild.html":{},"classes/TypesEvent.html":{},"modules/TypesEventsModule.html":{},"injectables/TypesEventsService.html":{},"classes/TypesNotification.html":{},"modules/TypesNotificationsModule.html":{},"injectables/TypesNotificationsService.html":{},"classes/UpdateActaInput.html":{},"classes/UpdateActivitiesConfigInput.html":{},"classes/UpdateAnnouncementInput.html":{},"classes/UpdateApplicantInput.html":{},"classes/UpdateApplicantStateInput.html":{},"classes/UpdateConfigEvaluationInput.html":{},"classes/UpdateConfigurationAppInput.html":{},"classes/UpdateContentInput.html":{},"classes/UpdateEventInput.html":{},"classes/UpdateExpertInput.html":{},"classes/UpdateFormInput.html":{},"classes/UpdateFormTagInput.html":{},"classes/UpdateHelpDeskInput.html":{},"classes/UpdateIntegrationInput.html":{},"classes/UpdateNotificationInput.html":{},"classes/UpdateParticipationEventInput.html":{},"classes/UpdatePhaseInput.html":{},"classes/UpdateResourceInput.html":{},"classes/UpdateResourcesReplyInput.html":{},"classes/UpdateRolInput.html":{},"classes/UpdateSiteInput.html":{},"classes/UpdateStageInput.html":{},"classes/UpdateTableConfigInput.html":{},"classes/UpdateTermsOfUseInput.html":{},"classes/UpdateTypesEventInput.html":{},"classes/UpdateUserConfigInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"classes/UserConfig.html":{},"modules/UserConfigModule.html":{},"injectables/UserConfigService.html":{},"classes/UserLog.html":{},"modules/UserLogModule.html":{},"injectables/UserLogService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/activities.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AWSSESProvider.html":{},"classes/AcceptInvitationDto.html":{},"classes/Acta.html":{},"classes/ActivitiesConfig.html":{},"classes/AddTableJoinInput.html":{},"classes/Announcement.html":{},"classes/AnnouncementApplicantArgs.html":{},"classes/AnnouncementApplicantsArgs.html":{},"classes/Applicant.html":{},"classes/ApplicantArgs.html":{},"classes/ApplicantState.html":{},"classes/Assign.html":{},"classes/Attachment.html":{},"classes/AttachmentSubmit.html":{},"classes/AuthCode.html":{},"classes/Business.html":{},"classes/BusinessRelationship.html":{},"classes/CloseFormSubscriptionArgs.html":{},"classes/ColumnGroup.html":{},"classes/ConfigEvaluation.html":{},"classes/ConfigurationApp.html":{},"classes/ContactArgs.html":{},"classes/ContactServiceLink.html":{},"classes/ContactServicesInput.html":{},"classes/Content.html":{},"classes/CreateActaInput.html":{},"classes/CreateActivitiesConfigInput.html":{},"classes/CreateAnnouncementInput.html":{},"classes/CreateConfigEvaluationInput.html":{},"classes/CreateConfigNotificationInput.html":{},"classes/CreateContentInput.html":{},"classes/CreateEventInput.html":{},"classes/CreateFormInput.html":{},"classes/CreateFormSubscriptionInput.html":{},"classes/CreateFormTagInput.html":{},"classes/CreateHelpDeskInput.html":{},"classes/CreateIntegrationInput.html":{},"classes/CreateInvitationArgs.html":{},"classes/CreateNotificationInput.html":{},"classes/CreateParticipationEventInput.html":{},"classes/CreatePhaseInput.html":{},"classes/CreateResourceInput.html":{},"classes/CreateResourcesReplyInput.html":{},"classes/CreateRolInput.html":{},"classes/CreateSiteInput.html":{},"classes/CreateStageInput.html":{},"classes/CreateTableConfigInput.html":{},"classes/CreateTableInput.html":{},"classes/CreateTypesEventInput.html":{},"classes/CreateUserInput.html":{},"classes/CreateUserLogInput.html":{},"classes/Download.html":{},"classes/Entrepreneur.html":{},"classes/EntrepreneurRelationship.html":{},"classes/EntrepreneurRelationship-1.html":{},"classes/EntrepreneurStartupArgs.html":{},"classes/Evaluation.html":{},"classes/Event.html":{},"classes/Expert.html":{},"classes/ExpertEventLink.html":{},"classes/FindFormsArgs.html":{},"classes/FindInvitationArgs.html":{},"classes/FindUsersArgs.html":{},"classes/Form.html":{},"classes/FormSubmission.html":{},"classes/FormSubmissionFiles.html":{},"classes/FormSubscription.html":{},"classes/FormTag.html":{},"classes/GetSubmittedFilesArgs.html":{},"classes/HelpDeskFilterInput.html":{},"classes/HelpDeskTicket.html":{},"classes/Hours.html":{},"classes/Integration.html":{},"classes/Invitation.html":{},"classes/LastContentOutput.html":{},"classes/LinkExpertsToPhaseArgs.html":{},"classes/LinkStartupToPhaseArgs.html":{},"classes/LinkStartupsExpertsArgs.html":{},"classes/LinkWithTargetsArgs.html":{},"classes/LinkWithTargetsByRequestArgs.html":{},"classes/Notification.html":{},"classes/Notification-1.html":{},"classes/OthersInput.html":{},"classes/ParticipantEventLink.html":{},"classes/ParticipationEvent.html":{},"classes/Phase.html":{},"classes/PhaseExpertRelationship.html":{},"classes/PhaseRelationship.html":{},"classes/Rating.html":{},"classes/RemoveTableJoinInput.html":{},"classes/Resource.html":{},"classes/ResourcesReply.html":{},"classes/Rol.html":{},"classes/SearchBatchInput.html":{},"classes/SelectApplicantsArgs.html":{},"classes/SendEmailInput.html":{},"classes/SendGridProvider.html":{},"classes/SignUpInput.html":{},"classes/Site.html":{},"classes/Stage.html":{},"classes/Startup.html":{},"classes/StartupLink.html":{},"classes/StartupRelationship.html":{},"classes/StorageService.html":{},"classes/SubmitAnnouncementDocInput.html":{},"classes/SubmitFileInput.html":{},"classes/SubmitFormSubscriptionArgs.html":{},"classes/Table.html":{},"classes/TableConfig.html":{},"classes/TableJoin.html":{},"classes/TeamCoachLink.html":{},"classes/TemplateInput.html":{},"classes/TermsOfUse.html":{},"classes/TicketCategory.html":{},"classes/TicketChild.html":{},"classes/TypesEvent.html":{},"classes/TypesNotification.html":{},"classes/UpdateActaInput.html":{},"classes/UpdateActivitiesConfigInput.html":{},"classes/UpdateAnnouncementInput.html":{},"classes/UpdateApplicantInput.html":{},"classes/UpdateApplicantStateInput.html":{},"classes/UpdateConfigEvaluationInput.html":{},"classes/UpdateConfigurationAppInput.html":{},"classes/UpdateContentInput.html":{},"classes/UpdateEventInput.html":{},"classes/UpdateExpertInput.html":{},"classes/UpdateFormInput.html":{},"classes/UpdateFormTagInput.html":{},"classes/UpdateHelpDeskInput.html":{},"classes/UpdateIntegrationInput.html":{},"classes/UpdateNotificationInput.html":{},"classes/UpdateParticipationEventInput.html":{},"classes/UpdatePhaseInput.html":{},"classes/UpdateResourceInput.html":{},"classes/UpdateResourcesReplyInput.html":{},"classes/UpdateRolInput.html":{},"classes/UpdateSiteInput.html":{},"classes/UpdateStageInput.html":{},"classes/UpdateTableConfigInput.html":{},"classes/UpdateTermsOfUseInput.html":{},"classes/UpdateTypesEventInput.html":{},"classes/UpdateUserConfigInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"classes/UserConfig.html":{},"classes/UserLog.html":{},"classes/activities.html":{},"overview.html":{}}}],["click",{"_index":4538,"title":{},"body":{"injectables/UsersService.html":{}}}],["client",{"_index":18,"title":{},"body":{"classes/AWSSESProvider.html":{},"injectables/AwsService.html":{}}}],["client.send(command",{"_index":1271,"title":{},"body":{"injectables/AwsService.html":{}}}],["clon",{"_index":2652,"title":{},"body":{"injectables/FormsService.html":{}}}],["clone",{"_index":447,"title":{},"body":{"injectables/ActivitiesConfigService.html":{},"injectables/AnnouncementsService.html":{},"injectables/FormsService.html":{}}}],["clone(id",{"_index":772,"title":{},"body":{"injectables/AnnouncementsService.html":{},"injectables/FormsService.html":{}}}],["clonedform",{"_index":2651,"title":{},"body":{"injectables/FormsService.html":{}}}],["close",{"_index":2487,"title":{},"body":{"injectables/FormSubscriptionService.html":{}}}],["close(undefined",{"_index":2499,"title":{},"body":{"injectables/FormSubscriptionService.html":{}}}],["close_registration",{"_index":2922,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["closed",{"_index":196,"title":{},"body":{"classes/Acta.html":{},"classes/CreateActaInput.html":{},"injectables/FormSubscriptionService.html":{},"classes/UpdateActaInput.html":{},"miscellaneous/enumerations.html":{}}}],["closedsubscription",{"_index":2558,"title":{},"body":{"injectables/FormSubscriptionService.html":{}}}],["closeformsubscriptionargs",{"_index":1480,"title":{"classes/CloseFormSubscriptionArgs.html":{}},"body":{"classes/CloseFormSubscriptionArgs.html":{},"injectables/FormSubscriptionService.html":{}}}],["cloud",{"_index":2914,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["cluster_actamodule",{"_index":258,"title":{},"body":{"modules/ActaModule.html":{},"overview.html":{}}}],["cluster_actamodule_exports",{"_index":260,"title":{},"body":{"modules/ActaModule.html":{},"overview.html":{}}}],["cluster_actamodule_imports",{"_index":259,"title":{},"body":{"modules/ActaModule.html":{},"overview.html":{}}}],["cluster_actamodule_providers",{"_index":261,"title":{},"body":{"modules/ActaModule.html":{},"overview.html":{}}}],["cluster_activitiesconfigmodule",{"_index":374,"title":{},"body":{"modules/ActivitiesConfigModule.html":{},"overview.html":{}}}],["cluster_activitiesconfigmodule_exports",{"_index":376,"title":{},"body":{"modules/ActivitiesConfigModule.html":{},"overview.html":{}}}],["cluster_activitiesconfigmodule_imports",{"_index":375,"title":{},"body":{"modules/ActivitiesConfigModule.html":{}}}],["cluster_activitiesconfigmodule_providers",{"_index":377,"title":{},"body":{"modules/ActivitiesConfigModule.html":{},"overview.html":{}}}],["cluster_announcementsmodule",{"_index":752,"title":{},"body":{"modules/AnnouncementsModule.html":{},"overview.html":{}}}],["cluster_announcementsmodule_imports",{"_index":753,"title":{},"body":{"modules/AnnouncementsModule.html":{},"overview.html":{}}}],["cluster_announcementsmodule_providers",{"_index":754,"title":{},"body":{"modules/AnnouncementsModule.html":{},"overview.html":{}}}],["cluster_applicantmodule",{"_index":1008,"title":{},"body":{"modules/ApplicantModule.html":{},"overview.html":{}}}],["cluster_applicantmodule_exports",{"_index":1010,"title":{},"body":{"modules/ApplicantModule.html":{},"overview.html":{}}}],["cluster_applicantmodule_imports",{"_index":1009,"title":{},"body":{"modules/ApplicantModule.html":{}}}],["cluster_applicantmodule_providers",{"_index":1011,"title":{},"body":{"modules/ApplicantModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":812,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":813,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authcodemodule",{"_index":1057,"title":{},"body":{"modules/AuthCodeModule.html":{},"overview.html":{}}}],["cluster_authcodemodule_imports",{"_index":1058,"title":{},"body":{"modules/AuthCodeModule.html":{}}}],["cluster_authcodemodule_providers",{"_index":1059,"title":{},"body":{"modules/AuthCodeModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":1122,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":1124,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":1125,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":1123,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_businessmodule",{"_index":1291,"title":{},"body":{"modules/BusinessModule.html":{},"overview.html":{}}}],["cluster_businessmodule_exports",{"_index":1293,"title":{},"body":{"modules/BusinessModule.html":{},"overview.html":{}}}],["cluster_businessmodule_imports",{"_index":1294,"title":{},"body":{"modules/BusinessModule.html":{}}}],["cluster_businessmodule_providers",{"_index":1292,"title":{},"body":{"modules/BusinessModule.html":{},"overview.html":{}}}],["cluster_configevaluationsmodule",{"_index":1523,"title":{},"body":{"modules/ConfigEvaluationsModule.html":{},"overview.html":{}}}],["cluster_configevaluationsmodule_exports",{"_index":1525,"title":{},"body":{"modules/ConfigEvaluationsModule.html":{},"overview.html":{}}}],["cluster_configevaluationsmodule_imports",{"_index":1524,"title":{},"body":{"modules/ConfigEvaluationsModule.html":{}}}],["cluster_configevaluationsmodule_providers",{"_index":1526,"title":{},"body":{"modules/ConfigEvaluationsModule.html":{},"overview.html":{}}}],["cluster_confignotificationsmodule",{"_index":1587,"title":{},"body":{"modules/ConfigNotificationsModule.html":{},"overview.html":{}}}],["cluster_confignotificationsmodule_exports",{"_index":1588,"title":{},"body":{"modules/ConfigNotificationsModule.html":{},"overview.html":{}}}],["cluster_confignotificationsmodule_providers",{"_index":1589,"title":{},"body":{"modules/ConfigNotificationsModule.html":{},"overview.html":{}}}],["cluster_configurationappmodule",{"_index":1653,"title":{},"body":{"modules/ConfigurationAppModule.html":{},"overview.html":{}}}],["cluster_configurationappmodule_exports",{"_index":1655,"title":{},"body":{"modules/ConfigurationAppModule.html":{},"overview.html":{}}}],["cluster_configurationappmodule_imports",{"_index":1654,"title":{},"body":{"modules/ConfigurationAppModule.html":{}}}],["cluster_configurationappmodule_providers",{"_index":1656,"title":{},"body":{"modules/ConfigurationAppModule.html":{},"overview.html":{}}}],["cluster_contentmodule",{"_index":1768,"title":{},"body":{"modules/ContentModule.html":{},"overview.html":{}}}],["cluster_contentmodule_exports",{"_index":1769,"title":{},"body":{"modules/ContentModule.html":{},"overview.html":{}}}],["cluster_contentmodule_imports",{"_index":1770,"title":{},"body":{"modules/ContentModule.html":{}}}],["cluster_contentmodule_providers",{"_index":1771,"title":{},"body":{"modules/ContentModule.html":{},"overview.html":{}}}],["cluster_downloadsmodule",{"_index":2190,"title":{},"body":{"modules/DownloadsModule.html":{},"overview.html":{}}}],["cluster_downloadsmodule_exports",{"_index":2192,"title":{},"body":{"modules/DownloadsModule.html":{},"overview.html":{}}}],["cluster_downloadsmodule_imports",{"_index":2191,"title":{},"body":{"modules/DownloadsModule.html":{}}}],["cluster_downloadsmodule_providers",{"_index":2193,"title":{},"body":{"modules/DownloadsModule.html":{},"overview.html":{}}}],["cluster_emailsmodule",{"_index":2252,"title":{},"body":{"modules/EmailsModule.html":{},"overview.html":{}}}],["cluster_emailsmodule_exports",{"_index":2255,"title":{},"body":{"modules/EmailsModule.html":{},"overview.html":{}}}],["cluster_emailsmodule_imports",{"_index":2253,"title":{},"body":{"modules/EmailsModule.html":{}}}],["cluster_emailsmodule_providers",{"_index":2254,"title":{},"body":{"modules/EmailsModule.html":{},"overview.html":{}}}],["cluster_entrepreneurmodule",{"_index":2297,"title":{},"body":{"modules/EntrepreneurModule.html":{},"overview.html":{}}}],["cluster_entrepreneurmodule_exports",{"_index":2300,"title":{},"body":{"modules/EntrepreneurModule.html":{},"overview.html":{}}}],["cluster_entrepreneurmodule_imports",{"_index":2298,"title":{},"body":{"modules/EntrepreneurModule.html":{}}}],["cluster_entrepreneurmodule_providers",{"_index":2299,"title":{},"body":{"modules/EntrepreneurModule.html":{},"overview.html":{}}}],["cluster_evaluationsmodule",{"_index":2339,"title":{},"body":{"modules/EvaluationsModule.html":{},"overview.html":{}}}],["cluster_evaluationsmodule_exports",{"_index":2342,"title":{},"body":{"modules/EvaluationsModule.html":{},"overview.html":{}}}],["cluster_evaluationsmodule_imports",{"_index":2341,"title":{},"body":{"modules/EvaluationsModule.html":{}}}],["cluster_evaluationsmodule_providers",{"_index":2340,"title":{},"body":{"modules/EvaluationsModule.html":{},"overview.html":{}}}],["cluster_eventsmodule",{"_index":2374,"title":{},"body":{"modules/EventsModule.html":{},"overview.html":{}}}],["cluster_eventsmodule_exports",{"_index":2376,"title":{},"body":{"modules/EventsModule.html":{},"overview.html":{}}}],["cluster_eventsmodule_imports",{"_index":2375,"title":{},"body":{"modules/EventsModule.html":{},"overview.html":{}}}],["cluster_eventsmodule_providers",{"_index":2377,"title":{},"body":{"modules/EventsModule.html":{},"overview.html":{}}}],["cluster_expertmodule",{"_index":2408,"title":{},"body":{"modules/ExpertModule.html":{},"overview.html":{}}}],["cluster_expertmodule_exports",{"_index":2409,"title":{},"body":{"modules/ExpertModule.html":{},"overview.html":{}}}],["cluster_expertmodule_imports",{"_index":2410,"title":{},"body":{"modules/ExpertModule.html":{}}}],["cluster_expertmodule_providers",{"_index":2411,"title":{},"body":{"modules/ExpertModule.html":{},"overview.html":{}}}],["cluster_formsmodule",{"_index":2609,"title":{},"body":{"modules/FormsModule.html":{},"overview.html":{}}}],["cluster_formsmodule_exports",{"_index":2612,"title":{},"body":{"modules/FormsModule.html":{},"overview.html":{}}}],["cluster_formsmodule_imports",{"_index":2611,"title":{},"body":{"modules/FormsModule.html":{},"overview.html":{}}}],["cluster_formsmodule_providers",{"_index":2610,"title":{},"body":{"modules/FormsModule.html":{},"overview.html":{}}}],["cluster_helpdeskmodule",{"_index":2687,"title":{},"body":{"modules/HelpDeskModule.html":{},"overview.html":{}}}],["cluster_helpdeskmodule_exports",{"_index":2688,"title":{},"body":{"modules/HelpDeskModule.html":{},"overview.html":{}}}],["cluster_helpdeskmodule_imports",{"_index":2690,"title":{},"body":{"modules/HelpDeskModule.html":{}}}],["cluster_helpdeskmodule_providers",{"_index":2689,"title":{},"body":{"modules/HelpDeskModule.html":{},"overview.html":{}}}],["cluster_integrationsmodule",{"_index":2817,"title":{},"body":{"modules/IntegrationsModule.html":{},"overview.html":{}}}],["cluster_integrationsmodule_exports",{"_index":2818,"title":{},"body":{"modules/IntegrationsModule.html":{},"overview.html":{}}}],["cluster_integrationsmodule_imports",{"_index":2820,"title":{},"body":{"modules/IntegrationsModule.html":{}}}],["cluster_integrationsmodule_providers",{"_index":2819,"title":{},"body":{"modules/IntegrationsModule.html":{},"overview.html":{}}}],["cluster_invitationsmodule",{"_index":3018,"title":{},"body":{"modules/InvitationsModule.html":{},"overview.html":{}}}],["cluster_invitationsmodule_exports",{"_index":3021,"title":{},"body":{"modules/InvitationsModule.html":{},"overview.html":{}}}],["cluster_invitationsmodule_imports",{"_index":3020,"title":{},"body":{"modules/InvitationsModule.html":{}}}],["cluster_invitationsmodule_providers",{"_index":3019,"title":{},"body":{"modules/InvitationsModule.html":{},"overview.html":{}}}],["cluster_loggermodule",{"_index":3148,"title":{},"body":{"modules/LoggerModule.html":{},"overview.html":{}}}],["cluster_loggermodule_exports",{"_index":3149,"title":{},"body":{"modules/LoggerModule.html":{},"overview.html":{}}}],["cluster_notificationsmodule",{"_index":3184,"title":{},"body":{"modules/NotificationsModule.html":{},"overview.html":{}}}],["cluster_notificationsmodule_exports",{"_index":3187,"title":{},"body":{"modules/NotificationsModule.html":{},"overview.html":{}}}],["cluster_notificationsmodule_imports",{"_index":3186,"title":{},"body":{"modules/NotificationsModule.html":{}}}],["cluster_notificationsmodule_providers",{"_index":3185,"title":{},"body":{"modules/NotificationsModule.html":{},"overview.html":{}}}],["cluster_participationeventsmodule",{"_index":3283,"title":{},"body":{"modules/ParticipationEventsModule.html":{},"overview.html":{}}}],["cluster_participationeventsmodule_exports",{"_index":3286,"title":{},"body":{"modules/ParticipationEventsModule.html":{},"overview.html":{}}}],["cluster_participationeventsmodule_imports",{"_index":3284,"title":{},"body":{"modules/ParticipationEventsModule.html":{}}}],["cluster_participationeventsmodule_providers",{"_index":3285,"title":{},"body":{"modules/ParticipationEventsModule.html":{},"overview.html":{}}}],["cluster_phasesmodule",{"_index":3348,"title":{},"body":{"modules/PhasesModule.html":{},"overview.html":{}}}],["cluster_phasesmodule_exports",{"_index":3350,"title":{},"body":{"modules/PhasesModule.html":{},"overview.html":{}}}],["cluster_phasesmodule_imports",{"_index":3349,"title":{},"body":{"modules/PhasesModule.html":{}}}],["cluster_phasesmodule_providers",{"_index":3351,"title":{},"body":{"modules/PhasesModule.html":{},"overview.html":{}}}],["cluster_resourcesmodule",{"_index":3392,"title":{},"body":{"modules/ResourcesModule.html":{},"overview.html":{}}}],["cluster_resourcesmodule_exports",{"_index":3395,"title":{},"body":{"modules/ResourcesModule.html":{},"overview.html":{}}}],["cluster_resourcesmodule_imports",{"_index":3393,"title":{},"body":{"modules/ResourcesModule.html":{}}}],["cluster_resourcesmodule_providers",{"_index":3394,"title":{},"body":{"modules/ResourcesModule.html":{},"overview.html":{}}}],["cluster_resourcesrepliesmodule",{"_index":3403,"title":{},"body":{"modules/ResourcesRepliesModule.html":{},"overview.html":{}}}],["cluster_resourcesrepliesmodule_exports",{"_index":3406,"title":{},"body":{"modules/ResourcesRepliesModule.html":{},"overview.html":{}}}],["cluster_resourcesrepliesmodule_imports",{"_index":3405,"title":{},"body":{"modules/ResourcesRepliesModule.html":{}}}],["cluster_resourcesrepliesmodule_providers",{"_index":3404,"title":{},"body":{"modules/ResourcesRepliesModule.html":{},"overview.html":{}}}],["cluster_rolmodule",{"_index":3478,"title":{},"body":{"modules/RolModule.html":{},"overview.html":{}}}],["cluster_rolmodule_exports",{"_index":3480,"title":{},"body":{"modules/RolModule.html":{},"overview.html":{}}}],["cluster_rolmodule_imports",{"_index":3481,"title":{},"body":{"modules/RolModule.html":{}}}],["cluster_rolmodule_providers",{"_index":3479,"title":{},"body":{"modules/RolModule.html":{},"overview.html":{}}}],["cluster_sitesmodule",{"_index":3598,"title":{},"body":{"modules/SitesModule.html":{},"overview.html":{}}}],["cluster_sitesmodule_exports",{"_index":3599,"title":{},"body":{"modules/SitesModule.html":{},"overview.html":{}}}],["cluster_sitesmodule_imports",{"_index":3601,"title":{},"body":{"modules/SitesModule.html":{}}}],["cluster_sitesmodule_providers",{"_index":3600,"title":{},"body":{"modules/SitesModule.html":{},"overview.html":{}}}],["cluster_stagesmodule",{"_index":3639,"title":{},"body":{"modules/StagesModule.html":{},"overview.html":{}}}],["cluster_stagesmodule_exports",{"_index":3640,"title":{},"body":{"modules/StagesModule.html":{},"overview.html":{}}}],["cluster_stagesmodule_imports",{"_index":3641,"title":{},"body":{"modules/StagesModule.html":{}}}],["cluster_stagesmodule_providers",{"_index":3642,"title":{},"body":{"modules/StagesModule.html":{},"overview.html":{}}}],["cluster_startupmodule",{"_index":3701,"title":{},"body":{"modules/StartupModule.html":{},"overview.html":{}}}],["cluster_startupmodule_exports",{"_index":3702,"title":{},"body":{"modules/StartupModule.html":{},"overview.html":{}}}],["cluster_startupmodule_imports",{"_index":3704,"title":{},"body":{"modules/StartupModule.html":{}}}],["cluster_startupmodule_providers",{"_index":3703,"title":{},"body":{"modules/StartupModule.html":{},"overview.html":{}}}],["cluster_storagemodule",{"_index":3730,"title":{},"body":{"modules/StorageModule.html":{},"overview.html":{}}}],["cluster_storagemodule_exports",{"_index":3731,"title":{},"body":{"modules/StorageModule.html":{},"overview.html":{}}}],["cluster_tablemodule",{"_index":3827,"title":{},"body":{"modules/TableModule.html":{},"overview.html":{}}}],["cluster_tablemodule_exports",{"_index":3830,"title":{},"body":{"modules/TableModule.html":{},"overview.html":{}}}],["cluster_tablemodule_imports",{"_index":3829,"title":{},"body":{"modules/TableModule.html":{}}}],["cluster_tablemodule_providers",{"_index":3828,"title":{},"body":{"modules/TableModule.html":{},"overview.html":{}}}],["cluster_termsofusemodule",{"_index":3942,"title":{},"body":{"modules/TermsOfUseModule.html":{},"overview.html":{}}}],["cluster_termsofusemodule_exports",{"_index":3943,"title":{},"body":{"modules/TermsOfUseModule.html":{},"overview.html":{}}}],["cluster_termsofusemodule_imports",{"_index":3945,"title":{},"body":{"modules/TermsOfUseModule.html":{}}}],["cluster_termsofusemodule_providers",{"_index":3944,"title":{},"body":{"modules/TermsOfUseModule.html":{},"overview.html":{}}}],["cluster_ticketcategoriesmodule",{"_index":3973,"title":{},"body":{"modules/TicketCategoriesModule.html":{},"overview.html":{}}}],["cluster_ticketcategoriesmodule_providers",{"_index":3974,"title":{},"body":{"modules/TicketCategoriesModule.html":{},"overview.html":{}}}],["cluster_typeseventsmodule",{"_index":4030,"title":{},"body":{"modules/TypesEventsModule.html":{},"overview.html":{}}}],["cluster_typeseventsmodule_exports",{"_index":4031,"title":{},"body":{"modules/TypesEventsModule.html":{},"overview.html":{}}}],["cluster_typeseventsmodule_imports",{"_index":4032,"title":{},"body":{"modules/TypesEventsModule.html":{}}}],["cluster_typeseventsmodule_providers",{"_index":4033,"title":{},"body":{"modules/TypesEventsModule.html":{},"overview.html":{}}}],["cluster_typesnotificationsmodule",{"_index":4065,"title":{},"body":{"modules/TypesNotificationsModule.html":{},"overview.html":{}}}],["cluster_typesnotificationsmodule_providers",{"_index":4066,"title":{},"body":{"modules/TypesNotificationsModule.html":{},"overview.html":{}}}],["cluster_userconfigmodule",{"_index":4286,"title":{},"body":{"modules/UserConfigModule.html":{},"overview.html":{}}}],["cluster_userconfigmodule_imports",{"_index":4287,"title":{},"body":{"modules/UserConfigModule.html":{}}}],["cluster_userconfigmodule_providers",{"_index":4288,"title":{},"body":{"modules/UserConfigModule.html":{},"overview.html":{}}}],["cluster_userlogmodule",{"_index":4342,"title":{},"body":{"modules/UserLogModule.html":{},"overview.html":{}}}],["cluster_userlogmodule_exports",{"_index":4344,"title":{},"body":{"modules/UserLogModule.html":{},"overview.html":{}}}],["cluster_userlogmodule_imports",{"_index":4345,"title":{},"body":{"modules/UserLogModule.html":{}}}],["cluster_userlogmodule_providers",{"_index":4343,"title":{},"body":{"modules/UserLogModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":4430,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":4433,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_imports",{"_index":4431,"title":{},"body":{"modules/UsersModule.html":{}}}],["cluster_usersmodule_providers",{"_index":4432,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["coach",{"_index":2370,"title":{},"body":{"classes/Event.html":{},"classes/ExpertEventLink.html":{},"classes/ParticipantEventLink.html":{},"classes/TeamCoachLink.html":{},"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["coaches",{"_index":421,"title":{},"body":{"injectables/ActivitiesConfigService.html":{},"classes/UpdateActivitiesConfigInput.html":{}}}],["code",{"_index":182,"title":{},"body":{"classes/AcceptInvitationDto.html":{},"classes/AuthCode.html":{},"injectables/AuthCodeService.html":{},"classes/CreateIntegrationInput.html":{},"classes/Integration.html":{},"classes/Invitation.html":{},"injectables/InvitationsService.html":{}}}],["code.entity",{"_index":1066,"title":{},"body":{"modules/AuthCodeModule.html":{},"injectables/AuthCodeService.html":{}}}],["code.entity.ts",{"_index":1043,"title":{},"body":{"classes/AuthCode.html":{}}}],["code.entity.ts:10",{"_index":1048,"title":{},"body":{"classes/AuthCode.html":{}}}],["code.entity.ts:14",{"_index":1053,"title":{},"body":{"classes/AuthCode.html":{}}}],["code.entity.ts:18",{"_index":1052,"title":{},"body":{"classes/AuthCode.html":{}}}],["code.entity.ts:22",{"_index":1051,"title":{},"body":{"classes/AuthCode.html":{}}}],["code.module",{"_index":868,"title":{},"body":{"modules/AppModule.html":{}}}],["code.module.ts",{"_index":1061,"title":{},"body":{"modules/AuthCodeModule.html":{}}}],["code.resolver",{"_index":1064,"title":{},"body":{"modules/AuthCodeModule.html":{}}}],["code.service",{"_index":1062,"title":{},"body":{"modules/AuthCodeModule.html":{}}}],["code.service.ts",{"_index":1068,"title":{},"body":{"injectables/AuthCodeService.html":{}}}],["code.service.ts:12",{"_index":1070,"title":{},"body":{"injectables/AuthCodeService.html":{}}}],["code.service.ts:20",{"_index":1074,"title":{},"body":{"injectables/AuthCodeService.html":{}}}],["code.service.ts:35",{"_index":1077,"title":{},"body":{"injectables/AuthCodeService.html":{}}}],["code/auth",{"_index":867,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthCodeModule.html":{},"injectables/AuthCodeService.html":{}}}],["code/entities/auth",{"_index":1042,"title":{},"body":{"classes/AuthCode.html":{}}}],["col.label",{"_index":1474,"title":{},"body":{"injectables/BusinessService.html":{}}}],["col.label.length",{"_index":1476,"title":{},"body":{"injectables/BusinessService.html":{}}}],["collation",{"_index":1418,"title":{},"body":{"injectables/BusinessService.html":{}}}],["collection",{"_index":4654,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["collections",{"_index":2001,"title":{},"body":{"classes/CreateFormInput.html":{},"classes/CreateFormSubscriptionInput.html":{},"classes/FindFormsArgs.html":{},"classes/Form.html":{},"classes/FormSubscription.html":{},"injectables/FormSubscriptionService.html":{},"classes/GetSubmittedFilesArgs.html":{},"classes/UpdateFormInput.html":{}}}],["collections.ts",{"_index":4622,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["colombia",{"_index":3568,"title":{},"body":{"classes/SendGridProvider.html":{}}}],["color",{"_index":2136,"title":{},"body":{"classes/CreateStageInput.html":{},"classes/Stage.html":{},"classes/TicketCategory.html":{},"classes/UpdateStageInput.html":{}}}],["colors",{"_index":5041,"title":{},"body":{"miscellaneous/variables.html":{}}}],["column",{"_index":1498,"title":{},"body":{"classes/ColumnGroup.html":{},"classes/Table.html":{},"classes/TableConfig.html":{},"injectables/TableConfigService.html":{},"classes/TableJoin.html":{},"classes/UpdateTableConfigInput.html":{},"miscellaneous/enumerations.html":{}}}],["columngroup",{"_index":1488,"title":{"classes/ColumnGroup.html":{}},"body":{"classes/ColumnGroup.html":{},"classes/Table.html":{},"injectables/TableService.html":{}}}],["columngroups",{"_index":3766,"title":{},"body":{"classes/Table.html":{}}}],["columns",{"_index":1472,"title":{},"body":{"injectables/BusinessService.html":{},"classes/ColumnGroup.html":{},"classes/Table.html":{},"classes/TableConfig.html":{},"injectables/TableConfigService.html":{},"injectables/TableService.html":{},"classes/UpdateTableConfigInput.html":{}}}],["columns.concat(extracolumns",{"_index":3897,"title":{},"body":{"injectables/TableService.html":{}}}],["columns.push(...tableutilities.columnsannouncementselected",{"_index":3912,"title":{},"body":{"injectables/TableService.html":{}}}],["columns.push(...tableutilities.columnscommunities",{"_index":3905,"title":{},"body":{"injectables/TableService.html":{}}}],["columns.push(tableutilities.columnstartupsexpert",{"_index":3903,"title":{},"body":{"injectables/TableService.html":{}}}],["columns.unshift(...tableutilities.columnsevaluations",{"_index":3907,"title":{},"body":{"injectables/TableService.html":{}}}],["columns.unshift(...tableutilities.columnsresourcereply",{"_index":3909,"title":{},"body":{"injectables/TableService.html":{}}}],["comités",{"_index":5092,"title":{},"body":{"miscellaneous/variables.html":{}}}],["command",{"_index":1259,"title":{},"body":{"injectables/AwsService.html":{}}}],["community",{"_index":4809,"title":{},"body":{"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["community_create",{"_index":5105,"title":{},"body":{"miscellaneous/variables.html":{}}}],["community_edit",{"_index":4684,"title":{},"body":{"miscellaneous/enumerations.html":{},"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["community_view",{"_index":4683,"title":{},"body":{"miscellaneous/enumerations.html":{},"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["completar",{"_index":1846,"title":{},"body":{"injectables/ContentService.html":{}}}],["complete",{"_index":3108,"title":{},"body":{"injectables/InvitationsService.html":{}}}],["completed",{"_index":1868,"title":{},"body":{"injectables/ContentService.html":{}}}],["completed.state",{"_index":1874,"title":{},"body":{"injectables/ContentService.html":{}}}],["comunidad",{"_index":4850,"title":{},"body":{"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["comunidades",{"_index":4853,"title":{},"body":{"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["con",{"_index":680,"title":{},"body":{"classes/Announcement.html":{},"injectables/UsersService.html":{}}}],["conclusions",{"_index":197,"title":{},"body":{"classes/Acta.html":{},"classes/CreateActaInput.html":{},"classes/UpdateActaInput.html":{}}}],["config",{"_index":364,"title":{},"body":{"classes/ActivitiesConfig.html":{},"injectables/ActivitiesConfigService.html":{},"classes/Assign.html":{},"injectables/AwsService.html":{},"injectables/BusinessService.html":{},"classes/ConfigEvaluation.html":{},"modules/ConfigEvaluationsModule.html":{},"injectables/ConfigEvaluationsService.html":{},"modules/ConfigNotificationsModule.html":{},"injectables/ConfigNotificationsService.html":{},"classes/CreateActivitiesConfigInput.html":{},"classes/CreateConfigEvaluationInput.html":{},"classes/CreateConfigNotificationInput.html":{},"classes/Evaluation.html":{},"modules/EvaluationsModule.html":{},"classes/Form.html":{},"injectables/FormsService.html":{},"injectables/IntegrationsService.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"injectables/TableConfigService.html":{},"classes/UpdateConfigEvaluationInput.html":{},"injectables/UserConfigService.html":{},"classes/activities.html":{},"miscellaneous/functions.html":{}}}],["config.activities.find",{"_index":537,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["config.columns",{"_index":1465,"title":{},"body":{"injectables/BusinessService.html":{}}}],["config.default",{"_index":4304,"title":{},"body":{"injectables/UserConfigService.html":{}}}],["config.entity",{"_index":386,"title":{},"body":{"modules/ActivitiesConfigModule.html":{},"injectables/ActivitiesConfigService.html":{},"injectables/TableConfigService.html":{},"modules/TableModule.html":{},"classes/UpdateActivitiesConfigInput.html":{},"modules/UserConfigModule.html":{},"injectables/UserConfigService.html":{}}}],["config.entity.ts",{"_index":334,"title":{},"body":{"classes/ActivitiesConfig.html":{},"classes/Assign.html":{},"classes/TableConfig.html":{},"classes/UserConfig.html":{},"classes/activities.html":{}}}],["config.entity.ts:11",{"_index":349,"title":{},"body":{"classes/ActivitiesConfig.html":{}}}],["config.entity.ts:12",{"_index":4281,"title":{},"body":{"classes/UserConfig.html":{}}}],["config.entity.ts:13",{"_index":3785,"title":{},"body":{"classes/TableConfig.html":{}}}],["config.entity.ts:15",{"_index":357,"title":{},"body":{"classes/ActivitiesConfig.html":{}}}],["config.entity.ts:16",{"_index":4283,"title":{},"body":{"classes/UserConfig.html":{}}}],["config.entity.ts:17",{"_index":3789,"title":{},"body":{"classes/TableConfig.html":{}}}],["config.entity.ts:19",{"_index":358,"title":{},"body":{"classes/ActivitiesConfig.html":{}}}],["config.entity.ts:20",{"_index":4282,"title":{},"body":{"classes/UserConfig.html":{}}}],["config.entity.ts:21",{"_index":3791,"title":{},"body":{"classes/TableConfig.html":{}}}],["config.entity.ts:23",{"_index":350,"title":{},"body":{"classes/ActivitiesConfig.html":{}}}],["config.entity.ts:25",{"_index":3786,"title":{},"body":{"classes/TableConfig.html":{}}}],["config.entity.ts:27",{"_index":359,"title":{},"body":{"classes/ActivitiesConfig.html":{}}}],["config.entity.ts:29",{"_index":3788,"title":{},"body":{"classes/TableConfig.html":{}}}],["config.entity.ts:31",{"_index":353,"title":{},"body":{"classes/ActivitiesConfig.html":{}}}],["config.entity.ts:35",{"_index":360,"title":{},"body":{"classes/ActivitiesConfig.html":{}}}],["config.entity.ts:36",{"_index":3787,"title":{},"body":{"classes/TableConfig.html":{}}}],["config.entity.ts:38",{"_index":351,"title":{},"body":{"classes/ActivitiesConfig.html":{}}}],["config.entity.ts:41",{"_index":361,"title":{},"body":{"classes/ActivitiesConfig.html":{}}}],["config.entity.ts:45",{"_index":354,"title":{},"body":{"classes/ActivitiesConfig.html":{}}}],["config.entity.ts:55",{"_index":4563,"title":{},"body":{"classes/activities.html":{}}}],["config.entity.ts:58",{"_index":4564,"title":{},"body":{"classes/activities.html":{}}}],["config.entity.ts:68",{"_index":1025,"title":{},"body":{"classes/Assign.html":{}}}],["config.entity.ts:71",{"_index":1026,"title":{},"body":{"classes/Assign.html":{}}}],["config.entity.ts:75",{"_index":1024,"title":{},"body":{"classes/Assign.html":{}}}],["config.excluded",{"_index":1625,"title":{},"body":{"injectables/ConfigNotificationsService.html":{}}}],["config.experts.find",{"_index":581,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["config.input",{"_index":462,"title":{},"body":{"injectables/ActivitiesConfigService.html":{},"injectables/TableConfigService.html":{},"classes/UpdateActivitiesConfigInput.html":{},"injectables/UserConfigService.html":{}}}],["config.input.ts",{"_index":1909,"title":{},"body":{"classes/CreateActivitiesConfigInput.html":{},"classes/CreateTableConfigInput.html":{},"classes/UpdateActivitiesConfigInput.html":{},"classes/UpdateTableConfigInput.html":{},"classes/UpdateUserConfigInput.html":{}}}],["config.input.ts:11",{"_index":4240,"title":{},"body":{"classes/UpdateUserConfigInput.html":{}}}],["config.input.ts:12",{"_index":2149,"title":{},"body":{"classes/CreateTableConfigInput.html":{},"classes/UpdateTableConfigInput.html":{}}}],["config.input.ts:13",{"_index":1910,"title":{},"body":{"classes/CreateActivitiesConfigInput.html":{}}}],["config.input.ts:15",{"_index":4242,"title":{},"body":{"classes/UpdateUserConfigInput.html":{}}}],["config.input.ts:16",{"_index":2147,"title":{},"body":{"classes/CreateTableConfigInput.html":{}}}],["config.input.ts:17",{"_index":1911,"title":{},"body":{"classes/CreateActivitiesConfigInput.html":{},"classes/UpdateActivitiesConfigInput.html":{},"classes/UpdateTableConfigInput.html":{}}}],["config.input.ts:19",{"_index":4241,"title":{},"body":{"classes/UpdateUserConfigInput.html":{}}}],["config.input.ts:21",{"_index":4099,"title":{},"body":{"classes/UpdateActivitiesConfigInput.html":{}}}],["config.input.ts:22",{"_index":4226,"title":{},"body":{"classes/UpdateTableConfigInput.html":{}}}],["config.input.ts:25",{"_index":4098,"title":{},"body":{"classes/UpdateActivitiesConfigInput.html":{}}}],["config.input.ts:27",{"_index":4227,"title":{},"body":{"classes/UpdateTableConfigInput.html":{}}}],["config.input.ts:30",{"_index":4095,"title":{},"body":{"classes/UpdateActivitiesConfigInput.html":{}}}],["config.input.ts:35",{"_index":4100,"title":{},"body":{"classes/UpdateActivitiesConfigInput.html":{}}}],["config.input.ts:40",{"_index":4097,"title":{},"body":{"classes/UpdateActivitiesConfigInput.html":{}}}],["config.input.ts:45",{"_index":4101,"title":{},"body":{"classes/UpdateActivitiesConfigInput.html":{}}}],["config.module",{"_index":876,"title":{},"body":{"modules/AppModule.html":{},"modules/PhasesModule.html":{}}}],["config.module.ts",{"_index":380,"title":{},"body":{"modules/ActivitiesConfigModule.html":{},"modules/UserConfigModule.html":{}}}],["config.phase",{"_index":529,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["config.phase.tostring",{"_index":516,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["config.resolver",{"_index":384,"title":{},"body":{"modules/ActivitiesConfigModule.html":{},"modules/TableModule.html":{},"modules/UserConfigModule.html":{}}}],["config.service",{"_index":382,"title":{},"body":{"modules/ActivitiesConfigModule.html":{},"injectables/BusinessService.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"modules/UserConfigModule.html":{}}}],["config.service.ts",{"_index":399,"title":{},"body":{"injectables/ActivitiesConfigService.html":{},"injectables/TableConfigService.html":{},"injectables/UserConfigService.html":{}}}],["config.service.ts:11",{"_index":3796,"title":{},"body":{"injectables/TableConfigService.html":{}}}],["config.service.ts:12",{"_index":4294,"title":{},"body":{"injectables/UserConfigService.html":{}}}],["config.service.ts:121",{"_index":453,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["config.service.ts:129",{"_index":457,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["config.service.ts:145",{"_index":454,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["config.service.ts:156",{"_index":446,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["config.service.ts:166",{"_index":418,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["config.service.ts:21",{"_index":3803,"title":{},"body":{"injectables/TableConfigService.html":{}}}],["config.service.ts:215",{"_index":435,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["config.service.ts:23",{"_index":4297,"title":{},"body":{"injectables/UserConfigService.html":{}}}],["config.service.ts:274",{"_index":432,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["config.service.ts:30",{"_index":4299,"title":{},"body":{"injectables/UserConfigService.html":{}}}],["config.service.ts:31",{"_index":3804,"title":{},"body":{"injectables/TableConfigService.html":{}}}],["config.service.ts:34",{"_index":416,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["config.service.ts:342",{"_index":439,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["config.service.ts:43",{"_index":3800,"title":{},"body":{"injectables/TableConfigService.html":{}}}],["config.service.ts:46",{"_index":4301,"title":{},"body":{"injectables/UserConfigService.html":{}}}],["config.service.ts:53",{"_index":443,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["config.service.ts:57",{"_index":3805,"title":{},"body":{"injectables/TableConfigService.html":{}}}],["config.service.ts:61",{"_index":449,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["config.service.ts:67",{"_index":3801,"title":{},"body":{"injectables/TableConfigService.html":{}}}],["config.service.ts:76",{"_index":452,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["config.startups.find",{"_index":555,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["config.teamcoaches.find",{"_index":614,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["config.type",{"_index":1623,"title":{},"body":{"injectables/ConfigNotificationsService.html":{}}}],["config/activities",{"_index":379,"title":{},"body":{"modules/ActivitiesConfigModule.html":{},"injectables/ActivitiesConfigService.html":{},"modules/AppModule.html":{},"modules/PhasesModule.html":{}}}],["config/app.config",{"_index":850,"title":{},"body":{"modules/AppModule.html":{},"injectables/AwsService.html":{},"injectables/EmailsService.html":{},"injectables/InvitationsService.html":{}}}],["config/dto/create",{"_index":1908,"title":{},"body":{"classes/CreateActivitiesConfigInput.html":{},"classes/CreateTableConfigInput.html":{}}}],["config/dto/update",{"_index":4092,"title":{},"body":{"classes/UpdateActivitiesConfigInput.html":{},"classes/UpdateTableConfigInput.html":{},"classes/UpdateUserConfigInput.html":{}}}],["config/entities/activities",{"_index":333,"title":{},"body":{"classes/ActivitiesConfig.html":{},"classes/Assign.html":{},"classes/activities.html":{}}}],["config/entities/table",{"_index":3782,"title":{},"body":{"classes/TableConfig.html":{},"modules/TableModule.html":{}}}],["config/entities/user",{"_index":4278,"title":{},"body":{"classes/UserConfig.html":{}}}],["config/firebase/config.json",{"_index":1163,"title":{},"body":{"injectables/AuthService.html":{}}}],["config/outputs/hours.model.ts",{"_index":2798,"title":{},"body":{"classes/Hours.html":{}}}],["config/outputs/hours.model.ts:9",{"_index":2800,"title":{},"body":{"classes/Hours.html":{}}}],["config/table",{"_index":1396,"title":{},"body":{"injectables/BusinessService.html":{},"injectables/TableConfigService.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{}}}],["config/user",{"_index":911,"title":{},"body":{"modules/AppModule.html":{},"modules/UserConfigModule.html":{},"injectables/UserConfigService.html":{}}}],["config?.notifications",{"_index":4311,"title":{},"body":{"injectables/UserConfigService.html":{}}}],["config['_id",{"_index":513,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["configbytype",{"_index":1628,"title":{},"body":{"injectables/ConfigNotificationsService.html":{}}}],["configevaluation",{"_index":1499,"title":{"classes/ConfigEvaluation.html":{}},"body":{"classes/ConfigEvaluation.html":{},"modules/ConfigEvaluationsModule.html":{},"injectables/ConfigEvaluationsService.html":{}}}],["configevaluation.name",{"_index":1534,"title":{},"body":{"modules/ConfigEvaluationsModule.html":{}}}],["configevaluationmodel",{"_index":1539,"title":{},"body":{"injectables/ConfigEvaluationsService.html":{}}}],["configevaluationschema",{"_index":1521,"title":{},"body":{"classes/ConfigEvaluation.html":{},"modules/ConfigEvaluationsModule.html":{}}}],["configevaluationsmodule",{"_index":816,"title":{"modules/ConfigEvaluationsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ConfigEvaluationsModule.html":{},"modules/EvaluationsModule.html":{},"modules.html":{},"overview.html":{}}}],["configevaluationsresolver",{"_index":1530,"title":{},"body":{"modules/ConfigEvaluationsModule.html":{}}}],["configevaluationsservice",{"_index":1527,"title":{"injectables/ConfigEvaluationsService.html":{}},"body":{"modules/ConfigEvaluationsModule.html":{},"injectables/ConfigEvaluationsService.html":{},"overview.html":{}}}],["configid",{"_index":1461,"title":{},"body":{"injectables/BusinessService.html":{}}}],["configmodule",{"_index":843,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":916,"title":{},"body":{"modules/AppModule.html":{}}}],["confignotification",{"_index":1597,"title":{},"body":{"modules/ConfigNotificationsModule.html":{},"injectables/ConfigNotificationsService.html":{}}}],["confignotification.name",{"_index":1600,"title":{},"body":{"modules/ConfigNotificationsModule.html":{}}}],["confignotificationmodel",{"_index":1607,"title":{},"body":{"injectables/ConfigNotificationsService.html":{}}}],["confignotificationschema",{"_index":1598,"title":{},"body":{"modules/ConfigNotificationsModule.html":{}}}],["confignotificationsmodule",{"_index":1586,"title":{"modules/ConfigNotificationsModule.html":{}},"body":{"modules/ConfigNotificationsModule.html":{},"modules/EvaluationsModule.html":{},"modules/EventsModule.html":{},"modules/NotificationsModule.html":{},"modules/PhasesModule.html":{},"modules/ResourcesRepliesModule.html":{},"modules/UserConfigModule.html":{},"modules.html":{},"overview.html":{}}}],["confignotificationsresolver",{"_index":1595,"title":{},"body":{"modules/ConfigNotificationsModule.html":{}}}],["confignotificationsservice",{"_index":1590,"title":{"injectables/ConfigNotificationsService.html":{}},"body":{"modules/ConfigNotificationsModule.html":{},"injectables/ConfigNotificationsService.html":{},"injectables/NotificationsService.html":{},"injectables/UserConfigService.html":{},"overview.html":{}}}],["configs",{"_index":3765,"title":{},"body":{"classes/Table.html":{},"classes/TableConfig.html":{}}}],["configservice",{"_index":844,"title":{},"body":{"modules/AppModule.html":{},"injectables/AwsService.html":{},"injectables/EmailsService.html":{},"injectables/InvitationsService.html":{}}}],["configservice.get",{"_index":2282,"title":{},"body":{"injectables/EmailsService.html":{}}}],["configservice.get('environment",{"_index":929,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('mongodb",{"_index":925,"title":{},"body":{"modules/AppModule.html":{}}}],["configura",{"_index":1568,"title":{},"body":{"injectables/ConfigEvaluationsService.html":{},"injectables/UserLogService.html":{}}}],["configurable",{"_index":1493,"title":{},"body":{"classes/ColumnGroup.html":{},"classes/Table.html":{}}}],["configuraciones",{"_index":4920,"title":{},"body":{"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["configuración",{"_index":4881,"title":{},"body":{"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["configuration",{"_index":162,"title":{},"body":{"classes/AWSSESProvider.html":{},"classes/ActivitiesConfig.html":{},"injectables/ActivitiesConfigService.html":{},"modules/AppModule.html":{},"classes/Assign.html":{},"classes/ConfigurationApp.html":{},"modules/ConfigurationAppModule.html":{},"injectables/ConfigurationAppService.html":{},"classes/CreateTableConfigInput.html":{},"injectables/EmailsService.html":{},"classes/SendGridProvider.html":{},"injectables/TableService.html":{},"classes/UpdateConfigurationAppInput.html":{},"classes/UserConfig.html":{},"injectables/UserConfigService.html":{},"classes/activities.html":{}}}],["configuration.'})@isnotempty",{"_index":2146,"title":{},"body":{"classes/CreateTableConfigInput.html":{}}}],["configurationapp",{"_index":1634,"title":{"classes/ConfigurationApp.html":{}},"body":{"classes/ConfigurationApp.html":{},"modules/ConfigurationAppModule.html":{},"injectables/ConfigurationAppService.html":{}}}],["configurationapp.name",{"_index":1665,"title":{},"body":{"modules/ConfigurationAppModule.html":{}}}],["configurationappmodule",{"_index":817,"title":{"modules/ConfigurationAppModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ConfigurationAppModule.html":{},"modules.html":{},"overview.html":{}}}],["configurationappresolver",{"_index":1660,"title":{},"body":{"modules/ConfigurationAppModule.html":{}}}],["configurationappschema",{"_index":1651,"title":{},"body":{"classes/ConfigurationApp.html":{},"modules/ConfigurationAppModule.html":{}}}],["configurationappservice",{"_index":1657,"title":{"injectables/ConfigurationAppService.html":{}},"body":{"modules/ConfigurationAppModule.html":{},"injectables/ConfigurationAppService.html":{},"overview.html":{}}}],["conflictexception",{"_index":4481,"title":{},"body":{"injectables/UsersService.html":{}}}],["conflictexception('authenticated",{"_index":4507,"title":{},"body":{"injectables/UsersService.html":{}}}],["console.error(error",{"_index":1264,"title":{},"body":{"injectables/AwsService.html":{}}}],["console.log(`email",{"_index":3558,"title":{},"body":{"classes/SendGridProvider.html":{}}}],["console.log(error",{"_index":2739,"title":{},"body":{"injectables/HelpDeskService.html":{},"injectables/IntegrationsService.html":{}}}],["console.log(ex",{"_index":3084,"title":{},"body":{"injectables/InvitationsService.html":{},"classes/SendGridProvider.html":{}}}],["console.log(ex.response.body.errors",{"_index":3559,"title":{},"body":{"classes/SendGridProvider.html":{}}}],["console.log(process.env.aws_ses_region",{"_index":94,"title":{},"body":{"classes/AWSSESProvider.html":{}}}],["console.log(templateinput",{"_index":148,"title":{},"body":{"classes/AWSSESProvider.html":{}}}],["console.log(util.inspect(aggregation",{"_index":5042,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.log(util.inspect(request",{"_index":5038,"title":{},"body":{"miscellaneous/variables.html":{}}}],["const",{"_index":122,"title":{},"body":{"classes/AWSSESProvider.html":{},"classes/Acta.html":{},"injectables/ActaService.html":{},"classes/ActivitiesConfig.html":{},"injectables/ActivitiesConfigService.html":{},"classes/Announcement.html":{},"injectables/AnnouncementsService.html":{},"modules/AppModule.html":{},"classes/Applicant.html":{},"classes/ApplicantState.html":{},"classes/Assign.html":{},"classes/Attachment.html":{},"classes/AuthCode.html":{},"injectables/AuthCodeService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AwsService.html":{},"classes/Business.html":{},"classes/BusinessRelationship.html":{},"injectables/BusinessService.html":{},"classes/ConfigEvaluation.html":{},"injectables/ConfigEvaluationsService.html":{},"injectables/ConfigNotificationsService.html":{},"classes/ConfigurationApp.html":{},"injectables/ConfigurationAppService.html":{},"classes/ContactServiceLink.html":{},"classes/Content.html":{},"injectables/ContentService.html":{},"classes/Download.html":{},"injectables/DownloadsService.html":{},"interfaces/EmailsRepository.html":{},"injectables/EmailsService.html":{},"classes/Entrepreneur.html":{},"classes/EntrepreneurRelationship.html":{},"classes/EntrepreneurRelationship-1.html":{},"classes/Evaluation.html":{},"classes/Event.html":{},"classes/Expert.html":{},"classes/ExpertEventLink.html":{},"classes/Form.html":{},"classes/FormSubscription.html":{},"injectables/FormSubscriptionService.html":{},"classes/FormTag.html":{},"injectables/FormTagService.html":{},"injectables/FormsService.html":{},"guards/GqlAuthGuard.html":{},"injectables/HelpDeskService.html":{},"classes/HelpDeskTicket.html":{},"interfaces/IAttachment.html":{},"classes/Integration.html":{},"injectables/IntegrationsService.html":{},"classes/Invitation.html":{},"injectables/InvitationsService.html":{},"classes/Notification.html":{},"classes/Notification-1.html":{},"injectables/NotificationsService.html":{},"classes/ParticipantEventLink.html":{},"classes/ParticipationEvent.html":{},"injectables/ParticipationEventsService.html":{},"classes/Phase.html":{},"classes/PhaseExpertRelationship.html":{},"classes/PhaseRelationship.html":{},"classes/Resource.html":{},"classes/ResourcesReply.html":{},"injectables/ResourcesService.html":{},"classes/Rol.html":{},"injectables/RolService.html":{},"classes/SendGridProvider.html":{},"classes/Site.html":{},"injectables/SitesService.html":{},"classes/Stage.html":{},"injectables/StagesService.html":{},"classes/Startup.html":{},"classes/StartupLink.html":{},"classes/StartupRelationship.html":{},"controllers/StorageController.html":{},"classes/Table.html":{},"classes/TableConfig.html":{},"injectables/TableConfigService.html":{},"classes/TableJoin.html":{},"injectables/TableService.html":{},"classes/TeamCoachLink.html":{},"classes/TermsOfUse.html":{},"injectables/TicketCategoriesService.html":{},"classes/TicketCategory.html":{},"classes/TicketChild.html":{},"classes/TypesEvent.html":{},"injectables/TypesEventsService.html":{},"classes/TypesNotification.html":{},"classes/User.html":{},"classes/UserConfig.html":{},"injectables/UserConfigService.html":{},"classes/UserLog.html":{},"injectables/UserLogService.html":{},"injectables/UsersService.html":{},"classes/activities.html":{},"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":27,"title":{},"body":{"classes/AWSSESProvider.html":{},"injectables/ActaService.html":{},"injectables/ActivitiesConfigService.html":{},"injectables/AnnouncementsService.html":{},"injectables/AuthCodeService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AwsService.html":{},"injectables/BusinessService.html":{},"injectables/ConfigEvaluationsService.html":{},"injectables/ConfigNotificationsService.html":{},"injectables/ConfigurationAppService.html":{},"injectables/ContentService.html":{},"injectables/DownloadsService.html":{},"injectables/EmailsService.html":{},"injectables/FormSubscriptionService.html":{},"injectables/FormTagService.html":{},"injectables/FormsService.html":{},"guards/GqlAuthGuard.html":{},"injectables/HelpDeskService.html":{},"injectables/IntegrationsService.html":{},"injectables/InvitationsService.html":{},"classes/Notification.html":{},"injectables/NotificationsService.html":{},"injectables/ParticipationEventsService.html":{},"injectables/ResourcesService.html":{},"injectables/RolService.html":{},"classes/SendGridProvider.html":{},"injectables/SitesService.html":{},"injectables/StagesService.html":{},"injectables/TableConfigService.html":{},"injectables/TableService.html":{},"injectables/TermsOfUseService.html":{},"injectables/TicketCategoriesService.html":{},"injectables/TypesEventsService.html":{},"injectables/TypesNotificationsService.html":{},"injectables/UserConfigService.html":{},"injectables/UserLogService.html":{},"injectables/UsersService.html":{}}}],["constructor(@injectmodel(rol.name",{"_index":3506,"title":{},"body":{"injectables/RolService.html":{}}}],["constructor(actamodel",{"_index":289,"title":{},"body":{"injectables/ActaService.html":{}}}],["constructor(activitiesconfig",{"_index":408,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["constructor(announcementmodel",{"_index":769,"title":{},"body":{"injectables/AnnouncementsService.html":{}}}],["constructor(authcodemodel",{"_index":1069,"title":{},"body":{"injectables/AuthCodeService.html":{}}}],["constructor(authservice",{"_index":1102,"title":{},"body":{"guards/AuthGuard.html":{},"guards/GqlAuthGuard.html":{}}}],["constructor(businessmodel",{"_index":1330,"title":{},"body":{"injectables/BusinessService.html":{}}}],["constructor(configevaluationmodel",{"_index":1537,"title":{},"body":{"injectables/ConfigEvaluationsService.html":{}}}],["constructor(confignotificationmodel",{"_index":1605,"title":{},"body":{"injectables/ConfigNotificationsService.html":{}}}],["constructor(configservice",{"_index":1207,"title":{},"body":{"injectables/AwsService.html":{}}}],["constructor(configurationapp",{"_index":1669,"title":{},"body":{"injectables/ConfigurationAppService.html":{}}}],["constructor(contentmodel",{"_index":1786,"title":{},"body":{"injectables/ContentService.html":{}}}],["constructor(data",{"_index":3153,"title":{},"body":{"classes/Notification.html":{}}}],["constructor(downloadmodel",{"_index":2203,"title":{},"body":{"injectables/DownloadsService.html":{}}}],["constructor(emailservice",{"_index":2268,"title":{},"body":{"injectables/EmailsService.html":{}}}],["constructor(formmodel",{"_index":2629,"title":{},"body":{"injectables/FormsService.html":{}}}],["constructor(formsubscriptionmodel",{"_index":2493,"title":{},"body":{"injectables/FormSubscriptionService.html":{}}}],["constructor(formtagmodel",{"_index":2587,"title":{},"body":{"injectables/FormTagService.html":{}}}],["constructor(integrationmodel",{"_index":2835,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["constructor(invitationmodel",{"_index":3033,"title":{},"body":{"injectables/InvitationsService.html":{}}}],["constructor(notificationmodel",{"_index":3198,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["constructor(participationeventmodel",{"_index":3294,"title":{},"body":{"injectables/ParticipationEventsService.html":{}}}],["constructor(private",{"_index":1111,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AwsService.html":{},"controllers/EmailsController.html":{},"guards/GqlAuthGuard.html":{},"controllers/InvitationsController.html":{},"controllers/StorageController.html":{}}}],["constructor(resourcemodel",{"_index":3441,"title":{},"body":{"injectables/ResourcesService.html":{}}}],["constructor(rolmodel",{"_index":3490,"title":{},"body":{"injectables/RolService.html":{}}}],["constructor(sitemodel",{"_index":3610,"title":{},"body":{"injectables/SitesService.html":{}}}],["constructor(stagemodel",{"_index":3652,"title":{},"body":{"injectables/StagesService.html":{}}}],["constructor(tableconfigmodel",{"_index":3795,"title":{},"body":{"injectables/TableConfigService.html":{}}}],["constructor(tablemodel",{"_index":3845,"title":{},"body":{"injectables/TableService.html":{}}}],["constructor(termsofusemodel",{"_index":3955,"title":{},"body":{"injectables/TermsOfUseService.html":{}}}],["constructor(ticketcategorymodel",{"_index":3984,"title":{},"body":{"injectables/TicketCategoriesService.html":{}}}],["constructor(ticketsmodel",{"_index":2707,"title":{},"body":{"injectables/HelpDeskService.html":{}}}],["constructor(typeeventmodel",{"_index":4037,"title":{},"body":{"injectables/TypesEventsService.html":{}}}],["constructor(typesnotificationmodel",{"_index":4071,"title":{},"body":{"injectables/TypesNotificationsService.html":{}}}],["constructor(userconfigmodel",{"_index":4293,"title":{},"body":{"injectables/UserConfigService.html":{}}}],["constructor(userlogmodel",{"_index":4358,"title":{},"body":{"injectables/UserLogService.html":{}}}],["constructor(usermodel",{"_index":4450,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(usersservice",{"_index":1137,"title":{},"body":{"injectables/AuthService.html":{}}}],["contact",{"_index":1712,"title":{},"body":{"classes/ContactServiceLink.html":{},"classes/ContactServicesInput.html":{},"classes/Site.html":{},"classes/UpdateSiteInput.html":{}}}],["contact_email",{"_index":2923,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["contact_name",{"_index":2924,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["contactargs",{"_index":1697,"title":{"classes/ContactArgs.html":{}},"body":{"classes/ContactArgs.html":{},"injectables/UsersService.html":{}}}],["contactargs.from",{"_index":4528,"title":{},"body":{"injectables/UsersService.html":{}}}],["contactargs.startupid",{"_index":4526,"title":{},"body":{"injectables/UsersService.html":{}}}],["contactargs.startupname",{"_index":4534,"title":{},"body":{"injectables/UsersService.html":{}}}],["contactargs.subject",{"_index":4557,"title":{},"body":{"injectables/UsersService.html":{}}}],["contactargs.to",{"_index":4520,"title":{},"body":{"injectables/UsersService.html":{}}}],["contacts",{"_index":1724,"title":{},"body":{"classes/ContactServiceLink.html":{},"classes/ContactServicesInput.html":{},"classes/CreateSiteInput.html":{},"classes/Site.html":{},"classes/UpdateSiteInput.html":{}}}],["contactservicelink",{"_index":1710,"title":{"classes/ContactServiceLink.html":{}},"body":{"classes/ContactServiceLink.html":{},"classes/Site.html":{}}}],["contactservicesinput",{"_index":1727,"title":{"classes/ContactServicesInput.html":{}},"body":{"classes/ContactServicesInput.html":{},"classes/CreateSiteInput.html":{},"classes/UpdateSiteInput.html":{}}}],["contenido",{"_index":1844,"title":{},"body":{"injectables/ContentService.html":{}}}],["contenidos",{"_index":1858,"title":{},"body":{"injectables/ContentService.html":{}}}],["content",{"_index":1740,"title":{"classes/Content.html":{}},"body":{"classes/Content.html":{},"modules/ContentModule.html":{},"injectables/ContentService.html":{},"classes/CreateContentInput.html":{},"classes/CreateResourceInput.html":{},"injectables/IntegrationsService.html":{},"classes/LastContentOutput.html":{},"classes/Resource.html":{},"classes/ResourcesReply.html":{},"injectables/ResourcesService.html":{},"classes/SendGridProvider.html":{},"classes/TermsOfUse.html":{},"classes/UpdateContentInput.html":{},"classes/UpdateTermsOfUseInput.html":{}}}],["content._id.tostring",{"_index":1850,"title":{},"body":{"injectables/ContentService.html":{}}}],["content.input",{"_index":1816,"title":{},"body":{"injectables/ContentService.html":{},"classes/UpdateContentInput.html":{}}}],["content.input.ts",{"_index":1947,"title":{},"body":{"classes/CreateContentInput.html":{},"classes/UpdateContentInput.html":{}}}],["content.input.ts:11",{"_index":1950,"title":{},"body":{"classes/CreateContentInput.html":{}}}],["content.input.ts:12",{"_index":4138,"title":{},"body":{"classes/UpdateContentInput.html":{}}}],["content.input.ts:15",{"_index":1948,"title":{},"body":{"classes/CreateContentInput.html":{}}}],["content.input.ts:16",{"_index":4141,"title":{},"body":{"classes/UpdateContentInput.html":{}}}],["content.input.ts:19",{"_index":1949,"title":{},"body":{"classes/CreateContentInput.html":{}}}],["content.input.ts:20",{"_index":4139,"title":{},"body":{"classes/UpdateContentInput.html":{}}}],["content.input.ts:23",{"_index":1951,"title":{},"body":{"classes/CreateContentInput.html":{}}}],["content.input.ts:24",{"_index":4140,"title":{},"body":{"classes/UpdateContentInput.html":{}}}],["content.input.ts:28",{"_index":4142,"title":{},"body":{"classes/UpdateContentInput.html":{}}}],["content.name",{"_index":1779,"title":{},"body":{"modules/ContentModule.html":{}}}],["content.resolver",{"_index":1776,"title":{},"body":{"modules/ContentModule.html":{}}}],["content.resources",{"_index":1865,"title":{},"body":{"injectables/ContentService.html":{}}}],["content.service",{"_index":1774,"title":{},"body":{"modules/ContentModule.html":{}}}],["content/content.module",{"_index":864,"title":{},"body":{"modules/AppModule.html":{}}}],["contentcompleted",{"_index":1876,"title":{},"body":{"injectables/ContentService.html":{},"classes/LastContentOutput.html":{}}}],["contentid",{"_index":1794,"title":{},"body":{"injectables/ContentService.html":{},"classes/SendGridProvider.html":{}}}],["contentmodel",{"_index":1789,"title":{},"body":{"injectables/ContentService.html":{}}}],["contentmodified",{"_index":3461,"title":{},"body":{"injectables/ResourcesService.html":{}}}],["contentmodule",{"_index":818,"title":{"modules/ContentModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ContentModule.html":{},"modules/PhasesModule.html":{},"modules/ResourcesModule.html":{},"modules/ResourcesRepliesModule.html":{},"modules/UserLogModule.html":{},"modules.html":{},"overview.html":{}}}],["contentofinterest",{"_index":1639,"title":{},"body":{"classes/ConfigurationApp.html":{},"classes/UpdateConfigurationAppInput.html":{}}}],["contentresolver",{"_index":1775,"title":{},"body":{"modules/ContentModule.html":{}}}],["contents",{"_index":1840,"title":{},"body":{"injectables/ContentService.html":{}}}],["contents[contents.length",{"_index":1854,"title":{},"body":{"injectables/ContentService.html":{}}}],["contentschema",{"_index":1766,"title":{},"body":{"classes/Content.html":{},"modules/ContentModule.html":{}}}],["contentservice",{"_index":1772,"title":{"injectables/ContentService.html":{}},"body":{"modules/ContentModule.html":{},"injectables/ContentService.html":{},"injectables/ResourcesService.html":{},"overview.html":{}}}],["conteo",{"_index":1856,"title":{},"body":{"injectables/ContentService.html":{}}}],["context",{"_index":944,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/BusinessService.html":{},"injectables/FormSubscriptionService.html":{},"guards/GqlAuthGuard.html":{},"miscellaneous/variables.html":{}}}],["context.entrepreneur",{"_index":1402,"title":{},"body":{"injectables/BusinessService.html":{}}}],["context.switchtohttp().getrequest",{"_index":1112,"title":{},"body":{"guards/AuthGuard.html":{}}}],["continue",{"_index":540,"title":{},"body":{"injectables/ActivitiesConfigService.html":{},"injectables/ContentService.html":{},"injectables/UserLogService.html":{}}}],["continuous_meeting_chat",{"_index":2948,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["controller",{"_index":2230,"title":{"controllers/EmailsController.html":{},"controllers/InvitationsController.html":{},"controllers/StorageController.html":{}},"body":{"controllers/EmailsController.html":{},"controllers/InvitationsController.html":{},"controllers/StorageController.html":{}}}],["controller('emails",{"_index":2247,"title":{},"body":{"controllers/EmailsController.html":{}}}],["controller('invitations",{"_index":3015,"title":{},"body":{"controllers/InvitationsController.html":{}}}],["controller('storage",{"_index":3723,"title":{},"body":{"controllers/StorageController.html":{}}}],["controllers",{"_index":951,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DownloadsModule.html":{},"controllers/EmailsController.html":{},"modules/EmailsModule.html":{},"controllers/InvitationsController.html":{},"modules/InvitationsModule.html":{},"controllers/StorageController.html":{},"modules/StorageModule.html":{},"overview.html":{}}}],["convocatoria",{"_index":687,"title":{},"body":{"classes/Announcement.html":{},"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["convocatorias",{"_index":4872,"title":{},"body":{"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["coords",{"_index":1722,"title":{},"body":{"classes/ContactServiceLink.html":{},"classes/ContactServicesInput.html":{},"classes/CreateSiteInput.html":{},"classes/Site.html":{},"classes/UpdateSiteInput.html":{}}}],["correo",{"_index":4524,"title":{},"body":{"injectables/UsersService.html":{}}}],["cors",{"_index":934,"title":{},"body":{"modules/AppModule.html":{}}}],["couldn't",{"_index":3812,"title":{},"body":{"injectables/TableConfigService.html":{},"injectables/TableService.html":{}}}],["count",{"_index":4426,"title":{},"body":{"injectables/UserLogService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["countall",{"_index":4442,"title":{},"body":{"injectables/UsersService.html":{}}}],["countdocs",{"_index":4428,"title":{},"body":{"injectables/UserLogService.html":{}}}],["counthoursdonated",{"_index":593,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["counthoursdone",{"_index":592,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["country",{"_index":172,"title":{},"body":{"classes/AWSSESProvider.html":{},"interfaces/EmailsRepository.html":{},"injectables/EmailsService.html":{},"classes/SendGridProvider.html":{}}}],["coverage",{"_index":4784,"title":{},"body":{"index.html":{}}}],["crear",{"_index":4821,"title":{},"body":{"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["create",{"_index":282,"title":{},"body":{"injectables/ActaService.html":{},"injectables/ActivitiesConfigService.html":{},"injectables/AnnouncementsService.html":{},"injectables/AuthCodeService.html":{},"injectables/AuthService.html":{},"injectables/AwsService.html":{},"injectables/BusinessService.html":{},"injectables/ConfigEvaluationsService.html":{},"injectables/ConfigNotificationsService.html":{},"classes/ContactServicesInput.html":{},"injectables/ContentService.html":{},"injectables/FormSubscriptionService.html":{},"injectables/FormTagService.html":{},"injectables/FormsService.html":{},"injectables/HelpDeskService.html":{},"injectables/IntegrationsService.html":{},"injectables/InvitationsService.html":{},"injectables/NotificationsService.html":{},"injectables/ParticipationEventsService.html":{},"injectables/ResourcesService.html":{},"injectables/RolService.html":{},"injectables/SitesService.html":{},"injectables/StagesService.html":{},"controllers/StorageController.html":{},"injectables/TableConfigService.html":{},"injectables/TableService.html":{},"injectables/TicketCategoriesService.html":{},"injectables/TypesEventsService.html":{},"classes/UpdateActaInput.html":{},"classes/UpdateActivitiesConfigInput.html":{},"classes/UpdateAnnouncementInput.html":{},"classes/UpdateApplicantInput.html":{},"classes/UpdateConfigEvaluationInput.html":{},"classes/UpdateContentInput.html":{},"classes/UpdateEventInput.html":{},"classes/UpdateHelpDeskInput.html":{},"classes/UpdateIntegrationInput.html":{},"classes/UpdateNotificationInput.html":{},"classes/UpdateParticipationEventInput.html":{},"classes/UpdateResourceInput.html":{},"classes/UpdateResourcesReplyInput.html":{},"classes/UpdateRolInput.html":{},"classes/UpdateSiteInput.html":{},"classes/UpdateStageInput.html":{},"classes/UpdateTermsOfUseInput.html":{},"classes/UpdateTypesEventInput.html":{},"injectables/UserConfigService.html":{},"injectables/UserLogService.html":{},"injectables/UsersService.html":{}}}],["create(@body",{"_index":3724,"title":{},"body":{"controllers/StorageController.html":{}}}],["create(_user",{"_index":1072,"title":{},"body":{"injectables/AuthCodeService.html":{}}}],["create(body",{"_index":3719,"title":{},"body":{"controllers/StorageController.html":{}}}],["create(createactainput",{"_index":293,"title":{},"body":{"injectables/ActaService.html":{}}}],["create(createactivitiesconfiginput",{"_index":441,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["create(createannouncementinput",{"_index":775,"title":{},"body":{"injectables/AnnouncementsService.html":{}}}],["create(createcategoryinput",{"_index":3987,"title":{},"body":{"injectables/TicketCategoriesService.html":{}}}],["create(createconfigevaluationinput",{"_index":1540,"title":{},"body":{"injectables/ConfigEvaluationsService.html":{}}}],["create(createconfignotificationinput",{"_index":1608,"title":{},"body":{"injectables/ConfigNotificationsService.html":{}}}],["create(createcontentinput",{"_index":1798,"title":{},"body":{"injectables/ContentService.html":{}}}],["create(createforminput",{"_index":2633,"title":{},"body":{"injectables/FormsService.html":{}}}],["create(createformsubscriptioninput",{"_index":2502,"title":{},"body":{"injectables/FormSubscriptionService.html":{}}}],["create(createformtaginput",{"_index":2590,"title":{},"body":{"injectables/FormTagService.html":{}}}],["create(createhelpdeskinput",{"_index":2714,"title":{},"body":{"injectables/HelpDeskService.html":{}}}],["create(createnotificationinput",{"_index":3201,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["create(createparticipationeventinput",{"_index":3297,"title":{},"body":{"injectables/ParticipationEventsService.html":{}}}],["create(createresourceinput",{"_index":3444,"title":{},"body":{"injectables/ResourcesService.html":{}}}],["create(createrolinput",{"_index":3493,"title":{},"body":{"injectables/RolService.html":{}}}],["create(createsiteinput",{"_index":3613,"title":{},"body":{"injectables/SitesService.html":{}}}],["create(createstageinput",{"_index":3655,"title":{},"body":{"injectables/StagesService.html":{}}}],["create(createtermsofuseinput",{"_index":3965,"title":{},"body":{"injectables/TermsOfUseService.html":{}}}],["create(createtypeeventinput",{"_index":4039,"title":{},"body":{"injectables/TypesEventsService.html":{}}}],["create(createuserinput",{"_index":4455,"title":{},"body":{"injectables/UsersService.html":{}}}],["create(createuserloginput",{"_index":4361,"title":{},"body":{"injectables/UserLogService.html":{}}}],["create(data",{"_index":1337,"title":{},"body":{"injectables/BusinessService.html":{},"injectables/TableService.html":{}}}],["create(uid",{"_index":4296,"title":{},"body":{"injectables/UserConfigService.html":{}}}],["create(undefined",{"_index":3041,"title":{},"body":{"injectables/InvitationsService.html":{}}}],["create_business",{"_index":4677,"title":{},"body":{"miscellaneous/enumerations.html":{},"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["create_entrepreneurs",{"_index":4674,"title":{},"body":{"miscellaneous/enumerations.html":{},"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["create_experts",{"_index":4670,"title":{},"body":{"miscellaneous/enumerations.html":{},"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["create_startups",{"_index":4667,"title":{},"body":{"miscellaneous/enumerations.html":{},"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["createaccountwithdefaultpassword",{"_index":1131,"title":{},"body":{"injectables/AuthService.html":{}}}],["createaccountwithdefaultpassword(email",{"_index":1139,"title":{},"body":{"injectables/AuthService.html":{}}}],["createactainput",{"_index":294,"title":{"classes/CreateActaInput.html":{}},"body":{"injectables/ActaService.html":{},"classes/CreateActaInput.html":{},"classes/UpdateActaInput.html":{}}}],["createactivitiesconfiginput",{"_index":442,"title":{"classes/CreateActivitiesConfigInput.html":{}},"body":{"injectables/ActivitiesConfigService.html":{},"classes/CreateActivitiesConfigInput.html":{},"classes/UpdateActivitiesConfigInput.html":{}}}],["createannouncementinput",{"_index":776,"title":{"classes/CreateAnnouncementInput.html":{}},"body":{"injectables/AnnouncementsService.html":{},"classes/CreateAnnouncementInput.html":{},"classes/UpdateAnnouncementInput.html":{}}}],["createapplicantinput",{"_index":4114,"title":{},"body":{"classes/UpdateApplicantInput.html":{}}}],["createcategoryinput",{"_index":3988,"title":{},"body":{"injectables/TicketCategoriesService.html":{}}}],["createconfigevaluationinput",{"_index":1541,"title":{"classes/CreateConfigEvaluationInput.html":{}},"body":{"injectables/ConfigEvaluationsService.html":{},"classes/CreateConfigEvaluationInput.html":{},"classes/UpdateConfigEvaluationInput.html":{}}}],["createconfignotificationinput",{"_index":1609,"title":{"classes/CreateConfigNotificationInput.html":{}},"body":{"injectables/ConfigNotificationsService.html":{},"classes/CreateConfigNotificationInput.html":{}}}],["createconfignotificationinput.excluded",{"_index":1626,"title":{},"body":{"injectables/ConfigNotificationsService.html":{}}}],["createconfignotificationinput.type",{"_index":1624,"title":{},"body":{"injectables/ConfigNotificationsService.html":{}}}],["createcontentinput",{"_index":1799,"title":{"classes/CreateContentInput.html":{}},"body":{"injectables/ContentService.html":{},"classes/CreateContentInput.html":{},"classes/UpdateContentInput.html":{}}}],["createcontentinput.extra_options?.parent",{"_index":1824,"title":{},"body":{"injectables/ContentService.html":{}}}],["created",{"_index":657,"title":{},"body":{"classes/Announcement.html":{},"injectables/ConfigNotificationsService.html":{},"classes/Form.html":{},"injectables/UserConfigService.html":{}}}],["createdannouncement",{"_index":795,"title":{},"body":{"injectables/AnnouncementsService.html":{}}}],["createdat",{"_index":198,"title":{},"body":{"classes/Acta.html":{},"classes/ActivitiesConfig.html":{},"classes/Announcement.html":{},"classes/Applicant.html":{},"classes/ApplicantState.html":{},"classes/Assign.html":{},"classes/Attachment.html":{},"classes/AuthCode.html":{},"classes/Business.html":{},"classes/BusinessRelationship.html":{},"classes/ConfigEvaluation.html":{},"classes/ConfigurationApp.html":{},"classes/ContactServiceLink.html":{},"classes/Content.html":{},"classes/Download.html":{},"classes/Entrepreneur.html":{},"classes/EntrepreneurRelationship.html":{},"classes/EntrepreneurRelationship-1.html":{},"classes/Evaluation.html":{},"classes/Event.html":{},"classes/Expert.html":{},"classes/ExpertEventLink.html":{},"classes/Form.html":{},"classes/FormSubscription.html":{},"classes/FormTag.html":{},"classes/HelpDeskTicket.html":{},"interfaces/IAttachment.html":{},"classes/Integration.html":{},"classes/Invitation.html":{},"classes/Notification-1.html":{},"classes/ParticipantEventLink.html":{},"classes/ParticipationEvent.html":{},"classes/Phase.html":{},"classes/PhaseExpertRelationship.html":{},"classes/PhaseRelationship.html":{},"classes/Resource.html":{},"classes/ResourcesReply.html":{},"classes/Rol.html":{},"classes/Site.html":{},"classes/Stage.html":{},"classes/Startup.html":{},"classes/StartupLink.html":{},"classes/StartupRelationship.html":{},"classes/TeamCoachLink.html":{},"classes/TermsOfUse.html":{},"classes/TicketCategory.html":{},"classes/TicketChild.html":{},"classes/TypesEvent.html":{},"classes/User.html":{},"classes/UserLog.html":{},"injectables/UserLogService.html":{},"classes/activities.html":{}}}],["createdbusiness",{"_index":1431,"title":{},"body":{"injectables/BusinessService.html":{}}}],["createdby",{"_index":640,"title":{},"body":{"classes/Announcement.html":{},"injectables/AnnouncementsService.html":{},"classes/Form.html":{},"injectables/FormsService.html":{},"classes/Invitation.html":{},"injectables/InvitationsService.html":{},"classes/Phase.html":{}}}],["createdcode",{"_index":1081,"title":{},"body":{"injectables/AuthCodeService.html":{}}}],["createddocument",{"_index":1400,"title":{},"body":{"injectables/BusinessService.html":{}}}],["createddocument._id",{"_index":1405,"title":{},"body":{"injectables/BusinessService.html":{}}}],["createddownload",{"_index":2227,"title":{},"body":{"injectables/DownloadsService.html":{}}}],["createddownload.url",{"_index":2229,"title":{},"body":{"injectables/DownloadsService.html":{}}}],["createdform",{"_index":2648,"title":{},"body":{"injectables/FormsService.html":{}}}],["createdformsubscription",{"_index":2548,"title":{},"body":{"injectables/FormSubscriptionService.html":{}}}],["createdformtag",{"_index":2602,"title":{},"body":{"injectables/FormTagService.html":{}}}],["createdocument",{"_index":1320,"title":{},"body":{"injectables/BusinessService.html":{}}}],["createdocument(submission",{"_index":1340,"title":{},"body":{"injectables/BusinessService.html":{}}}],["createdtable",{"_index":3867,"title":{},"body":{"injectables/TableService.html":{}}}],["createdtable.id",{"_index":3872,"title":{},"body":{"injectables/TableService.html":{}}}],["createdtableconfig",{"_index":3813,"title":{},"body":{"injectables/TableConfigService.html":{}}}],["createduser",{"_index":1190,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["createduser.populate('rol",{"_index":4509,"title":{},"body":{"injectables/UsersService.html":{}}}],["createemaildto",{"_index":2240,"title":{},"body":{"controllers/EmailsController.html":{}}}],["createeventinput",{"_index":1952,"title":{"classes/CreateEventInput.html":{}},"body":{"classes/CreateEventInput.html":{},"classes/UpdateEventInput.html":{}}}],["createforminput",{"_index":1972,"title":{"classes/CreateFormInput.html":{}},"body":{"classes/CreateFormInput.html":{},"injectables/FormsService.html":{}}}],["createformsubscriptioninput",{"_index":2004,"title":{"classes/CreateFormSubscriptionInput.html":{}},"body":{"classes/CreateFormSubscriptionInput.html":{},"injectables/FormSubscriptionService.html":{}}}],["createformsubscriptioninput.form",{"_index":2546,"title":{},"body":{"injectables/FormSubscriptionService.html":{}}}],["createformtaginput",{"_index":2015,"title":{"classes/CreateFormTagInput.html":{}},"body":{"classes/CreateFormTagInput.html":{},"injectables/FormTagService.html":{}}}],["createfromtable",{"_index":3794,"title":{},"body":{"injectables/TableConfigService.html":{}}}],["createfromtable(columns",{"_index":3798,"title":{},"body":{"injectables/TableConfigService.html":{}}}],["createhelpdeskinput",{"_index":2019,"title":{"classes/CreateHelpDeskInput.html":{}},"body":{"classes/CreateHelpDeskInput.html":{},"injectables/HelpDeskService.html":{},"classes/UpdateHelpDeskInput.html":{}}}],["createhelpdeskinput.newchild",{"_index":2736,"title":{},"body":{"injectables/HelpDeskService.html":{}}}],["createintegrationinput",{"_index":2047,"title":{"classes/CreateIntegrationInput.html":{}},"body":{"classes/CreateIntegrationInput.html":{},"injectables/IntegrationsService.html":{},"classes/UpdateIntegrationInput.html":{}}}],["createinvitationargs",{"_index":2058,"title":{"classes/CreateInvitationArgs.html":{}},"body":{"classes/CreateInvitationArgs.html":{},"injectables/InvitationsService.html":{}}}],["createmany",{"_index":1783,"title":{},"body":{"injectables/ContentService.html":{},"injectables/NotificationsService.html":{},"injectables/ResourcesService.html":{}}}],["createmany(content",{"_index":1801,"title":{},"body":{"injectables/ContentService.html":{}}}],["createmany(createnotificationinput",{"_index":3203,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["createmany(resources",{"_index":3446,"title":{},"body":{"injectables/ResourcesService.html":{}}}],["createnotificationinput",{"_index":2067,"title":{"classes/CreateNotificationInput.html":{}},"body":{"classes/CreateNotificationInput.html":{},"injectables/NotificationsService.html":{},"classes/UpdateNotificationInput.html":{}}}],["createparamdecorator",{"_index":4963,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createparticipationeventinput",{"_index":2080,"title":{"classes/CreateParticipationEventInput.html":{}},"body":{"classes/CreateParticipationEventInput.html":{},"injectables/ParticipationEventsService.html":{},"classes/UpdateParticipationEventInput.html":{}}}],["createphaseinput",{"_index":2084,"title":{"classes/CreatePhaseInput.html":{}},"body":{"classes/CreatePhaseInput.html":{}}}],["createpresignedurl",{"_index":1203,"title":{},"body":{"injectables/AwsService.html":{},"classes/StorageService.html":{}}}],["createpresignedurl(key",{"_index":1209,"title":{},"body":{"injectables/AwsService.html":{},"classes/StorageService.html":{}}}],["createresourceinput",{"_index":2100,"title":{"classes/CreateResourceInput.html":{}},"body":{"classes/CreateResourceInput.html":{},"injectables/ResourcesService.html":{},"classes/UpdateResourceInput.html":{}}}],["createresourceinput.content",{"_index":3463,"title":{},"body":{"injectables/ResourcesService.html":{}}}],["createresourcesreplyinput",{"_index":2110,"title":{"classes/CreateResourcesReplyInput.html":{}},"body":{"classes/CreateResourcesReplyInput.html":{},"classes/UpdateResourcesReplyInput.html":{}}}],["createrolinput",{"_index":2120,"title":{"classes/CreateRolInput.html":{}},"body":{"classes/CreateRolInput.html":{},"injectables/RolService.html":{},"classes/UpdateRolInput.html":{}}}],["createsiteinput",{"_index":1735,"title":{"classes/CreateSiteInput.html":{}},"body":{"classes/ContactServicesInput.html":{},"classes/CreateSiteInput.html":{},"injectables/SitesService.html":{},"classes/UpdateSiteInput.html":{}}}],["createstageinput",{"_index":2133,"title":{"classes/CreateStageInput.html":{}},"body":{"classes/CreateStageInput.html":{},"injectables/StagesService.html":{},"classes/UpdateStageInput.html":{}}}],["createtableconfiginput",{"_index":2145,"title":{"classes/CreateTableConfigInput.html":{}},"body":{"classes/CreateTableConfigInput.html":{},"injectables/TableConfigService.html":{}}}],["createtableinput",{"_index":2150,"title":{"classes/CreateTableInput.html":{}},"body":{"classes/CreateTableInput.html":{},"injectables/TableService.html":{}}}],["createtermsofuseinput",{"_index":3966,"title":{},"body":{"injectables/TermsOfUseService.html":{},"classes/UpdateTermsOfUseInput.html":{}}}],["createtypeeventinput",{"_index":4041,"title":{},"body":{"injectables/TypesEventsService.html":{}}}],["createtypeseventinput",{"_index":2158,"title":{"classes/CreateTypesEventInput.html":{}},"body":{"classes/CreateTypesEventInput.html":{},"injectables/TypesEventsService.html":{},"classes/UpdateTypesEventInput.html":{}}}],["createuserinput",{"_index":2161,"title":{"classes/CreateUserInput.html":{}},"body":{"classes/CreateUserInput.html":{},"injectables/UsersService.html":{}}}],["createuserinput.uid",{"_index":4506,"title":{},"body":{"injectables/UsersService.html":{}}}],["createuserloginput",{"_index":2171,"title":{"classes/CreateUserLogInput.html":{}},"body":{"classes/CreateUserLogInput.html":{},"injectables/UserLogService.html":{}}}],["createuserloginput.metadata",{"_index":4390,"title":{},"body":{"injectables/UserLogService.html":{}}}],["creating",{"_index":3247,"title":{},"body":{"injectables/NotificationsService.html":{},"injectables/TicketCategoriesService.html":{}}}],["creation",{"_index":654,"title":{},"body":{"classes/Announcement.html":{},"classes/Applicant.html":{},"classes/ApplicantState.html":{},"classes/Attachment.html":{},"classes/Business.html":{},"classes/BusinessRelationship.html":{},"classes/ConfigEvaluation.html":{},"classes/ConfigurationApp.html":{},"classes/ContactServiceLink.html":{},"classes/Download.html":{},"classes/Entrepreneur.html":{},"classes/EntrepreneurRelationship.html":{},"classes/EntrepreneurRelationship-1.html":{},"classes/Evaluation.html":{},"classes/Expert.html":{},"classes/Form.html":{},"classes/FormSubscription.html":{},"classes/FormTag.html":{},"interfaces/IAttachment.html":{},"classes/Integration.html":{},"classes/Phase.html":{},"classes/PhaseExpertRelationship.html":{},"classes/PhaseRelationship.html":{},"classes/ResourcesReply.html":{},"classes/Rol.html":{},"classes/Site.html":{},"classes/Stage.html":{},"classes/Startup.html":{},"classes/StartupLink.html":{},"classes/StartupRelationship.html":{},"classes/User.html":{},"classes/UserLog.html":{}}}],["credential",{"_index":1167,"title":{},"body":{"injectables/AuthService.html":{}}}],["credentials",{"_index":102,"title":{},"body":{"classes/AWSSESProvider.html":{},"modules/AppModule.html":{},"injectables/AwsService.html":{}}}],["cross",{"_index":4590,"title":{},"body":{"dependencies.html":{}}}],["ctei",{"_index":4737,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["ctx",{"_index":2666,"title":{},"body":{"guards/GqlAuthGuard.html":{},"miscellaneous/variables.html":{}}}],["ctx.getcontext().req",{"_index":2668,"title":{},"body":{"guards/GqlAuthGuard.html":{}}}],["ctx.getcontext().req.rol",{"_index":5046,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctx.getcontext().req.token",{"_index":4965,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctx.getcontext().req.user",{"_index":5045,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cualquiera",{"_index":4923,"title":{},"body":{"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["culminación",{"_index":5075,"title":{},"body":{"miscellaneous/variables.html":{}}}],["curr",{"_index":4975,"title":{},"body":{"miscellaneous/variables.html":{}}}],["curr.order",{"_index":4977,"title":{},"body":{"miscellaneous/variables.html":{}}}],["current",{"_index":419,"title":{},"body":{"injectables/ActivitiesConfigService.html":{},"injectables/FormSubscriptionService.html":{}}}],["currentconfig",{"_index":4312,"title":{},"body":{"injectables/UserConfigService.html":{}}}],["currentconfig.notifications[key",{"_index":4319,"title":{},"body":{"injectables/UserConfigService.html":{}}}],["currentinvitation",{"_index":3061,"title":{},"body":{"injectables/InvitationsService.html":{}}}],["currentuser",{"_index":4952,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dashboard",{"_index":1640,"title":{},"body":{"classes/ConfigurationApp.html":{},"injectables/ConfigurationAppService.html":{},"classes/ContactServiceLink.html":{},"classes/Site.html":{},"classes/UpdateConfigurationAppInput.html":{}}}],["data",{"_index":129,"title":{},"body":{"classes/AWSSESProvider.html":{},"injectables/AwsService.html":{},"injectables/BusinessService.html":{},"injectables/ConfigurationAppService.html":{},"classes/CreateFormSubscriptionInput.html":{},"injectables/DownloadsService.html":{},"classes/FormSubscription.html":{},"injectables/FormSubscriptionService.html":{},"injectables/FormsService.html":{},"injectables/IntegrationsService.html":{},"classes/Notification.html":{},"classes/StorageService.html":{},"classes/SubmitFormSubscriptionArgs.html":{},"injectables/TableConfigService.html":{},"injectables/TableService.html":{},"classes/TemplateInput.html":{},"injectables/UserLogService.html":{},"miscellaneous/enumerations.html":{}}}],["data.locator",{"_index":3869,"title":{},"body":{"injectables/TableService.html":{}}}],["data.name",{"_index":2653,"title":{},"body":{"injectables/FormsService.html":{}}}],["data.push(docs.length",{"_index":4422,"title":{},"body":{"injectables/UserLogService.html":{}}}],["data.ts",{"_index":2320,"title":{},"body":{"classes/EntrepreneurStartupArgs.html":{}}}],["data.ts:10",{"_index":2324,"title":{},"body":{"classes/EntrepreneurStartupArgs.html":{}}}],["data.ts:14",{"_index":2321,"title":{},"body":{"classes/EntrepreneurStartupArgs.html":{}}}],["data.ts:18",{"_index":2323,"title":{},"body":{"classes/EntrepreneurStartupArgs.html":{}}}],["data.ts:22",{"_index":2322,"title":{},"body":{"classes/EntrepreneurStartupArgs.html":{}}}],["data.typeintegration",{"_index":2866,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["database",{"_index":2003,"title":{},"body":{"classes/CreateFormInput.html":{}}}],["database.'})@isnotempty",{"_index":1998,"title":{},"body":{"classes/CreateFormInput.html":{}}}],["date",{"_index":199,"title":{},"body":{"classes/Acta.html":{},"classes/ActivitiesConfig.html":{},"classes/Announcement.html":{},"classes/Applicant.html":{},"classes/ApplicantState.html":{},"classes/Assign.html":{},"classes/Attachment.html":{},"classes/AuthCode.html":{},"classes/Business.html":{},"classes/BusinessRelationship.html":{},"classes/ConfigEvaluation.html":{},"injectables/ConfigEvaluationsService.html":{},"classes/ConfigurationApp.html":{},"classes/ContactServiceLink.html":{},"classes/Content.html":{},"classes/CreateActaInput.html":{},"classes/CreateAnnouncementInput.html":{},"classes/CreateConfigEvaluationInput.html":{},"classes/CreateEventInput.html":{},"classes/CreatePhaseInput.html":{},"classes/Download.html":{},"classes/Entrepreneur.html":{},"classes/EntrepreneurRelationship.html":{},"classes/EntrepreneurRelationship-1.html":{},"classes/Evaluation.html":{},"classes/Event.html":{},"classes/Expert.html":{},"classes/ExpertEventLink.html":{},"classes/Form.html":{},"classes/FormSubscription.html":{},"classes/FormTag.html":{},"injectables/FormsService.html":{},"injectables/HelpDeskService.html":{},"classes/HelpDeskTicket.html":{},"interfaces/IAttachment.html":{},"classes/Integration.html":{},"classes/Invitation.html":{},"injectables/InvitationsService.html":{},"classes/Notification.html":{},"classes/Notification-1.html":{},"classes/ParticipantEventLink.html":{},"classes/ParticipationEvent.html":{},"classes/Phase.html":{},"classes/PhaseExpertRelationship.html":{},"classes/PhaseRelationship.html":{},"classes/Resource.html":{},"classes/ResourcesReply.html":{},"classes/Rol.html":{},"classes/Site.html":{},"classes/Stage.html":{},"classes/Startup.html":{},"classes/StartupLink.html":{},"classes/StartupRelationship.html":{},"classes/TableConfig.html":{},"classes/TeamCoachLink.html":{},"classes/TermsOfUse.html":{},"classes/TicketCategory.html":{},"classes/TicketChild.html":{},"classes/TypesEvent.html":{},"classes/UpdateActaInput.html":{},"classes/UpdateAnnouncementInput.html":{},"classes/UpdateConfigEvaluationInput.html":{},"classes/UpdateEventInput.html":{},"classes/UpdateFormInput.html":{},"classes/UpdatePhaseInput.html":{},"classes/User.html":{},"classes/UserLog.html":{},"injectables/UserLogService.html":{},"classes/activities.html":{},"dependencies.html":{}}}],["date().toisostring",{"_index":3089,"title":{},"body":{"injectables/InvitationsService.html":{}}}],["date(`${date}t00:00:00.000z",{"_index":4403,"title":{},"body":{"injectables/UserLogService.html":{}}}],["date(`${date}t23:59:59.999z",{"_index":4404,"title":{},"body":{"injectables/UserLogService.html":{}}}],["date(data.date",{"_index":3164,"title":{},"body":{"classes/Notification.html":{}}}],["date(date.now",{"_index":3001,"title":{},"body":{"classes/Invitation.html":{}}}],["date(today",{"_index":1578,"title":{},"body":{"injectables/ConfigEvaluationsService.html":{},"injectables/UserLogService.html":{}}}],["date.now",{"_index":810,"title":{},"body":{"injectables/AnnouncementsService.html":{},"injectables/BusinessService.html":{},"injectables/FormTagService.html":{},"injectables/TableConfigService.html":{}}}],["datelabels",{"_index":4425,"title":{},"body":{"injectables/UserLogService.html":{}}}],["dates",{"_index":4406,"title":{},"body":{"injectables/UserLogService.html":{},"miscellaneous/functions.html":{}}}],["dates.fechassemana",{"_index":4416,"title":{},"body":{"injectables/UserLogService.html":{}}}],["datestring",{"_index":3152,"title":{},"body":{"classes/Notification.html":{}}}],["day",{"_index":4419,"title":{},"body":{"injectables/UserLogService.html":{},"miscellaneous/variables.html":{}}}],["dd",{"_index":3167,"title":{},"body":{"classes/Notification.html":{},"injectables/UserLogService.html":{}}}],["de",{"_index":1857,"title":{},"body":{"injectables/ContentService.html":{},"injectables/UsersService.html":{},"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["debes",{"_index":4554,"title":{},"body":{"injectables/UsersService.html":{}}}],["debug",{"_index":936,"title":{},"body":{"modules/AppModule.html":{}}}],["declarations",{"_index":254,"title":{},"body":{"modules/ActaModule.html":{},"modules/ActivitiesConfigModule.html":{},"modules/AnnouncementsModule.html":{},"modules/AppModule.html":{},"modules/ApplicantModule.html":{},"modules/AuthCodeModule.html":{},"modules/AuthModule.html":{},"modules/BusinessModule.html":{},"modules/ConfigEvaluationsModule.html":{},"modules/ConfigNotificationsModule.html":{},"modules/ConfigurationAppModule.html":{},"modules/ContentModule.html":{},"modules/DownloadsModule.html":{},"modules/EmailsModule.html":{},"modules/EntrepreneurModule.html":{},"modules/EvaluationsModule.html":{},"modules/EventsModule.html":{},"modules/ExpertModule.html":{},"modules/FormsModule.html":{},"modules/HelpDeskModule.html":{},"modules/IntegrationsModule.html":{},"modules/InvitationsModule.html":{},"modules/LoggerModule.html":{},"modules/NotificationsModule.html":{},"modules/ParticipationEventsModule.html":{},"modules/PhasesModule.html":{},"modules/ResourcesModule.html":{},"modules/ResourcesRepliesModule.html":{},"modules/RolModule.html":{},"modules/SitesModule.html":{},"modules/StagesModule.html":{},"modules/StartupModule.html":{},"modules/StorageModule.html":{},"modules/TableModule.html":{},"modules/TermsOfUseModule.html":{},"modules/TicketCategoriesModule.html":{},"modules/TypesEventsModule.html":{},"modules/TypesNotificationsModule.html":{},"modules/UserConfigModule.html":{},"modules/UserLogModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decodedtoken",{"_index":1170,"title":{},"body":{"injectables/AuthService.html":{}}}],["decodedtoken.uid",{"_index":1176,"title":{},"body":{"injectables/AuthService.html":{}}}],["decorators",{"_index":184,"title":{},"body":{"classes/AcceptInvitationDto.html":{},"classes/Acta.html":{},"classes/ActivitiesConfig.html":{},"classes/AddTableJoinInput.html":{},"classes/Announcement.html":{},"classes/AnnouncementApplicantArgs.html":{},"classes/AnnouncementApplicantsArgs.html":{},"classes/Applicant.html":{},"classes/ApplicantArgs.html":{},"classes/ApplicantState.html":{},"classes/Assign.html":{},"classes/Attachment.html":{},"classes/AttachmentSubmit.html":{},"classes/AuthCode.html":{},"classes/Business.html":{},"classes/BusinessRelationship.html":{},"classes/CloseFormSubscriptionArgs.html":{},"classes/ColumnGroup.html":{},"classes/ConfigEvaluation.html":{},"classes/ConfigurationApp.html":{},"classes/ContactArgs.html":{},"classes/ContactServiceLink.html":{},"classes/ContactServicesInput.html":{},"classes/Content.html":{},"classes/CreateActaInput.html":{},"classes/CreateActivitiesConfigInput.html":{},"classes/CreateAnnouncementInput.html":{},"classes/CreateConfigEvaluationInput.html":{},"classes/CreateConfigNotificationInput.html":{},"classes/CreateContentInput.html":{},"classes/CreateEventInput.html":{},"classes/CreateFormInput.html":{},"classes/CreateFormSubscriptionInput.html":{},"classes/CreateFormTagInput.html":{},"classes/CreateHelpDeskInput.html":{},"classes/CreateIntegrationInput.html":{},"classes/CreateInvitationArgs.html":{},"classes/CreateNotificationInput.html":{},"classes/CreateParticipationEventInput.html":{},"classes/CreatePhaseInput.html":{},"classes/CreateResourceInput.html":{},"classes/CreateResourcesReplyInput.html":{},"classes/CreateRolInput.html":{},"classes/CreateSiteInput.html":{},"classes/CreateStageInput.html":{},"classes/CreateTableConfigInput.html":{},"classes/CreateTableInput.html":{},"classes/CreateTypesEventInput.html":{},"classes/CreateUserInput.html":{},"classes/CreateUserLogInput.html":{},"classes/Download.html":{},"controllers/EmailsController.html":{},"classes/Entrepreneur.html":{},"classes/EntrepreneurRelationship.html":{},"classes/EntrepreneurRelationship-1.html":{},"classes/EntrepreneurStartupArgs.html":{},"classes/Evaluation.html":{},"classes/Event.html":{},"classes/Expert.html":{},"classes/ExpertEventLink.html":{},"classes/FindFormsArgs.html":{},"classes/FindInvitationArgs.html":{},"classes/FindUsersArgs.html":{},"classes/Form.html":{},"classes/FormSubmission.html":{},"classes/FormSubmissionFiles.html":{},"classes/FormSubscription.html":{},"classes/FormTag.html":{},"classes/GetSubmittedFilesArgs.html":{},"classes/HelpDeskFilterInput.html":{},"classes/HelpDeskTicket.html":{},"classes/Hours.html":{},"classes/Integration.html":{},"classes/Invitation.html":{},"controllers/InvitationsController.html":{},"classes/LastContentOutput.html":{},"classes/LinkExpertsToPhaseArgs.html":{},"classes/LinkStartupToPhaseArgs.html":{},"classes/LinkStartupsExpertsArgs.html":{},"classes/LinkWithTargetsArgs.html":{},"classes/LinkWithTargetsByRequestArgs.html":{},"classes/Notification-1.html":{},"classes/OthersInput.html":{},"classes/ParticipantEventLink.html":{},"classes/ParticipationEvent.html":{},"classes/Phase.html":{},"classes/PhaseExpertRelationship.html":{},"classes/PhaseRelationship.html":{},"classes/Rating.html":{},"classes/RemoveTableJoinInput.html":{},"classes/Resource.html":{},"classes/ResourcesReply.html":{},"classes/Rol.html":{},"classes/SearchBatchInput.html":{},"classes/SelectApplicantsArgs.html":{},"classes/SendEmailInput.html":{},"classes/SignUpInput.html":{},"classes/Site.html":{},"classes/Stage.html":{},"classes/Startup.html":{},"classes/StartupLink.html":{},"classes/StartupRelationship.html":{},"controllers/StorageController.html":{},"classes/SubmitAnnouncementDocInput.html":{},"classes/SubmitFileInput.html":{},"classes/SubmitFormSubscriptionArgs.html":{},"classes/Table.html":{},"classes/TableConfig.html":{},"classes/TableJoin.html":{},"classes/TeamCoachLink.html":{},"classes/TemplateInput.html":{},"classes/TermsOfUse.html":{},"classes/TicketCategory.html":{},"classes/TypesEvent.html":{},"classes/TypesNotification.html":{},"classes/UpdateActaInput.html":{},"classes/UpdateActivitiesConfigInput.html":{},"classes/UpdateAnnouncementInput.html":{},"classes/UpdateApplicantInput.html":{},"classes/UpdateApplicantStateInput.html":{},"classes/UpdateConfigEvaluationInput.html":{},"classes/UpdateConfigurationAppInput.html":{},"classes/UpdateContentInput.html":{},"classes/UpdateEventInput.html":{},"classes/UpdateExpertInput.html":{},"classes/UpdateFormInput.html":{},"classes/UpdateFormTagInput.html":{},"classes/UpdateHelpDeskInput.html":{},"classes/UpdateIntegrationInput.html":{},"classes/UpdateNotificationInput.html":{},"classes/UpdateParticipationEventInput.html":{},"classes/UpdatePhaseInput.html":{},"classes/UpdateResourceInput.html":{},"classes/UpdateResourcesReplyInput.html":{},"classes/UpdateRolInput.html":{},"classes/UpdateSiteInput.html":{},"classes/UpdateStageInput.html":{},"classes/UpdateTableConfigInput.html":{},"classes/UpdateTermsOfUseInput.html":{},"classes/UpdateTypesEventInput.html":{},"classes/UpdateUserConfigInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"classes/UserConfig.html":{},"classes/UserLog.html":{},"classes/activities.html":{}}}],["default",{"_index":37,"title":{},"body":{"classes/AWSSESProvider.html":{},"classes/Acta.html":{},"classes/ActivitiesConfig.html":{},"injectables/ActivitiesConfigService.html":{},"classes/Announcement.html":{},"classes/Applicant.html":{},"classes/ApplicantState.html":{},"classes/Assign.html":{},"classes/Attachment.html":{},"injectables/AuthService.html":{},"classes/BusinessRelationship.html":{},"classes/ConfigEvaluation.html":{},"injectables/ConfigEvaluationsService.html":{},"injectables/ConfigurationAppService.html":{},"classes/ContactServiceLink.html":{},"classes/Content.html":{},"classes/Entrepreneur.html":{},"classes/EntrepreneurRelationship-1.html":{},"classes/Evaluation.html":{},"classes/Event.html":{},"classes/Expert.html":{},"classes/ExpertEventLink.html":{},"classes/Form.html":{},"classes/FormSubscription.html":{},"injectables/FormSubscriptionService.html":{},"injectables/HelpDeskService.html":{},"classes/HelpDeskTicket.html":{},"interfaces/IAttachment.html":{},"injectables/IntegrationsService.html":{},"classes/Invitation.html":{},"injectables/InvitationsService.html":{},"classes/Notification-1.html":{},"injectables/NotificationsService.html":{},"classes/ParticipantEventLink.html":{},"classes/Phase.html":{},"classes/PhaseExpertRelationship.html":{},"classes/PhaseRelationship.html":{},"classes/Resource.html":{},"classes/ResourcesReply.html":{},"classes/Rol.html":{},"classes/SendEmailInput.html":{},"classes/Site.html":{},"classes/Stage.html":{},"injectables/StagesService.html":{},"classes/Startup.html":{},"classes/StartupLink.html":{},"classes/StartupRelationship.html":{},"classes/Table.html":{},"classes/TableConfig.html":{},"classes/TableJoin.html":{},"classes/TeamCoachLink.html":{},"classes/TemplateInput.html":{},"classes/TermsOfUse.html":{},"injectables/TicketCategoriesService.html":{},"classes/TicketCategory.html":{},"classes/TicketChild.html":{},"classes/TypesEvent.html":{},"classes/User.html":{},"classes/activities.html":{},"miscellaneous/variables.html":{}}}],["default_notification_types",{"_index":3220,"title":{},"body":{"injectables/NotificationsService.html":{},"injectables/TypesNotificationsService.html":{},"injectables/UserConfigService.html":{},"miscellaneous/variables.html":{}}}],["default_password",{"_index":2896,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["default_stages",{"_index":3672,"title":{},"body":{"injectables/StagesService.html":{}}}],["default_types_events",{"_index":463,"title":{},"body":{"injectables/ActivitiesConfigService.html":{},"injectables/TypesEventsService.html":{},"miscellaneous/variables.html":{}}}],["defaultbucketname",{"_index":1199,"title":{},"body":{"injectables/AwsService.html":{}}}],["defaultmatch",{"_index":4968,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultroles",{"_index":3504,"title":{},"body":{"injectables/RolService.html":{},"miscellaneous/variables.html":{}}}],["defaultuserconfig",{"_index":4302,"title":{},"body":{"injectables/UserConfigService.html":{}}}],["defaultuserconfig.notifications",{"_index":4310,"title":{},"body":{"injectables/UserConfigService.html":{}}}],["defaultuserpassword",{"_index":1130,"title":{},"body":{"injectables/AuthService.html":{}}}],["defaultvalue",{"_index":1317,"title":{},"body":{"classes/BusinessRelationship.html":{},"classes/CreateContentInput.html":{},"classes/CreatePhaseInput.html":{},"classes/Entrepreneur.html":{},"classes/SignUpInput.html":{},"classes/StartupRelationship.html":{},"classes/User.html":{}}}],["defaultverifiedemail",{"_index":19,"title":{},"body":{"classes/AWSSESProvider.html":{},"injectables/EmailsService.html":{},"classes/SendGridProvider.html":{},"injectables/UsersService.html":{}}}],["defined",{"_index":28,"title":{},"body":{"classes/AWSSESProvider.html":{},"classes/AcceptInvitationDto.html":{},"classes/Acta.html":{},"injectables/ActaService.html":{},"classes/ActivitiesConfig.html":{},"injectables/ActivitiesConfigService.html":{},"classes/AddTableJoinInput.html":{},"classes/Announcement.html":{},"classes/AnnouncementApplicantArgs.html":{},"classes/AnnouncementApplicantsArgs.html":{},"injectables/AnnouncementsService.html":{},"classes/Applicant.html":{},"classes/ApplicantArgs.html":{},"classes/ApplicantState.html":{},"classes/Assign.html":{},"classes/Attachment.html":{},"classes/AttachmentSubmit.html":{},"classes/AuthCode.html":{},"injectables/AuthCodeService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AwsService.html":{},"classes/Business.html":{},"classes/BusinessRelationship.html":{},"injectables/BusinessService.html":{},"classes/CloseFormSubscriptionArgs.html":{},"classes/ColumnGroup.html":{},"classes/ConfigEvaluation.html":{},"injectables/ConfigEvaluationsService.html":{},"injectables/ConfigNotificationsService.html":{},"classes/ConfigurationApp.html":{},"injectables/ConfigurationAppService.html":{},"classes/ContactArgs.html":{},"classes/ContactServiceLink.html":{},"classes/ContactServicesInput.html":{},"classes/Content.html":{},"injectables/ContentService.html":{},"classes/CreateActaInput.html":{},"classes/CreateActivitiesConfigInput.html":{},"classes/CreateAnnouncementInput.html":{},"classes/CreateConfigEvaluationInput.html":{},"classes/CreateConfigNotificationInput.html":{},"classes/CreateContentInput.html":{},"classes/CreateEventInput.html":{},"classes/CreateFormInput.html":{},"classes/CreateFormSubscriptionInput.html":{},"classes/CreateFormTagInput.html":{},"classes/CreateHelpDeskInput.html":{},"classes/CreateIntegrationInput.html":{},"classes/CreateInvitationArgs.html":{},"classes/CreateNotificationInput.html":{},"classes/CreateParticipationEventInput.html":{},"classes/CreatePhaseInput.html":{},"classes/CreateResourceInput.html":{},"classes/CreateResourcesReplyInput.html":{},"classes/CreateRolInput.html":{},"classes/CreateSiteInput.html":{},"classes/CreateStageInput.html":{},"classes/CreateTableConfigInput.html":{},"classes/CreateTableInput.html":{},"classes/CreateTypesEventInput.html":{},"classes/CreateUserInput.html":{},"classes/CreateUserLogInput.html":{},"classes/Download.html":{},"injectables/DownloadsService.html":{},"controllers/EmailsController.html":{},"injectables/EmailsService.html":{},"classes/Entrepreneur.html":{},"classes/EntrepreneurRelationship.html":{},"classes/EntrepreneurRelationship-1.html":{},"classes/EntrepreneurStartupArgs.html":{},"classes/Evaluation.html":{},"classes/Event.html":{},"classes/Expert.html":{},"classes/ExpertEventLink.html":{},"classes/FindFormsArgs.html":{},"classes/FindInvitationArgs.html":{},"classes/FindUsersArgs.html":{},"classes/Form.html":{},"classes/FormSubmission.html":{},"classes/FormSubmissionFiles.html":{},"classes/FormSubscription.html":{},"injectables/FormSubscriptionService.html":{},"classes/FormTag.html":{},"injectables/FormTagService.html":{},"injectables/FormsService.html":{},"classes/GetSubmittedFilesArgs.html":{},"guards/GqlAuthGuard.html":{},"classes/HelpDeskFilterInput.html":{},"injectables/HelpDeskService.html":{},"classes/HelpDeskTicket.html":{},"classes/Hours.html":{},"classes/Integration.html":{},"injectables/IntegrationsService.html":{},"classes/Invitation.html":{},"controllers/InvitationsController.html":{},"injectables/InvitationsService.html":{},"classes/LastContentOutput.html":{},"classes/LinkExpertsToPhaseArgs.html":{},"classes/LinkStartupToPhaseArgs.html":{},"classes/LinkStartupsExpertsArgs.html":{},"classes/LinkWithTargetsArgs.html":{},"classes/LinkWithTargetsByRequestArgs.html":{},"classes/Notification.html":{},"classes/Notification-1.html":{},"injectables/NotificationsService.html":{},"classes/OthersInput.html":{},"classes/ParticipantEventLink.html":{},"classes/ParticipationEvent.html":{},"injectables/ParticipationEventsService.html":{},"classes/Phase.html":{},"classes/PhaseExpertRelationship.html":{},"classes/PhaseRelationship.html":{},"classes/Rating.html":{},"classes/RemoveTableJoinInput.html":{},"classes/Resource.html":{},"classes/ResourcesReply.html":{},"injectables/ResourcesService.html":{},"classes/Rol.html":{},"injectables/RolService.html":{},"classes/SearchBatchInput.html":{},"classes/SelectApplicantsArgs.html":{},"classes/SendEmailInput.html":{},"classes/SendGridProvider.html":{},"classes/SignUpInput.html":{},"classes/Site.html":{},"injectables/SitesService.html":{},"classes/Stage.html":{},"injectables/StagesService.html":{},"classes/Startup.html":{},"classes/StartupLink.html":{},"classes/StartupRelationship.html":{},"controllers/StorageController.html":{},"classes/StorageService.html":{},"classes/SubmitAnnouncementDocInput.html":{},"classes/SubmitFileInput.html":{},"classes/SubmitFormSubscriptionArgs.html":{},"classes/Table.html":{},"classes/TableConfig.html":{},"injectables/TableConfigService.html":{},"classes/TableJoin.html":{},"injectables/TableService.html":{},"classes/TeamCoachLink.html":{},"classes/TemplateInput.html":{},"classes/TermsOfUse.html":{},"injectables/TermsOfUseService.html":{},"injectables/TicketCategoriesService.html":{},"classes/TicketCategory.html":{},"classes/TicketChild.html":{},"classes/TypesEvent.html":{},"injectables/TypesEventsService.html":{},"classes/TypesNotification.html":{},"injectables/TypesNotificationsService.html":{},"classes/UpdateActaInput.html":{},"classes/UpdateActivitiesConfigInput.html":{},"classes/UpdateAnnouncementInput.html":{},"classes/UpdateApplicantInput.html":{},"classes/UpdateApplicantStateInput.html":{},"classes/UpdateConfigEvaluationInput.html":{},"classes/UpdateConfigurationAppInput.html":{},"classes/UpdateContentInput.html":{},"classes/UpdateEventInput.html":{},"classes/UpdateExpertInput.html":{},"classes/UpdateFormInput.html":{},"classes/UpdateFormTagInput.html":{},"classes/UpdateHelpDeskInput.html":{},"classes/UpdateIntegrationInput.html":{},"classes/UpdateNotificationInput.html":{},"classes/UpdateParticipationEventInput.html":{},"classes/UpdatePhaseInput.html":{},"classes/UpdateResourceInput.html":{},"classes/UpdateResourcesReplyInput.html":{},"classes/UpdateRolInput.html":{},"classes/UpdateSiteInput.html":{},"classes/UpdateStageInput.html":{},"classes/UpdateTableConfigInput.html":{},"classes/UpdateTermsOfUseInput.html":{},"classes/UpdateTypesEventInput.html":{},"classes/UpdateUserConfigInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"classes/UserConfig.html":{},"injectables/UserConfigService.html":{},"classes/UserLog.html":{},"injectables/UserLogService.html":{},"injectables/UsersService.html":{},"classes/activities.html":{}}}],["defines",{"_index":698,"title":{},"body":{"classes/Announcement.html":{}}}],["del",{"_index":1574,"title":{},"body":{"injectables/ConfigEvaluationsService.html":{},"injectables/ContentService.html":{},"injectables/UserLogService.html":{},"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["delete",{"_index":309,"title":{},"body":{"injectables/ActaService.html":{},"injectables/ActivitiesConfigService.html":{},"injectables/AnnouncementsService.html":{},"injectables/AuthService.html":{},"injectables/BusinessService.html":{},"injectables/ConfigEvaluationsService.html":{},"injectables/ConfigurationAppService.html":{},"injectables/ContentService.html":{},"injectables/FormTagService.html":{},"injectables/FormsService.html":{},"injectables/HelpDeskService.html":{},"injectables/IntegrationsService.html":{},"injectables/NotificationsService.html":{},"injectables/ParticipationEventsService.html":{},"injectables/ResourcesService.html":{},"injectables/RolService.html":{},"injectables/SitesService.html":{},"injectables/StagesService.html":{},"injectables/TableConfigService.html":{},"injectables/TermsOfUseService.html":{},"injectables/TicketCategoriesService.html":{},"injectables/TypesEventsService.html":{},"injectables/UserConfigService.html":{},"injectables/UserLogService.html":{},"injectables/UsersService.html":{}}}],["delete(id",{"_index":2593,"title":{},"body":{"injectables/FormTagService.html":{},"injectables/FormsService.html":{},"injectables/TableConfigService.html":{}}}],["delete(ids",{"_index":1344,"title":{},"body":{"injectables/BusinessService.html":{}}}],["deleted",{"_index":543,"title":{},"body":{"injectables/ActivitiesConfigService.html":{},"classes/Announcement.html":{},"classes/Applicant.html":{},"classes/ApplicantState.html":{},"classes/Attachment.html":{},"classes/Business.html":{},"classes/BusinessRelationship.html":{},"classes/Download.html":{},"classes/Entrepreneur.html":{},"classes/EntrepreneurRelationship.html":{},"classes/EntrepreneurRelationship-1.html":{},"classes/Expert.html":{},"classes/Form.html":{},"classes/FormTag.html":{},"interfaces/IAttachment.html":{},"classes/PhaseExpertRelationship.html":{},"classes/PhaseRelationship.html":{},"classes/Startup.html":{},"classes/StartupLink.html":{},"classes/StartupRelationship.html":{},"classes/TableConfig.html":{}}}],["deletedannouncement",{"_index":808,"title":{},"body":{"injectables/AnnouncementsService.html":{}}}],["deletedat",{"_index":641,"title":{},"body":{"classes/Announcement.html":{},"injectables/AnnouncementsService.html":{},"classes/Applicant.html":{},"classes/ApplicantState.html":{},"classes/Attachment.html":{},"classes/Business.html":{},"classes/BusinessRelationship.html":{},"injectables/BusinessService.html":{},"classes/Download.html":{},"classes/Entrepreneur.html":{},"classes/EntrepreneurRelationship.html":{},"classes/EntrepreneurRelationship-1.html":{},"classes/Expert.html":{},"classes/Form.html":{},"classes/FormTag.html":{},"injectables/FormTagService.html":{},"injectables/FormsService.html":{},"interfaces/IAttachment.html":{},"classes/PhaseExpertRelationship.html":{},"classes/PhaseRelationship.html":{},"classes/Startup.html":{},"classes/StartupLink.html":{},"classes/StartupRelationship.html":{},"classes/TableConfig.html":{},"injectables/TableConfigService.html":{},"classes/UpdateFormInput.html":{}}}],["deletedby",{"_index":642,"title":{},"body":{"classes/Announcement.html":{},"classes/Form.html":{},"injectables/FormsService.html":{},"classes/UpdateFormInput.html":{}}}],["deletedform",{"_index":2608,"title":{},"body":{"injectables/FormTagService.html":{},"injectables/FormsService.html":{}}}],["deletedphase",{"_index":3516,"title":{},"body":{"injectables/RolService.html":{}}}],["deletemeeting",{"_index":2830,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["deletemeeting(meetingid",{"_index":2838,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["deleteuser",{"_index":1132,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["deleteuser(uid",{"_index":1142,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["demo",{"_index":5100,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dependencies",{"_index":252,"title":{"dependencies.html":{}},"body":{"modules/ActaModule.html":{},"modules/ActivitiesConfigModule.html":{},"modules/AnnouncementsModule.html":{},"modules/AppModule.html":{},"modules/ApplicantModule.html":{},"modules/AuthCodeModule.html":{},"modules/AuthModule.html":{},"modules/BusinessModule.html":{},"modules/ConfigEvaluationsModule.html":{},"modules/ConfigNotificationsModule.html":{},"modules/ConfigurationAppModule.html":{},"modules/ContentModule.html":{},"modules/DownloadsModule.html":{},"modules/EmailsModule.html":{},"modules/EntrepreneurModule.html":{},"modules/EvaluationsModule.html":{},"modules/EventsModule.html":{},"modules/ExpertModule.html":{},"modules/FormsModule.html":{},"modules/HelpDeskModule.html":{},"modules/IntegrationsModule.html":{},"modules/InvitationsModule.html":{},"modules/LoggerModule.html":{},"modules/NotificationsModule.html":{},"modules/ParticipationEventsModule.html":{},"modules/PhasesModule.html":{},"modules/ResourcesModule.html":{},"modules/ResourcesRepliesModule.html":{},"modules/RolModule.html":{},"modules/SitesModule.html":{},"modules/StagesModule.html":{},"modules/StartupModule.html":{},"modules/StorageModule.html":{},"modules/TableModule.html":{},"modules/TermsOfUseModule.html":{},"modules/TicketCategoriesModule.html":{},"modules/TypesEventsModule.html":{},"modules/TypesNotificationsModule.html":{},"modules/UserConfigModule.html":{},"modules/UserLogModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["depth",{"_index":5040,"title":{},"body":{"miscellaneous/variables.html":{}}}],["descargado",{"_index":4727,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["descargar",{"_index":4725,"title":{},"body":{"miscellaneous/enumerations.html":{},"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["description",{"_index":7,"title":{},"body":{"classes/AWSSESProvider.html":{},"classes/AcceptInvitationDto.html":{},"classes/Acta.html":{},"classes/ActivitiesConfig.html":{},"classes/AddTableJoinInput.html":{},"classes/Announcement.html":{},"classes/AnnouncementApplicantArgs.html":{},"classes/AnnouncementApplicantsArgs.html":{},"classes/Applicant.html":{},"classes/ApplicantArgs.html":{},"classes/ApplicantState.html":{},"classes/Assign.html":{},"classes/Attachment.html":{},"classes/AttachmentSubmit.html":{},"classes/AuthCode.html":{},"guards/AuthGuard.html":{},"classes/Business.html":{},"classes/BusinessRelationship.html":{},"classes/CloseFormSubscriptionArgs.html":{},"classes/ColumnGroup.html":{},"classes/ConfigEvaluation.html":{},"classes/ConfigurationApp.html":{},"classes/ContactArgs.html":{},"classes/ContactServiceLink.html":{},"classes/ContactServicesInput.html":{},"classes/Content.html":{},"classes/CreateActaInput.html":{},"classes/CreateActivitiesConfigInput.html":{},"classes/CreateAnnouncementInput.html":{},"classes/CreateConfigEvaluationInput.html":{},"classes/CreateConfigNotificationInput.html":{},"classes/CreateContentInput.html":{},"classes/CreateEventInput.html":{},"classes/CreateFormInput.html":{},"classes/CreateFormSubscriptionInput.html":{},"classes/CreateFormTagInput.html":{},"classes/CreateHelpDeskInput.html":{},"classes/CreateIntegrationInput.html":{},"classes/CreateInvitationArgs.html":{},"classes/CreateNotificationInput.html":{},"classes/CreateParticipationEventInput.html":{},"classes/CreatePhaseInput.html":{},"classes/CreateResourceInput.html":{},"classes/CreateResourcesReplyInput.html":{},"classes/CreateRolInput.html":{},"classes/CreateSiteInput.html":{},"classes/CreateStageInput.html":{},"classes/CreateTableConfigInput.html":{},"classes/CreateTableInput.html":{},"classes/CreateTypesEventInput.html":{},"classes/CreateUserInput.html":{},"classes/CreateUserLogInput.html":{},"classes/Download.html":{},"interfaces/EmailsRepository.html":{},"classes/Entrepreneur.html":{},"classes/EntrepreneurRelationship.html":{},"classes/EntrepreneurRelationship-1.html":{},"classes/EntrepreneurStartupArgs.html":{},"classes/Evaluation.html":{},"classes/Event.html":{},"classes/Expert.html":{},"classes/ExpertEventLink.html":{},"classes/FindFormsArgs.html":{},"classes/FindInvitationArgs.html":{},"classes/FindUsersArgs.html":{},"classes/Form.html":{},"classes/FormSubmission.html":{},"classes/FormSubmissionFiles.html":{},"classes/FormSubscription.html":{},"classes/FormTag.html":{},"classes/GetSubmittedFilesArgs.html":{},"guards/GqlAuthGuard.html":{},"classes/HelpDeskFilterInput.html":{},"classes/HelpDeskTicket.html":{},"classes/Hours.html":{},"interfaces/IAttachment.html":{},"classes/Integration.html":{},"classes/Invitation.html":{},"classes/LastContentOutput.html":{},"classes/LinkExpertsToPhaseArgs.html":{},"classes/LinkStartupToPhaseArgs.html":{},"classes/LinkStartupsExpertsArgs.html":{},"classes/LinkWithTargetsArgs.html":{},"classes/LinkWithTargetsByRequestArgs.html":{},"classes/Notification.html":{},"classes/Notification-1.html":{},"classes/OthersInput.html":{},"classes/ParticipantEventLink.html":{},"classes/ParticipationEvent.html":{},"classes/Phase.html":{},"classes/PhaseExpertRelationship.html":{},"classes/PhaseRelationship.html":{},"classes/Rating.html":{},"classes/RemoveTableJoinInput.html":{},"classes/Resource.html":{},"classes/ResourcesReply.html":{},"classes/Rol.html":{},"classes/SearchBatchInput.html":{},"classes/SelectApplicantsArgs.html":{},"classes/SendEmailInput.html":{},"classes/SendGridProvider.html":{},"classes/SignUpInput.html":{},"classes/Site.html":{},"injectables/SitesService.html":{},"classes/Stage.html":{},"classes/Startup.html":{},"classes/StartupLink.html":{},"classes/StartupRelationship.html":{},"controllers/StorageController.html":{},"classes/StorageService.html":{},"classes/SubmitAnnouncementDocInput.html":{},"classes/SubmitFileInput.html":{},"classes/SubmitFormSubscriptionArgs.html":{},"classes/Table.html":{},"classes/TableConfig.html":{},"classes/TableJoin.html":{},"classes/TeamCoachLink.html":{},"classes/TemplateInput.html":{},"classes/TermsOfUse.html":{},"classes/TicketCategory.html":{},"classes/TicketChild.html":{},"classes/TypesEvent.html":{},"classes/TypesNotification.html":{},"classes/UpdateActaInput.html":{},"classes/UpdateActivitiesConfigInput.html":{},"classes/UpdateAnnouncementInput.html":{},"classes/UpdateApplicantInput.html":{},"classes/UpdateApplicantStateInput.html":{},"classes/UpdateConfigEvaluationInput.html":{},"classes/UpdateConfigurationAppInput.html":{},"classes/UpdateContentInput.html":{},"classes/UpdateEventInput.html":{},"classes/UpdateExpertInput.html":{},"classes/UpdateFormInput.html":{},"classes/UpdateFormTagInput.html":{},"classes/UpdateHelpDeskInput.html":{},"classes/UpdateIntegrationInput.html":{},"classes/UpdateNotificationInput.html":{},"classes/UpdateParticipationEventInput.html":{},"classes/UpdatePhaseInput.html":{},"classes/UpdateResourceInput.html":{},"classes/UpdateResourcesReplyInput.html":{},"classes/UpdateRolInput.html":{},"classes/UpdateSiteInput.html":{},"classes/UpdateStageInput.html":{},"classes/UpdateTableConfigInput.html":{},"classes/UpdateTermsOfUseInput.html":{},"classes/UpdateTypesEventInput.html":{},"classes/UpdateUserConfigInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"classes/UserConfig.html":{},"classes/UserLog.html":{},"classes/activities.html":{},"miscellaneous/functions.html":{},"index.html":{},"interfaces/item_permission.html":{},"properties.html":{}}}],["description.'})@isstring",{"_index":1915,"title":{},"body":{"classes/CreateAnnouncementInput.html":{}}}],["description.'})@prop({default",{"_index":664,"title":{},"body":{"classes/Announcement.html":{},"classes/Phase.html":{}}}],["descriptions",{"_index":4811,"title":{},"body":{"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["desk",{"_index":2671,"title":{},"body":{"classes/HelpDeskFilterInput.html":{},"injectables/HelpDeskService.html":{},"classes/HelpDeskTicket.html":{},"injectables/TicketCategoriesService.html":{},"classes/TicketCategory.html":{},"classes/TicketChild.html":{},"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["desk.entity",{"_index":2701,"title":{},"body":{"modules/HelpDeskModule.html":{},"injectables/HelpDeskService.html":{},"classes/UpdateHelpDeskInput.html":{}}}],["desk.entity.ts",{"_index":2783,"title":{},"body":{"classes/HelpDeskTicket.html":{},"classes/TicketChild.html":{}}}],["desk.entity.ts:15",{"_index":2784,"title":{},"body":{"classes/HelpDeskTicket.html":{}}}],["desk.entity.ts:19",{"_index":2793,"title":{},"body":{"classes/HelpDeskTicket.html":{}}}],["desk.entity.ts:27",{"_index":2785,"title":{},"body":{"classes/HelpDeskTicket.html":{}}}],["desk.entity.ts:35",{"_index":2792,"title":{},"body":{"classes/HelpDeskTicket.html":{}}}],["desk.entity.ts:39",{"_index":2787,"title":{},"body":{"classes/HelpDeskTicket.html":{}}}],["desk.entity.ts:43",{"_index":2790,"title":{},"body":{"classes/HelpDeskTicket.html":{}}}],["desk.entity.ts:47",{"_index":2791,"title":{},"body":{"classes/HelpDeskTicket.html":{}}}],["desk.entity.ts:51",{"_index":2789,"title":{},"body":{"classes/HelpDeskTicket.html":{}}}],["desk.entity.ts:54",{"_index":2788,"title":{},"body":{"classes/HelpDeskTicket.html":{}}}],["desk.entity.ts:57",{"_index":2794,"title":{},"body":{"classes/HelpDeskTicket.html":{}}}],["desk.entity.ts:63",{"_index":4019,"title":{},"body":{"classes/TicketChild.html":{}}}],["desk.entity.ts:64",{"_index":4018,"title":{},"body":{"classes/TicketChild.html":{}}}],["desk.entity.ts:65",{"_index":4020,"title":{},"body":{"classes/TicketChild.html":{}}}],["desk.entity.ts:66",{"_index":4016,"title":{},"body":{"classes/TicketChild.html":{}}}],["desk.entity.ts:67",{"_index":4017,"title":{},"body":{"classes/TicketChild.html":{}}}],["desk.input",{"_index":2727,"title":{},"body":{"injectables/HelpDeskService.html":{},"classes/UpdateHelpDeskInput.html":{}}}],["desk.input.ts",{"_index":2022,"title":{},"body":{"classes/CreateHelpDeskInput.html":{},"classes/UpdateHelpDeskInput.html":{}}}],["desk.input.ts:14",{"_index":2034,"title":{},"body":{"classes/CreateHelpDeskInput.html":{},"classes/UpdateHelpDeskInput.html":{}}}],["desk.input.ts:18",{"_index":2029,"title":{},"body":{"classes/CreateHelpDeskInput.html":{},"classes/UpdateHelpDeskInput.html":{}}}],["desk.input.ts:23",{"_index":4182,"title":{},"body":{"classes/UpdateHelpDeskInput.html":{}}}],["desk.input.ts:29",{"_index":2031,"title":{},"body":{"classes/CreateHelpDeskInput.html":{}}}],["desk.input.ts:34",{"_index":2033,"title":{},"body":{"classes/CreateHelpDeskInput.html":{}}}],["desk.input.ts:38",{"_index":2027,"title":{},"body":{"classes/CreateHelpDeskInput.html":{}}}],["desk.module",{"_index":899,"title":{},"body":{"modules/AppModule.html":{}}}],["desk.module.ts",{"_index":2692,"title":{},"body":{"modules/HelpDeskModule.html":{}}}],["desk.resolver",{"_index":2695,"title":{},"body":{"modules/HelpDeskModule.html":{}}}],["desk.service",{"_index":2693,"title":{},"body":{"modules/HelpDeskModule.html":{}}}],["desk.service.ts",{"_index":2703,"title":{},"body":{"injectables/HelpDeskService.html":{}}}],["desk.service.ts:100",{"_index":2721,"title":{},"body":{"injectables/HelpDeskService.html":{}}}],["desk.service.ts:115",{"_index":2724,"title":{},"body":{"injectables/HelpDeskService.html":{}}}],["desk.service.ts:139",{"_index":2722,"title":{},"body":{"injectables/HelpDeskService.html":{}}}],["desk.service.ts:153",{"_index":2712,"title":{},"body":{"injectables/HelpDeskService.html":{}}}],["desk.service.ts:24",{"_index":2709,"title":{},"body":{"injectables/HelpDeskService.html":{}}}],["desk.service.ts:36",{"_index":2726,"title":{},"body":{"injectables/HelpDeskService.html":{}}}],["desk.service.ts:41",{"_index":2715,"title":{},"body":{"injectables/HelpDeskService.html":{}}}],["desk.service.ts:58",{"_index":2717,"title":{},"body":{"injectables/HelpDeskService.html":{}}}],["desk.service.ts:76",{"_index":2720,"title":{},"body":{"injectables/HelpDeskService.html":{}}}],["desk/categories/categories.module.ts",{"_index":3976,"title":{},"body":{"modules/TicketCategoriesModule.html":{}}}],["desk/categories/categories.service.ts",{"_index":3983,"title":{},"body":{"injectables/TicketCategoriesService.html":{}}}],["desk/categories/categories.service.ts:14",{"_index":3985,"title":{},"body":{"injectables/TicketCategoriesService.html":{}}}],["desk/categories/categories.service.ts:20",{"_index":3996,"title":{},"body":{"injectables/TicketCategoriesService.html":{}}}],["desk/categories/categories.service.ts:25",{"_index":3989,"title":{},"body":{"injectables/TicketCategoriesService.html":{}}}],["desk/categories/categories.service.ts:44",{"_index":3990,"title":{},"body":{"injectables/TicketCategoriesService.html":{}}}],["desk/categories/categories.service.ts:51",{"_index":3991,"title":{},"body":{"injectables/TicketCategoriesService.html":{}}}],["desk/categories/categories.service.ts:67",{"_index":3994,"title":{},"body":{"injectables/TicketCategoriesService.html":{}}}],["desk/categories/categories.service.ts:94",{"_index":3992,"title":{},"body":{"injectables/TicketCategoriesService.html":{}}}],["desk/categories/entities/category.entity.ts",{"_index":4008,"title":{},"body":{"classes/TicketCategory.html":{}}}],["desk/categories/entities/category.entity.ts:10",{"_index":4009,"title":{},"body":{"classes/TicketCategory.html":{}}}],["desk/categories/entities/category.entity.ts:14",{"_index":4013,"title":{},"body":{"classes/TicketCategory.html":{}}}],["desk/categories/entities/category.entity.ts:18",{"_index":4010,"title":{},"body":{"classes/TicketCategory.html":{}}}],["desk/categories/entities/category.entity.ts:22",{"_index":4012,"title":{},"body":{"classes/TicketCategory.html":{}}}],["desk/categories/entities/category.entity.ts:25",{"_index":4011,"title":{},"body":{"classes/TicketCategory.html":{}}}],["desk/categories/entities/category.entity.ts:28",{"_index":4014,"title":{},"body":{"classes/TicketCategory.html":{}}}],["desk/dto/create",{"_index":2021,"title":{},"body":{"classes/CreateHelpDeskInput.html":{}}}],["desk/dto/help",{"_index":2670,"title":{},"body":{"classes/HelpDeskFilterInput.html":{}}}],["desk/dto/update",{"_index":4180,"title":{},"body":{"classes/UpdateHelpDeskInput.html":{}}}],["desk/entities/help",{"_index":2782,"title":{},"body":{"classes/HelpDeskTicket.html":{},"classes/TicketChild.html":{}}}],["desk/enum/ticket",{"_index":4731,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["desk/help",{"_index":898,"title":{},"body":{"modules/AppModule.html":{},"modules/HelpDeskModule.html":{},"injectables/HelpDeskService.html":{}}}],["destination",{"_index":123,"title":{},"body":{"classes/AWSSESProvider.html":{}}}],["destinations",{"_index":152,"title":{},"body":{"classes/AWSSESProvider.html":{}}}],["details",{"_index":988,"title":{},"body":{"classes/Applicant.html":{},"classes/ApplicantState.html":{},"classes/Attachment.html":{},"classes/Business.html":{},"classes/BusinessRelationship.html":{},"classes/ConfigEvaluation.html":{},"classes/Download.html":{},"classes/Entrepreneur.html":{},"classes/EntrepreneurRelationship.html":{},"classes/EntrepreneurRelationship-1.html":{},"classes/Expert.html":{},"classes/FormTag.html":{},"interfaces/IAttachment.html":{},"classes/PhaseExpertRelationship.html":{},"classes/PhaseRelationship.html":{},"classes/Startup.html":{},"classes/StartupLink.html":{},"classes/StartupRelationship.html":{}}}],["determines",{"_index":1996,"title":{},"body":{"classes/CreateFormInput.html":{},"classes/User.html":{}}}],["development",{"_index":4772,"title":{},"body":{"index.html":{}}}],["di",{"_index":3250,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["dictionary",{"_index":549,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["diferent",{"_index":5005,"title":{},"body":{"miscellaneous/variables.html":{}}}],["directedto",{"_index":1719,"title":{},"body":{"classes/ContactServiceLink.html":{},"classes/ContactServicesInput.html":{},"classes/CreateSiteInput.html":{},"classes/Site.html":{},"classes/UpdateSiteInput.html":{}}}],["disable",{"_index":3099,"title":{},"body":{"injectables/InvitationsService.html":{}}}],["disabled",{"_index":3097,"title":{},"body":{"injectables/InvitationsService.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["dispatched",{"_index":138,"title":{},"body":{"classes/AWSSESProvider.html":{},"injectables/EmailsService.html":{},"classes/SendGridProvider.html":{}}}],["display",{"_index":3665,"title":{},"body":{"injectables/StagesService.html":{},"classes/TermsOfUse.html":{}}}],["disponible",{"_index":5078,"title":{},"body":{"miscellaneous/variables.html":{}}}],["disposition",{"_index":3574,"title":{},"body":{"classes/SendGridProvider.html":{}}}],["doc",{"_index":1275,"title":{},"body":{"classes/Business.html":{},"injectables/BusinessService.html":{},"classes/CloseFormSubscriptionArgs.html":{},"classes/CreateFormSubscriptionInput.html":{},"classes/EntrepreneurRelationship.html":{},"classes/FormSubscription.html":{},"injectables/FormSubscriptionService.html":{},"classes/GetSubmittedFilesArgs.html":{},"injectables/IntegrationsService.html":{},"classes/SubmitFileInput.html":{},"injectables/TableService.html":{},"classes/TicketCategory.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["doc._id",{"_index":1428,"title":{},"body":{"injectables/BusinessService.html":{}}}],["doc.input.ts",{"_index":3745,"title":{},"body":{"classes/SubmitAnnouncementDocInput.html":{}}}],["doc.input.ts:12",{"_index":3748,"title":{},"body":{"classes/SubmitAnnouncementDocInput.html":{}}}],["doc.input.ts:16",{"_index":3751,"title":{},"body":{"classes/SubmitAnnouncementDocInput.html":{}}}],["doc.input.ts:22",{"_index":3753,"title":{},"body":{"classes/SubmitAnnouncementDocInput.html":{}}}],["doc.input.ts:26",{"_index":3750,"title":{},"body":{"classes/SubmitAnnouncementDocInput.html":{}}}],["docentrepreneur",{"_index":2748,"title":{},"body":{"injectables/HelpDeskService.html":{}}}],["docentrepreneur._id",{"_index":2752,"title":{},"body":{"injectables/HelpDeskService.html":{}}}],["docfiles",{"_index":2572,"title":{},"body":{"injectables/FormSubscriptionService.html":{}}}],["docrol",{"_index":4494,"title":{},"body":{"injectables/UsersService.html":{}}}],["docs",{"_index":1310,"title":{},"body":{"classes/BusinessRelationship.html":{},"classes/Entrepreneur.html":{},"classes/EntrepreneurRelationship-1.html":{},"classes/Event.html":{},"classes/Expert.html":{},"classes/ExpertEventLink.html":{},"classes/HelpDeskTicket.html":{},"classes/ParticipantEventLink.html":{},"classes/PhaseExpertRelationship.html":{},"classes/PhaseRelationship.html":{},"classes/Startup.html":{},"classes/StartupLink.html":{},"classes/StartupRelationship.html":{},"classes/TeamCoachLink.html":{},"classes/TicketChild.html":{},"classes/User.html":{},"injectables/UserLogService.html":{},"injectables/UsersService.html":{}}}],["docs.length",{"_index":4421,"title":{},"body":{"injectables/UserLogService.html":{},"injectables/UsersService.html":{}}}],["docsstartups",{"_index":2750,"title":{},"body":{"injectables/HelpDeskService.html":{}}}],["docsstartups.length",{"_index":2753,"title":{},"body":{"injectables/HelpDeskService.html":{}}}],["docsstartups.map((i",{"_index":2755,"title":{},"body":{"injectables/HelpDeskService.html":{}}}],["docstartup",{"_index":602,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["document",{"_index":958,"title":{},"body":{"classes/Applicant.html":{},"classes/ApplicantState.html":{},"classes/Attachment.html":{},"injectables/BusinessService.html":{},"classes/ConfigurationApp.html":{},"classes/Content.html":{},"classes/CreateFormInput.html":{},"injectables/FormSubscriptionService.html":{},"modules/FormsModule.html":{},"interfaces/IAttachment.html":{},"classes/Resource.html":{},"classes/ResourcesReply.html":{},"classes/SubmitFileInput.html":{},"classes/TermsOfUse.html":{},"classes/TypesEvent.html":{},"miscellaneous/variables.html":{}}}],["document._id",{"_index":1439,"title":{},"body":{"injectables/BusinessService.html":{},"injectables/FormSubscriptionService.html":{}}}],["document.item",{"_index":1440,"title":{},"body":{"injectables/BusinessService.html":{},"injectables/FormSubscriptionService.html":{}}}],["document?.documents",{"_index":2574,"title":{},"body":{"injectables/FormSubscriptionService.html":{}}}],["documents",{"_index":336,"title":{},"body":{"classes/ActivitiesConfig.html":{},"classes/Applicant.html":{},"classes/ApplicantState.html":{},"classes/Assign.html":{},"classes/Attachment.html":{},"classes/AttachmentSubmit.html":{},"injectables/BusinessService.html":{},"classes/CreateFormInput.html":{},"classes/Form.html":{},"classes/FormSubmissionFiles.html":{},"injectables/FormSubscriptionService.html":{},"interfaces/IAttachment.html":{},"classes/UpdateApplicantStateInput.html":{},"classes/UpdateFormInput.html":{},"classes/activities.html":{},"miscellaneous/variables.html":{}}}],["documents.map((doc",{"_index":1427,"title":{},"body":{"injectables/BusinessService.html":{}}}],["documents[0",{"_index":1423,"title":{},"body":{"injectables/BusinessService.html":{}}}],["documentservice",{"_index":2562,"title":{},"body":{"injectables/FormSubscriptionService.html":{}}}],["documentservice.createdocument(data",{"_index":2565,"title":{},"body":{"injectables/FormSubscriptionService.html":{}}}],["documentservice.getdocument(id",{"_index":2566,"title":{},"body":{"injectables/FormSubscriptionService.html":{}}}],["documentservice.updatedocument(doc",{"_index":2564,"title":{},"body":{"injectables/FormSubscriptionService.html":{}}}],["documentservice.uploadfile",{"_index":2570,"title":{},"body":{"injectables/FormSubscriptionService.html":{}}}],["documentservice.uploadfile(doc",{"_index":2573,"title":{},"body":{"injectables/FormSubscriptionService.html":{}}}],["documentserviceprovider",{"_index":2495,"title":{},"body":{"injectables/FormSubscriptionService.html":{}}}],["documentsfacet",{"_index":4989,"title":{},"body":{"miscellaneous/variables.html":{}}}],["documentsfacet.push(limit",{"_index":4991,"title":{},"body":{"miscellaneous/variables.html":{}}}],["documentsfacet.push(outputprojection",{"_index":5031,"title":{},"body":{"miscellaneous/variables.html":{}}}],["documentsfacet.push(skip",{"_index":4990,"title":{},"body":{"miscellaneous/variables.html":{}}}],["documentsfields",{"_index":960,"title":{},"body":{"classes/Applicant.html":{},"classes/ApplicantState.html":{},"classes/Attachment.html":{},"interfaces/IAttachment.html":{}}}],["doesn't",{"_index":803,"title":{},"body":{"injectables/AnnouncementsService.html":{}}}],["domingo",{"_index":4408,"title":{},"body":{"injectables/UserLogService.html":{}}}],["donated",{"_index":596,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["done",{"_index":597,"title":{},"body":{"injectables/ActivitiesConfigService.html":{},"injectables/ConfigEvaluationsService.html":{},"classes/Evaluation.html":{}}}],["down",{"_index":3661,"title":{},"body":{"injectables/StagesService.html":{}}}],["download",{"_index":1212,"title":{"classes/Download.html":{}},"body":{"injectables/AwsService.html":{},"injectables/BusinessService.html":{},"classes/Download.html":{},"modules/DownloadsModule.html":{},"injectables/DownloadsService.html":{}}}],["download.name",{"_index":2200,"title":{},"body":{"modules/DownloadsModule.html":{}}}],["download_all_tables",{"_index":4679,"title":{},"body":{"miscellaneous/enumerations.html":{},"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["downloadable",{"_index":3377,"title":{},"body":{"classes/Resource.html":{},"miscellaneous/enumerations.html":{}}}],["downloadbyrequest",{"_index":1321,"title":{},"body":{"injectables/BusinessService.html":{}}}],["downloadbyrequest(undefined",{"_index":1347,"title":{},"body":{"injectables/BusinessService.html":{}}}],["downloaddata",{"_index":2226,"title":{},"body":{"injectables/DownloadsService.html":{}}}],["downloadmodel",{"_index":2205,"title":{},"body":{"injectables/DownloadsService.html":{}}}],["downloadrequestargs",{"_index":1348,"title":{},"body":{"injectables/BusinessService.html":{}}}],["downloadresult",{"_index":1392,"title":{},"body":{"injectables/BusinessService.html":{}}}],["downloads",{"_index":2176,"title":{},"body":{"classes/Download.html":{}}}],["downloads.controller",{"_index":2197,"title":{},"body":{"modules/DownloadsModule.html":{}}}],["downloads.service",{"_index":2195,"title":{},"body":{"modules/DownloadsModule.html":{}}}],["downloads/downloads.module",{"_index":883,"title":{},"body":{"modules/AppModule.html":{}}}],["downloadschema",{"_index":2188,"title":{},"body":{"classes/Download.html":{},"modules/DownloadsModule.html":{}}}],["downloadscontroller",{"_index":2196,"title":{},"body":{"modules/DownloadsModule.html":{}}}],["downloadservice",{"_index":1333,"title":{},"body":{"injectables/BusinessService.html":{}}}],["downloadsmodule",{"_index":819,"title":{"modules/DownloadsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/BusinessModule.html":{},"modules/DownloadsModule.html":{},"modules/EntrepreneurModule.html":{},"modules/ExpertModule.html":{},"modules/StartupModule.html":{},"modules.html":{},"overview.html":{}}}],["downloadsservice",{"_index":1334,"title":{"injectables/DownloadsService.html":{}},"body":{"injectables/BusinessService.html":{},"modules/DownloadsModule.html":{},"injectables/DownloadsService.html":{},"overview.html":{}}}],["driver",{"_index":927,"title":{},"body":{"modules/AppModule.html":{}}}],["dto/accept",{"_index":3013,"title":{},"body":{"controllers/InvitationsController.html":{},"injectables/InvitationsService.html":{}}}],["dto/add",{"_index":3862,"title":{},"body":{"injectables/TableService.html":{}}}],["dto/create",{"_index":313,"title":{},"body":{"injectables/ActaService.html":{},"injectables/ActivitiesConfigService.html":{},"injectables/AnnouncementsService.html":{},"injectables/ConfigEvaluationsService.html":{},"injectables/ConfigNotificationsService.html":{},"injectables/ContentService.html":{},"injectables/FormSubscriptionService.html":{},"injectables/FormTagService.html":{},"injectables/FormsService.html":{},"injectables/HelpDeskService.html":{},"injectables/IntegrationsService.html":{},"injectables/NotificationsService.html":{},"injectables/ParticipationEventsService.html":{},"injectables/ResourcesService.html":{},"injectables/RolService.html":{},"injectables/SitesService.html":{},"injectables/StagesService.html":{},"injectables/TableConfigService.html":{},"injectables/TableService.html":{},"injectables/TicketCategoriesService.html":{},"injectables/TypesEventsService.html":{},"injectables/UserLogService.html":{}}}],["dto/help",{"_index":2728,"title":{},"body":{"injectables/HelpDeskService.html":{}}}],["dto/remove",{"_index":3865,"title":{},"body":{"injectables/TableService.html":{}}}],["dto/send",{"_index":65,"title":{},"body":{"classes/AWSSESProvider.html":{},"controllers/EmailsController.html":{},"interfaces/EmailsRepository.html":{},"injectables/EmailsService.html":{},"classes/SendGridProvider.html":{}}}],["dto/template.input",{"_index":2246,"title":{},"body":{"controllers/EmailsController.html":{}}}],["dto/update",{"_index":315,"title":{},"body":{"injectables/ActaService.html":{},"injectables/ActivitiesConfigService.html":{},"injectables/AnnouncementsService.html":{},"injectables/ConfigEvaluationsService.html":{},"injectables/ConfigurationAppService.html":{},"injectables/ContentService.html":{},"injectables/FormTagService.html":{},"injectables/FormsService.html":{},"injectables/HelpDeskService.html":{},"injectables/NotificationsService.html":{},"injectables/ParticipationEventsService.html":{},"injectables/ResourcesService.html":{},"injectables/RolService.html":{},"injectables/SitesService.html":{},"injectables/StagesService.html":{},"injectables/TermsOfUseService.html":{},"injectables/TicketCategoriesService.html":{},"injectables/TypesEventsService.html":{},"injectables/UserConfigService.html":{}}}],["due",{"_index":1085,"title":{},"body":{"injectables/AuthCodeService.html":{}}}],["duplicate",{"_index":405,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["duplicate(id",{"_index":444,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["duration",{"_index":2850,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["during",{"_index":4754,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["dv4ydindtk+z5rtoadh5ug",{"_index":2959,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["dynamic",{"_index":977,"title":{},"body":{"classes/Applicant.html":{},"classes/ApplicantState.html":{},"classes/Attachment.html":{},"classes/Business.html":{},"classes/EntrepreneurRelationship.html":{},"classes/Evaluation.html":{},"classes/FormTag.html":{},"interfaces/IAttachment.html":{},"classes/Integration.html":{},"classes/ResourcesReply.html":{},"classes/TypesEvent.html":{},"classes/UserLog.html":{}}}],["dynamically",{"_index":1984,"title":{},"body":{"classes/CreateFormInput.html":{}}}],["dynamictemplatedata",{"_index":3079,"title":{},"body":{"injectables/InvitationsService.html":{}}}],["día",{"_index":1575,"title":{},"body":{"injectables/ConfigEvaluationsService.html":{},"injectables/UserLogService.html":{}}}],["e2e",{"_index":4782,"title":{},"body":{"index.html":{}}}],["each",{"_index":1451,"title":{},"body":{"injectables/BusinessService.html":{},"classes/CreateUserInput.html":{},"classes/UpdateFormInput.html":{}}}],["ecosystem",{"_index":2925,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["ecosystembt",{"_index":4535,"title":{},"body":{"injectables/UsersService.html":{}}}],["edge",{"_index":3928,"title":{},"body":{"classes/TemplateInput.html":{}}}],["edit_business",{"_index":4678,"title":{},"body":{"miscellaneous/enumerations.html":{},"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["edit_entrepreneurs",{"_index":4675,"title":{},"body":{"miscellaneous/enumerations.html":{},"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["edit_experts",{"_index":4671,"title":{},"body":{"miscellaneous/enumerations.html":{},"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["edit_startups",{"_index":4668,"title":{},"body":{"miscellaneous/enumerations.html":{},"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["editar",{"_index":4823,"title":{},"body":{"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["editor",{"_index":2957,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["efficient",{"_index":4761,"title":{},"body":{"index.html":{}}}],["el",{"_index":1572,"title":{},"body":{"injectables/ConfigEvaluationsService.html":{},"injectables/UserLogService.html":{},"injectables/UsersService.html":{}}}],["element",{"_index":5006,"title":{},"body":{"miscellaneous/variables.html":{}}}],["elements",{"_index":5012,"title":{},"body":{"miscellaneous/variables.html":{}}}],["email",{"_index":47,"title":{},"body":{"classes/AWSSESProvider.html":{},"classes/Announcement.html":{},"injectables/AuthService.html":{},"classes/ContactServiceLink.html":{},"classes/ContactServicesInput.html":{},"classes/CreateEventInput.html":{},"classes/CreateInvitationArgs.html":{},"classes/CreateUserInput.html":{},"controllers/EmailsController.html":{},"interfaces/EmailsRepository.html":{},"injectables/EmailsService.html":{},"classes/Event.html":{},"classes/ExpertEventLink.html":{},"injectables/IntegrationsService.html":{},"classes/Invitation.html":{},"injectables/InvitationsService.html":{},"classes/ParticipantEventLink.html":{},"classes/SendGridProvider.html":{},"classes/SignUpInput.html":{},"classes/Site.html":{},"classes/TeamCoachLink.html":{},"classes/UpdateSiteInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{}}}],["email.input",{"_index":66,"title":{},"body":{"classes/AWSSESProvider.html":{},"controllers/EmailsController.html":{},"interfaces/EmailsRepository.html":{},"injectables/EmailsService.html":{},"classes/SendGridProvider.html":{}}}],["email.input.ts",{"_index":3538,"title":{},"body":{"classes/SendEmailInput.html":{}}}],["email.input.ts:13",{"_index":3542,"title":{},"body":{"classes/SendEmailInput.html":{}}}],["email.input.ts:16",{"_index":3539,"title":{},"body":{"classes/SendEmailInput.html":{}}}],["email.input.ts:20",{"_index":3543,"title":{},"body":{"classes/SendEmailInput.html":{}}}],["email.input.ts:24",{"_index":3541,"title":{},"body":{"classes/SendEmailInput.html":{}}}],["email.input.ts:9",{"_index":3545,"title":{},"body":{"classes/SendEmailInput.html":{}}}],["email/username",{"_index":4273,"title":{},"body":{"classes/User.html":{}}}],["email/username.'})@prop({unique",{"_index":4253,"title":{},"body":{"classes/User.html":{}}}],["email_notification",{"_index":2926,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["email_token",{"_index":2261,"title":{},"body":{"modules/EmailsModule.html":{},"interfaces/EmailsRepository.html":{},"injectables/EmailsService.html":{}}}],["emailmessage",{"_index":643,"title":{},"body":{"classes/Announcement.html":{}}}],["emailnotificationtypes",{"_index":3223,"title":{},"body":{"injectables/NotificationsService.html":{},"miscellaneous/enumerations.html":{}}}],["emailnotificationtypes.assessmentavailable",{"_index":5079,"title":{},"body":{"miscellaneous/variables.html":{}}}],["emailnotificationtypes.eventupdate",{"_index":5065,"title":{},"body":{"miscellaneous/variables.html":{}}}],["emailnotificationtypes.helpdeskticketupdate",{"_index":5081,"title":{},"body":{"miscellaneous/variables.html":{}}}],["emailnotificationtypes.invitationtoevent",{"_index":5062,"title":{},"body":{"miscellaneous/variables.html":{}}}],["emailnotificationtypes.phasecompletion",{"_index":5076,"title":{},"body":{"miscellaneous/variables.html":{}}}],["emailnotificationtypes.qualifiedresource",{"_index":5069,"title":{},"body":{"miscellaneous/variables.html":{}}}],["emailnotificationtypes.resourceexpiringsoon",{"_index":5073,"title":{},"body":{"miscellaneous/variables.html":{}}}],["emailorganizer",{"_index":170,"title":{},"body":{"classes/AWSSESProvider.html":{},"interfaces/EmailsRepository.html":{},"injectables/EmailsService.html":{},"classes/SendGridProvider.html":{},"miscellaneous/functions.html":{}}}],["emails",{"_index":10,"title":{},"body":{"classes/AWSSESProvider.html":{},"controllers/EmailsController.html":{},"interfaces/EmailsRepository.html":{},"classes/SendGridProvider.html":{},"miscellaneous/enumerations.html":{}}}],["emails.controller",{"_index":2257,"title":{},"body":{"modules/EmailsModule.html":{}}}],["emails.service",{"_index":2245,"title":{},"body":{"controllers/EmailsController.html":{},"modules/EmailsModule.html":{}}}],["emails/emails.module",{"_index":856,"title":{},"body":{"modules/AppModule.html":{}}}],["emailscontroller",{"_index":2231,"title":{"controllers/EmailsController.html":{}},"body":{"controllers/EmailsController.html":{},"modules/EmailsModule.html":{}}}],["emailservice",{"_index":2270,"title":{},"body":{"injectables/EmailsService.html":{}}}],["emailsmodule",{"_index":820,"title":{"modules/EmailsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/EmailsModule.html":{},"modules/EventsModule.html":{},"modules/IntegrationsModule.html":{},"modules/InvitationsModule.html":{},"modules/ResourcesRepliesModule.html":{},"modules/StartupModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["emailsrepository",{"_index":12,"title":{"interfaces/EmailsRepository.html":{}},"body":{"classes/AWSSESProvider.html":{},"interfaces/EmailsRepository.html":{},"injectables/EmailsService.html":{},"classes/SendGridProvider.html":{}}}],["emailsservice",{"_index":2244,"title":{"injectables/EmailsService.html":{}},"body":{"controllers/EmailsController.html":{},"modules/EmailsModule.html":{},"injectables/EmailsService.html":{},"injectables/IntegrationsService.html":{},"injectables/InvitationsService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["emailtemplate",{"_index":149,"title":{},"body":{"classes/AWSSESProvider.html":{},"injectables/InvitationsService.html":{}}}],["emailtemplate.personalizations",{"_index":3077,"title":{},"body":{"injectables/InvitationsService.html":{}}}],["emailtemplates",{"_index":79,"title":{},"body":{"classes/AWSSESProvider.html":{},"injectables/EmailsService.html":{},"classes/SendGridProvider.html":{},"classes/TemplateInput.html":{},"miscellaneous/enumerations.html":{}}}],["emailtemplates.invitation",{"_index":109,"title":{},"body":{"classes/AWSSESProvider.html":{},"injectables/EmailsService.html":{},"classes/SendGridProvider.html":{},"classes/TemplateInput.html":{},"miscellaneous/variables.html":{}}}],["emailtemplates.notification",{"_index":111,"title":{},"body":{"classes/AWSSESProvider.html":{},"injectables/EmailsService.html":{},"classes/SendGridProvider.html":{},"classes/TemplateInput.html":{},"miscellaneous/variables.html":{}}}],["emitter",{"_index":904,"title":{},"body":{"modules/AppModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["empresa",{"_index":4839,"title":{},"body":{"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["empresario",{"_index":1764,"title":{},"body":{"classes/Content.html":{},"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["empresarios",{"_index":4830,"title":{},"body":{"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["empresas",{"_index":4837,"title":{},"body":{"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["en",{"_index":685,"title":{},"body":{"classes/Announcement.html":{},"classes/ResourcesReply.html":{},"injectables/UsersService.html":{},"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["en_us",{"_index":1420,"title":{},"body":{"injectables/BusinessService.html":{}}}],["enable",{"_index":2916,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["enabled",{"_index":4514,"title":{},"body":{"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{}}}],["enabledebug",{"_index":928,"title":{},"body":{"modules/AppModule.html":{}}}],["encryption_type",{"_index":2927,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["encuentra",{"_index":4521,"title":{},"body":{"injectables/UsersService.html":{}}}],["end",{"_index":669,"title":{},"body":{"classes/Announcement.html":{},"injectables/ConfigEvaluationsService.html":{},"classes/CreateAnnouncementInput.html":{},"injectables/UserLogService.html":{}}}],["end.sethours(23",{"_index":1580,"title":{},"body":{"injectables/ConfigEvaluationsService.html":{},"injectables/UserLogService.html":{}}}],["end_time",{"_index":4750,"title":{},"body":{"miscellaneous/functions.html":{}}}],["endat",{"_index":644,"title":{},"body":{"classes/Announcement.html":{},"classes/ConfigEvaluation.html":{},"classes/CreateAnnouncementInput.html":{},"classes/CreateConfigEvaluationInput.html":{},"classes/CreateEventInput.html":{},"classes/CreatePhaseInput.html":{},"classes/Event.html":{},"classes/ExpertEventLink.html":{},"classes/ParticipantEventLink.html":{},"classes/Phase.html":{},"classes/TeamCoachLink.html":{},"classes/UpdateAnnouncementInput.html":{},"classes/UpdateConfigEvaluationInput.html":{},"classes/UpdateEventInput.html":{},"classes/UpdatePhaseInput.html":{}}}],["endpoint",{"_index":1248,"title":{},"body":{"injectables/AwsService.html":{},"controllers/EmailsController.html":{}}}],["endpoints",{"_index":3718,"title":{},"body":{"controllers/StorageController.html":{}}}],["enhanced_encryption",{"_index":2928,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["enrolled",{"_index":4644,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["entities/acta.entity",{"_index":276,"title":{},"body":{"modules/ActaModule.html":{},"injectables/ActaService.html":{}}}],["entities/activities",{"_index":385,"title":{},"body":{"modules/ActivitiesConfigModule.html":{},"injectables/ActivitiesConfigService.html":{},"classes/UpdateActivitiesConfigInput.html":{}}}],["entities/announcement.entity",{"_index":762,"title":{},"body":{"modules/AnnouncementsModule.html":{},"injectables/AnnouncementsService.html":{}}}],["entities/applicant.entity",{"_index":1017,"title":{},"body":{"modules/ApplicantModule.html":{},"classes/AttachmentSubmit.html":{},"classes/UpdateApplicantStateInput.html":{}}}],["entities/auth",{"_index":1065,"title":{},"body":{"modules/AuthCodeModule.html":{},"injectables/AuthCodeService.html":{}}}],["entities/business.entity",{"_index":1300,"title":{},"body":{"modules/BusinessModule.html":{},"injectables/BusinessService.html":{}}}],["entities/category.entity",{"_index":3981,"title":{},"body":{"modules/TicketCategoriesModule.html":{},"injectables/TicketCategoriesService.html":{}}}],["entities/column",{"_index":3864,"title":{},"body":{"injectables/TableService.html":{}}}],["entities/config",{"_index":1532,"title":{},"body":{"modules/ConfigEvaluationsModule.html":{},"injectables/ConfigEvaluationsService.html":{},"modules/ConfigNotificationsModule.html":{},"injectables/ConfigNotificationsService.html":{}}}],["entities/configuration",{"_index":1662,"title":{},"body":{"modules/ConfigurationAppModule.html":{},"injectables/ConfigurationAppService.html":{}}}],["entities/content.entity",{"_index":1777,"title":{},"body":{"modules/ContentModule.html":{},"injectables/ContentService.html":{},"classes/LastContentOutput.html":{}}}],["entities/download",{"_index":2198,"title":{},"body":{"modules/DownloadsModule.html":{},"injectables/DownloadsService.html":{}}}],["entities/entrepreneur.entity",{"_index":2305,"title":{},"body":{"modules/EntrepreneurModule.html":{}}}],["entities/evaluation.entity",{"_index":2346,"title":{},"body":{"modules/EvaluationsModule.html":{}}}],["entities/event.entity",{"_index":2382,"title":{},"body":{"modules/EventsModule.html":{}}}],["entities/expert.entity",{"_index":2416,"title":{},"body":{"modules/ExpertModule.html":{},"classes/LinkStartupsExpertsArgs.html":{}}}],["entities/form",{"_index":2526,"title":{},"body":{"injectables/FormSubscriptionService.html":{},"injectables/FormTagService.html":{}}}],["entities/form.entity",{"_index":2641,"title":{},"body":{"injectables/FormsService.html":{},"classes/UpdateFormInput.html":{}}}],["entities/help",{"_index":2700,"title":{},"body":{"modules/HelpDeskModule.html":{},"injectables/HelpDeskService.html":{},"classes/UpdateHelpDeskInput.html":{}}}],["entities/integration.entity",{"_index":2826,"title":{},"body":{"modules/IntegrationsModule.html":{},"injectables/IntegrationsService.html":{}}}],["entities/invitation.entity",{"_index":3027,"title":{},"body":{"modules/InvitationsModule.html":{},"injectables/InvitationsService.html":{}}}],["entities/notification.entity",{"_index":3191,"title":{},"body":{"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{}}}],["entities/participation",{"_index":3290,"title":{},"body":{"modules/ParticipationEventsModule.html":{},"injectables/ParticipationEventsService.html":{}}}],["entities/phase.entity",{"_index":3357,"title":{},"body":{"modules/PhasesModule.html":{}}}],["entities/resource.entity",{"_index":3401,"title":{},"body":{"modules/ResourcesModule.html":{},"injectables/ResourcesService.html":{}}}],["entities/resources",{"_index":3412,"title":{},"body":{"modules/ResourcesRepliesModule.html":{}}}],["entities/rol.entity",{"_index":3487,"title":{},"body":{"modules/RolModule.html":{},"injectables/RolService.html":{}}}],["entities/site.entity",{"_index":3607,"title":{},"body":{"modules/SitesModule.html":{},"injectables/SitesService.html":{}}}],["entities/stage.entity",{"_index":3648,"title":{},"body":{"modules/StagesModule.html":{},"injectables/StagesService.html":{}}}],["entities/startup.entity",{"_index":3709,"title":{},"body":{"modules/StartupModule.html":{}}}],["entities/table",{"_index":635,"title":{},"body":{"classes/AddTableJoinInput.html":{},"injectables/TableConfigService.html":{}}}],["entities/table.entity",{"_index":3859,"title":{},"body":{"injectables/TableService.html":{}}}],["entities/terms",{"_index":3951,"title":{},"body":{"modules/TermsOfUseModule.html":{},"injectables/TermsOfUseService.html":{}}}],["entities/types",{"_index":4035,"title":{},"body":{"modules/TypesEventsModule.html":{},"injectables/TypesEventsService.html":{},"modules/TypesNotificationsModule.html":{},"injectables/TypesNotificationsService.html":{}}}],["entities/user",{"_index":4291,"title":{},"body":{"modules/UserConfigModule.html":{},"injectables/UserConfigService.html":{},"modules/UserLogModule.html":{},"injectables/UserLogService.html":{}}}],["entities/user.entity",{"_index":4438,"title":{},"body":{"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["entity",{"_index":366,"title":{},"body":{"classes/ActivitiesConfig.html":{},"classes/Announcement.html":{},"classes/Applicant.html":{},"classes/ApplicantState.html":{},"classes/Assign.html":{},"classes/Attachment.html":{},"classes/Business.html":{},"classes/BusinessRelationship.html":{},"classes/ConfigEvaluation.html":{},"classes/ConfigurationApp.html":{},"classes/ContactServiceLink.html":{},"classes/CreateAnnouncementInput.html":{},"classes/Download.html":{},"classes/Entrepreneur.html":{},"classes/EntrepreneurRelationship.html":{},"classes/EntrepreneurRelationship-1.html":{},"classes/Evaluation.html":{},"classes/Expert.html":{},"classes/Form.html":{},"classes/FormSubscription.html":{},"classes/FormTag.html":{},"interfaces/IAttachment.html":{},"classes/Integration.html":{},"classes/Phase.html":{},"classes/PhaseExpertRelationship.html":{},"classes/PhaseRelationship.html":{},"classes/ResourcesReply.html":{},"classes/Rol.html":{},"classes/Site.html":{},"classes/Stage.html":{},"classes/Startup.html":{},"classes/StartupLink.html":{},"classes/StartupRelationship.html":{},"classes/TableConfig.html":{},"classes/User.html":{},"classes/UserLog.html":{},"classes/activities.html":{}}}],["entity'})@prop({required",{"_index":658,"title":{},"body":{"classes/Announcement.html":{},"classes/Form.html":{}}}],["entity.'})@isenum(announcementtargets",{"_index":1925,"title":{},"body":{"classes/CreateAnnouncementInput.html":{}}}],["entity.'})@prop({type",{"_index":708,"title":{},"body":{"classes/Announcement.html":{}}}],["entityid",{"_index":368,"title":{},"body":{"classes/ActivitiesConfig.html":{},"classes/Assign.html":{},"classes/UpdateActivitiesConfigInput.html":{},"classes/activities.html":{}}}],["entrepreneur",{"_index":1306,"title":{"classes/Entrepreneur.html":{}},"body":{"classes/BusinessRelationship.html":{},"injectables/BusinessService.html":{},"classes/Entrepreneur.html":{},"modules/EntrepreneurModule.html":{},"classes/EntrepreneurRelationship-1.html":{},"classes/Event.html":{},"classes/ExpertEventLink.html":{},"injectables/NotificationsService.html":{},"classes/ParticipantEventLink.html":{},"classes/ParticipationEvent.html":{},"classes/PhaseRelationship.html":{},"classes/Startup.html":{},"classes/StartupRelationship.html":{},"classes/TeamCoachLink.html":{}}}],["entrepreneur.name",{"_index":2307,"title":{},"body":{"modules/EntrepreneurModule.html":{}}}],["entrepreneur.resolver",{"_index":2304,"title":{},"body":{"modules/EntrepreneurModule.html":{}}}],["entrepreneur.service",{"_index":2302,"title":{},"body":{"modules/EntrepreneurModule.html":{}}}],["entrepreneur/entrepreneur.module",{"_index":869,"title":{},"body":{"modules/AppModule.html":{}}}],["entrepreneur/entrepreneur.service",{"_index":1378,"title":{},"body":{"injectables/BusinessService.html":{}}}],["entrepreneurdocuments",{"_index":1444,"title":{},"body":{"injectables/BusinessService.html":{}}}],["entrepreneurdocuments.map((document",{"_index":1446,"title":{},"body":{"injectables/BusinessService.html":{}}}],["entrepreneurid",{"_index":3227,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["entrepreneurmodule",{"_index":821,"title":{"modules/EntrepreneurModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ApplicantModule.html":{},"modules/BusinessModule.html":{},"modules/EntrepreneurModule.html":{},"modules/EventsModule.html":{},"modules/HelpDeskModule.html":{},"modules/NotificationsModule.html":{},"modules/ResourcesRepliesModule.html":{},"modules/StartupModule.html":{},"modules.html":{},"overview.html":{}}}],["entrepreneurrelationship",{"_index":1280,"title":{"classes/EntrepreneurRelationship.html":{},"classes/EntrepreneurRelationship-1.html":{}},"body":{"classes/Business.html":{},"injectables/BusinessService.html":{},"classes/EntrepreneurRelationship.html":{},"classes/EntrepreneurRelationship-1.html":{},"classes/PhaseRelationship.html":{},"classes/Startup.html":{}}}],["entrepreneurrelationships",{"_index":1367,"title":{},"body":{"injectables/BusinessService.html":{}}}],["entrepreneurresolver",{"_index":2303,"title":{},"body":{"modules/EntrepreneurModule.html":{}}}],["entrepreneurs",{"_index":1276,"title":{},"body":{"classes/Business.html":{},"injectables/BusinessService.html":{},"classes/EntrepreneurRelationship.html":{},"classes/EntrepreneurRelationship-1.html":{},"classes/PhaseRelationship.html":{},"classes/Startup.html":{},"miscellaneous/enumerations.html":{},"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["entrepreneurschema",{"_index":1315,"title":{},"body":{"classes/BusinessRelationship.html":{},"classes/Entrepreneur.html":{},"modules/EntrepreneurModule.html":{},"classes/StartupRelationship.html":{}}}],["entrepreneurservice",{"_index":1331,"title":{},"body":{"injectables/BusinessService.html":{},"modules/EntrepreneurModule.html":{},"injectables/HelpDeskService.html":{},"overview.html":{}}}],["entrepreneurstartupargs",{"_index":2318,"title":{"classes/EntrepreneurStartupArgs.html":{}},"body":{"classes/EntrepreneurStartupArgs.html":{}}}],["entrepreneurupdateresult",{"_index":1441,"title":{},"body":{"injectables/BusinessService.html":{}}}],["entrepreneurupdateresult.acknowledged",{"_index":1443,"title":{},"body":{"injectables/BusinessService.html":{}}}],["entrevista",{"_index":5090,"title":{},"body":{"miscellaneous/variables.html":{}}}],["enum",{"_index":709,"title":{},"body":{"classes/Announcement.html":{},"classes/Applicant.html":{},"classes/ApplicantState.html":{},"classes/Attachment.html":{},"classes/Form.html":{},"classes/FormSubscription.html":{},"classes/HelpDeskTicket.html":{},"interfaces/IAttachment.html":{},"classes/Integration.html":{},"classes/Resource.html":{},"classes/TicketChild.html":{},"classes/User.html":{},"interfaces/item_permission.html":{}}}],["enum/chanels",{"_index":3217,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["enum/notification",{"_index":2079,"title":{},"body":{"classes/CreateNotificationInput.html":{},"classes/Notification.html":{},"classes/Notification-1.html":{},"classes/UpdateNotificationInput.html":{}}}],["enum/ticket",{"_index":2037,"title":{},"body":{"classes/CreateHelpDeskInput.html":{},"classes/HelpDeskFilterInput.html":{},"injectables/HelpDeskService.html":{},"classes/HelpDeskTicket.html":{},"classes/TicketChild.html":{},"classes/UpdateHelpDeskInput.html":{}}}],["enum/types.enum",{"_index":2056,"title":{},"body":{"classes/CreateIntegrationInput.html":{},"classes/Integration.html":{},"injectables/IntegrationsService.html":{}}}],["enumerations",{"_index":4613,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums/announcement",{"_index":723,"title":{},"body":{"classes/Announcement.html":{},"classes/CreateAnnouncementInput.html":{}}}],["enums/application",{"_index":748,"title":{},"body":{"classes/AnnouncementApplicantsArgs.html":{},"classes/Applicant.html":{},"classes/ApplicantArgs.html":{},"classes/ApplicantState.html":{},"classes/Attachment.html":{},"classes/AttachmentSubmit.html":{},"interfaces/IAttachment.html":{},"classes/SelectApplicantsArgs.html":{},"classes/UpdateApplicantStateInput.html":{}}}],["enums/email",{"_index":81,"title":{},"body":{"classes/AWSSESProvider.html":{},"injectables/EmailsService.html":{},"classes/SendGridProvider.html":{},"classes/TemplateInput.html":{}}}],["enums/form",{"_index":2000,"title":{},"body":{"classes/CreateFormInput.html":{},"classes/FindFormsArgs.html":{},"classes/Form.html":{},"classes/UpdateFormInput.html":{}}}],["enums/invitation",{"_index":2998,"title":{},"body":{"classes/Invitation.html":{},"injectables/InvitationsService.html":{}}}],["enums/resources",{"_index":2109,"title":{},"body":{"classes/CreateResourceInput.html":{},"classes/Resource.html":{}}}],["enums/valid",{"_index":1164,"title":{},"body":{"injectables/AuthService.html":{},"classes/SignUpInput.html":{}}}],["env",{"_index":4591,"title":{},"body":{"dependencies.html":{}}}],["envconfiguration",{"_index":848,"title":{},"body":{"modules/AppModule.html":{}}}],["envfilepath",{"_index":917,"title":{},"body":{"modules/AppModule.html":{}}}],["envi&oacute",{"_index":4553,"title":{},"body":{"injectables/UsersService.html":{}}}],["error",{"_index":500,"title":{},"body":{"injectables/ActivitiesConfigService.html":{},"injectables/AuthService.html":{},"injectables/AwsService.html":{},"injectables/HelpDeskService.html":{},"injectables/IntegrationsService.html":{},"injectables/NotificationsService.html":{},"injectables/TicketCategoriesService.html":{},"injectables/UsersService.html":{}}}],["error('failed",{"_index":1184,"title":{},"body":{"injectables/AuthService.html":{}}}],["es",{"_index":4549,"title":{},"body":{"injectables/UsersService.html":{}}}],["específico",{"_index":1576,"title":{},"body":{"injectables/ConfigEvaluationsService.html":{},"injectables/UserLogService.html":{}}}],["esperadas",{"_index":4910,"title":{},"body":{"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["este",{"_index":4547,"title":{},"body":{"injectables/UsersService.html":{}}}],["etc",{"_index":1504,"title":{},"body":{"classes/ConfigEvaluation.html":{}}}],["evaluaciones",{"_index":4918,"title":{},"body":{"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["evaluación",{"_index":4921,"title":{},"body":{"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["evaluado",{"_index":2334,"title":{},"body":{"classes/Evaluation.html":{},"miscellaneous/enumerations.html":{}}}],["evaluar",{"_index":4726,"title":{},"body":{"miscellaneous/enumerations.html":{},"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["evaluated",{"_index":1505,"title":{},"body":{"classes/ConfigEvaluation.html":{},"classes/CreateConfigEvaluationInput.html":{},"classes/Evaluation.html":{}}}],["evaluation",{"_index":1543,"title":{"classes/Evaluation.html":{}},"body":{"injectables/ConfigEvaluationsService.html":{},"classes/Evaluation.html":{},"modules/EvaluationsModule.html":{}}}],["evaluation.entity",{"_index":1533,"title":{},"body":{"modules/ConfigEvaluationsModule.html":{},"injectables/ConfigEvaluationsService.html":{}}}],["evaluation.entity.ts",{"_index":1502,"title":{},"body":{"classes/ConfigEvaluation.html":{}}}],["evaluation.entity.ts:11",{"_index":1508,"title":{},"body":{"classes/ConfigEvaluation.html":{}}}],["evaluation.entity.ts:15",{"_index":1518,"title":{},"body":{"classes/ConfigEvaluation.html":{}}}],["evaluation.entity.ts:21",{"_index":1510,"title":{},"body":{"classes/ConfigEvaluation.html":{}}}],["evaluation.entity.ts:25",{"_index":1512,"title":{},"body":{"classes/ConfigEvaluation.html":{}}}],["evaluation.entity.ts:29",{"_index":1516,"title":{},"body":{"classes/ConfigEvaluation.html":{}}}],["evaluation.entity.ts:33",{"_index":1513,"title":{},"body":{"classes/ConfigEvaluation.html":{}}}],["evaluation.entity.ts:37",{"_index":1515,"title":{},"body":{"classes/ConfigEvaluation.html":{}}}],["evaluation.entity.ts:41",{"_index":1517,"title":{},"body":{"classes/ConfigEvaluation.html":{}}}],["evaluation.entity.ts:45",{"_index":1511,"title":{},"body":{"classes/ConfigEvaluation.html":{}}}],["evaluation.entity.ts:52",{"_index":1520,"title":{},"body":{"classes/ConfigEvaluation.html":{}}}],["evaluation.entity.ts:55",{"_index":1509,"title":{},"body":{"classes/ConfigEvaluation.html":{}}}],["evaluation.entity.ts:58",{"_index":1519,"title":{},"body":{"classes/ConfigEvaluation.html":{}}}],["evaluation.entity.ts:62",{"_index":1514,"title":{},"body":{"classes/ConfigEvaluation.html":{}}}],["evaluation.input",{"_index":1555,"title":{},"body":{"injectables/ConfigEvaluationsService.html":{},"classes/UpdateConfigEvaluationInput.html":{}}}],["evaluation.input.ts",{"_index":1933,"title":{},"body":{"classes/CreateConfigEvaluationInput.html":{},"classes/UpdateConfigEvaluationInput.html":{}}}],["evaluation.input.ts:10",{"_index":1941,"title":{},"body":{"classes/CreateConfigEvaluationInput.html":{}}}],["evaluation.input.ts:13",{"_index":4123,"title":{},"body":{"classes/UpdateConfigEvaluationInput.html":{}}}],["evaluation.input.ts:14",{"_index":1934,"title":{},"body":{"classes/CreateConfigEvaluationInput.html":{}}}],["evaluation.input.ts:17",{"_index":4128,"title":{},"body":{"classes/UpdateConfigEvaluationInput.html":{}}}],["evaluation.input.ts:18",{"_index":1939,"title":{},"body":{"classes/CreateConfigEvaluationInput.html":{}}}],["evaluation.input.ts:21",{"_index":4124,"title":{},"body":{"classes/UpdateConfigEvaluationInput.html":{}}}],["evaluation.input.ts:22",{"_index":1936,"title":{},"body":{"classes/CreateConfigEvaluationInput.html":{}}}],["evaluation.input.ts:25",{"_index":4127,"title":{},"body":{"classes/UpdateConfigEvaluationInput.html":{}}}],["evaluation.input.ts:26",{"_index":1937,"title":{},"body":{"classes/CreateConfigEvaluationInput.html":{}}}],["evaluation.input.ts:29",{"_index":4125,"title":{},"body":{"classes/UpdateConfigEvaluationInput.html":{}}}],["evaluation.input.ts:30",{"_index":1938,"title":{},"body":{"classes/CreateConfigEvaluationInput.html":{}}}],["evaluation.input.ts:33",{"_index":4126,"title":{},"body":{"classes/UpdateConfigEvaluationInput.html":{}}}],["evaluation.input.ts:34",{"_index":1940,"title":{},"body":{"classes/CreateConfigEvaluationInput.html":{}}}],["evaluation.input.ts:38",{"_index":1935,"title":{},"body":{"classes/CreateConfigEvaluationInput.html":{}}}],["evaluation.name",{"_index":2348,"title":{},"body":{"modules/EvaluationsModule.html":{}}}],["evaluation_create",{"_index":4719,"title":{},"body":{"miscellaneous/enumerations.html":{},"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["evaluation_edit",{"_index":4720,"title":{},"body":{"miscellaneous/enumerations.html":{},"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["evaluation_edit_docs",{"_index":4721,"title":{},"body":{"miscellaneous/enumerations.html":{},"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["evaluation_view",{"_index":4718,"title":{},"body":{"miscellaneous/enumerations.html":{},"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["evaluations",{"_index":1503,"title":{},"body":{"classes/ConfigEvaluation.html":{},"injectables/ConfigEvaluationsService.html":{},"classes/Evaluation.html":{},"miscellaneous/enumerations.html":{},"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["evaluations.module",{"_index":886,"title":{},"body":{"modules/AppModule.html":{},"modules/EvaluationsModule.html":{}}}],["evaluations.module.ts",{"_index":1528,"title":{},"body":{"modules/ConfigEvaluationsModule.html":{}}}],["evaluations.resolver",{"_index":1531,"title":{},"body":{"modules/ConfigEvaluationsModule.html":{},"modules/EvaluationsModule.html":{}}}],["evaluations.service",{"_index":1529,"title":{},"body":{"modules/ConfigEvaluationsModule.html":{},"modules/EvaluationsModule.html":{}}}],["evaluations.service.ts",{"_index":1535,"title":{},"body":{"injectables/ConfigEvaluationsService.html":{}}}],["evaluations.service.ts:11",{"_index":1538,"title":{},"body":{"injectables/ConfigEvaluationsService.html":{}}}],["evaluations.service.ts:20",{"_index":1542,"title":{},"body":{"injectables/ConfigEvaluationsService.html":{}}}],["evaluations.service.ts:27",{"_index":1545,"title":{},"body":{"injectables/ConfigEvaluationsService.html":{}}}],["evaluations.service.ts:45",{"_index":1546,"title":{},"body":{"injectables/ConfigEvaluationsService.html":{}}}],["evaluations.service.ts:52",{"_index":1547,"title":{},"body":{"injectables/ConfigEvaluationsService.html":{}}}],["evaluations.service.ts:59",{"_index":1549,"title":{},"body":{"injectables/ConfigEvaluationsService.html":{}}}],["evaluations.service.ts:81",{"_index":1554,"title":{},"body":{"injectables/ConfigEvaluationsService.html":{}}}],["evaluations.service.ts:99",{"_index":1552,"title":{},"body":{"injectables/ConfigEvaluationsService.html":{}}}],["evaluations/config",{"_index":885,"title":{},"body":{"modules/AppModule.html":{},"modules/ConfigEvaluationsModule.html":{},"injectables/ConfigEvaluationsService.html":{},"modules/EvaluationsModule.html":{}}}],["evaluations/dto/create",{"_index":1932,"title":{},"body":{"classes/CreateConfigEvaluationInput.html":{}}}],["evaluations/dto/update",{"_index":4122,"title":{},"body":{"classes/UpdateConfigEvaluationInput.html":{}}}],["evaluations/entities/config",{"_index":1501,"title":{},"body":{"classes/ConfigEvaluation.html":{}}}],["evaluations/evaluations.module",{"_index":884,"title":{},"body":{"modules/AppModule.html":{}}}],["evaluationschema",{"_index":2337,"title":{},"body":{"classes/Evaluation.html":{},"modules/EvaluationsModule.html":{}}}],["evaluationsmodule",{"_index":822,"title":{"modules/EvaluationsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/EvaluationsModule.html":{},"modules.html":{},"overview.html":{}}}],["evaluationsresolver",{"_index":2345,"title":{},"body":{"modules/EvaluationsModule.html":{}}}],["evaluationsservice",{"_index":2343,"title":{},"body":{"modules/EvaluationsModule.html":{},"overview.html":{}}}],["event",{"_index":60,"title":{"classes/Event.html":{}},"body":{"classes/AWSSESProvider.html":{},"classes/Acta.html":{},"injectables/ActaService.html":{},"injectables/ActivitiesConfigService.html":{},"classes/CreateActaInput.html":{},"classes/CreateParticipationEventInput.html":{},"interfaces/EmailsRepository.html":{},"injectables/EmailsService.html":{},"classes/Event.html":{},"modules/EventsModule.html":{},"classes/ExpertEventLink.html":{},"injectables/NotificationsService.html":{},"classes/ParticipantEventLink.html":{},"classes/ParticipationEvent.html":{},"injectables/ParticipationEventsService.html":{},"classes/SendGridProvider.html":{},"classes/TeamCoachLink.html":{},"injectables/TypesEventsService.html":{}}}],["event._id.tostring",{"_index":590,"title":{},"body":{"injectables/ActivitiesConfigService.html":{},"classes/SendGridProvider.html":{}}}],["event.description",{"_index":3566,"title":{},"body":{"classes/SendGridProvider.html":{}}}],["event.endat",{"_index":3564,"title":{},"body":{"classes/SendGridProvider.html":{}}}],["event.entity",{"_index":479,"title":{},"body":{"injectables/ActivitiesConfigService.html":{},"modules/ParticipationEventsModule.html":{},"injectables/ParticipationEventsService.html":{},"modules/TypesEventsModule.html":{},"injectables/TypesEventsService.html":{}}}],["event.entity.ts",{"_index":3272,"title":{},"body":{"classes/ParticipationEvent.html":{},"classes/TypesEvent.html":{}}}],["event.entity.ts:12",{"_index":3274,"title":{},"body":{"classes/ParticipationEvent.html":{},"classes/TypesEvent.html":{}}}],["event.entity.ts:16",{"_index":3278,"title":{},"body":{"classes/ParticipationEvent.html":{},"classes/TypesEvent.html":{}}}],["event.entity.ts:20",{"_index":3279,"title":{},"body":{"classes/ParticipationEvent.html":{},"classes/TypesEvent.html":{}}}],["event.entity.ts:24",{"_index":3276,"title":{},"body":{"classes/ParticipationEvent.html":{},"classes/TypesEvent.html":{}}}],["event.entity.ts:28",{"_index":3277,"title":{},"body":{"classes/ParticipationEvent.html":{},"classes/TypesEvent.html":{}}}],["event.entity.ts:31",{"_index":3275,"title":{},"body":{"classes/ParticipationEvent.html":{}}}],["event.entity.ts:32",{"_index":4026,"title":{},"body":{"classes/TypesEvent.html":{}}}],["event.entity.ts:34",{"_index":3280,"title":{},"body":{"classes/ParticipationEvent.html":{}}}],["event.entity.ts:36",{"_index":4024,"title":{},"body":{"classes/TypesEvent.html":{}}}],["event.entity.ts:40",{"_index":4025,"title":{},"body":{"classes/TypesEvent.html":{}}}],["event.entity.ts:43",{"_index":4023,"title":{},"body":{"classes/TypesEvent.html":{}}}],["event.entity.ts:46",{"_index":4027,"title":{},"body":{"classes/TypesEvent.html":{}}}],["event.input",{"_index":3225,"title":{},"body":{"injectables/NotificationsService.html":{},"injectables/ParticipationEventsService.html":{},"injectables/TypesEventsService.html":{},"classes/UpdateEventInput.html":{},"classes/UpdateParticipationEventInput.html":{},"classes/UpdateTypesEventInput.html":{}}}],["event.input.ts",{"_index":1954,"title":{},"body":{"classes/CreateEventInput.html":{},"classes/CreateParticipationEventInput.html":{},"classes/CreateTypesEventInput.html":{},"classes/UpdateEventInput.html":{},"classes/UpdateParticipationEventInput.html":{},"classes/UpdateTypesEventInput.html":{}}}],["event.input.ts:11",{"_index":1964,"title":{},"body":{"classes/CreateEventInput.html":{},"classes/CreateParticipationEventInput.html":{},"classes/CreateTypesEventInput.html":{}}}],["event.input.ts:12",{"_index":4234,"title":{},"body":{"classes/UpdateTypesEventInput.html":{}}}],["event.input.ts:14",{"_index":4193,"title":{},"body":{"classes/UpdateParticipationEventInput.html":{}}}],["event.input.ts:15",{"_index":1970,"title":{},"body":{"classes/CreateEventInput.html":{},"classes/CreateParticipationEventInput.html":{},"classes/CreateTypesEventInput.html":{}}}],["event.input.ts:16",{"_index":4236,"title":{},"body":{"classes/UpdateTypesEventInput.html":{}}}],["event.input.ts:17",{"_index":4146,"title":{},"body":{"classes/UpdateEventInput.html":{}}}],["event.input.ts:18",{"_index":4194,"title":{},"body":{"classes/UpdateParticipationEventInput.html":{}}}],["event.input.ts:19",{"_index":1957,"title":{},"body":{"classes/CreateEventInput.html":{},"classes/CreateParticipationEventInput.html":{},"classes/CreateTypesEventInput.html":{}}}],["event.input.ts:20",{"_index":4237,"title":{},"body":{"classes/UpdateTypesEventInput.html":{}}}],["event.input.ts:21",{"_index":4153,"title":{},"body":{"classes/UpdateEventInput.html":{}}}],["event.input.ts:23",{"_index":1959,"title":{},"body":{"classes/CreateEventInput.html":{},"classes/CreateParticipationEventInput.html":{}}}],["event.input.ts:24",{"_index":4235,"title":{},"body":{"classes/UpdateTypesEventInput.html":{}}}],["event.input.ts:25",{"_index":4147,"title":{},"body":{"classes/UpdateEventInput.html":{}}}],["event.input.ts:27",{"_index":1967,"title":{},"body":{"classes/CreateEventInput.html":{}}}],["event.input.ts:29",{"_index":4150,"title":{},"body":{"classes/UpdateEventInput.html":{}}}],["event.input.ts:31",{"_index":1960,"title":{},"body":{"classes/CreateEventInput.html":{}}}],["event.input.ts:33",{"_index":4155,"title":{},"body":{"classes/UpdateEventInput.html":{}}}],["event.input.ts:35",{"_index":1963,"title":{},"body":{"classes/CreateEventInput.html":{}}}],["event.input.ts:37",{"_index":4148,"title":{},"body":{"classes/UpdateEventInput.html":{}}}],["event.input.ts:39",{"_index":1958,"title":{},"body":{"classes/CreateEventInput.html":{}}}],["event.input.ts:41",{"_index":4152,"title":{},"body":{"classes/UpdateEventInput.html":{}}}],["event.input.ts:43",{"_index":1962,"title":{},"body":{"classes/CreateEventInput.html":{}}}],["event.input.ts:45",{"_index":4151,"title":{},"body":{"classes/UpdateEventInput.html":{}}}],["event.input.ts:47",{"_index":1969,"title":{},"body":{"classes/CreateEventInput.html":{}}}],["event.input.ts:49",{"_index":4149,"title":{},"body":{"classes/UpdateEventInput.html":{}}}],["event.input.ts:51",{"_index":1966,"title":{},"body":{"classes/CreateEventInput.html":{}}}],["event.input.ts:53",{"_index":4156,"title":{},"body":{"classes/UpdateEventInput.html":{}}}],["event.input.ts:57",{"_index":4154,"title":{},"body":{"classes/UpdateEventInput.html":{}}}],["event.name",{"_index":3565,"title":{},"body":{"classes/SendGridProvider.html":{}}}],["event.startat",{"_index":3563,"title":{},"body":{"classes/SendGridProvider.html":{}}}],["eventemitter2",{"_index":4484,"title":{},"body":{"injectables/UsersService.html":{}}}],["eventemittermodule",{"_index":902,"title":{},"body":{"modules/AppModule.html":{}}}],["eventemittermodule.forroot",{"_index":950,"title":{},"body":{"modules/AppModule.html":{}}}],["evententity",{"_index":431,"title":{},"body":{"injectables/ActivitiesConfigService.html":{},"modules/EventsModule.html":{},"injectables/NotificationsService.html":{}}}],["evententity.name",{"_index":2388,"title":{},"body":{"modules/EventsModule.html":{}}}],["evento",{"_index":4897,"title":{},"body":{"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["eventos",{"_index":4894,"title":{},"body":{"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["events",{"_index":194,"title":{},"body":{"classes/Acta.html":{},"injectables/ActaService.html":{},"injectables/ActivitiesConfigService.html":{},"classes/Event.html":{},"classes/ExpertEventLink.html":{},"classes/ParticipantEventLink.html":{},"classes/TeamCoachLink.html":{},"classes/TypesEvent.html":{},"injectables/TypesEventsService.html":{},"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["events.default",{"_index":466,"title":{},"body":{"injectables/ActivitiesConfigService.html":{},"injectables/TypesEventsService.html":{}}}],["events.default.ts",{"_index":4958,"title":{},"body":{"miscellaneous/variables.html":{}}}],["events.filter",{"_index":579,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["events.map((i",{"_index":323,"title":{},"body":{"injectables/ActaService.html":{}}}],["events.module",{"_index":395,"title":{},"body":{"modules/ActivitiesConfigModule.html":{},"modules/AppModule.html":{},"modules/EventsModule.html":{}}}],["events.module.ts",{"_index":3288,"title":{},"body":{"modules/ParticipationEventsModule.html":{},"modules/TypesEventsModule.html":{}}}],["events.resolver",{"_index":2381,"title":{},"body":{"modules/EventsModule.html":{},"modules/ParticipationEventsModule.html":{},"modules/TypesEventsModule.html":{}}}],["events.service",{"_index":477,"title":{},"body":{"injectables/ActivitiesConfigService.html":{},"modules/EventsModule.html":{},"modules/ParticipationEventsModule.html":{},"modules/TypesEventsModule.html":{}}}],["events.service.ts",{"_index":3292,"title":{},"body":{"injectables/ParticipationEventsService.html":{},"injectables/TypesEventsService.html":{}}}],["events.service.ts:17",{"_index":4044,"title":{},"body":{"injectables/TypesEventsService.html":{}}}],["events.service.ts:18",{"_index":3298,"title":{},"body":{"injectables/ParticipationEventsService.html":{}}}],["events.service.ts:25",{"_index":3300,"title":{},"body":{"injectables/ParticipationEventsService.html":{}}}],["events.service.ts:27",{"_index":4040,"title":{},"body":{"injectables/TypesEventsService.html":{}}}],["events.service.ts:32",{"_index":3305,"title":{},"body":{"injectables/ParticipationEventsService.html":{}}}],["events.service.ts:34",{"_index":4042,"title":{},"body":{"injectables/TypesEventsService.html":{}}}],["events.service.ts:39",{"_index":3302,"title":{},"body":{"injectables/ParticipationEventsService.html":{}}}],["events.service.ts:41",{"_index":4043,"title":{},"body":{"injectables/TypesEventsService.html":{}}}],["events.service.ts:46",{"_index":3304,"title":{},"body":{"injectables/ParticipationEventsService.html":{}}}],["events.service.ts:48",{"_index":4048,"title":{},"body":{"injectables/TypesEventsService.html":{}}}],["events.service.ts:53",{"_index":3307,"title":{},"body":{"injectables/ParticipationEventsService.html":{}}}],["events.service.ts:59",{"_index":4045,"title":{},"body":{"injectables/TypesEventsService.html":{}}}],["events.service.ts:9",{"_index":3295,"title":{},"body":{"injectables/ParticipationEventsService.html":{},"injectables/TypesEventsService.html":{}}}],["events/dto/create",{"_index":2082,"title":{},"body":{"classes/CreateParticipationEventInput.html":{},"classes/CreateTypesEventInput.html":{}}}],["events/dto/update",{"_index":4192,"title":{},"body":{"classes/UpdateParticipationEventInput.html":{},"classes/UpdateTypesEventInput.html":{}}}],["events/entities/participation",{"_index":3271,"title":{},"body":{"classes/ParticipationEvent.html":{}}}],["events/entities/types",{"_index":478,"title":{},"body":{"injectables/ActivitiesConfigService.html":{},"classes/TypesEvent.html":{}}}],["events/events.module",{"_index":880,"title":{},"body":{"modules/AppModule.html":{}}}],["events/model/type",{"_index":465,"title":{},"body":{"injectables/ActivitiesConfigService.html":{},"miscellaneous/variables.html":{}}}],["events/participation",{"_index":2385,"title":{},"body":{"modules/EventsModule.html":{},"modules/ParticipationEventsModule.html":{},"injectables/ParticipationEventsService.html":{}}}],["events/types",{"_index":394,"title":{},"body":{"modules/ActivitiesConfigModule.html":{},"injectables/ActivitiesConfigService.html":{},"modules/AppModule.html":{},"modules/TypesEventsModule.html":{},"injectables/TypesEventsService.html":{}}}],["events_create",{"_index":4707,"title":{},"body":{"miscellaneous/enumerations.html":{},"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["events_edit",{"_index":4708,"title":{},"body":{"miscellaneous/enumerations.html":{},"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["events_view",{"_index":4705,"title":{},"body":{"miscellaneous/enumerations.html":{},"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["eventsactivity",{"_index":578,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["eventsactivity.filter((i",{"_index":584,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["eventschema",{"_index":2372,"title":{},"body":{"classes/Event.html":{},"modules/EventsModule.html":{},"classes/ExpertEventLink.html":{},"classes/ParticipantEventLink.html":{},"classes/TeamCoachLink.html":{}}}],["eventsexpert",{"_index":583,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["eventsmodule",{"_index":396,"title":{"modules/EventsModule.html":{}},"body":{"modules/ActivitiesConfigModule.html":{},"modules/AppModule.html":{},"modules/ConfigurationAppModule.html":{},"modules/EventsModule.html":{},"modules.html":{},"overview.html":{}}}],["eventsresolver",{"_index":2380,"title":{},"body":{"modules/EventsModule.html":{}}}],["eventsservice",{"_index":414,"title":{},"body":{"injectables/ActivitiesConfigService.html":{},"injectables/ConfigurationAppService.html":{},"modules/EventsModule.html":{},"overview.html":{}}}],["eventupdate",{"_index":4646,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["ex",{"_index":143,"title":{},"body":{"classes/AWSSESProvider.html":{},"injectables/AuthService.html":{},"injectables/EmailsService.html":{},"injectables/InvitationsService.html":{},"classes/SendGridProvider.html":{}}}],["example",{"_index":4769,"title":{},"body":{"index.html":{}}}],["excel",{"_index":5113,"title":{},"body":{"miscellaneous/variables.html":{}}}],["exceljs",{"_index":2210,"title":{},"body":{"injectables/DownloadsService.html":{},"dependencies.html":{}}}],["excelutilities",{"_index":1393,"title":{},"body":{"injectables/BusinessService.html":{},"miscellaneous/variables.html":{}}}],["excelutilities.buildworkbookbuffer",{"_index":1477,"title":{},"body":{"injectables/BusinessService.html":{}}}],["excelutilities.parsedocumentstorows",{"_index":1470,"title":{},"body":{"injectables/BusinessService.html":{}}}],["exception",{"_index":146,"title":{},"body":{"classes/AWSSESProvider.html":{},"injectables/AuthCodeService.html":{},"injectables/AuthService.html":{},"injectables/EmailsService.html":{},"classes/SendGridProvider.html":{}}}],["exchangetoken",{"_index":1133,"title":{},"body":{"injectables/AuthService.html":{}}}],["exchangetoken(idtoken",{"_index":1146,"title":{},"body":{"injectables/AuthService.html":{}}}],["exclude",{"_index":1615,"title":{},"body":{"injectables/ConfigNotificationsService.html":{}}}],["excluded",{"_index":1630,"title":{},"body":{"injectables/ConfigNotificationsService.html":{},"classes/CreateConfigNotificationInput.html":{}}}],["excludeuserfortype",{"_index":1602,"title":{},"body":{"injectables/ConfigNotificationsService.html":{}}}],["excludeuserfortype(type",{"_index":1612,"title":{},"body":{"injectables/ConfigNotificationsService.html":{}}}],["executioncontext",{"_index":1105,"title":{},"body":{"guards/AuthGuard.html":{},"guards/GqlAuthGuard.html":{},"miscellaneous/variables.html":{}}}],["exist",{"_index":804,"title":{},"body":{"injectables/AnnouncementsService.html":{},"injectables/UsersService.html":{}}}],["existingannouncement",{"_index":798,"title":{},"body":{"injectables/AnnouncementsService.html":{}}}],["exists",{"_index":2179,"title":{},"body":{"classes/Download.html":{},"injectables/FormSubscriptionService.html":{},"injectables/InvitationsService.html":{},"injectables/UserLogService.html":{}}}],["exito",{"_index":681,"title":{},"body":{"classes/Announcement.html":{}}}],["exittext",{"_index":645,"title":{},"body":{"classes/Announcement.html":{},"classes/UpdateAnnouncementInput.html":{}}}],["expert",{"_index":428,"title":{"classes/Expert.html":{}},"body":{"injectables/ActivitiesConfigService.html":{},"classes/Event.html":{},"classes/Expert.html":{},"classes/ExpertEventLink.html":{},"modules/ExpertModule.html":{},"injectables/NotificationsService.html":{},"classes/ParticipantEventLink.html":{},"classes/PhaseExpertRelationship.html":{},"classes/StartupLink.html":{},"classes/TeamCoachLink.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["expert._id.tostring",{"_index":582,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["expert.args.ts",{"_index":3123,"title":{},"body":{"classes/LinkExpertsToPhaseArgs.html":{},"classes/LinkStartupsExpertsArgs.html":{}}}],["expert.args.ts:11",{"_index":3127,"title":{},"body":{"classes/LinkExpertsToPhaseArgs.html":{}}}],["expert.args.ts:13",{"_index":3133,"title":{},"body":{"classes/LinkStartupsExpertsArgs.html":{}}}],["expert.args.ts:16",{"_index":3126,"title":{},"body":{"classes/LinkExpertsToPhaseArgs.html":{}}}],["expert.args.ts:18",{"_index":3134,"title":{},"body":{"classes/LinkStartupsExpertsArgs.html":{}}}],["expert.args.ts:20",{"_index":3125,"title":{},"body":{"classes/LinkExpertsToPhaseArgs.html":{}}}],["expert.args.ts:23",{"_index":3137,"title":{},"body":{"classes/LinkStartupsExpertsArgs.html":{}}}],["expert.input.ts",{"_index":4160,"title":{},"body":{"classes/UpdateExpertInput.html":{}}}],["expert.input.ts:10",{"_index":4161,"title":{},"body":{"classes/UpdateExpertInput.html":{}}}],["expert.input.ts:14",{"_index":4162,"title":{},"body":{"classes/UpdateExpertInput.html":{}}}],["expert.input.ts:18",{"_index":4163,"title":{},"body":{"classes/UpdateExpertInput.html":{}}}],["expert.name",{"_index":2417,"title":{},"body":{"modules/ExpertModule.html":{}}}],["expert.phases.find",{"_index":599,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["expert.resolver",{"_index":2415,"title":{},"body":{"modules/ExpertModule.html":{}}}],["expert.service",{"_index":2413,"title":{},"body":{"modules/ExpertModule.html":{}}}],["expert/expert.module",{"_index":873,"title":{},"body":{"modules/AppModule.html":{}}}],["experteventlink",{"_index":2357,"title":{"classes/ExpertEventLink.html":{}},"body":{"classes/Event.html":{},"classes/ExpertEventLink.html":{},"classes/ParticipantEventLink.html":{},"classes/TeamCoachLink.html":{}}}],["experteventsubmit",{"_index":1961,"title":{},"body":{"classes/CreateEventInput.html":{},"injectables/NotificationsService.html":{},"classes/UpdateEventInput.html":{}}}],["expertfocus",{"_index":2159,"title":{},"body":{"classes/CreateTypesEventInput.html":{},"classes/TypesEvent.html":{},"classes/UpdateTypesEventInput.html":{},"miscellaneous/variables.html":{}}}],["expertid",{"_index":3132,"title":{},"body":{"classes/LinkStartupsExpertsArgs.html":{},"injectables/NotificationsService.html":{}}}],["expertmodule",{"_index":387,"title":{"modules/ExpertModule.html":{}},"body":{"modules/ActivitiesConfigModule.html":{},"modules/AppModule.html":{},"modules/ApplicantModule.html":{},"modules/EntrepreneurModule.html":{},"modules/EvaluationsModule.html":{},"modules/EventsModule.html":{},"modules/ExpertModule.html":{},"modules/NotificationsModule.html":{},"modules/PhasesModule.html":{},"modules/StartupModule.html":{},"modules.html":{},"overview.html":{}}}],["experto",{"_index":4827,"title":{},"body":{"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["expertos",{"_index":4825,"title":{},"body":{"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["expertresolver",{"_index":2414,"title":{},"body":{"modules/ExpertModule.html":{}}}],["experts",{"_index":346,"title":{},"body":{"classes/ActivitiesConfig.html":{},"injectables/ActivitiesConfigService.html":{},"classes/Assign.html":{},"classes/CreateEventInput.html":{},"classes/Event.html":{},"classes/ExpertEventLink.html":{},"classes/LinkExpertsToPhaseArgs.html":{},"classes/ParticipantEventLink.html":{},"classes/TeamCoachLink.html":{},"classes/TermsOfUse.html":{},"classes/UpdateActivitiesConfigInput.html":{},"classes/UpdateEventInput.html":{},"classes/activities.html":{},"miscellaneous/enumerations.html":{},"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["expertschema",{"_index":2403,"title":{},"body":{"classes/Expert.html":{},"modules/ExpertModule.html":{},"classes/PhaseExpertRelationship.html":{},"classes/StartupLink.html":{}}}],["expertservice",{"_index":410,"title":{},"body":{"injectables/ActivitiesConfigService.html":{},"modules/ExpertModule.html":{},"overview.html":{}}}],["expertsservice",{"_index":409,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["expired",{"_index":1088,"title":{},"body":{"injectables/AuthCodeService.html":{},"injectables/AuthService.html":{},"classes/Invitation.html":{},"injectables/InvitationsService.html":{}}}],["expiredate",{"_index":3000,"title":{},"body":{"classes/Invitation.html":{}}}],["expiredate.setdate(expiredate.getdate",{"_index":3002,"title":{},"body":{"classes/Invitation.html":{}}}],["expires",{"_index":1054,"title":{},"body":{"classes/AuthCode.html":{}}}],["expires_in",{"_index":2892,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["expiresat",{"_index":2977,"title":{},"body":{"classes/Invitation.html":{},"injectables/InvitationsService.html":{}}}],["expiresin",{"_index":1262,"title":{},"body":{"injectables/AwsService.html":{}}}],["export",{"_index":90,"title":{},"body":{"classes/AWSSESProvider.html":{},"classes/AcceptInvitationDto.html":{},"classes/Acta.html":{},"modules/ActaModule.html":{},"injectables/ActaService.html":{},"classes/ActivitiesConfig.html":{},"modules/ActivitiesConfigModule.html":{},"injectables/ActivitiesConfigService.html":{},"classes/AddTableJoinInput.html":{},"classes/Announcement.html":{},"classes/AnnouncementApplicantArgs.html":{},"classes/AnnouncementApplicantsArgs.html":{},"modules/AnnouncementsModule.html":{},"injectables/AnnouncementsService.html":{},"modules/AppModule.html":{},"classes/Applicant.html":{},"classes/ApplicantArgs.html":{},"modules/ApplicantModule.html":{},"classes/ApplicantState.html":{},"classes/Assign.html":{},"classes/Attachment.html":{},"classes/AttachmentSubmit.html":{},"classes/AuthCode.html":{},"modules/AuthCodeModule.html":{},"injectables/AuthCodeService.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/AwsService.html":{},"classes/Business.html":{},"modules/BusinessModule.html":{},"classes/BusinessRelationship.html":{},"injectables/BusinessService.html":{},"classes/CloseFormSubscriptionArgs.html":{},"classes/ColumnGroup.html":{},"classes/ConfigEvaluation.html":{},"modules/ConfigEvaluationsModule.html":{},"injectables/ConfigEvaluationsService.html":{},"modules/ConfigNotificationsModule.html":{},"injectables/ConfigNotificationsService.html":{},"classes/ConfigurationApp.html":{},"modules/ConfigurationAppModule.html":{},"injectables/ConfigurationAppService.html":{},"classes/ContactArgs.html":{},"classes/ContactServiceLink.html":{},"classes/ContactServicesInput.html":{},"classes/Content.html":{},"modules/ContentModule.html":{},"injectables/ContentService.html":{},"classes/CreateActaInput.html":{},"classes/CreateActivitiesConfigInput.html":{},"classes/CreateAnnouncementInput.html":{},"classes/CreateConfigEvaluationInput.html":{},"classes/CreateConfigNotificationInput.html":{},"classes/CreateContentInput.html":{},"classes/CreateEventInput.html":{},"classes/CreateFormInput.html":{},"classes/CreateFormSubscriptionInput.html":{},"classes/CreateFormTagInput.html":{},"classes/CreateHelpDeskInput.html":{},"classes/CreateIntegrationInput.html":{},"classes/CreateInvitationArgs.html":{},"classes/CreateNotificationInput.html":{},"classes/CreateParticipationEventInput.html":{},"classes/CreatePhaseInput.html":{},"classes/CreateResourceInput.html":{},"classes/CreateResourcesReplyInput.html":{},"classes/CreateRolInput.html":{},"classes/CreateSiteInput.html":{},"classes/CreateStageInput.html":{},"classes/CreateTableConfigInput.html":{},"classes/CreateTableInput.html":{},"classes/CreateTypesEventInput.html":{},"classes/CreateUserInput.html":{},"classes/CreateUserLogInput.html":{},"classes/Download.html":{},"modules/DownloadsModule.html":{},"injectables/DownloadsService.html":{},"controllers/EmailsController.html":{},"modules/EmailsModule.html":{},"interfaces/EmailsRepository.html":{},"injectables/EmailsService.html":{},"classes/Entrepreneur.html":{},"modules/EntrepreneurModule.html":{},"classes/EntrepreneurRelationship.html":{},"classes/EntrepreneurRelationship-1.html":{},"classes/EntrepreneurStartupArgs.html":{},"classes/Evaluation.html":{},"modules/EvaluationsModule.html":{},"classes/Event.html":{},"modules/EventsModule.html":{},"classes/Expert.html":{},"classes/ExpertEventLink.html":{},"modules/ExpertModule.html":{},"classes/FindFormsArgs.html":{},"classes/FindInvitationArgs.html":{},"classes/FindUsersArgs.html":{},"classes/Form.html":{},"classes/FormSubmission.html":{},"classes/FormSubmissionFiles.html":{},"classes/FormSubscription.html":{},"injectables/FormSubscriptionService.html":{},"classes/FormTag.html":{},"injectables/FormTagService.html":{},"modules/FormsModule.html":{},"injectables/FormsService.html":{},"classes/GetSubmittedFilesArgs.html":{},"guards/GqlAuthGuard.html":{},"classes/HelpDeskFilterInput.html":{},"modules/HelpDeskModule.html":{},"injectables/HelpDeskService.html":{},"classes/HelpDeskTicket.html":{},"classes/Hours.html":{},"interfaces/IAttachment.html":{},"classes/Integration.html":{},"modules/IntegrationsModule.html":{},"injectables/IntegrationsService.html":{},"classes/Invitation.html":{},"controllers/InvitationsController.html":{},"modules/InvitationsModule.html":{},"injectables/InvitationsService.html":{},"classes/LastContentOutput.html":{},"classes/LinkExpertsToPhaseArgs.html":{},"classes/LinkStartupToPhaseArgs.html":{},"classes/LinkStartupsExpertsArgs.html":{},"classes/LinkWithTargetsArgs.html":{},"classes/LinkWithTargetsByRequestArgs.html":{},"modules/LoggerModule.html":{},"classes/Notification.html":{},"classes/Notification-1.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"classes/OthersInput.html":{},"classes/ParticipantEventLink.html":{},"classes/ParticipationEvent.html":{},"modules/ParticipationEventsModule.html":{},"injectables/ParticipationEventsService.html":{},"classes/Phase.html":{},"classes/PhaseExpertRelationship.html":{},"classes/PhaseRelationship.html":{},"modules/PhasesModule.html":{},"classes/Rating.html":{},"classes/RemoveTableJoinInput.html":{},"classes/Resource.html":{},"modules/ResourcesModule.html":{},"modules/ResourcesRepliesModule.html":{},"classes/ResourcesReply.html":{},"injectables/ResourcesService.html":{},"classes/Rol.html":{},"modules/RolModule.html":{},"injectables/RolService.html":{},"classes/SearchBatchInput.html":{},"classes/SelectApplicantsArgs.html":{},"classes/SendEmailInput.html":{},"classes/SendGridProvider.html":{},"classes/SignUpInput.html":{},"classes/Site.html":{},"modules/SitesModule.html":{},"injectables/SitesService.html":{},"classes/Stage.html":{},"modules/StagesModule.html":{},"injectables/StagesService.html":{},"classes/Startup.html":{},"classes/StartupLink.html":{},"modules/StartupModule.html":{},"classes/StartupRelationship.html":{},"controllers/StorageController.html":{},"modules/StorageModule.html":{},"classes/StorageService.html":{},"classes/SubmitAnnouncementDocInput.html":{},"classes/SubmitFileInput.html":{},"classes/SubmitFormSubscriptionArgs.html":{},"classes/Table.html":{},"classes/TableConfig.html":{},"injectables/TableConfigService.html":{},"classes/TableJoin.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"classes/TeamCoachLink.html":{},"classes/TemplateInput.html":{},"classes/TermsOfUse.html":{},"modules/TermsOfUseModule.html":{},"injectables/TermsOfUseService.html":{},"modules/TicketCategoriesModule.html":{},"injectables/TicketCategoriesService.html":{},"classes/TicketCategory.html":{},"classes/TicketChild.html":{},"classes/TypesEvent.html":{},"modules/TypesEventsModule.html":{},"injectables/TypesEventsService.html":{},"classes/TypesNotification.html":{},"modules/TypesNotificationsModule.html":{},"injectables/TypesNotificationsService.html":{},"classes/UpdateActaInput.html":{},"classes/UpdateActivitiesConfigInput.html":{},"classes/UpdateAnnouncementInput.html":{},"classes/UpdateApplicantInput.html":{},"classes/UpdateApplicantStateInput.html":{},"classes/UpdateConfigEvaluationInput.html":{},"classes/UpdateConfigurationAppInput.html":{},"classes/UpdateContentInput.html":{},"classes/UpdateEventInput.html":{},"classes/UpdateExpertInput.html":{},"classes/UpdateFormInput.html":{},"classes/UpdateFormTagInput.html":{},"classes/UpdateHelpDeskInput.html":{},"classes/UpdateIntegrationInput.html":{},"classes/UpdateNotificationInput.html":{},"classes/UpdateParticipationEventInput.html":{},"classes/UpdatePhaseInput.html":{},"classes/UpdateResourceInput.html":{},"classes/UpdateResourcesReplyInput.html":{},"classes/UpdateRolInput.html":{},"classes/UpdateSiteInput.html":{},"classes/UpdateStageInput.html":{},"classes/UpdateTableConfigInput.html":{},"classes/UpdateTermsOfUseInput.html":{},"classes/UpdateTypesEventInput.html":{},"classes/UpdateUserConfigInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"classes/UserConfig.html":{},"modules/UserConfigModule.html":{},"injectables/UserConfigService.html":{},"classes/UserLog.html":{},"modules/UserLogModule.html":{},"injectables/UserLogService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/activities.html":{},"interfaces/item_permission.html":{}}}],["exports",{"_index":257,"title":{},"body":{"modules/ActaModule.html":{},"modules/ActivitiesConfigModule.html":{},"modules/AnnouncementsModule.html":{},"modules/AppModule.html":{},"modules/ApplicantModule.html":{},"modules/AuthCodeModule.html":{},"modules/AuthModule.html":{},"modules/BusinessModule.html":{},"modules/ConfigEvaluationsModule.html":{},"modules/ConfigNotificationsModule.html":{},"modules/ConfigurationAppModule.html":{},"modules/ContentModule.html":{},"modules/DownloadsModule.html":{},"modules/EmailsModule.html":{},"modules/EntrepreneurModule.html":{},"modules/EvaluationsModule.html":{},"modules/EventsModule.html":{},"modules/ExpertModule.html":{},"modules/FormsModule.html":{},"modules/HelpDeskModule.html":{},"modules/IntegrationsModule.html":{},"modules/InvitationsModule.html":{},"modules/LoggerModule.html":{},"modules/NotificationsModule.html":{},"modules/ParticipationEventsModule.html":{},"modules/PhasesModule.html":{},"modules/ResourcesModule.html":{},"modules/ResourcesRepliesModule.html":{},"modules/RolModule.html":{},"modules/SitesModule.html":{},"modules/StagesModule.html":{},"modules/StartupModule.html":{},"modules/StorageModule.html":{},"modules/TableModule.html":{},"modules/TermsOfUseModule.html":{},"modules/TicketCategoriesModule.html":{},"modules/TypesEventsModule.html":{},"modules/TypesNotificationsModule.html":{},"modules/UserConfigModule.html":{},"modules/UserLogModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["express",{"_index":4577,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":4090,"title":{},"body":{"classes/UpdateActaInput.html":{},"classes/UpdateActivitiesConfigInput.html":{},"classes/UpdateAnnouncementInput.html":{},"classes/UpdateApplicantInput.html":{},"classes/UpdateConfigEvaluationInput.html":{},"classes/UpdateContentInput.html":{},"classes/UpdateEventInput.html":{},"classes/UpdateHelpDeskInput.html":{},"classes/UpdateIntegrationInput.html":{},"classes/UpdateNotificationInput.html":{},"classes/UpdateParticipationEventInput.html":{},"classes/UpdateResourceInput.html":{},"classes/UpdateResourcesReplyInput.html":{},"classes/UpdateRolInput.html":{},"classes/UpdateStageInput.html":{},"classes/UpdateTypesEventInput.html":{}}}],["extension",{"_index":2207,"title":{},"body":{"injectables/DownloadsService.html":{}}}],["extra",{"_index":2809,"title":{},"body":{"classes/Integration.html":{},"classes/Invitation.html":{}}}],["extra_options",{"_index":200,"title":{},"body":{"classes/Acta.html":{},"classes/Content.html":{},"classes/CreateActaInput.html":{},"classes/CreateContentInput.html":{},"classes/CreateEventInput.html":{},"classes/CreateResourceInput.html":{},"classes/CreateTypesEventInput.html":{},"classes/Event.html":{},"classes/ExpertEventLink.html":{},"classes/ParticipantEventLink.html":{},"classes/Resource.html":{},"classes/TeamCoachLink.html":{},"classes/TermsOfUse.html":{},"classes/TypesEvent.html":{},"classes/UpdateActaInput.html":{},"classes/UpdateContentInput.html":{},"classes/UpdateEventInput.html":{},"classes/UpdateResourceInput.html":{},"classes/UpdateTermsOfUseInput.html":{},"classes/UpdateTypesEventInput.html":{},"miscellaneous/variables.html":{}}}],["extra_options.sprint",{"_index":1831,"title":{},"body":{"injectables/ContentService.html":{}}}],["extracolumn",{"_index":3894,"title":{},"body":{"injectables/TableService.html":{}}}],["extracolumn.key",{"_index":3895,"title":{},"body":{"injectables/TableService.html":{}}}],["extracolumns",{"_index":3819,"title":{},"body":{"classes/TableJoin.html":{},"injectables/TableService.html":{}}}],["extract",{"_index":1000,"title":{},"body":{"classes/Applicant.html":{},"classes/ApplicantState.html":{},"classes/Attachment.html":{},"guards/AuthGuard.html":{},"guards/GqlAuthGuard.html":{},"interfaces/IAttachment.html":{},"miscellaneous/functions.html":{},"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["extracttokenfromheader",{"_index":1101,"title":{},"body":{"guards/AuthGuard.html":{},"guards/GqlAuthGuard.html":{}}}],["extracttokenfromheader(request",{"_index":1107,"title":{},"body":{"guards/AuthGuard.html":{},"guards/GqlAuthGuard.html":{}}}],["facet",{"_index":4992,"title":{},"body":{"miscellaneous/variables.html":{}}}],["factories/form",{"_index":2533,"title":{},"body":{"injectables/FormSubscriptionService.html":{},"modules/FormsModule.html":{}}}],["factors",{"_index":1721,"title":{},"body":{"classes/ContactServiceLink.html":{},"classes/ContactServicesInput.html":{},"classes/CreateSiteInput.html":{},"classes/Site.html":{},"classes/UpdateSiteInput.html":{}}}],["failed",{"_index":1084,"title":{},"body":{"injectables/AuthCodeService.html":{},"injectables/AwsService.html":{},"injectables/BusinessService.html":{},"injectables/ConfigNotificationsService.html":{},"injectables/TableService.html":{}}}],["false",{"_index":211,"title":{},"body":{"classes/Acta.html":{},"injectables/ActaService.html":{},"classes/ActivitiesConfig.html":{},"classes/Announcement.html":{},"injectables/AnnouncementsService.html":{},"modules/AppModule.html":{},"classes/Assign.html":{},"injectables/BusinessService.html":{},"classes/ConfigEvaluation.html":{},"classes/ContactServiceLink.html":{},"classes/Content.html":{},"injectables/ContentService.html":{},"classes/CreateTypesEventInput.html":{},"classes/Evaluation.html":{},"classes/Event.html":{},"classes/ExpertEventLink.html":{},"injectables/FormSubscriptionService.html":{},"injectables/HelpDeskService.html":{},"classes/HelpDeskTicket.html":{},"injectables/IntegrationsService.html":{},"classes/Notification-1.html":{},"injectables/NotificationsService.html":{},"classes/ParticipantEventLink.html":{},"classes/Phase.html":{},"classes/Resource.html":{},"classes/ResourcesReply.html":{},"injectables/ResourcesService.html":{},"classes/Site.html":{},"injectables/SitesService.html":{},"classes/Stage.html":{},"classes/TeamCoachLink.html":{},"classes/TemplateInput.html":{},"classes/TicketCategory.html":{},"classes/TicketChild.html":{},"classes/TypesEvent.html":{},"injectables/TypesEventsService.html":{},"classes/UpdateTypesEventInput.html":{},"injectables/UsersService.html":{},"classes/activities.html":{},"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["false})@field(undefined",{"_index":3319,"title":{},"body":{"classes/Phase.html":{}}}],["false})@isoptional",{"_index":2160,"title":{},"body":{"classes/CreateTypesEventInput.html":{},"classes/UpdateTypesEventInput.html":{}}}],["fase",{"_index":4884,"title":{},"body":{"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["fases",{"_index":4879,"title":{},"body":{"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["fechas",{"_index":1570,"title":{},"body":{"injectables/ConfigEvaluationsService.html":{},"injectables/UserLogService.html":{}}}],["field",{"_index":120,"title":{},"body":{"classes/AWSSESProvider.html":{},"classes/Acta.html":{},"classes/ActivitiesConfig.html":{},"classes/AddTableJoinInput.html":{},"classes/Announcement.html":{},"classes/AnnouncementApplicantArgs.html":{},"classes/AnnouncementApplicantsArgs.html":{},"classes/Applicant.html":{},"classes/ApplicantArgs.html":{},"classes/ApplicantState.html":{},"classes/Assign.html":{},"classes/Attachment.html":{},"classes/AttachmentSubmit.html":{},"classes/AuthCode.html":{},"classes/Business.html":{},"classes/BusinessRelationship.html":{},"classes/CloseFormSubscriptionArgs.html":{},"classes/ColumnGroup.html":{},"classes/ConfigEvaluation.html":{},"classes/ConfigurationApp.html":{},"classes/ContactArgs.html":{},"classes/ContactServiceLink.html":{},"classes/ContactServicesInput.html":{},"classes/Content.html":{},"classes/CreateActaInput.html":{},"classes/CreateActivitiesConfigInput.html":{},"classes/CreateAnnouncementInput.html":{},"classes/CreateConfigEvaluationInput.html":{},"classes/CreateConfigNotificationInput.html":{},"classes/CreateContentInput.html":{},"classes/CreateEventInput.html":{},"classes/CreateFormInput.html":{},"classes/CreateFormSubscriptionInput.html":{},"classes/CreateFormTagInput.html":{},"classes/CreateHelpDeskInput.html":{},"classes/CreateIntegrationInput.html":{},"classes/CreateInvitationArgs.html":{},"classes/CreateNotificationInput.html":{},"classes/CreateParticipationEventInput.html":{},"classes/CreatePhaseInput.html":{},"classes/CreateResourceInput.html":{},"classes/CreateResourcesReplyInput.html":{},"classes/CreateRolInput.html":{},"classes/CreateSiteInput.html":{},"classes/CreateStageInput.html":{},"classes/CreateTableConfigInput.html":{},"classes/CreateTableInput.html":{},"classes/CreateTypesEventInput.html":{},"classes/CreateUserInput.html":{},"classes/CreateUserLogInput.html":{},"classes/Download.html":{},"injectables/EmailsService.html":{},"classes/Entrepreneur.html":{},"classes/EntrepreneurRelationship.html":{},"classes/EntrepreneurRelationship-1.html":{},"classes/EntrepreneurStartupArgs.html":{},"classes/Evaluation.html":{},"classes/Event.html":{},"classes/Expert.html":{},"classes/ExpertEventLink.html":{},"classes/FindFormsArgs.html":{},"classes/FindInvitationArgs.html":{},"classes/FindUsersArgs.html":{},"classes/Form.html":{},"classes/FormSubmission.html":{},"classes/FormSubmissionFiles.html":{},"classes/FormSubscription.html":{},"classes/FormTag.html":{},"classes/GetSubmittedFilesArgs.html":{},"classes/HelpDeskFilterInput.html":{},"classes/HelpDeskTicket.html":{},"classes/Hours.html":{},"interfaces/IAttachment.html":{},"classes/Integration.html":{},"injectables/IntegrationsService.html":{},"classes/Invitation.html":{},"classes/LastContentOutput.html":{},"classes/LinkExpertsToPhaseArgs.html":{},"classes/LinkStartupToPhaseArgs.html":{},"classes/LinkStartupsExpertsArgs.html":{},"classes/LinkWithTargetsArgs.html":{},"classes/LinkWithTargetsByRequestArgs.html":{},"classes/Notification-1.html":{},"classes/OthersInput.html":{},"classes/ParticipantEventLink.html":{},"classes/ParticipationEvent.html":{},"classes/Phase.html":{},"classes/PhaseExpertRelationship.html":{},"classes/PhaseRelationship.html":{},"classes/Rating.html":{},"classes/RemoveTableJoinInput.html":{},"classes/Resource.html":{},"classes/ResourcesReply.html":{},"classes/Rol.html":{},"classes/SearchBatchInput.html":{},"classes/SelectApplicantsArgs.html":{},"classes/SendGridProvider.html":{},"classes/SignUpInput.html":{},"classes/Site.html":{},"classes/Stage.html":{},"classes/Startup.html":{},"classes/StartupLink.html":{},"classes/StartupRelationship.html":{},"classes/SubmitAnnouncementDocInput.html":{},"classes/SubmitFileInput.html":{},"classes/SubmitFormSubscriptionArgs.html":{},"classes/Table.html":{},"classes/TableConfig.html":{},"classes/TableJoin.html":{},"classes/TeamCoachLink.html":{},"classes/TermsOfUse.html":{},"classes/TicketCategory.html":{},"classes/TicketChild.html":{},"classes/TypesEvent.html":{},"classes/TypesNotification.html":{},"classes/UpdateActaInput.html":{},"classes/UpdateActivitiesConfigInput.html":{},"classes/UpdateAnnouncementInput.html":{},"classes/UpdateApplicantInput.html":{},"classes/UpdateApplicantStateInput.html":{},"classes/UpdateConfigEvaluationInput.html":{},"classes/UpdateConfigurationAppInput.html":{},"classes/UpdateContentInput.html":{},"classes/UpdateEventInput.html":{},"classes/UpdateExpertInput.html":{},"classes/UpdateFormInput.html":{},"classes/UpdateFormTagInput.html":{},"classes/UpdateHelpDeskInput.html":{},"classes/UpdateIntegrationInput.html":{},"classes/UpdateNotificationInput.html":{},"classes/UpdateParticipationEventInput.html":{},"classes/UpdatePhaseInput.html":{},"classes/UpdateResourceInput.html":{},"classes/UpdateResourcesReplyInput.html":{},"classes/UpdateRolInput.html":{},"classes/UpdateSiteInput.html":{},"classes/UpdateStageInput.html":{},"classes/UpdateTableConfigInput.html":{},"classes/UpdateTermsOfUseInput.html":{},"classes/UpdateTypesEventInput.html":{},"classes/UpdateUserConfigInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"classes/UserConfig.html":{},"classes/UserLog.html":{},"classes/activities.html":{},"miscellaneous/variables.html":{}}}],["field(undefined",{"_index":207,"title":{},"body":{"classes/Acta.html":{},"classes/ActivitiesConfig.html":{},"classes/AddTableJoinInput.html":{},"classes/Announcement.html":{},"classes/Applicant.html":{},"classes/Assign.html":{},"classes/Attachment.html":{},"classes/AttachmentSubmit.html":{},"classes/AuthCode.html":{},"classes/Business.html":{},"classes/CloseFormSubscriptionArgs.html":{},"classes/ColumnGroup.html":{},"classes/ConfigEvaluation.html":{},"classes/ConfigurationApp.html":{},"classes/Content.html":{},"classes/CreateActaInput.html":{},"classes/CreateAnnouncementInput.html":{},"classes/CreateConfigNotificationInput.html":{},"classes/CreateContentInput.html":{},"classes/CreateFormInput.html":{},"classes/CreateFormSubscriptionInput.html":{},"classes/CreatePhaseInput.html":{},"classes/CreateResourceInput.html":{},"classes/CreateSiteInput.html":{},"classes/CreateStageInput.html":{},"classes/CreateTableConfigInput.html":{},"classes/CreateTableInput.html":{},"classes/CreateTypesEventInput.html":{},"classes/CreateUserInput.html":{},"classes/Download.html":{},"classes/Entrepreneur.html":{},"classes/Evaluation.html":{},"classes/Event.html":{},"classes/Expert.html":{},"classes/Form.html":{},"classes/FormSubmission.html":{},"classes/FormSubmissionFiles.html":{},"classes/FormSubscription.html":{},"classes/FormTag.html":{},"classes/HelpDeskTicket.html":{},"classes/Hours.html":{},"classes/Integration.html":{},"classes/Invitation.html":{},"classes/LinkStartupsExpertsArgs.html":{},"classes/Notification-1.html":{},"classes/OthersInput.html":{},"classes/ParticipantEventLink.html":{},"classes/ParticipationEvent.html":{},"classes/Phase.html":{},"classes/Rating.html":{},"classes/RemoveTableJoinInput.html":{},"classes/Resource.html":{},"classes/ResourcesReply.html":{},"classes/Rol.html":{},"classes/Site.html":{},"classes/Stage.html":{},"classes/Startup.html":{},"classes/StartupRelationship.html":{},"classes/SubmitAnnouncementDocInput.html":{},"classes/SubmitFileInput.html":{},"classes/Table.html":{},"classes/TableConfig.html":{},"classes/TermsOfUse.html":{},"classes/TicketCategory.html":{},"classes/TypesEvent.html":{},"classes/TypesNotification.html":{},"classes/UpdateActaInput.html":{},"classes/UpdateActivitiesConfigInput.html":{},"classes/UpdateAnnouncementInput.html":{},"classes/UpdateApplicantInput.html":{},"classes/UpdateConfigEvaluationInput.html":{},"classes/UpdateConfigurationAppInput.html":{},"classes/UpdateContentInput.html":{},"classes/UpdateEventInput.html":{},"classes/UpdateExpertInput.html":{},"classes/UpdateFormInput.html":{},"classes/UpdateHelpDeskInput.html":{},"classes/UpdateIntegrationInput.html":{},"classes/UpdateNotificationInput.html":{},"classes/UpdateParticipationEventInput.html":{},"classes/UpdatePhaseInput.html":{},"classes/UpdateResourceInput.html":{},"classes/UpdateResourcesReplyInput.html":{},"classes/UpdateRolInput.html":{},"classes/UpdateSiteInput.html":{},"classes/UpdateStageInput.html":{},"classes/UpdateTableConfigInput.html":{},"classes/UpdateTermsOfUseInput.html":{},"classes/UpdateTypesEventInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"classes/UserConfig.html":{},"classes/UserLog.html":{},"classes/activities.html":{}}}],["field(undefined)@isenum(announcementtargets",{"_index":3534,"title":{},"body":{"classes/SelectApplicantsArgs.html":{}}}],["field(undefined)@isenum(applicationstates",{"_index":745,"title":{},"body":{"classes/AnnouncementApplicantsArgs.html":{},"classes/ApplicantArgs.html":{},"classes/UpdateApplicantStateInput.html":{}}}],["field(undefined)@isenum(ticketcategory",{"_index":2026,"title":{},"body":{"classes/CreateHelpDeskInput.html":{}}}],["field(undefined)@isenum(ticketenum)@isoptional",{"_index":2679,"title":{},"body":{"classes/HelpDeskFilterInput.html":{}}}],["field(undefined)@isnotempty",{"_index":737,"title":{},"body":{"classes/AnnouncementApplicantArgs.html":{},"classes/AnnouncementApplicantsArgs.html":{},"classes/ApplicantArgs.html":{},"classes/CloseFormSubscriptionArgs.html":{},"classes/ContactServicesInput.html":{},"classes/CreateActaInput.html":{},"classes/CreateActivitiesConfigInput.html":{},"classes/CreateConfigEvaluationInput.html":{},"classes/CreateContentInput.html":{},"classes/CreateEventInput.html":{},"classes/CreateFormSubscriptionInput.html":{},"classes/CreateFormTagInput.html":{},"classes/CreateParticipationEventInput.html":{},"classes/CreatePhaseInput.html":{},"classes/CreateResourceInput.html":{},"classes/CreateResourcesReplyInput.html":{},"classes/CreateRolInput.html":{},"classes/CreateSiteInput.html":{},"classes/CreateStageInput.html":{},"classes/CreateTypesEventInput.html":{},"classes/EntrepreneurStartupArgs.html":{},"classes/SelectApplicantsArgs.html":{},"classes/SubmitFormSubscriptionArgs.html":{},"classes/UpdateActaInput.html":{},"classes/UpdateActivitiesConfigInput.html":{},"classes/UpdateAnnouncementInput.html":{},"classes/UpdateConfigEvaluationInput.html":{},"classes/UpdateConfigurationAppInput.html":{},"classes/UpdateContentInput.html":{},"classes/UpdateEventInput.html":{},"classes/UpdateExpertInput.html":{},"classes/UpdateFormInput.html":{},"classes/UpdateFormTagInput.html":{},"classes/UpdateHelpDeskInput.html":{},"classes/UpdateNotificationInput.html":{},"classes/UpdateParticipationEventInput.html":{},"classes/UpdatePhaseInput.html":{},"classes/UpdateResourceInput.html":{},"classes/UpdateResourcesReplyInput.html":{},"classes/UpdateRolInput.html":{},"classes/UpdateSiteInput.html":{},"classes/UpdateStageInput.html":{},"classes/UpdateTableConfigInput.html":{},"classes/UpdateTermsOfUseInput.html":{},"classes/UpdateTypesEventInput.html":{},"classes/UpdateUserConfigInput.html":{},"classes/UpdateUserInput.html":{}}}],["field(undefined)@isnotempty()@isarray",{"_index":3141,"title":{},"body":{"classes/LinkWithTargetsArgs.html":{},"classes/LinkWithTargetsByRequestArgs.html":{}}}],["field(undefined)@isobject",{"_index":2028,"title":{},"body":{"classes/CreateHelpDeskInput.html":{}}}],["field(undefined)@isoptional",{"_index":1898,"title":{},"body":{"classes/CreateActaInput.html":{},"classes/CreateConfigEvaluationInput.html":{},"classes/CreateContentInput.html":{},"classes/CreateEventInput.html":{},"classes/CreateIntegrationInput.html":{},"classes/CreateParticipationEventInput.html":{},"classes/CreateResourceInput.html":{},"classes/CreateResourcesReplyInput.html":{},"classes/CreateSiteInput.html":{},"classes/CreateTypesEventInput.html":{},"classes/CreateUserLogInput.html":{},"classes/SearchBatchInput.html":{},"classes/SelectApplicantsArgs.html":{},"classes/UpdateNotificationInput.html":{},"classes/UpdateResourceInput.html":{},"classes/UpdateSiteInput.html":{}}}],["field(undefined)@isoptional()@prop({default",{"_index":3820,"title":{},"body":{"classes/TableJoin.html":{}}}],["field(undefined)@isstring",{"_index":2073,"title":{},"body":{"classes/CreateNotificationInput.html":{},"classes/GetSubmittedFilesArgs.html":{},"classes/UpdateApplicantStateInput.html":{}}}],["field(undefined)@isstring()@isnotempty",{"_index":2071,"title":{},"body":{"classes/CreateNotificationInput.html":{}}}],["field(undefined)@isstring()@isoptional",{"_index":2077,"title":{},"body":{"classes/CreateNotificationInput.html":{}}}],["field(undefined)@isstring()@minlength(2",{"_index":2032,"title":{},"body":{"classes/CreateHelpDeskInput.html":{}}}],["field(undefined)@isstring()@minlength(2)@isoptional",{"_index":2677,"title":{},"body":{"classes/HelpDeskFilterInput.html":{}}}],["field(undefined)@isstring()@minlength(5",{"_index":2030,"title":{},"body":{"classes/CreateHelpDeskInput.html":{}}}],["field(undefined)@prop",{"_index":213,"title":{},"body":{"classes/Acta.html":{},"classes/BusinessRelationship.html":{},"classes/ConfigEvaluation.html":{},"classes/ContactServiceLink.html":{},"classes/EntrepreneurRelationship.html":{},"classes/EntrepreneurRelationship-1.html":{},"classes/Evaluation.html":{},"classes/Event.html":{},"classes/ExpertEventLink.html":{},"classes/FormTag.html":{},"classes/ParticipantEventLink.html":{},"classes/PhaseExpertRelationship.html":{},"classes/PhaseRelationship.html":{},"classes/StartupLink.html":{},"classes/StartupRelationship.html":{},"classes/TeamCoachLink.html":{}}}],["field(undefined)@prop({default",{"_index":210,"title":{},"body":{"classes/Acta.html":{},"classes/ActivitiesConfig.html":{},"classes/ApplicantState.html":{},"classes/ConfigEvaluation.html":{},"classes/Content.html":{},"classes/Entrepreneur.html":{},"classes/Evaluation.html":{},"classes/Event.html":{},"classes/Expert.html":{},"classes/Form.html":{},"classes/FormSubscription.html":{},"classes/HelpDeskTicket.html":{},"classes/Notification-1.html":{},"classes/Phase.html":{},"classes/PhaseExpertRelationship.html":{},"classes/ResourcesReply.html":{},"classes/Rol.html":{},"classes/Site.html":{},"classes/Stage.html":{},"classes/Startup.html":{},"classes/TicketCategory.html":{},"classes/TypesEvent.html":{}}}],["field(undefined)@prop({enum",{"_index":2447,"title":{},"body":{"classes/Form.html":{},"classes/FormSubscription.html":{}}}],["field(undefined)@prop({required",{"_index":223,"title":{},"body":{"classes/Acta.html":{},"classes/ApplicantState.html":{},"classes/AuthCode.html":{},"classes/ConfigEvaluation.html":{},"classes/ConfigurationApp.html":{},"classes/Content.html":{},"classes/Event.html":{},"classes/Form.html":{},"classes/FormSubscription.html":{},"classes/HelpDeskTicket.html":{},"classes/Integration.html":{},"classes/Notification-1.html":{},"classes/Phase.html":{},"classes/Rating.html":{},"classes/Resource.html":{},"classes/Rol.html":{},"classes/Site.html":{},"classes/Stage.html":{},"classes/TableConfig.html":{},"classes/TermsOfUse.html":{},"classes/TicketCategory.html":{},"classes/TypesEvent.html":{},"classes/TypesNotification.html":{},"classes/UserConfig.html":{}}}],["field(undefined)@prop({type",{"_index":217,"title":{},"body":{"classes/Acta.html":{},"classes/ActivitiesConfig.html":{},"classes/Assign.html":{},"classes/BusinessRelationship.html":{},"classes/ConfigurationApp.html":{},"classes/Content.html":{},"classes/Entrepreneur.html":{},"classes/EntrepreneurRelationship.html":{},"classes/EntrepreneurRelationship-1.html":{},"classes/Event.html":{},"classes/Expert.html":{},"classes/ExpertEventLink.html":{},"classes/HelpDeskTicket.html":{},"classes/ParticipantEventLink.html":{},"classes/ParticipationEvent.html":{},"classes/Phase.html":{},"classes/PhaseExpertRelationship.html":{},"classes/PhaseRelationship.html":{},"classes/Resource.html":{},"classes/ResourcesReply.html":{},"classes/Startup.html":{},"classes/StartupLink.html":{},"classes/StartupRelationship.html":{},"classes/TeamCoachLink.html":{},"classes/TermsOfUse.html":{},"classes/TypesEvent.html":{},"classes/User.html":{},"classes/UserConfig.html":{},"classes/activities.html":{}}}],["field(undefined)@validatenested()@isarray()@type(undefined",{"_index":4117,"title":{},"body":{"classes/UpdateApplicantStateInput.html":{}}}],["field(undefined)@validatenested()@type(undefined)@isnotempty",{"_index":3145,"title":{},"body":{"classes/LinkWithTargetsByRequestArgs.html":{}}}],["field({nullable",{"_index":3584,"title":{},"body":{"classes/SignUpInput.html":{}}}],["field1",{"_index":2964,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["fields",{"_index":1978,"title":{},"body":{"classes/CreateFormInput.html":{},"classes/UpdateActivitiesConfigInput.html":{},"miscellaneous/variables.html":{}}}],["fields'})@isoptional",{"_index":1981,"title":{},"body":{"classes/CreateFormInput.html":{}}}],["fields.'})@isnotempty",{"_index":1985,"title":{},"body":{"classes/CreateFormInput.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AWSSESProvider.html":{},"classes/AcceptInvitationDto.html":{},"classes/Acta.html":{},"modules/ActaModule.html":{},"injectables/ActaService.html":{},"classes/ActivitiesConfig.html":{},"modules/ActivitiesConfigModule.html":{},"injectables/ActivitiesConfigService.html":{},"classes/AddTableJoinInput.html":{},"classes/Announcement.html":{},"classes/AnnouncementApplicantArgs.html":{},"classes/AnnouncementApplicantsArgs.html":{},"modules/AnnouncementsModule.html":{},"injectables/AnnouncementsService.html":{},"modules/AppModule.html":{},"classes/Applicant.html":{},"classes/ApplicantArgs.html":{},"modules/ApplicantModule.html":{},"classes/ApplicantState.html":{},"classes/Assign.html":{},"classes/Attachment.html":{},"classes/AttachmentSubmit.html":{},"classes/AuthCode.html":{},"modules/AuthCodeModule.html":{},"injectables/AuthCodeService.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/AwsService.html":{},"classes/Business.html":{},"modules/BusinessModule.html":{},"classes/BusinessRelationship.html":{},"injectables/BusinessService.html":{},"classes/CloseFormSubscriptionArgs.html":{},"classes/ColumnGroup.html":{},"classes/ConfigEvaluation.html":{},"modules/ConfigEvaluationsModule.html":{},"injectables/ConfigEvaluationsService.html":{},"modules/ConfigNotificationsModule.html":{},"injectables/ConfigNotificationsService.html":{},"classes/ConfigurationApp.html":{},"modules/ConfigurationAppModule.html":{},"injectables/ConfigurationAppService.html":{},"classes/ContactArgs.html":{},"classes/ContactServiceLink.html":{},"classes/ContactServicesInput.html":{},"classes/Content.html":{},"modules/ContentModule.html":{},"injectables/ContentService.html":{},"classes/CreateActaInput.html":{},"classes/CreateActivitiesConfigInput.html":{},"classes/CreateAnnouncementInput.html":{},"classes/CreateConfigEvaluationInput.html":{},"classes/CreateConfigNotificationInput.html":{},"classes/CreateContentInput.html":{},"classes/CreateEventInput.html":{},"classes/CreateFormInput.html":{},"classes/CreateFormSubscriptionInput.html":{},"classes/CreateFormTagInput.html":{},"classes/CreateHelpDeskInput.html":{},"classes/CreateIntegrationInput.html":{},"classes/CreateInvitationArgs.html":{},"classes/CreateNotificationInput.html":{},"classes/CreateParticipationEventInput.html":{},"classes/CreatePhaseInput.html":{},"classes/CreateResourceInput.html":{},"classes/CreateResourcesReplyInput.html":{},"classes/CreateRolInput.html":{},"classes/CreateSiteInput.html":{},"classes/CreateStageInput.html":{},"classes/CreateTableConfigInput.html":{},"classes/CreateTableInput.html":{},"classes/CreateTypesEventInput.html":{},"classes/CreateUserInput.html":{},"classes/CreateUserLogInput.html":{},"classes/Download.html":{},"modules/DownloadsModule.html":{},"injectables/DownloadsService.html":{},"controllers/EmailsController.html":{},"modules/EmailsModule.html":{},"interfaces/EmailsRepository.html":{},"injectables/EmailsService.html":{},"classes/Entrepreneur.html":{},"modules/EntrepreneurModule.html":{},"classes/EntrepreneurRelationship.html":{},"classes/EntrepreneurRelationship-1.html":{},"classes/EntrepreneurStartupArgs.html":{},"classes/Evaluation.html":{},"modules/EvaluationsModule.html":{},"classes/Event.html":{},"modules/EventsModule.html":{},"classes/Expert.html":{},"classes/ExpertEventLink.html":{},"modules/ExpertModule.html":{},"classes/FindFormsArgs.html":{},"classes/FindInvitationArgs.html":{},"classes/FindUsersArgs.html":{},"classes/Form.html":{},"classes/FormSubmission.html":{},"classes/FormSubmissionFiles.html":{},"classes/FormSubscription.html":{},"injectables/FormSubscriptionService.html":{},"classes/FormTag.html":{},"injectables/FormTagService.html":{},"modules/FormsModule.html":{},"injectables/FormsService.html":{},"classes/GetSubmittedFilesArgs.html":{},"guards/GqlAuthGuard.html":{},"classes/HelpDeskFilterInput.html":{},"modules/HelpDeskModule.html":{},"injectables/HelpDeskService.html":{},"classes/HelpDeskTicket.html":{},"classes/Hours.html":{},"interfaces/IAttachment.html":{},"classes/Integration.html":{},"modules/IntegrationsModule.html":{},"injectables/IntegrationsService.html":{},"classes/Invitation.html":{},"controllers/InvitationsController.html":{},"modules/InvitationsModule.html":{},"injectables/InvitationsService.html":{},"classes/LastContentOutput.html":{},"classes/LinkExpertsToPhaseArgs.html":{},"classes/LinkStartupToPhaseArgs.html":{},"classes/LinkStartupsExpertsArgs.html":{},"classes/LinkWithTargetsArgs.html":{},"classes/LinkWithTargetsByRequestArgs.html":{},"modules/LoggerModule.html":{},"classes/Notification.html":{},"classes/Notification-1.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"classes/OthersInput.html":{},"classes/ParticipantEventLink.html":{},"classes/ParticipationEvent.html":{},"modules/ParticipationEventsModule.html":{},"injectables/ParticipationEventsService.html":{},"classes/Phase.html":{},"classes/PhaseExpertRelationship.html":{},"classes/PhaseRelationship.html":{},"modules/PhasesModule.html":{},"classes/Rating.html":{},"classes/RemoveTableJoinInput.html":{},"classes/Resource.html":{},"modules/ResourcesModule.html":{},"modules/ResourcesRepliesModule.html":{},"classes/ResourcesReply.html":{},"injectables/ResourcesService.html":{},"classes/Rol.html":{},"modules/RolModule.html":{},"injectables/RolService.html":{},"classes/SearchBatchInput.html":{},"classes/SelectApplicantsArgs.html":{},"classes/SendEmailInput.html":{},"classes/SendGridProvider.html":{},"classes/SignUpInput.html":{},"classes/Site.html":{},"modules/SitesModule.html":{},"injectables/SitesService.html":{},"classes/Stage.html":{},"modules/StagesModule.html":{},"injectables/StagesService.html":{},"classes/Startup.html":{},"classes/StartupLink.html":{},"modules/StartupModule.html":{},"classes/StartupRelationship.html":{},"controllers/StorageController.html":{},"modules/StorageModule.html":{},"classes/StorageService.html":{},"classes/SubmitAnnouncementDocInput.html":{},"classes/SubmitFileInput.html":{},"classes/SubmitFormSubscriptionArgs.html":{},"classes/Table.html":{},"classes/TableConfig.html":{},"injectables/TableConfigService.html":{},"classes/TableJoin.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"classes/TeamCoachLink.html":{},"classes/TemplateInput.html":{},"classes/TermsOfUse.html":{},"modules/TermsOfUseModule.html":{},"injectables/TermsOfUseService.html":{},"modules/TicketCategoriesModule.html":{},"injectables/TicketCategoriesService.html":{},"classes/TicketCategory.html":{},"classes/TicketChild.html":{},"classes/TypesEvent.html":{},"modules/TypesEventsModule.html":{},"injectables/TypesEventsService.html":{},"classes/TypesNotification.html":{},"modules/TypesNotificationsModule.html":{},"injectables/TypesNotificationsService.html":{},"classes/UpdateActaInput.html":{},"classes/UpdateActivitiesConfigInput.html":{},"classes/UpdateAnnouncementInput.html":{},"classes/UpdateApplicantInput.html":{},"classes/UpdateApplicantStateInput.html":{},"classes/UpdateConfigEvaluationInput.html":{},"classes/UpdateConfigurationAppInput.html":{},"classes/UpdateContentInput.html":{},"classes/UpdateEventInput.html":{},"classes/UpdateExpertInput.html":{},"classes/UpdateFormInput.html":{},"classes/UpdateFormTagInput.html":{},"classes/UpdateHelpDeskInput.html":{},"classes/UpdateIntegrationInput.html":{},"classes/UpdateNotificationInput.html":{},"classes/UpdateParticipationEventInput.html":{},"classes/UpdatePhaseInput.html":{},"classes/UpdateResourceInput.html":{},"classes/UpdateResourcesReplyInput.html":{},"classes/UpdateRolInput.html":{},"classes/UpdateSiteInput.html":{},"classes/UpdateStageInput.html":{},"classes/UpdateTableConfigInput.html":{},"classes/UpdateTermsOfUseInput.html":{},"classes/UpdateTypesEventInput.html":{},"classes/UpdateUserConfigInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"classes/UserConfig.html":{},"modules/UserConfigModule.html":{},"injectables/UserConfigService.html":{},"classes/UserLog.html":{},"modules/UserLogModule.html":{},"injectables/UserLogService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/activities.html":{},"miscellaneous/functions.html":{},"interfaces/item_permission.html":{}}}],["file.'})@isnotempty",{"_index":3759,"title":{},"body":{"classes/SubmitFileInput.html":{}}}],["file.'})@isstring",{"_index":1034,"title":{},"body":{"classes/AttachmentSubmit.html":{}}}],["file.'})@prop",{"_index":2183,"title":{},"body":{"classes/Download.html":{}}}],["file.'})@prop({default",{"_index":1027,"title":{},"body":{"classes/Attachment.html":{}}}],["file.input",{"_index":2536,"title":{},"body":{"injectables/FormSubscriptionService.html":{}}}],["file.input.ts",{"_index":3755,"title":{},"body":{"classes/SubmitFileInput.html":{}}}],["file.input.ts:10",{"_index":3761,"title":{},"body":{"classes/SubmitFileInput.html":{}}}],["file.input.ts:14",{"_index":3756,"title":{},"body":{"classes/SubmitFileInput.html":{}}}],["file.input.ts:18",{"_index":3760,"title":{},"body":{"classes/SubmitFileInput.html":{}}}],["file.input.ts:24",{"_index":3758,"title":{},"body":{"classes/SubmitFileInput.html":{}}}],["fileid",{"_index":2216,"title":{},"body":{"injectables/DownloadsService.html":{}}}],["fileid}.${extension",{"_index":2219,"title":{},"body":{"injectables/DownloadsService.html":{}}}],["filekey",{"_index":1215,"title":{},"body":{"injectables/AwsService.html":{},"injectables/FormSubscriptionService.html":{},"classes/SubmitFileInput.html":{}}}],["filename",{"_index":2218,"title":{},"body":{"injectables/DownloadsService.html":{},"classes/SendGridProvider.html":{}}}],["files",{"_index":973,"title":{},"body":{"classes/Applicant.html":{},"classes/ApplicantState.html":{},"classes/Attachment.html":{},"injectables/AwsService.html":{},"injectables/FormSubscriptionService.html":{},"interfaces/IAttachment.html":{},"controllers/StorageController.html":{}}}],["files.args.ts",{"_index":2658,"title":{},"body":{"classes/GetSubmittedFilesArgs.html":{}}}],["files.args.ts:11",{"_index":2659,"title":{},"body":{"classes/GetSubmittedFilesArgs.html":{}}}],["files.args.ts:15",{"_index":2660,"title":{},"body":{"classes/GetSubmittedFilesArgs.html":{}}}],["files.ts",{"_index":2464,"title":{},"body":{"classes/FormSubmissionFiles.html":{}}}],["files.ts:10",{"_index":2465,"title":{},"body":{"classes/FormSubmissionFiles.html":{}}}],["fileurl",{"_index":1478,"title":{},"body":{"injectables/BusinessService.html":{},"injectables/DownloadsService.html":{},"injectables/FormSubscriptionService.html":{},"classes/SubmitFileInput.html":{}}}],["filter",{"_index":2718,"title":{},"body":{"injectables/HelpDeskService.html":{}}}],["filter.input",{"_index":2729,"title":{},"body":{"injectables/HelpDeskService.html":{}}}],["filter.input.ts",{"_index":2672,"title":{},"body":{"classes/HelpDeskFilterInput.html":{}}}],["filter.input.ts:21",{"_index":2680,"title":{},"body":{"classes/HelpDeskFilterInput.html":{}}}],["filter.input.ts:27",{"_index":2678,"title":{},"body":{"classes/HelpDeskFilterInput.html":{}}}],["filter.input.ts:32",{"_index":2675,"title":{},"body":{"classes/HelpDeskFilterInput.html":{}}}],["filter.input.ts:37",{"_index":2676,"title":{},"body":{"classes/HelpDeskFilterInput.html":{}}}],["filtering",{"_index":1412,"title":{},"body":{"injectables/BusinessService.html":{}}}],["filters",{"_index":1357,"title":{},"body":{"injectables/BusinessService.html":{},"injectables/FormsService.html":{},"injectables/HelpDeskService.html":{},"injectables/InvitationsService.html":{},"injectables/TableService.html":{},"injectables/UserLogService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["filters['fullname",{"_index":4498,"title":{},"body":{"injectables/UsersService.html":{}}}],["filters['rol",{"_index":4497,"title":{},"body":{"injectables/UsersService.html":{}}}],["filters[`relationsassign.${iterator}._id",{"_index":4501,"title":{},"body":{"injectables/UsersService.html":{}}}],["find",{"_index":297,"title":{},"body":{"injectables/ActaService.html":{},"injectables/ActivitiesConfigService.html":{},"injectables/AuthCodeService.html":{},"injectables/AuthService.html":{},"injectables/BusinessService.html":{},"injectables/ConfigEvaluationsService.html":{},"injectables/ConfigNotificationsService.html":{},"injectables/ConfigurationAppService.html":{},"injectables/ContentService.html":{},"injectables/FormSubscriptionService.html":{},"injectables/FormTagService.html":{},"injectables/FormsService.html":{},"injectables/HelpDeskService.html":{},"injectables/IntegrationsService.html":{},"injectables/InvitationsService.html":{},"injectables/NotificationsService.html":{},"injectables/ParticipationEventsService.html":{},"injectables/ResourcesService.html":{},"injectables/RolService.html":{},"injectables/SitesService.html":{},"injectables/StagesService.html":{},"injectables/TableConfigService.html":{},"injectables/TableService.html":{},"injectables/TermsOfUseService.html":{},"injectables/TicketCategoriesService.html":{},"injectables/TypesEventsService.html":{},"injectables/UserConfigService.html":{},"injectables/UserLogService.html":{},"injectables/UsersService.html":{}}}],["find((t",{"_index":4321,"title":{},"body":{"injectables/UserConfigService.html":{}}}],["findall",{"_index":283,"title":{},"body":{"injectables/ActaService.html":{},"injectables/AnnouncementsService.html":{},"injectables/BusinessService.html":{},"injectables/ConfigEvaluationsService.html":{},"injectables/ContentService.html":{},"injectables/FormTagService.html":{},"injectables/HelpDeskService.html":{},"injectables/IntegrationsService.html":{},"injectables/InvitationsService.html":{},"injectables/ParticipationEventsService.html":{},"injectables/RolService.html":{},"injectables/SitesService.html":{},"injectables/StagesService.html":{},"injectables/TermsOfUseService.html":{},"injectables/TicketCategoriesService.html":{},"injectables/TypesEventsService.html":{},"injectables/UserLogService.html":{}}}],["findall(filter",{"_index":2716,"title":{},"body":{"injectables/HelpDeskService.html":{}}}],["findall(phase",{"_index":1803,"title":{},"body":{"injectables/ContentService.html":{}}}],["findall(skip",{"_index":3044,"title":{},"body":{"injectables/InvitationsService.html":{}}}],["findall(user",{"_index":1544,"title":{},"body":{"injectables/ConfigEvaluationsService.html":{}}}],["findallbycontent",{"_index":3439,"title":{},"body":{"injectables/ResourcesService.html":{}}}],["findallbycontent(content",{"_index":3448,"title":{},"body":{"injectables/ResourcesService.html":{}}}],["findallbyphase",{"_index":3440,"title":{},"body":{"injectables/ResourcesService.html":{}}}],["findallbyphase(content",{"_index":3450,"title":{},"body":{"injectables/ResourcesService.html":{}}}],["findbyevent",{"_index":284,"title":{},"body":{"injectables/ActaService.html":{},"injectables/ParticipationEventsService.html":{}}}],["findbyevent(event",{"_index":299,"title":{},"body":{"injectables/ActaService.html":{},"injectables/ParticipationEventsService.html":{}}}],["findbyeventandparticipant",{"_index":3293,"title":{},"body":{"injectables/ParticipationEventsService.html":{}}}],["findbyeventandparticipant(event",{"_index":3303,"title":{},"body":{"injectables/ParticipationEventsService.html":{}}}],["findbyeventslist",{"_index":285,"title":{},"body":{"injectables/ActaService.html":{}}}],["findbyeventslist(events",{"_index":301,"title":{},"body":{"injectables/ActaService.html":{}}}],["findbyfilters",{"_index":2706,"title":{},"body":{"injectables/HelpDeskService.html":{},"injectables/UserLogService.html":{}}}],["findbyfilters(filters",{"_index":4365,"title":{},"body":{"injectables/UserLogService.html":{}}}],["findbyfilters(user",{"_index":2719,"title":{},"body":{"injectables/HelpDeskService.html":{}}}],["findbyid",{"_index":1784,"title":{},"body":{"injectables/ContentService.html":{},"injectables/UsersService.html":{}}}],["findbyid(id",{"_index":1805,"title":{},"body":{"injectables/ContentService.html":{},"injectables/UsersService.html":{}}}],["findbyidandupdate",{"_index":2560,"title":{},"body":{"injectables/FormSubscriptionService.html":{},"injectables/FormsService.html":{}}}],["findbyidandupdate(id",{"_index":2561,"title":{},"body":{"injectables/FormSubscriptionService.html":{},"injectables/FormTagService.html":{},"injectables/TableConfigService.html":{}}}],["findbyphase",{"_index":406,"title":{},"body":{"injectables/ActivitiesConfigService.html":{},"injectables/ConfigEvaluationsService.html":{}}}],["findbyphase(phase",{"_index":448,"title":{},"body":{"injectables/ActivitiesConfigService.html":{},"injectables/ConfigEvaluationsService.html":{}}}],["findbyphaseandstartup",{"_index":407,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["findbyphaseandstartup(phase",{"_index":451,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["findbytype",{"_index":1603,"title":{},"body":{"injectables/ConfigNotificationsService.html":{},"injectables/RolService.html":{}}}],["findbytype(type",{"_index":1617,"title":{},"body":{"injectables/ConfigNotificationsService.html":{},"injectables/RolService.html":{}}}],["findbyuser",{"_index":3196,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["findbyuser(userid",{"_index":3205,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["findformsargs",{"_index":2418,"title":{"classes/FindFormsArgs.html":{}},"body":{"classes/FindFormsArgs.html":{},"injectables/FormsService.html":{}}}],["findinvitationargs",{"_index":2422,"title":{"classes/FindInvitationArgs.html":{}},"body":{"classes/FindInvitationArgs.html":{}}}],["findlastcontent",{"_index":1785,"title":{},"body":{"injectables/ContentService.html":{}}}],["findlastcontent(batchid",{"_index":1807,"title":{},"body":{"injectables/ContentService.html":{}}}],["findmany",{"_index":1322,"title":{},"body":{"injectables/BusinessService.html":{},"injectables/FormTagService.html":{},"injectables/FormsService.html":{},"injectables/TableConfigService.html":{},"injectables/UsersService.html":{}}}],["findmany(filters",{"_index":2636,"title":{},"body":{"injectables/FormsService.html":{}}}],["findmany(ids",{"_index":1351,"title":{},"body":{"injectables/BusinessService.html":{},"injectables/FormTagService.html":{}}}],["findmany(table",{"_index":3802,"title":{},"body":{"injectables/TableConfigService.html":{}}}],["findmany(undefined",{"_index":4459,"title":{},"body":{"injectables/UsersService.html":{}}}],["findmanybyid",{"_index":4443,"title":{},"body":{"injectables/UsersService.html":{}}}],["findmanybyid(ids",{"_index":4461,"title":{},"body":{"injectables/UsersService.html":{}}}],["findmanybyuuid",{"_index":4444,"title":{},"body":{"injectables/UsersService.html":{}}}],["findmanybyuuid(uidlist",{"_index":4463,"title":{},"body":{"injectables/UsersService.html":{}}}],["findmanyidsbyrequest",{"_index":1323,"title":{},"body":{"injectables/BusinessService.html":{}}}],["findmanyidsbyrequest(request",{"_index":1353,"title":{},"body":{"injectables/BusinessService.html":{}}}],["findmanypage",{"_index":1324,"title":{},"body":{"injectables/BusinessService.html":{}}}],["findmanypage(request",{"_index":1358,"title":{},"body":{"injectables/BusinessService.html":{}}}],["findnotificationsbytargets",{"_index":3197,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["findnotificationsbytargets(targets",{"_index":3208,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["findone",{"_index":286,"title":{},"body":{"injectables/ActaService.html":{},"injectables/ActivitiesConfigService.html":{},"injectables/AnnouncementsService.html":{},"injectables/AuthCodeService.html":{},"injectables/BusinessService.html":{},"injectables/ConfigEvaluationsService.html":{},"injectables/ConfigNotificationsService.html":{},"injectables/ContentService.html":{},"injectables/FormSubscriptionService.html":{},"injectables/FormTagService.html":{},"injectables/FormsService.html":{},"injectables/HelpDeskService.html":{},"injectables/IntegrationsService.html":{},"injectables/InvitationsService.html":{},"injectables/NotificationsService.html":{},"injectables/ParticipationEventsService.html":{},"injectables/ResourcesService.html":{},"injectables/RolService.html":{},"injectables/SitesService.html":{},"injectables/StagesService.html":{},"injectables/TableConfigService.html":{},"injectables/TableService.html":{},"injectables/TermsOfUseService.html":{},"injectables/TicketCategoriesService.html":{},"injectables/TypesEventsService.html":{},"injectables/UserConfigService.html":{},"injectables/UserLogService.html":{},"injectables/UsersService.html":{}}}],["findone(filters",{"_index":3047,"title":{},"body":{"injectables/InvitationsService.html":{},"injectables/TableService.html":{}}}],["findone(id",{"_index":304,"title":{},"body":{"injectables/ActaService.html":{},"injectables/ActivitiesConfigService.html":{},"injectables/AnnouncementsService.html":{},"injectables/AuthCodeService.html":{},"injectables/BusinessService.html":{},"injectables/ConfigEvaluationsService.html":{},"injectables/ContentService.html":{},"injectables/FormSubscriptionService.html":{},"injectables/FormTagService.html":{},"injectables/FormsService.html":{},"injectables/HelpDeskService.html":{},"injectables/NotificationsService.html":{},"injectables/ParticipationEventsService.html":{},"injectables/ResourcesService.html":{},"injectables/RolService.html":{},"injectables/SitesService.html":{},"injectables/StagesService.html":{},"injectables/TableConfigService.html":{},"injectables/TicketCategoriesService.html":{},"injectables/TypesEventsService.html":{},"injectables/UserLogService.html":{}}}],["findone(name",{"_index":3959,"title":{},"body":{"injectables/TermsOfUseService.html":{}}}],["findone(uid",{"_index":4298,"title":{},"body":{"injectables/UserConfigService.html":{},"injectables/UsersService.html":{}}}],["findoneandupdate",{"_index":329,"title":{},"body":{"injectables/ActaService.html":{},"injectables/ActivitiesConfigService.html":{},"injectables/AnnouncementsService.html":{},"injectables/ConfigEvaluationsService.html":{},"injectables/ConfigurationAppService.html":{},"injectables/ContentService.html":{},"injectables/HelpDeskService.html":{},"injectables/IntegrationsService.html":{},"injectables/NotificationsService.html":{},"injectables/ParticipationEventsService.html":{},"injectables/ResourcesService.html":{},"injectables/RolService.html":{},"injectables/SitesService.html":{},"injectables/StagesService.html":{},"injectables/TermsOfUseService.html":{},"injectables/TicketCategoriesService.html":{},"injectables/TypesEventsService.html":{},"injectables/UserLogService.html":{},"injectables/UsersService.html":{}}}],["findrolbyid",{"_index":4445,"title":{},"body":{"injectables/UsersService.html":{}}}],["findrolbyid(id",{"_index":4467,"title":{},"body":{"injectables/UsersService.html":{}}}],["findrolbytype",{"_index":4446,"title":{},"body":{"injectables/UsersService.html":{}}}],["findrolbytype(type",{"_index":4469,"title":{},"body":{"injectables/UsersService.html":{}}}],["findtoday",{"_index":1536,"title":{},"body":{"injectables/ConfigEvaluationsService.html":{}}}],["findtoday(rol",{"_index":1548,"title":{},"body":{"injectables/ConfigEvaluationsService.html":{}}}],["findusersargs",{"_index":2427,"title":{"classes/FindUsersArgs.html":{}},"body":{"classes/FindUsersArgs.html":{},"injectables/UsersService.html":{}}}],["finished",{"_index":3316,"title":{},"body":{"classes/Phase.html":{}}}],["firebase",{"_index":1144,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["first",{"_index":5000,"title":{},"body":{"miscellaneous/variables.html":{}}}],["firstitem",{"_index":3679,"title":{},"body":{"injectables/StagesService.html":{}}}],["firstitem.index",{"_index":3681,"title":{},"body":{"injectables/StagesService.html":{}}}],["flag",{"_index":697,"title":{},"body":{"classes/Announcement.html":{}}}],["fns",{"_index":4593,"title":{},"body":{"dependencies.html":{}}}],["focus_mode",{"_index":2929,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["follow",{"_index":992,"title":{},"body":{"classes/Applicant.html":{},"classes/ApplicantState.html":{},"classes/Attachment.html":{},"interfaces/IAttachment.html":{}}}],["followed",{"_index":2844,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["forbiddenexception",{"_index":5051,"title":{},"body":{"miscellaneous/variables.html":{}}}],["forcepathstyle",{"_index":1249,"title":{},"body":{"injectables/AwsService.html":{}}}],["foreign",{"_index":5009,"title":{},"body":{"miscellaneous/variables.html":{}}}],["foreignmatch",{"_index":4984,"title":{},"body":{"miscellaneous/variables.html":{}}}],["foreignsort",{"_index":4979,"title":{},"body":{"miscellaneous/variables.html":{}}}],["form",{"_index":646,"title":{"classes/Form.html":{}},"body":{"classes/Announcement.html":{},"classes/Applicant.html":{},"classes/ApplicantState.html":{},"classes/Attachment.html":{},"classes/CloseFormSubscriptionArgs.html":{},"classes/ConfigEvaluation.html":{},"classes/CreateAnnouncementInput.html":{},"classes/CreateConfigEvaluationInput.html":{},"classes/CreateFormInput.html":{},"classes/CreateFormSubscriptionInput.html":{},"classes/CreateFormTagInput.html":{},"classes/CreateTableInput.html":{},"classes/Evaluation.html":{},"classes/Form.html":{},"classes/FormSubmission.html":{},"classes/FormSubmissionFiles.html":{},"classes/FormSubscription.html":{},"injectables/FormSubscriptionService.html":{},"classes/FormTag.html":{},"injectables/FormTagService.html":{},"modules/FormsModule.html":{},"injectables/FormsService.html":{},"interfaces/IAttachment.html":{},"injectables/IntegrationsService.html":{},"classes/SubmitAnnouncementDocInput.html":{},"classes/SubmitFileInput.html":{},"classes/SubmitFormSubscriptionArgs.html":{},"classes/Table.html":{},"classes/TableJoin.html":{},"injectables/TableService.html":{},"classes/UpdateFormTagInput.html":{},"miscellaneous/enumerations.html":{}}}],["form'})@isoptional",{"_index":1992,"title":{},"body":{"classes/CreateFormInput.html":{}}}],["form.documents",{"_index":3901,"title":{},"body":{"injectables/TableService.html":{}}}],["form.input",{"_index":2642,"title":{},"body":{"injectables/FormsService.html":{}}}],["form.input.ts",{"_index":1974,"title":{},"body":{"classes/CreateFormInput.html":{},"classes/UpdateFormInput.html":{}}}],["form.input.ts:15",{"_index":1991,"title":{},"body":{"classes/CreateFormInput.html":{}}}],["form.input.ts:20",{"_index":4165,"title":{},"body":{"classes/UpdateFormInput.html":{}}}],["form.input.ts:22",{"_index":1980,"title":{},"body":{"classes/CreateFormInput.html":{}}}],["form.input.ts:24",{"_index":4174,"title":{},"body":{"classes/UpdateFormInput.html":{}}}],["form.input.ts:28",{"_index":4167,"title":{},"body":{"classes/UpdateFormInput.html":{}}}],["form.input.ts:29",{"_index":1986,"title":{},"body":{"classes/CreateFormInput.html":{}}}],["form.input.ts:32",{"_index":4172,"title":{},"body":{"classes/UpdateFormInput.html":{}}}],["form.input.ts:36",{"_index":1999,"title":{},"body":{"classes/CreateFormInput.html":{},"classes/UpdateFormInput.html":{}}}],["form.input.ts:40",{"_index":1982,"title":{},"body":{"classes/CreateFormInput.html":{}}}],["form.input.ts:41",{"_index":4171,"title":{},"body":{"classes/UpdateFormInput.html":{}}}],["form.input.ts:45",{"_index":4173,"title":{},"body":{"classes/UpdateFormInput.html":{}}}],["form.input.ts:47",{"_index":1989,"title":{},"body":{"classes/CreateFormInput.html":{}}}],["form.input.ts:48",{"_index":4166,"title":{},"body":{"classes/UpdateFormInput.html":{}}}],["form.input.ts:51",{"_index":1993,"title":{},"body":{"classes/CreateFormInput.html":{},"classes/UpdateFormInput.html":{}}}],["form.input.ts:55",{"_index":4175,"title":{},"body":{"classes/UpdateFormInput.html":{}}}],["form.name",{"_index":2625,"title":{},"body":{"modules/FormsModule.html":{}}}],["form/entities/form",{"_index":2537,"title":{},"body":{"injectables/FormSubscriptionService.html":{}}}],["form/entities/form.entity",{"_index":2615,"title":{},"body":{"modules/FormsModule.html":{}}}],["form/enums/form",{"_index":2530,"title":{},"body":{"injectables/FormSubscriptionService.html":{}}}],["form/forms.resolver",{"_index":2617,"title":{},"body":{"modules/FormsModule.html":{}}}],["form/forms.service",{"_index":2531,"title":{},"body":{"injectables/FormSubscriptionService.html":{},"modules/FormsModule.html":{}}}],["form_create",{"_index":4686,"title":{},"body":{"miscellaneous/enumerations.html":{},"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["form_document_service_provider",{"_index":2532,"title":{},"body":{"injectables/FormSubscriptionService.html":{}}}],["form_edit",{"_index":4687,"title":{},"body":{"miscellaneous/enumerations.html":{},"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["form_view",{"_index":4685,"title":{},"body":{"miscellaneous/enumerations.html":{},"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["forma",{"_index":4558,"title":{},"body":{"injectables/UsersService.html":{}}}],["formar",{"_index":4532,"title":{},"body":{"injectables/UsersService.html":{}}}],["format",{"_index":1462,"title":{},"body":{"injectables/BusinessService.html":{},"injectables/UserLogService.html":{}}}],["formcollections",{"_index":1994,"title":{},"body":{"classes/CreateFormInput.html":{},"classes/CreateFormSubscriptionInput.html":{},"classes/FindFormsArgs.html":{},"classes/Form.html":{},"classes/FormSubscription.html":{},"injectables/FormSubscriptionService.html":{},"classes/GetSubmittedFilesArgs.html":{},"classes/UpdateFormInput.html":{},"miscellaneous/enumerations.html":{}}}],["formcomponents",{"_index":3886,"title":{},"body":{"injectables/TableService.html":{}}}],["formcomponents.components",{"_index":3889,"title":{},"body":{"injectables/TableService.html":{}}}],["formdocument",{"_index":2441,"title":{},"body":{"classes/Form.html":{}}}],["formdocumentserviceimports",{"_index":2613,"title":{},"body":{"modules/FormsModule.html":{},"overview.html":{}}}],["formdocumentserviceprovider",{"_index":2496,"title":{},"body":{"injectables/FormSubscriptionService.html":{}}}],["formdocumentserviceproviders",{"_index":2624,"title":{},"body":{"modules/FormsModule.html":{}}}],["formfilesubmission",{"_index":972,"title":{},"body":{"classes/Applicant.html":{},"classes/ApplicantState.html":{},"classes/Attachment.html":{},"classes/FormSubmissionFiles.html":{},"interfaces/IAttachment.html":{}}}],["formjson",{"_index":1975,"title":{},"body":{"classes/CreateFormInput.html":{},"classes/Form.html":{},"classes/UpdateFormInput.html":{}}}],["formmodel",{"_index":2631,"title":{},"body":{"injectables/FormsService.html":{}}}],["forms",{"_index":2434,"title":{},"body":{"classes/Form.html":{},"injectables/FormsService.html":{},"classes/Table.html":{},"miscellaneous/enumerations.html":{},"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["forms.args",{"_index":2644,"title":{},"body":{"injectables/FormsService.html":{}}}],["forms.args.ts",{"_index":2420,"title":{},"body":{"classes/FindFormsArgs.html":{}}}],["forms.args.ts:11",{"_index":2421,"title":{},"body":{"classes/FindFormsArgs.html":{}}}],["forms/forms.module",{"_index":865,"title":{},"body":{"modules/AppModule.html":{}}}],["formschema",{"_index":2456,"title":{},"body":{"classes/Form.html":{},"modules/FormsModule.html":{}}}],["formsmodule",{"_index":756,"title":{"modules/FormsModule.html":{}},"body":{"modules/AnnouncementsModule.html":{},"modules/AppModule.html":{},"modules/FormsModule.html":{},"modules/TableModule.html":{},"modules.html":{},"overview.html":{}}}],["formsresolver",{"_index":2616,"title":{},"body":{"modules/FormsModule.html":{}}}],["formsservice",{"_index":2494,"title":{"injectables/FormsService.html":{}},"body":{"injectables/FormSubscriptionService.html":{},"modules/FormsModule.html":{},"injectables/FormsService.html":{},"injectables/TableConfigService.html":{},"injectables/TableService.html":{},"overview.html":{}}}],["formsubmission",{"_index":2458,"title":{"classes/FormSubmission.html":{}},"body":{"classes/FormSubmission.html":{}}}],["formsubmissionfiles",{"_index":2463,"title":{"classes/FormSubmissionFiles.html":{}},"body":{"classes/FormSubmissionFiles.html":{},"injectables/FormSubscriptionService.html":{}}}],["formsubscription",{"_index":2466,"title":{"classes/FormSubscription.html":{}},"body":{"classes/FormSubscription.html":{},"injectables/FormSubscriptionService.html":{},"modules/FormsModule.html":{}}}],["formsubscription.name",{"_index":2627,"title":{},"body":{"modules/FormsModule.html":{}}}],["formsubscriptionmodel",{"_index":2498,"title":{},"body":{"injectables/FormSubscriptionService.html":{}}}],["formsubscriptionresolver",{"_index":2621,"title":{},"body":{"modules/FormsModule.html":{}}}],["formsubscriptionschema",{"_index":2480,"title":{},"body":{"classes/FormSubscription.html":{},"modules/FormsModule.html":{}}}],["formsubscriptionservice",{"_index":2482,"title":{"injectables/FormSubscriptionService.html":{}},"body":{"injectables/FormSubscriptionService.html":{},"modules/FormsModule.html":{},"overview.html":{}}}],["formsubscriptionservice.triggername",{"_index":2553,"title":{},"body":{"injectables/FormSubscriptionService.html":{}}}],["formtag",{"_index":2451,"title":{"classes/FormTag.html":{}},"body":{"classes/Form.html":{},"classes/FormTag.html":{},"injectables/FormTagService.html":{},"modules/FormsModule.html":{}}}],["formtag.name",{"_index":2626,"title":{},"body":{"modules/FormsModule.html":{}}}],["formtagmodel",{"_index":2589,"title":{},"body":{"injectables/FormTagService.html":{}}}],["formtagresolver",{"_index":2618,"title":{},"body":{"modules/FormsModule.html":{}}}],["formtagschema",{"_index":2582,"title":{},"body":{"classes/FormTag.html":{},"modules/FormsModule.html":{}}}],["formtagservice",{"_index":2584,"title":{"injectables/FormTagService.html":{}},"body":{"injectables/FormTagService.html":{},"modules/FormsModule.html":{},"overview.html":{}}}],["formtoclone",{"_index":2650,"title":{},"body":{"injectables/FormsService.html":{}}}],["formulario",{"_index":4857,"title":{},"body":{"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["formularios",{"_index":4855,"title":{},"body":{"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["forwardref",{"_index":381,"title":{},"body":{"modules/ActivitiesConfigModule.html":{},"injectables/ActivitiesConfigService.html":{},"modules/ApplicantModule.html":{},"modules/AuthModule.html":{},"modules/BusinessModule.html":{},"injectables/BusinessService.html":{},"modules/ConfigurationAppModule.html":{},"injectables/ConfigurationAppService.html":{},"modules/ContentModule.html":{},"injectables/ContentService.html":{},"modules/EntrepreneurModule.html":{},"modules/EvaluationsModule.html":{},"modules/EventsModule.html":{},"modules/ExpertModule.html":{},"modules/HelpDeskModule.html":{},"injectables/HelpDeskService.html":{},"modules/IntegrationsModule.html":{},"injectables/IntegrationsService.html":{},"modules/NotificationsModule.html":{},"modules/PhasesModule.html":{},"modules/ResourcesModule.html":{},"modules/ResourcesRepliesModule.html":{},"injectables/ResourcesService.html":{},"modules/StartupModule.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"injectables/UserConfigService.html":{},"modules/UserLogModule.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["found",{"_index":542,"title":{},"body":{"injectables/ActivitiesConfigService.html":{},"injectables/AnnouncementsService.html":{},"injectables/FormSubscriptionService.html":{},"injectables/FormTagService.html":{},"injectables/HelpDeskService.html":{},"injectables/InvitationsService.html":{},"injectables/NotificationsService.html":{},"injectables/RolService.html":{},"injectables/TicketCategoriesService.html":{},"injectables/UsersService.html":{}}}],["framework",{"_index":4759,"title":{},"body":{"index.html":{}}}],["full",{"_index":4255,"title":{},"body":{"classes/User.html":{}}}],["fullname",{"_index":1180,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserInput.html":{},"injectables/InvitationsService.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{}}}],["function",{"_index":1095,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/EmailsRepository.html":{},"guards/GqlAuthGuard.html":{},"interfaces/item_permission.html":{}}}],["functions",{"_index":4743,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["generated",{"_index":959,"title":{},"body":{"classes/Applicant.html":{},"classes/ApplicantState.html":{},"classes/Attachment.html":{},"interfaces/IAttachment.html":{}}}],["generator",{"_index":4603,"title":{},"body":{"dependencies.html":{}}}],["generic",{"_index":1141,"title":{},"body":{"injectables/AuthService.html":{}}}],["get(@query",{"_index":3728,"title":{},"body":{"controllers/StorageController.html":{}}}],["get(query",{"_index":3721,"title":{},"body":{"controllers/StorageController.html":{}}}],["getdocument",{"_index":1325,"title":{},"body":{"injectables/BusinessService.html":{}}}],["getdocument(id",{"_index":1362,"title":{},"body":{"injectables/BusinessService.html":{}}}],["getexpired",{"_index":2996,"title":{},"body":{"classes/Invitation.html":{}}}],["getfilelocation",{"_index":1204,"title":{},"body":{"injectables/AwsService.html":{}}}],["getfilelocation(bucketname",{"_index":1214,"title":{},"body":{"injectables/AwsService.html":{}}}],["gethoursforothers(limit",{"_index":569,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["geticsobjectinstance",{"_index":3554,"title":{},"body":{"classes/SendGridProvider.html":{},"miscellaneous/functions.html":{}}}],["geticsobjectinstance(start_time",{"_index":4749,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getobjectcommand",{"_index":1232,"title":{},"body":{"injectables/AwsService.html":{}}}],["getobjectcommand(config",{"_index":1267,"title":{},"body":{"injectables/AwsService.html":{}}}],["getpermissionlist",{"_index":1078,"title":{},"body":{"injectables/AuthCodeService.html":{},"miscellaneous/functions.html":{}}}],["getpermissionlist(_user",{"_index":1083,"title":{},"body":{"injectables/AuthCodeService.html":{}}}],["getpermissionlist(user",{"_index":4752,"title":{},"body":{"miscellaneous/functions.html":{},"interfaces/item_permission.html":{}}}],["getpresignedurl",{"_index":1205,"title":{},"body":{"injectables/AwsService.html":{},"classes/StorageService.html":{}}}],["getpresignedurl(key",{"_index":1220,"title":{},"body":{"injectables/AwsService.html":{},"classes/StorageService.html":{}}}],["getregistersusers",{"_index":4352,"title":{},"body":{"injectables/UserLogService.html":{}}}],["getrol",{"_index":1134,"title":{},"body":{"injectables/AuthService.html":{}}}],["getrol(id",{"_index":1150,"title":{},"body":{"injectables/AuthService.html":{}}}],["getsignedurl",{"_index":1235,"title":{},"body":{"injectables/AwsService.html":{}}}],["getsignedurl(client",{"_index":1261,"title":{},"body":{"injectables/AwsService.html":{}}}],["getsubmitteddocument",{"_index":2488,"title":{},"body":{"injectables/FormSubscriptionService.html":{}}}],["getsubmitteddocument(id",{"_index":2505,"title":{},"body":{"injectables/FormSubscriptionService.html":{}}}],["getsubmittedfiles",{"_index":2489,"title":{},"body":{"injectables/FormSubscriptionService.html":{}}}],["getsubmittedfiles(id",{"_index":2509,"title":{},"body":{"injectables/FormSubscriptionService.html":{}}}],["getsubmittedfilesargs",{"_index":2656,"title":{"classes/GetSubmittedFilesArgs.html":{}},"body":{"classes/GetSubmittedFilesArgs.html":{}}}],["getting",{"_index":4755,"title":{"index.html":{}},"body":{}}],["gettypes",{"_index":4070,"title":{},"body":{"injectables/TypesNotificationsService.html":{}}}],["getuserregisterweek",{"_index":4353,"title":{},"body":{"injectables/UserLogService.html":{}}}],["getuserregisterweek(user",{"_index":4372,"title":{},"body":{"injectables/UserLogService.html":{}}}],["given",{"_index":1435,"title":{},"body":{"injectables/BusinessService.html":{}}}],["global",{"_index":337,"title":{},"body":{"classes/ActivitiesConfig.html":{},"classes/Assign.html":{},"classes/CreateActivitiesConfigInput.html":{},"classes/Notification.html":{},"classes/activities.html":{},"miscellaneous/variables.html":{}}}],["globalmatch",{"_index":4986,"title":{},"body":{"miscellaneous/variables.html":{}}}],["go",{"_index":5017,"title":{},"body":{"miscellaneous/variables.html":{}}}],["google",{"_index":2901,"title":{},"body":{"injectables/IntegrationsService.html":{},"classes/User.html":{}}}],["googlein",{"_index":3112,"title":{},"body":{"injectables/InvitationsService.html":{},"classes/User.html":{}}}],["googleinmethod",{"_index":3110,"title":{},"body":{"injectables/InvitationsService.html":{}}}],["gql",{"_index":2662,"title":{},"body":{"guards/GqlAuthGuard.html":{}}}],["gqlauthguard",{"_index":2661,"title":{"guards/GqlAuthGuard.html":{}},"body":{"guards/GqlAuthGuard.html":{}}}],["gqlexecutioncontext",{"_index":2665,"title":{},"body":{"guards/GqlAuthGuard.html":{}}}],["gqlexecutioncontext.create(context",{"_index":2667,"title":{},"body":{"guards/GqlAuthGuard.html":{},"miscellaneous/variables.html":{}}}],["gracias",{"_index":682,"title":{},"body":{"classes/Announcement.html":{}}}],["grant_type",{"_index":2871,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["graphql",{"_index":179,"title":{},"body":{"classes/AcceptInvitationDto.html":{},"classes/Acta.html":{},"classes/AddTableJoinInput.html":{},"classes/AnnouncementApplicantArgs.html":{},"classes/AnnouncementApplicantsArgs.html":{},"modules/AppModule.html":{},"classes/Applicant.html":{},"classes/ApplicantArgs.html":{},"classes/ApplicantState.html":{},"classes/Attachment.html":{},"classes/AttachmentSubmit.html":{},"classes/Business.html":{},"classes/BusinessRelationship.html":{},"classes/CloseFormSubscriptionArgs.html":{},"classes/ColumnGroup.html":{},"classes/ConfigurationApp.html":{},"classes/ContactArgs.html":{},"classes/ContactServicesInput.html":{},"classes/Content.html":{},"classes/CreateActaInput.html":{},"classes/CreateActivitiesConfigInput.html":{},"classes/CreateAnnouncementInput.html":{},"classes/CreateConfigEvaluationInput.html":{},"classes/CreateConfigNotificationInput.html":{},"classes/CreateContentInput.html":{},"classes/CreateEventInput.html":{},"classes/CreateFormInput.html":{},"classes/CreateFormSubscriptionInput.html":{},"classes/CreateFormTagInput.html":{},"classes/CreateHelpDeskInput.html":{},"classes/CreateIntegrationInput.html":{},"classes/CreateInvitationArgs.html":{},"classes/CreateNotificationInput.html":{},"classes/CreateParticipationEventInput.html":{},"classes/CreatePhaseInput.html":{},"classes/CreateResourceInput.html":{},"classes/CreateResourcesReplyInput.html":{},"classes/CreateRolInput.html":{},"classes/CreateSiteInput.html":{},"classes/CreateStageInput.html":{},"classes/CreateTableConfigInput.html":{},"classes/CreateTableInput.html":{},"classes/CreateTypesEventInput.html":{},"classes/CreateUserInput.html":{},"classes/CreateUserLogInput.html":{},"classes/Entrepreneur.html":{},"classes/EntrepreneurRelationship.html":{},"classes/EntrepreneurRelationship-1.html":{},"classes/EntrepreneurStartupArgs.html":{},"classes/Evaluation.html":{},"classes/Event.html":{},"classes/Expert.html":{},"classes/ExpertEventLink.html":{},"classes/FindFormsArgs.html":{},"classes/FindInvitationArgs.html":{},"classes/FindUsersArgs.html":{},"classes/FormSubmission.html":{},"classes/FormSubmissionFiles.html":{},"classes/FormSubscription.html":{},"injectables/FormSubscriptionService.html":{},"classes/GetSubmittedFilesArgs.html":{},"classes/HelpDeskFilterInput.html":{},"classes/HelpDeskTicket.html":{},"classes/Hours.html":{},"interfaces/IAttachment.html":{},"classes/Integration.html":{},"classes/Invitation.html":{},"classes/LastContentOutput.html":{},"classes/LinkExpertsToPhaseArgs.html":{},"classes/LinkStartupToPhaseArgs.html":{},"classes/LinkStartupsExpertsArgs.html":{},"classes/LinkWithTargetsArgs.html":{},"classes/LinkWithTargetsByRequestArgs.html":{},"classes/OthersInput.html":{},"classes/ParticipantEventLink.html":{},"classes/ParticipationEvent.html":{},"classes/PhaseExpertRelationship.html":{},"classes/PhaseRelationship.html":{},"classes/RemoveTableJoinInput.html":{},"classes/Resource.html":{},"classes/ResourcesReply.html":{},"classes/SearchBatchInput.html":{},"classes/SelectApplicantsArgs.html":{},"classes/SendEmailInput.html":{},"classes/SignUpInput.html":{},"classes/Startup.html":{},"classes/StartupLink.html":{},"classes/StartupRelationship.html":{},"classes/SubmitAnnouncementDocInput.html":{},"classes/SubmitFileInput.html":{},"classes/SubmitFormSubscriptionArgs.html":{},"classes/Table.html":{},"classes/TableConfig.html":{},"classes/TableJoin.html":{},"classes/TeamCoachLink.html":{},"classes/TemplateInput.html":{},"classes/TermsOfUse.html":{},"classes/TicketChild.html":{},"classes/TypesEvent.html":{},"classes/UpdateActaInput.html":{},"classes/UpdateActivitiesConfigInput.html":{},"classes/UpdateAnnouncementInput.html":{},"classes/UpdateApplicantInput.html":{},"classes/UpdateApplicantStateInput.html":{},"classes/UpdateConfigEvaluationInput.html":{},"classes/UpdateConfigurationAppInput.html":{},"classes/UpdateContentInput.html":{},"classes/UpdateEventInput.html":{},"classes/UpdateExpertInput.html":{},"classes/UpdateFormInput.html":{},"classes/UpdateFormTagInput.html":{},"classes/UpdateHelpDeskInput.html":{},"classes/UpdateIntegrationInput.html":{},"classes/UpdateNotificationInput.html":{},"classes/UpdateParticipationEventInput.html":{},"classes/UpdatePhaseInput.html":{},"classes/UpdateResourceInput.html":{},"classes/UpdateResourcesReplyInput.html":{},"classes/UpdateRolInput.html":{},"classes/UpdateSiteInput.html":{},"classes/UpdateStageInput.html":{},"classes/UpdateTableConfigInput.html":{},"classes/UpdateTermsOfUseInput.html":{},"classes/UpdateTypesEventInput.html":{},"classes/UpdateUserConfigInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"classes/UserConfig.html":{},"classes/UserLog.html":{},"dependencies.html":{}}}],["graphqljson",{"_index":889,"title":{},"body":{"modules/AppModule.html":{},"classes/Applicant.html":{},"classes/ApplicantState.html":{},"classes/Attachment.html":{},"classes/Business.html":{},"classes/BusinessRelationship.html":{},"classes/ColumnGroup.html":{},"classes/CreateFormInput.html":{},"classes/CreateFormSubscriptionInput.html":{},"classes/CreateHelpDeskInput.html":{},"classes/CreateIntegrationInput.html":{},"classes/Entrepreneur.html":{},"classes/EntrepreneurRelationship.html":{},"classes/EntrepreneurRelationship-1.html":{},"classes/Evaluation.html":{},"classes/Expert.html":{},"classes/FormSubmission.html":{},"classes/FormSubmissionFiles.html":{},"classes/FormSubscription.html":{},"classes/HelpDeskFilterInput.html":{},"interfaces/IAttachment.html":{},"classes/Integration.html":{},"classes/Invitation.html":{},"classes/OthersInput.html":{},"classes/PhaseExpertRelationship.html":{},"classes/PhaseRelationship.html":{},"classes/ResourcesReply.html":{},"classes/SearchBatchInput.html":{},"classes/SelectApplicantsArgs.html":{},"classes/Startup.html":{},"classes/StartupLink.html":{},"classes/StartupRelationship.html":{},"classes/SubmitAnnouncementDocInput.html":{},"classes/SubmitFormSubscriptionArgs.html":{},"classes/Table.html":{},"classes/TableConfig.html":{},"classes/TableJoin.html":{},"classes/UpdateHelpDeskInput.html":{},"classes/UpdateTableConfigInput.html":{},"classes/UserLog.html":{}}}],["graphqljsonobject",{"_index":238,"title":{},"body":{"classes/Acta.html":{},"classes/ConfigurationApp.html":{},"classes/ContactServiceLink.html":{},"classes/ContactServicesInput.html":{},"classes/Content.html":{},"classes/CreateActaInput.html":{},"classes/CreateContentInput.html":{},"classes/CreateEventInput.html":{},"classes/CreateParticipationEventInput.html":{},"classes/CreateResourceInput.html":{},"classes/CreateResourcesReplyInput.html":{},"classes/CreateSiteInput.html":{},"classes/CreateTypesEventInput.html":{},"classes/CreateUserLogInput.html":{},"classes/Event.html":{},"classes/ExpertEventLink.html":{},"classes/FindUsersArgs.html":{},"classes/HelpDeskTicket.html":{},"classes/Hours.html":{},"classes/LastContentOutput.html":{},"classes/ParticipantEventLink.html":{},"classes/ParticipationEvent.html":{},"classes/Resource.html":{},"classes/Site.html":{},"classes/TeamCoachLink.html":{},"classes/TermsOfUse.html":{},"classes/TicketChild.html":{},"classes/TypesEvent.html":{},"classes/UpdateActaInput.html":{},"classes/UpdateConfigurationAppInput.html":{},"classes/UpdateContentInput.html":{},"classes/UpdateEventInput.html":{},"classes/UpdateParticipationEventInput.html":{},"classes/UpdateResourceInput.html":{},"classes/UpdateResourcesReplyInput.html":{},"classes/UpdateSiteInput.html":{},"classes/UpdateTermsOfUseInput.html":{},"classes/UpdateTypesEventInput.html":{},"classes/UpdateUserConfigInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"classes/UserConfig.html":{}}}],["graphqlmodule",{"_index":846,"title":{},"body":{"modules/AppModule.html":{}}}],["graphqlmodule.forrootasync",{"_index":926,"title":{},"body":{"modules/AppModule.html":{}}}],["graphqlscalartype",{"_index":3264,"title":{},"body":{"classes/OthersInput.html":{}}}],["graphs",{"_index":1675,"title":{},"body":{"injectables/ConfigurationAppService.html":{}}}],["grid",{"_index":3547,"title":{},"body":{"classes/SendGridProvider.html":{}}}],["group",{"_index":3778,"title":{},"body":{"classes/Table.html":{},"injectables/TableService.html":{}}}],["group.ts",{"_index":1490,"title":{},"body":{"classes/ColumnGroup.html":{}}}],["group.ts:10",{"_index":1496,"title":{},"body":{"classes/ColumnGroup.html":{}}}],["group.ts:13",{"_index":1495,"title":{},"body":{"classes/ColumnGroup.html":{}}}],["group.ts:16",{"_index":1494,"title":{},"body":{"classes/ColumnGroup.html":{}}}],["grow",{"_index":4788,"title":{},"body":{"index.html":{}}}],["gsuite",{"_index":2900,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["gte",{"_index":1583,"title":{},"body":{"injectables/ConfigEvaluationsService.html":{},"injectables/InvitationsService.html":{},"injectables/UserLogService.html":{}}}],["guard",{"_index":1089,"title":{"guards/AuthGuard.html":{},"guards/GqlAuthGuard.html":{}},"body":{}}],["guards",{"_index":1091,"title":{},"body":{"guards/AuthGuard.html":{},"guards/GqlAuthGuard.html":{},"overview.html":{}}}],["h:mm",{"_index":3169,"title":{},"body":{"classes/Notification.html":{}}}],["ha",{"_index":2770,"title":{},"body":{"injectables/HelpDeskService.html":{}}}],["hacer",{"_index":4537,"title":{},"body":{"injectables/UsersService.html":{}}}],["han",{"_index":678,"title":{},"body":{"classes/Announcement.html":{}}}],["handle",{"_index":2514,"title":{},"body":{"injectables/FormSubscriptionService.html":{}}}],["handledocumentsubmit",{"_index":2490,"title":{},"body":{"injectables/FormSubscriptionService.html":{}}}],["handledocumentsubmit(undefined",{"_index":2512,"title":{},"body":{"injectables/FormSubscriptionService.html":{}}}],["having",{"_index":553,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["header",{"_index":1001,"title":{},"body":{"classes/Applicant.html":{},"classes/ApplicantState.html":{},"classes/Attachment.html":{},"guards/AuthGuard.html":{},"injectables/BusinessService.html":{},"guards/GqlAuthGuard.html":{},"interfaces/IAttachment.html":{},"miscellaneous/functions.html":{},"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["headers",{"_index":2877,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["help",{"_index":897,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateHelpDeskInput.html":{},"modules/HelpDeskModule.html":{},"injectables/HelpDeskService.html":{},"classes/HelpDeskTicket.html":{},"injectables/TicketCategoriesService.html":{},"classes/TicketCategory.html":{},"classes/TicketChild.html":{},"classes/UpdateHelpDeskInput.html":{},"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["help_desk_create",{"_index":4689,"title":{},"body":{"miscellaneous/enumerations.html":{},"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["help_desk_edit",{"_index":4690,"title":{},"body":{"miscellaneous/enumerations.html":{},"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["help_desk_view",{"_index":4688,"title":{},"body":{"miscellaneous/enumerations.html":{},"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["helpdeskfilterinput",{"_index":2669,"title":{"classes/HelpDeskFilterInput.html":{}},"body":{"classes/HelpDeskFilterInput.html":{},"injectables/HelpDeskService.html":{}}}],["helpdeskmodule",{"_index":823,"title":{"modules/HelpDeskModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HelpDeskModule.html":{},"modules.html":{},"overview.html":{}}}],["helpdeskresolver",{"_index":2694,"title":{},"body":{"modules/HelpDeskModule.html":{}}}],["helpdeskservice",{"_index":2691,"title":{"injectables/HelpDeskService.html":{}},"body":{"modules/HelpDeskModule.html":{},"injectables/HelpDeskService.html":{},"overview.html":{}}}],["helpdeskticket",{"_index":2698,"title":{"classes/HelpDeskTicket.html":{}},"body":{"modules/HelpDeskModule.html":{},"injectables/HelpDeskService.html":{},"classes/HelpDeskTicket.html":{},"classes/TicketChild.html":{}}}],["helpdeskticket.name",{"_index":2702,"title":{},"body":{"modules/HelpDeskModule.html":{}}}],["helpdeskticketschema",{"_index":2699,"title":{},"body":{"modules/HelpDeskModule.html":{},"classes/HelpDeskTicket.html":{},"classes/TicketChild.html":{}}}],["helpdeskticketupdate",{"_index":4651,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["here",{"_index":1687,"title":{},"body":{"injectables/ConfigurationAppService.html":{},"index.html":{}}}],["hide",{"_index":1744,"title":{},"body":{"classes/Content.html":{},"injectables/ContentService.html":{},"classes/CreateResourceInput.html":{},"classes/Resource.html":{},"classes/UpdateContentInput.html":{},"classes/UpdateResourceInput.html":{}}}],["hilo",{"_index":4556,"title":{},"body":{"injectables/UsersService.html":{},"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["history",{"_index":3273,"title":{},"body":{"classes/ParticipationEvent.html":{}}}],["home/helpdesk",{"_index":2777,"title":{},"body":{"injectables/HelpDeskService.html":{}}}],["home/startup_invitation",{"_index":4525,"title":{},"body":{"injectables/UsersService.html":{}}}],["homework",{"_index":4662,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["homeworks",{"_index":3376,"title":{},"body":{"classes/Resource.html":{},"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["homeworks_evaluate",{"_index":4723,"title":{},"body":{"miscellaneous/enumerations.html":{},"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["homeworks_view",{"_index":4722,"title":{},"body":{"miscellaneous/enumerations.html":{},"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["horas",{"_index":4905,"title":{},"body":{"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["host",{"_index":4741,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["host_save_video_order",{"_index":2945,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["host_video",{"_index":2930,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["hosting",{"_index":2851,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["hours",{"_index":339,"title":{"classes/Hours.html":{}},"body":{"classes/ActivitiesConfig.html":{},"injectables/ActivitiesConfigService.html":{},"classes/Assign.html":{},"classes/CreateActivitiesConfigInput.html":{},"classes/Hours.html":{},"classes/activities.html":{},"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["hours_edit_activities",{"_index":4714,"title":{},"body":{"miscellaneous/enumerations.html":{},"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["hours_edit_experts",{"_index":4716,"title":{},"body":{"miscellaneous/enumerations.html":{},"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["hours_edit_startups",{"_index":4715,"title":{},"body":{"miscellaneous/enumerations.html":{},"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["hours_edit_teamcoach",{"_index":4717,"title":{},"body":{"miscellaneous/enumerations.html":{},"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["hours_view",{"_index":4713,"title":{},"body":{"miscellaneous/enumerations.html":{},"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["hoursassignexpert[expert._id].hours[activity._id",{"_index":595,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["hoursassignexpert[expert._id].startups.push",{"_index":605,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["hoursassignexpert[i._id",{"_index":573,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["hoursassignexperts",{"_index":530,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["hoursassignstartups",{"_index":526,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["hoursassignstartups[i._id",{"_index":535,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["hoursassignstartups[startup._id].hours[activity._id",{"_index":560,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["hoursassignstartups[startupid].hours[activity._id",{"_index":567,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["hoursassignteamcoaches",{"_index":532,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["hoursassignteamcoaches[i._id",{"_index":608,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["hoursassignteamcoaches[teamcoach._id].hours[activity._id",{"_index":616,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["hoursassignteamcoaches[teamcoach._id].startups.push",{"_index":618,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["hoursbagforactivity",{"_index":536,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["hoursbagforactivity.limit",{"_index":546,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["hoursconsumend",{"_index":498,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["hoursconsumend.hours",{"_index":506,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["hoursconsumend.hours[k",{"_index":507,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["hourseach",{"_index":562,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["hoursforothersstartups",{"_index":571,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["hourstarget",{"_index":490,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["hourstarget.hoursassignstartups.filter",{"_index":493,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["html",{"_index":128,"title":{},"body":{"classes/AWSSESProvider.html":{},"classes/Announcement.html":{},"interfaces/EmailsRepository.html":{},"injectables/EmailsService.html":{},"classes/SendEmailInput.html":{},"classes/SendGridProvider.html":{},"injectables/UsersService.html":{}}}],["html'})@prop({default",{"_index":693,"title":{},"body":{"classes/Announcement.html":{}}}],["http",{"_index":2239,"title":{},"body":{"controllers/EmailsController.html":{}}}],["https://api.zoom.us/v2",{"_index":2854,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["https://nestjs.com",{"_index":4801,"title":{},"body":{"index.html":{}}}],["https://zoom.us/oauth/token",{"_index":2876,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["i._id",{"_index":586,"title":{},"body":{"injectables/ActivitiesConfigService.html":{},"injectables/HelpDeskService.html":{}}}],["i._id.tostring",{"_index":600,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["i.activityid",{"_index":558,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["i.email",{"_index":2920,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["i.entityid",{"_index":556,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["i.event.tostring",{"_index":589,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["i.expertfocus",{"_index":576,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["i.experts.find((i",{"_index":585,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["i.fullname",{"_index":610,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["i.hide",{"_index":1889,"title":{},"body":{"injectables/ContentService.html":{}}}],["i.id",{"_index":538,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["i.isdeleted",{"_index":1888,"title":{},"body":{"injectables/ContentService.html":{}}}],["i.metadata['content",{"_index":1849,"title":{},"body":{"injectables/ContentService.html":{}}}],["i.metadata['sprint",{"_index":1851,"title":{},"body":{"injectables/ContentService.html":{}}}],["i.resource.tostring",{"_index":1870,"title":{},"body":{"injectables/ContentService.html":{}}}],["i.to.map((o",{"_index":154,"title":{},"body":{"classes/AWSSESProvider.html":{}}}],["i.type",{"_index":580,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["iactivities",{"_index":365,"title":{},"body":{"classes/ActivitiesConfig.html":{},"classes/Assign.html":{},"classes/UpdateActivitiesConfigInput.html":{},"classes/activities.html":{}}}],["iassign",{"_index":367,"title":{},"body":{"classes/ActivitiesConfig.html":{},"classes/Assign.html":{},"classes/UpdateActivitiesConfigInput.html":{},"classes/activities.html":{}}}],["iattachment",{"_index":1002,"title":{"interfaces/IAttachment.html":{}},"body":{"classes/Applicant.html":{},"classes/ApplicantState.html":{},"classes/Attachment.html":{},"classes/AttachmentSubmit.html":{},"interfaces/IAttachment.html":{},"classes/UpdateApplicantStateInput.html":{}}}],["ical",{"_index":4602,"title":{},"body":{"dependencies.html":{}}}],["icon",{"_index":2137,"title":{},"body":{"classes/CreateStageInput.html":{},"classes/Stage.html":{},"classes/UpdateStageInput.html":{}}}],["iconfigexpert",{"_index":433,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["iconfigstartup",{"_index":470,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["iconfigteamcoach",{"_index":440,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["ics",{"_index":63,"title":{},"body":{"classes/AWSSESProvider.html":{},"injectables/EmailsService.html":{},"classes/SendGridProvider.html":{},"miscellaneous/functions.html":{}}}],["id",{"_index":232,"title":{},"body":{"classes/Acta.html":{},"injectables/ActaService.html":{},"classes/ActivitiesConfig.html":{},"injectables/ActivitiesConfigService.html":{},"classes/AddTableJoinInput.html":{},"classes/Announcement.html":{},"injectables/AnnouncementsService.html":{},"classes/Applicant.html":{},"classes/ApplicantArgs.html":{},"classes/ApplicantState.html":{},"classes/Assign.html":{},"classes/Attachment.html":{},"classes/AttachmentSubmit.html":{},"classes/AuthCode.html":{},"injectables/AuthCodeService.html":{},"injectables/AuthService.html":{},"classes/Business.html":{},"classes/BusinessRelationship.html":{},"injectables/BusinessService.html":{},"classes/CloseFormSubscriptionArgs.html":{},"classes/ConfigEvaluation.html":{},"injectables/ConfigEvaluationsService.html":{},"classes/ConfigurationApp.html":{},"injectables/ConfigurationAppService.html":{},"classes/ContactServiceLink.html":{},"classes/ContactServicesInput.html":{},"classes/Content.html":{},"injectables/ContentService.html":{},"classes/CreateAnnouncementInput.html":{},"classes/CreateTableConfigInput.html":{},"classes/Download.html":{},"classes/Entrepreneur.html":{},"classes/EntrepreneurRelationship.html":{},"classes/EntrepreneurRelationship-1.html":{},"classes/Evaluation.html":{},"classes/Event.html":{},"classes/Expert.html":{},"classes/ExpertEventLink.html":{},"classes/Form.html":{},"classes/FormSubscription.html":{},"injectables/FormSubscriptionService.html":{},"classes/FormTag.html":{},"injectables/FormTagService.html":{},"injectables/FormsService.html":{},"injectables/HelpDeskService.html":{},"classes/HelpDeskTicket.html":{},"interfaces/IAttachment.html":{},"classes/Integration.html":{},"classes/Invitation.html":{},"injectables/InvitationsService.html":{},"classes/Notification-1.html":{},"injectables/NotificationsService.html":{},"classes/ParticipantEventLink.html":{},"classes/ParticipationEvent.html":{},"injectables/ParticipationEventsService.html":{},"classes/Phase.html":{},"classes/PhaseExpertRelationship.html":{},"classes/PhaseRelationship.html":{},"classes/Rating.html":{},"classes/RemoveTableJoinInput.html":{},"classes/Resource.html":{},"classes/ResourcesReply.html":{},"injectables/ResourcesService.html":{},"classes/Rol.html":{},"injectables/RolService.html":{},"classes/Site.html":{},"injectables/SitesService.html":{},"classes/Stage.html":{},"injectables/StagesService.html":{},"classes/Startup.html":{},"classes/StartupLink.html":{},"classes/StartupRelationship.html":{},"classes/SubmitAnnouncementDocInput.html":{},"classes/SubmitFileInput.html":{},"classes/SubmitFormSubscriptionArgs.html":{},"classes/Table.html":{},"classes/TableConfig.html":{},"injectables/TableConfigService.html":{},"injectables/TableService.html":{},"classes/TeamCoachLink.html":{},"classes/TermsOfUse.html":{},"injectables/TermsOfUseService.html":{},"injectables/TicketCategoriesService.html":{},"classes/TicketCategory.html":{},"classes/TicketChild.html":{},"classes/TypesEvent.html":{},"injectables/TypesEventsService.html":{},"classes/TypesNotification.html":{},"classes/UpdateActaInput.html":{},"classes/UpdateActivitiesConfigInput.html":{},"classes/UpdateAnnouncementInput.html":{},"classes/UpdateApplicantInput.html":{},"classes/UpdateApplicantStateInput.html":{},"classes/UpdateConfigEvaluationInput.html":{},"classes/UpdateConfigurationAppInput.html":{},"classes/UpdateContentInput.html":{},"classes/UpdateEventInput.html":{},"classes/UpdateExpertInput.html":{},"classes/UpdateFormInput.html":{},"classes/UpdateFormTagInput.html":{},"classes/UpdateHelpDeskInput.html":{},"classes/UpdateIntegrationInput.html":{},"classes/UpdateNotificationInput.html":{},"classes/UpdateParticipationEventInput.html":{},"classes/UpdatePhaseInput.html":{},"classes/UpdateResourceInput.html":{},"classes/UpdateResourcesReplyInput.html":{},"classes/UpdateRolInput.html":{},"classes/UpdateSiteInput.html":{},"classes/UpdateStageInput.html":{},"classes/UpdateTableConfigInput.html":{},"classes/UpdateTermsOfUseInput.html":{},"classes/UpdateTypesEventInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"classes/UserConfig.html":{},"classes/UserLog.html":{},"injectables/UserLogService.html":{},"injectables/UsersService.html":{},"classes/activities.html":{},"miscellaneous/variables.html":{}}}],["id.'})@isnotempty",{"_index":626,"title":{},"body":{"classes/AddTableJoinInput.html":{},"classes/RemoveTableJoinInput.html":{}}}],["id.'})@isstring",{"_index":3747,"title":{},"body":{"classes/SubmitAnnouncementDocInput.html":{},"classes/SubmitFileInput.html":{}}}],["idapplicant",{"_index":3526,"title":{},"body":{"classes/SelectApplicantsArgs.html":{}}}],["idbatch",{"_index":3527,"title":{},"body":{"classes/SelectApplicantsArgs.html":{}}}],["identifier",{"_index":980,"title":{},"body":{"classes/Applicant.html":{},"classes/ApplicantState.html":{},"classes/Attachment.html":{},"interfaces/IAttachment.html":{},"classes/User.html":{}}}],["identifier.'})@prop({unique",{"_index":4267,"title":{},"body":{"classes/User.html":{}}}],["identify",{"_index":1987,"title":{},"body":{"classes/CreateFormInput.html":{},"classes/CreateTableInput.html":{},"classes/Table.html":{}}}],["ids",{"_index":1346,"title":{},"body":{"injectables/BusinessService.html":{},"injectables/FormTagService.html":{},"classes/LinkWithTargetsArgs.html":{},"injectables/UsersService.html":{}}}],["ids.length",{"_index":4561,"title":{},"body":{"injectables/UsersService.html":{}}}],["ids.map((id",{"_index":1457,"title":{},"body":{"injectables/BusinessService.html":{}}}],["idsorting",{"_index":4981,"title":{},"body":{"miscellaneous/variables.html":{}}}],["idsstartups",{"_index":2754,"title":{},"body":{"injectables/HelpDeskService.html":{}}}],["idtoken",{"_index":1149,"title":{},"body":{"injectables/AuthService.html":{}}}],["iduser",{"_index":4377,"title":{},"body":{"injectables/UserLogService.html":{}}}],["ientityevent",{"_index":2371,"title":{},"body":{"classes/Event.html":{},"classes/ExpertEventLink.html":{},"classes/ParticipantEventLink.html":{},"classes/TeamCoachLink.html":{}}}],["ifileupload",{"_index":2039,"title":{},"body":{"classes/CreateHelpDeskInput.html":{},"classes/HelpDeskTicket.html":{},"classes/TicketChild.html":{}}}],["ifnull",{"_index":4996,"title":{},"body":{"miscellaneous/variables.html":{}}}],["iformdocument",{"_index":2454,"title":{},"body":{"classes/Form.html":{},"classes/UpdateFormInput.html":{}}}],["ignore",{"_index":246,"title":{},"body":{"classes/Acta.html":{},"classes/ActivitiesConfig.html":{},"injectables/ActivitiesConfigService.html":{},"classes/Announcement.html":{},"classes/Applicant.html":{},"classes/ApplicantState.html":{},"classes/Assign.html":{},"classes/Attachment.html":{},"classes/AuthCode.html":{},"classes/Business.html":{},"classes/BusinessRelationship.html":{},"classes/ConfigEvaluation.html":{},"classes/ConfigurationApp.html":{},"classes/ContactServiceLink.html":{},"classes/ContactServicesInput.html":{},"classes/Content.html":{},"classes/CreateEventInput.html":{},"classes/Download.html":{},"interfaces/EmailsRepository.html":{},"classes/Entrepreneur.html":{},"classes/EntrepreneurRelationship.html":{},"classes/EntrepreneurRelationship-1.html":{},"classes/Evaluation.html":{},"classes/Event.html":{},"classes/Expert.html":{},"classes/ExpertEventLink.html":{},"classes/Form.html":{},"classes/FormSubscription.html":{},"injectables/FormSubscriptionService.html":{},"classes/FormTag.html":{},"classes/HelpDeskTicket.html":{},"interfaces/IAttachment.html":{},"classes/Integration.html":{},"injectables/IntegrationsService.html":{},"classes/LinkStartupsExpertsArgs.html":{},"classes/Notification-1.html":{},"injectables/NotificationsService.html":{},"classes/ParticipantEventLink.html":{},"classes/ParticipationEvent.html":{},"classes/Phase.html":{},"classes/PhaseExpertRelationship.html":{},"classes/PhaseRelationship.html":{},"classes/Resource.html":{},"classes/ResourcesReply.html":{},"classes/Rol.html":{},"classes/Site.html":{},"classes/Stage.html":{},"classes/Startup.html":{},"classes/StartupLink.html":{},"classes/StartupRelationship.html":{},"classes/Table.html":{},"classes/TableConfig.html":{},"classes/TableJoin.html":{},"classes/TeamCoachLink.html":{},"classes/TermsOfUse.html":{},"injectables/TermsOfUseService.html":{},"classes/TicketCategory.html":{},"classes/TicketChild.html":{},"classes/TypesEvent.html":{},"classes/TypesNotification.html":{},"classes/UpdateActivitiesConfigInput.html":{},"classes/UpdateFormInput.html":{},"classes/UpdateSiteInput.html":{},"classes/User.html":{},"classes/UserConfig.html":{},"classes/UserLog.html":{},"classes/activities.html":{}}}],["image",{"_index":712,"title":{},"body":{"classes/Announcement.html":{},"classes/ContactServiceLink.html":{},"classes/Phase.html":{},"classes/Site.html":{}}}],["implement",{"_index":1411,"title":{},"body":{"injectables/BusinessService.html":{}}}],["implements",{"_index":11,"title":{},"body":{"classes/AWSSESProvider.html":{},"classes/ActivitiesConfig.html":{},"classes/Applicant.html":{},"classes/ApplicantState.html":{},"classes/Assign.html":{},"classes/Attachment.html":{},"classes/AttachmentSubmit.html":{},"guards/AuthGuard.html":{},"injectables/AwsService.html":{},"classes/Event.html":{},"classes/ExpertEventLink.html":{},"classes/Form.html":{},"guards/GqlAuthGuard.html":{},"interfaces/IAttachment.html":{},"classes/ParticipantEventLink.html":{},"injectables/RolService.html":{},"classes/SendGridProvider.html":{},"injectables/StagesService.html":{},"classes/TeamCoachLink.html":{},"injectables/TypesEventsService.html":{},"injectables/TypesNotificationsService.html":{},"classes/UpdateActivitiesConfigInput.html":{},"classes/UpdateApplicantStateInput.html":{},"classes/UpdateFormInput.html":{},"classes/activities.html":{}}}],["implies",{"_index":5034,"title":{},"body":{"miscellaneous/variables.html":{}}}],["import",{"_index":64,"title":{},"body":{"classes/AWSSESProvider.html":{},"classes/AcceptInvitationDto.html":{},"classes/Acta.html":{},"modules/ActaModule.html":{},"injectables/ActaService.html":{},"classes/ActivitiesConfig.html":{},"modules/ActivitiesConfigModule.html":{},"injectables/ActivitiesConfigService.html":{},"classes/AddTableJoinInput.html":{},"classes/Announcement.html":{},"classes/AnnouncementApplicantArgs.html":{},"classes/AnnouncementApplicantsArgs.html":{},"modules/AnnouncementsModule.html":{},"injectables/AnnouncementsService.html":{},"modules/AppModule.html":{},"classes/Applicant.html":{},"classes/ApplicantArgs.html":{},"modules/ApplicantModule.html":{},"classes/ApplicantState.html":{},"classes/Assign.html":{},"classes/Attachment.html":{},"classes/AttachmentSubmit.html":{},"classes/AuthCode.html":{},"modules/AuthCodeModule.html":{},"injectables/AuthCodeService.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/AwsService.html":{},"classes/Business.html":{},"modules/BusinessModule.html":{},"classes/BusinessRelationship.html":{},"injectables/BusinessService.html":{},"classes/CloseFormSubscriptionArgs.html":{},"classes/ColumnGroup.html":{},"classes/ConfigEvaluation.html":{},"modules/ConfigEvaluationsModule.html":{},"injectables/ConfigEvaluationsService.html":{},"modules/ConfigNotificationsModule.html":{},"injectables/ConfigNotificationsService.html":{},"classes/ConfigurationApp.html":{},"modules/ConfigurationAppModule.html":{},"injectables/ConfigurationAppService.html":{},"classes/ContactArgs.html":{},"classes/ContactServiceLink.html":{},"classes/ContactServicesInput.html":{},"classes/Content.html":{},"modules/ContentModule.html":{},"injectables/ContentService.html":{},"classes/CreateActaInput.html":{},"classes/CreateActivitiesConfigInput.html":{},"classes/CreateAnnouncementInput.html":{},"classes/CreateConfigEvaluationInput.html":{},"classes/CreateConfigNotificationInput.html":{},"classes/CreateContentInput.html":{},"classes/CreateEventInput.html":{},"classes/CreateFormInput.html":{},"classes/CreateFormSubscriptionInput.html":{},"classes/CreateFormTagInput.html":{},"classes/CreateHelpDeskInput.html":{},"classes/CreateIntegrationInput.html":{},"classes/CreateInvitationArgs.html":{},"classes/CreateNotificationInput.html":{},"classes/CreateParticipationEventInput.html":{},"classes/CreatePhaseInput.html":{},"classes/CreateResourceInput.html":{},"classes/CreateResourcesReplyInput.html":{},"classes/CreateRolInput.html":{},"classes/CreateSiteInput.html":{},"classes/CreateStageInput.html":{},"classes/CreateTableConfigInput.html":{},"classes/CreateTableInput.html":{},"classes/CreateTypesEventInput.html":{},"classes/CreateUserInput.html":{},"classes/CreateUserLogInput.html":{},"classes/Download.html":{},"modules/DownloadsModule.html":{},"injectables/DownloadsService.html":{},"controllers/EmailsController.html":{},"modules/EmailsModule.html":{},"interfaces/EmailsRepository.html":{},"injectables/EmailsService.html":{},"classes/Entrepreneur.html":{},"modules/EntrepreneurModule.html":{},"classes/EntrepreneurRelationship.html":{},"classes/EntrepreneurRelationship-1.html":{},"classes/EntrepreneurStartupArgs.html":{},"classes/Evaluation.html":{},"modules/EvaluationsModule.html":{},"classes/Event.html":{},"modules/EventsModule.html":{},"classes/Expert.html":{},"classes/ExpertEventLink.html":{},"modules/ExpertModule.html":{},"classes/FindFormsArgs.html":{},"classes/FindInvitationArgs.html":{},"classes/FindUsersArgs.html":{},"classes/Form.html":{},"classes/FormSubmission.html":{},"classes/FormSubmissionFiles.html":{},"classes/FormSubscription.html":{},"injectables/FormSubscriptionService.html":{},"classes/FormTag.html":{},"injectables/FormTagService.html":{},"modules/FormsModule.html":{},"injectables/FormsService.html":{},"classes/GetSubmittedFilesArgs.html":{},"guards/GqlAuthGuard.html":{},"classes/HelpDeskFilterInput.html":{},"modules/HelpDeskModule.html":{},"injectables/HelpDeskService.html":{},"classes/HelpDeskTicket.html":{},"classes/Hours.html":{},"interfaces/IAttachment.html":{},"classes/Integration.html":{},"modules/IntegrationsModule.html":{},"injectables/IntegrationsService.html":{},"classes/Invitation.html":{},"controllers/InvitationsController.html":{},"modules/InvitationsModule.html":{},"injectables/InvitationsService.html":{},"classes/LastContentOutput.html":{},"classes/LinkExpertsToPhaseArgs.html":{},"classes/LinkStartupToPhaseArgs.html":{},"classes/LinkStartupsExpertsArgs.html":{},"classes/LinkWithTargetsArgs.html":{},"classes/LinkWithTargetsByRequestArgs.html":{},"modules/LoggerModule.html":{},"classes/Notification.html":{},"classes/Notification-1.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"classes/OthersInput.html":{},"classes/ParticipantEventLink.html":{},"classes/ParticipationEvent.html":{},"modules/ParticipationEventsModule.html":{},"injectables/ParticipationEventsService.html":{},"classes/Phase.html":{},"classes/PhaseExpertRelationship.html":{},"classes/PhaseRelationship.html":{},"modules/PhasesModule.html":{},"classes/Rating.html":{},"classes/RemoveTableJoinInput.html":{},"classes/Resource.html":{},"modules/ResourcesModule.html":{},"modules/ResourcesRepliesModule.html":{},"classes/ResourcesReply.html":{},"injectables/ResourcesService.html":{},"classes/Rol.html":{},"modules/RolModule.html":{},"injectables/RolService.html":{},"classes/SearchBatchInput.html":{},"classes/SelectApplicantsArgs.html":{},"classes/SendEmailInput.html":{},"classes/SendGridProvider.html":{},"classes/SignUpInput.html":{},"classes/Site.html":{},"modules/SitesModule.html":{},"injectables/SitesService.html":{},"classes/Stage.html":{},"modules/StagesModule.html":{},"injectables/StagesService.html":{},"classes/Startup.html":{},"classes/StartupLink.html":{},"modules/StartupModule.html":{},"classes/StartupRelationship.html":{},"controllers/StorageController.html":{},"modules/StorageModule.html":{},"classes/StorageService.html":{},"classes/SubmitAnnouncementDocInput.html":{},"classes/SubmitFileInput.html":{},"classes/SubmitFormSubscriptionArgs.html":{},"classes/Table.html":{},"classes/TableConfig.html":{},"injectables/TableConfigService.html":{},"classes/TableJoin.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"classes/TeamCoachLink.html":{},"classes/TemplateInput.html":{},"classes/TermsOfUse.html":{},"modules/TermsOfUseModule.html":{},"injectables/TermsOfUseService.html":{},"modules/TicketCategoriesModule.html":{},"injectables/TicketCategoriesService.html":{},"classes/TicketCategory.html":{},"classes/TicketChild.html":{},"classes/TypesEvent.html":{},"modules/TypesEventsModule.html":{},"injectables/TypesEventsService.html":{},"classes/TypesNotification.html":{},"modules/TypesNotificationsModule.html":{},"injectables/TypesNotificationsService.html":{},"classes/UpdateActaInput.html":{},"classes/UpdateActivitiesConfigInput.html":{},"classes/UpdateAnnouncementInput.html":{},"classes/UpdateApplicantInput.html":{},"classes/UpdateApplicantStateInput.html":{},"classes/UpdateConfigEvaluationInput.html":{},"classes/UpdateConfigurationAppInput.html":{},"classes/UpdateContentInput.html":{},"classes/UpdateEventInput.html":{},"classes/UpdateExpertInput.html":{},"classes/UpdateFormInput.html":{},"classes/UpdateFormTagInput.html":{},"classes/UpdateHelpDeskInput.html":{},"classes/UpdateIntegrationInput.html":{},"classes/UpdateNotificationInput.html":{},"classes/UpdateParticipationEventInput.html":{},"classes/UpdatePhaseInput.html":{},"classes/UpdateResourceInput.html":{},"classes/UpdateResourcesReplyInput.html":{},"classes/UpdateRolInput.html":{},"classes/UpdateSiteInput.html":{},"classes/UpdateStageInput.html":{},"classes/UpdateTableConfigInput.html":{},"classes/UpdateTermsOfUseInput.html":{},"classes/UpdateTypesEventInput.html":{},"classes/UpdateUserConfigInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"classes/UserConfig.html":{},"modules/UserConfigModule.html":{},"injectables/UserConfigService.html":{},"classes/UserLog.html":{},"modules/UserLogModule.html":{},"injectables/UserLogService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/activities.html":{},"interfaces/item_permission.html":{}}}],["imports",{"_index":269,"title":{},"body":{"modules/ActaModule.html":{},"modules/ActivitiesConfigModule.html":{},"modules/AnnouncementsModule.html":{},"modules/AppModule.html":{},"modules/ApplicantModule.html":{},"modules/AuthCodeModule.html":{},"modules/AuthModule.html":{},"modules/BusinessModule.html":{},"modules/ConfigEvaluationsModule.html":{},"modules/ConfigNotificationsModule.html":{},"modules/ConfigurationAppModule.html":{},"modules/ContentModule.html":{},"modules/DownloadsModule.html":{},"modules/EmailsModule.html":{},"modules/EntrepreneurModule.html":{},"modules/EvaluationsModule.html":{},"modules/EventsModule.html":{},"modules/ExpertModule.html":{},"modules/FormsModule.html":{},"modules/HelpDeskModule.html":{},"modules/IntegrationsModule.html":{},"modules/InvitationsModule.html":{},"modules/NotificationsModule.html":{},"modules/ParticipationEventsModule.html":{},"modules/PhasesModule.html":{},"modules/ResourcesModule.html":{},"modules/ResourcesRepliesModule.html":{},"modules/RolModule.html":{},"modules/SitesModule.html":{},"modules/StagesModule.html":{},"modules/StartupModule.html":{},"modules/TableModule.html":{},"modules/TermsOfUseModule.html":{},"modules/TicketCategoriesModule.html":{},"modules/TypesEventsModule.html":{},"modules/TypesNotificationsModule.html":{},"modules/UserConfigModule.html":{},"modules/UserLogModule.html":{},"modules/UsersModule.html":{}}}],["include",{"_index":666,"title":{},"body":{"classes/Announcement.html":{},"injectables/UserConfigService.html":{}}}],["index",{"_index":13,"title":{"index.html":{}},"body":{"classes/AWSSESProvider.html":{},"classes/AcceptInvitationDto.html":{},"classes/Acta.html":{},"injectables/ActaService.html":{},"classes/ActivitiesConfig.html":{},"injectables/ActivitiesConfigService.html":{},"classes/AddTableJoinInput.html":{},"classes/Announcement.html":{},"classes/AnnouncementApplicantArgs.html":{},"classes/AnnouncementApplicantsArgs.html":{},"injectables/AnnouncementsService.html":{},"classes/Applicant.html":{},"classes/ApplicantArgs.html":{},"classes/ApplicantState.html":{},"classes/Assign.html":{},"classes/Attachment.html":{},"classes/AttachmentSubmit.html":{},"classes/AuthCode.html":{},"injectables/AuthCodeService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AwsService.html":{},"classes/Business.html":{},"classes/BusinessRelationship.html":{},"injectables/BusinessService.html":{},"classes/CloseFormSubscriptionArgs.html":{},"classes/ColumnGroup.html":{},"classes/ConfigEvaluation.html":{},"injectables/ConfigEvaluationsService.html":{},"injectables/ConfigNotificationsService.html":{},"classes/ConfigurationApp.html":{},"injectables/ConfigurationAppService.html":{},"classes/ContactArgs.html":{},"classes/ContactServiceLink.html":{},"classes/ContactServicesInput.html":{},"classes/Content.html":{},"injectables/ContentService.html":{},"classes/CreateActaInput.html":{},"classes/CreateActivitiesConfigInput.html":{},"classes/CreateAnnouncementInput.html":{},"classes/CreateConfigEvaluationInput.html":{},"classes/CreateConfigNotificationInput.html":{},"classes/CreateContentInput.html":{},"classes/CreateEventInput.html":{},"classes/CreateFormInput.html":{},"classes/CreateFormSubscriptionInput.html":{},"classes/CreateFormTagInput.html":{},"classes/CreateHelpDeskInput.html":{},"classes/CreateIntegrationInput.html":{},"classes/CreateInvitationArgs.html":{},"classes/CreateNotificationInput.html":{},"classes/CreateParticipationEventInput.html":{},"classes/CreatePhaseInput.html":{},"classes/CreateResourceInput.html":{},"classes/CreateResourcesReplyInput.html":{},"classes/CreateRolInput.html":{},"classes/CreateSiteInput.html":{},"classes/CreateStageInput.html":{},"classes/CreateTableConfigInput.html":{},"classes/CreateTableInput.html":{},"classes/CreateTypesEventInput.html":{},"classes/CreateUserInput.html":{},"classes/CreateUserLogInput.html":{},"classes/Download.html":{},"injectables/DownloadsService.html":{},"controllers/EmailsController.html":{},"interfaces/EmailsRepository.html":{},"injectables/EmailsService.html":{},"classes/Entrepreneur.html":{},"classes/EntrepreneurRelationship.html":{},"classes/EntrepreneurRelationship-1.html":{},"classes/EntrepreneurStartupArgs.html":{},"classes/Evaluation.html":{},"classes/Event.html":{},"classes/Expert.html":{},"classes/ExpertEventLink.html":{},"classes/FindFormsArgs.html":{},"classes/FindInvitationArgs.html":{},"classes/FindUsersArgs.html":{},"classes/Form.html":{},"classes/FormSubmission.html":{},"classes/FormSubmissionFiles.html":{},"classes/FormSubscription.html":{},"injectables/FormSubscriptionService.html":{},"classes/FormTag.html":{},"injectables/FormTagService.html":{},"injectables/FormsService.html":{},"classes/GetSubmittedFilesArgs.html":{},"guards/GqlAuthGuard.html":{},"classes/HelpDeskFilterInput.html":{},"injectables/HelpDeskService.html":{},"classes/HelpDeskTicket.html":{},"classes/Hours.html":{},"interfaces/IAttachment.html":{},"classes/Integration.html":{},"injectables/IntegrationsService.html":{},"classes/Invitation.html":{},"controllers/InvitationsController.html":{},"injectables/InvitationsService.html":{},"classes/LastContentOutput.html":{},"classes/LinkExpertsToPhaseArgs.html":{},"classes/LinkStartupToPhaseArgs.html":{},"classes/LinkStartupsExpertsArgs.html":{},"classes/LinkWithTargetsArgs.html":{},"classes/LinkWithTargetsByRequestArgs.html":{},"classes/Notification.html":{},"classes/Notification-1.html":{},"injectables/NotificationsService.html":{},"classes/OthersInput.html":{},"classes/ParticipantEventLink.html":{},"classes/ParticipationEvent.html":{},"injectables/ParticipationEventsService.html":{},"classes/Phase.html":{},"classes/PhaseExpertRelationship.html":{},"classes/PhaseRelationship.html":{},"classes/Rating.html":{},"classes/RemoveTableJoinInput.html":{},"classes/Resource.html":{},"classes/ResourcesReply.html":{},"injectables/ResourcesService.html":{},"classes/Rol.html":{},"injectables/RolService.html":{},"classes/SearchBatchInput.html":{},"classes/SelectApplicantsArgs.html":{},"classes/SendEmailInput.html":{},"classes/SendGridProvider.html":{},"classes/SignUpInput.html":{},"classes/Site.html":{},"injectables/SitesService.html":{},"classes/Stage.html":{},"injectables/StagesService.html":{},"classes/Startup.html":{},"classes/StartupLink.html":{},"classes/StartupRelationship.html":{},"controllers/StorageController.html":{},"classes/StorageService.html":{},"classes/SubmitAnnouncementDocInput.html":{},"classes/SubmitFileInput.html":{},"classes/SubmitFormSubscriptionArgs.html":{},"classes/Table.html":{},"classes/TableConfig.html":{},"injectables/TableConfigService.html":{},"classes/TableJoin.html":{},"injectables/TableService.html":{},"classes/TeamCoachLink.html":{},"classes/TemplateInput.html":{},"classes/TermsOfUse.html":{},"injectables/TermsOfUseService.html":{},"injectables/TicketCategoriesService.html":{},"classes/TicketCategory.html":{},"classes/TicketChild.html":{},"classes/TypesEvent.html":{},"injectables/TypesEventsService.html":{},"classes/TypesNotification.html":{},"injectables/TypesNotificationsService.html":{},"classes/UpdateActaInput.html":{},"classes/UpdateActivitiesConfigInput.html":{},"classes/UpdateAnnouncementInput.html":{},"classes/UpdateApplicantInput.html":{},"classes/UpdateApplicantStateInput.html":{},"classes/UpdateConfigEvaluationInput.html":{},"classes/UpdateConfigurationAppInput.html":{},"classes/UpdateContentInput.html":{},"classes/UpdateEventInput.html":{},"classes/UpdateExpertInput.html":{},"classes/UpdateFormInput.html":{},"classes/UpdateFormTagInput.html":{},"classes/UpdateHelpDeskInput.html":{},"classes/UpdateIntegrationInput.html":{},"classes/UpdateNotificationInput.html":{},"classes/UpdateParticipationEventInput.html":{},"classes/UpdatePhaseInput.html":{},"classes/UpdateResourceInput.html":{},"classes/UpdateResourcesReplyInput.html":{},"classes/UpdateRolInput.html":{},"classes/UpdateSiteInput.html":{},"classes/UpdateStageInput.html":{},"classes/UpdateTableConfigInput.html":{},"classes/UpdateTermsOfUseInput.html":{},"classes/UpdateTypesEventInput.html":{},"classes/UpdateUserConfigInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"classes/UserConfig.html":{},"injectables/UserConfigService.html":{},"classes/UserLog.html":{},"injectables/UserLogService.html":{},"injectables/UsersService.html":{},"classes/activities.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["indexes",{"_index":5001,"title":{},"body":{"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AWSSESProvider.html":{},"classes/AcceptInvitationDto.html":{},"classes/Acta.html":{},"modules/ActaModule.html":{},"injectables/ActaService.html":{},"classes/ActivitiesConfig.html":{},"modules/ActivitiesConfigModule.html":{},"injectables/ActivitiesConfigService.html":{},"classes/AddTableJoinInput.html":{},"classes/Announcement.html":{},"classes/AnnouncementApplicantArgs.html":{},"classes/AnnouncementApplicantsArgs.html":{},"modules/AnnouncementsModule.html":{},"injectables/AnnouncementsService.html":{},"modules/AppModule.html":{},"classes/Applicant.html":{},"classes/ApplicantArgs.html":{},"modules/ApplicantModule.html":{},"classes/ApplicantState.html":{},"classes/Assign.html":{},"classes/Attachment.html":{},"classes/AttachmentSubmit.html":{},"classes/AuthCode.html":{},"modules/AuthCodeModule.html":{},"injectables/AuthCodeService.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/AwsService.html":{},"classes/Business.html":{},"modules/BusinessModule.html":{},"classes/BusinessRelationship.html":{},"injectables/BusinessService.html":{},"classes/CloseFormSubscriptionArgs.html":{},"classes/ColumnGroup.html":{},"classes/ConfigEvaluation.html":{},"modules/ConfigEvaluationsModule.html":{},"injectables/ConfigEvaluationsService.html":{},"modules/ConfigNotificationsModule.html":{},"injectables/ConfigNotificationsService.html":{},"classes/ConfigurationApp.html":{},"modules/ConfigurationAppModule.html":{},"injectables/ConfigurationAppService.html":{},"classes/ContactArgs.html":{},"classes/ContactServiceLink.html":{},"classes/ContactServicesInput.html":{},"classes/Content.html":{},"modules/ContentModule.html":{},"injectables/ContentService.html":{},"classes/CreateActaInput.html":{},"classes/CreateActivitiesConfigInput.html":{},"classes/CreateAnnouncementInput.html":{},"classes/CreateConfigEvaluationInput.html":{},"classes/CreateConfigNotificationInput.html":{},"classes/CreateContentInput.html":{},"classes/CreateEventInput.html":{},"classes/CreateFormInput.html":{},"classes/CreateFormSubscriptionInput.html":{},"classes/CreateFormTagInput.html":{},"classes/CreateHelpDeskInput.html":{},"classes/CreateIntegrationInput.html":{},"classes/CreateInvitationArgs.html":{},"classes/CreateNotificationInput.html":{},"classes/CreateParticipationEventInput.html":{},"classes/CreatePhaseInput.html":{},"classes/CreateResourceInput.html":{},"classes/CreateResourcesReplyInput.html":{},"classes/CreateRolInput.html":{},"classes/CreateSiteInput.html":{},"classes/CreateStageInput.html":{},"classes/CreateTableConfigInput.html":{},"classes/CreateTableInput.html":{},"classes/CreateTypesEventInput.html":{},"classes/CreateUserInput.html":{},"classes/CreateUserLogInput.html":{},"classes/Download.html":{},"modules/DownloadsModule.html":{},"injectables/DownloadsService.html":{},"controllers/EmailsController.html":{},"modules/EmailsModule.html":{},"interfaces/EmailsRepository.html":{},"injectables/EmailsService.html":{},"classes/Entrepreneur.html":{},"modules/EntrepreneurModule.html":{},"classes/EntrepreneurRelationship.html":{},"classes/EntrepreneurRelationship-1.html":{},"classes/EntrepreneurStartupArgs.html":{},"classes/Evaluation.html":{},"modules/EvaluationsModule.html":{},"classes/Event.html":{},"modules/EventsModule.html":{},"classes/Expert.html":{},"classes/ExpertEventLink.html":{},"modules/ExpertModule.html":{},"classes/FindFormsArgs.html":{},"classes/FindInvitationArgs.html":{},"classes/FindUsersArgs.html":{},"classes/Form.html":{},"classes/FormSubmission.html":{},"classes/FormSubmissionFiles.html":{},"classes/FormSubscription.html":{},"injectables/FormSubscriptionService.html":{},"classes/FormTag.html":{},"injectables/FormTagService.html":{},"modules/FormsModule.html":{},"injectables/FormsService.html":{},"classes/GetSubmittedFilesArgs.html":{},"guards/GqlAuthGuard.html":{},"classes/HelpDeskFilterInput.html":{},"modules/HelpDeskModule.html":{},"injectables/HelpDeskService.html":{},"classes/HelpDeskTicket.html":{},"classes/Hours.html":{},"interfaces/IAttachment.html":{},"classes/Integration.html":{},"modules/IntegrationsModule.html":{},"injectables/IntegrationsService.html":{},"classes/Invitation.html":{},"controllers/InvitationsController.html":{},"modules/InvitationsModule.html":{},"injectables/InvitationsService.html":{},"classes/LastContentOutput.html":{},"classes/LinkExpertsToPhaseArgs.html":{},"classes/LinkStartupToPhaseArgs.html":{},"classes/LinkStartupsExpertsArgs.html":{},"classes/LinkWithTargetsArgs.html":{},"classes/LinkWithTargetsByRequestArgs.html":{},"modules/LoggerModule.html":{},"classes/Notification.html":{},"classes/Notification-1.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"classes/OthersInput.html":{},"classes/ParticipantEventLink.html":{},"classes/ParticipationEvent.html":{},"modules/ParticipationEventsModule.html":{},"injectables/ParticipationEventsService.html":{},"classes/Phase.html":{},"classes/PhaseExpertRelationship.html":{},"classes/PhaseRelationship.html":{},"modules/PhasesModule.html":{},"classes/Rating.html":{},"classes/RemoveTableJoinInput.html":{},"classes/Resource.html":{},"modules/ResourcesModule.html":{},"modules/ResourcesRepliesModule.html":{},"classes/ResourcesReply.html":{},"injectables/ResourcesService.html":{},"classes/Rol.html":{},"modules/RolModule.html":{},"injectables/RolService.html":{},"classes/SearchBatchInput.html":{},"classes/SelectApplicantsArgs.html":{},"classes/SendEmailInput.html":{},"classes/SendGridProvider.html":{},"classes/SignUpInput.html":{},"classes/Site.html":{},"modules/SitesModule.html":{},"injectables/SitesService.html":{},"classes/Stage.html":{},"modules/StagesModule.html":{},"injectables/StagesService.html":{},"classes/Startup.html":{},"classes/StartupLink.html":{},"modules/StartupModule.html":{},"classes/StartupRelationship.html":{},"controllers/StorageController.html":{},"modules/StorageModule.html":{},"classes/StorageService.html":{},"classes/SubmitAnnouncementDocInput.html":{},"classes/SubmitFileInput.html":{},"classes/SubmitFormSubscriptionArgs.html":{},"classes/Table.html":{},"classes/TableConfig.html":{},"injectables/TableConfigService.html":{},"classes/TableJoin.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"classes/TeamCoachLink.html":{},"classes/TemplateInput.html":{},"classes/TermsOfUse.html":{},"modules/TermsOfUseModule.html":{},"injectables/TermsOfUseService.html":{},"modules/TicketCategoriesModule.html":{},"injectables/TicketCategoriesService.html":{},"classes/TicketCategory.html":{},"classes/TicketChild.html":{},"classes/TypesEvent.html":{},"modules/TypesEventsModule.html":{},"injectables/TypesEventsService.html":{},"classes/TypesNotification.html":{},"modules/TypesNotificationsModule.html":{},"injectables/TypesNotificationsService.html":{},"classes/UpdateActaInput.html":{},"classes/UpdateActivitiesConfigInput.html":{},"classes/UpdateAnnouncementInput.html":{},"classes/UpdateApplicantInput.html":{},"classes/UpdateApplicantStateInput.html":{},"classes/UpdateConfigEvaluationInput.html":{},"classes/UpdateConfigurationAppInput.html":{},"classes/UpdateContentInput.html":{},"classes/UpdateEventInput.html":{},"classes/UpdateExpertInput.html":{},"classes/UpdateFormInput.html":{},"classes/UpdateFormTagInput.html":{},"classes/UpdateHelpDeskInput.html":{},"classes/UpdateIntegrationInput.html":{},"classes/UpdateNotificationInput.html":{},"classes/UpdateParticipationEventInput.html":{},"classes/UpdatePhaseInput.html":{},"classes/UpdateResourceInput.html":{},"classes/UpdateResourcesReplyInput.html":{},"classes/UpdateRolInput.html":{},"classes/UpdateSiteInput.html":{},"classes/UpdateStageInput.html":{},"classes/UpdateTableConfigInput.html":{},"classes/UpdateTermsOfUseInput.html":{},"classes/UpdateTypesEventInput.html":{},"classes/UpdateUserConfigInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"classes/UserConfig.html":{},"modules/UserConfigModule.html":{},"injectables/UserConfigService.html":{},"classes/UserLog.html":{},"modules/UserLogModule.html":{},"injectables/UserLogService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/activities.html":{},"interfaces/item_permission.html":{}}}],["información",{"_index":4842,"title":{},"body":{"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["information",{"_index":2811,"title":{},"body":{"classes/Integration.html":{},"classes/Invitation.html":{}}}],["infosemana",{"_index":1566,"title":{},"body":{"injectables/ConfigEvaluationsService.html":{},"injectables/UserLogService.html":{}}}],["infousers.push",{"_index":4418,"title":{},"body":{"injectables/UserLogService.html":{}}}],["infoweekdates",{"_index":4386,"title":{},"body":{"injectables/UserLogService.html":{},"miscellaneous/functions.html":{}}}],["initgraph",{"_index":1667,"title":{},"body":{"injectables/ConfigurationAppService.html":{}}}],["initgraph(user",{"_index":1673,"title":{},"body":{"injectables/ConfigurationAppService.html":{}}}],["initial",{"_index":3876,"title":{},"body":{"injectables/TableService.html":{}}}],["initialconfig",{"_index":3874,"title":{},"body":{"injectables/TableService.html":{}}}],["initialconfigdata",{"_index":3870,"title":{},"body":{"injectables/TableService.html":{}}}],["initialize",{"_index":3499,"title":{},"body":{"injectables/RolService.html":{},"injectables/StagesService.html":{},"injectables/TypesEventsService.html":{},"injectables/TypesNotificationsService.html":{}}}],["initializes",{"_index":1677,"title":{},"body":{"injectables/ConfigurationAppService.html":{}}}],["inject",{"_index":460,"title":{},"body":{"injectables/ActivitiesConfigService.html":{},"modules/AppModule.html":{},"injectables/BusinessService.html":{},"injectables/ConfigurationAppService.html":{},"injectables/ContentService.html":{},"injectables/EmailsService.html":{},"injectables/FormSubscriptionService.html":{},"injectables/HelpDeskService.html":{},"injectables/IntegrationsService.html":{},"injectables/ResourcesService.html":{},"injectables/TableService.html":{},"injectables/UserConfigService.html":{},"injectables/UsersService.html":{}}}],["inject(email_token",{"_index":2274,"title":{},"body":{"injectables/EmailsService.html":{}}}],["inject(form_document_service_provider",{"_index":2542,"title":{},"body":{"injectables/FormSubscriptionService.html":{}}}],["inject(forwardref",{"_index":486,"title":{},"body":{"injectables/ActivitiesConfigService.html":{},"injectables/BusinessService.html":{},"injectables/ConfigurationAppService.html":{},"injectables/ContentService.html":{},"injectables/HelpDeskService.html":{},"injectables/IntegrationsService.html":{},"injectables/ResourcesService.html":{},"injectables/TableService.html":{},"injectables/UserConfigService.html":{},"injectables/UsersService.html":{}}}],["injectable",{"_index":279,"title":{"injectables/ActaService.html":{},"injectables/ActivitiesConfigService.html":{},"injectables/AnnouncementsService.html":{},"injectables/AuthCodeService.html":{},"injectables/AuthService.html":{},"injectables/AwsService.html":{},"injectables/BusinessService.html":{},"injectables/ConfigEvaluationsService.html":{},"injectables/ConfigNotificationsService.html":{},"injectables/ConfigurationAppService.html":{},"injectables/ContentService.html":{},"injectables/DownloadsService.html":{},"injectables/EmailsService.html":{},"injectables/FormSubscriptionService.html":{},"injectables/FormTagService.html":{},"injectables/FormsService.html":{},"injectables/HelpDeskService.html":{},"injectables/IntegrationsService.html":{},"injectables/InvitationsService.html":{},"injectables/NotificationsService.html":{},"injectables/ParticipationEventsService.html":{},"injectables/ResourcesService.html":{},"injectables/RolService.html":{},"injectables/SitesService.html":{},"injectables/StagesService.html":{},"injectables/TableConfigService.html":{},"injectables/TableService.html":{},"injectables/TermsOfUseService.html":{},"injectables/TicketCategoriesService.html":{},"injectables/TypesEventsService.html":{},"injectables/TypesNotificationsService.html":{},"injectables/UserConfigService.html":{},"injectables/UserLogService.html":{},"injectables/UsersService.html":{}},"body":{"injectables/ActaService.html":{},"injectables/ActivitiesConfigService.html":{},"injectables/AnnouncementsService.html":{},"injectables/AuthCodeService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AwsService.html":{},"injectables/BusinessService.html":{},"injectables/ConfigEvaluationsService.html":{},"injectables/ConfigNotificationsService.html":{},"injectables/ConfigurationAppService.html":{},"injectables/ContentService.html":{},"injectables/DownloadsService.html":{},"injectables/EmailsService.html":{},"injectables/FormSubscriptionService.html":{},"injectables/FormTagService.html":{},"injectables/FormsService.html":{},"guards/GqlAuthGuard.html":{},"injectables/HelpDeskService.html":{},"injectables/IntegrationsService.html":{},"injectables/InvitationsService.html":{},"injectables/NotificationsService.html":{},"injectables/ParticipationEventsService.html":{},"injectables/ResourcesService.html":{},"injectables/RolService.html":{},"injectables/SitesService.html":{},"injectables/StagesService.html":{},"injectables/TableConfigService.html":{},"injectables/TableService.html":{},"injectables/TermsOfUseService.html":{},"injectables/TicketCategoriesService.html":{},"injectables/TypesEventsService.html":{},"injectables/TypesNotificationsService.html":{},"injectables/UserConfigService.html":{},"injectables/UserLogService.html":{},"injectables/UsersService.html":{}}}],["injectables",{"_index":280,"title":{},"body":{"injectables/ActaService.html":{},"injectables/ActivitiesConfigService.html":{},"injectables/AnnouncementsService.html":{},"injectables/AuthCodeService.html":{},"injectables/AuthService.html":{},"injectables/AwsService.html":{},"injectables/BusinessService.html":{},"injectables/ConfigEvaluationsService.html":{},"injectables/ConfigNotificationsService.html":{},"injectables/ConfigurationAppService.html":{},"injectables/ContentService.html":{},"injectables/DownloadsService.html":{},"injectables/EmailsService.html":{},"injectables/FormSubscriptionService.html":{},"injectables/FormTagService.html":{},"injectables/FormsService.html":{},"injectables/HelpDeskService.html":{},"injectables/IntegrationsService.html":{},"injectables/InvitationsService.html":{},"injectables/NotificationsService.html":{},"injectables/ParticipationEventsService.html":{},"injectables/ResourcesService.html":{},"injectables/RolService.html":{},"injectables/SitesService.html":{},"injectables/StagesService.html":{},"injectables/TableConfigService.html":{},"injectables/TableService.html":{},"injectables/TermsOfUseService.html":{},"injectables/TicketCategoriesService.html":{},"injectables/TypesEventsService.html":{},"injectables/TypesNotificationsService.html":{},"injectables/UserConfigService.html":{},"injectables/UserLogService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injectmodel",{"_index":316,"title":{},"body":{"injectables/ActaService.html":{},"injectables/ActivitiesConfigService.html":{},"injectables/AnnouncementsService.html":{},"injectables/AuthCodeService.html":{},"injectables/BusinessService.html":{},"injectables/ConfigEvaluationsService.html":{},"injectables/ConfigNotificationsService.html":{},"injectables/ConfigurationAppService.html":{},"injectables/ContentService.html":{},"injectables/DownloadsService.html":{},"injectables/FormSubscriptionService.html":{},"injectables/FormTagService.html":{},"injectables/FormsService.html":{},"injectables/HelpDeskService.html":{},"injectables/IntegrationsService.html":{},"injectables/InvitationsService.html":{},"injectables/NotificationsService.html":{},"injectables/ParticipationEventsService.html":{},"injectables/ResourcesService.html":{},"injectables/RolService.html":{},"injectables/SitesService.html":{},"injectables/StagesService.html":{},"injectables/TableConfigService.html":{},"injectables/TableService.html":{},"injectables/TermsOfUseService.html":{},"injectables/TicketCategoriesService.html":{},"injectables/TypesEventsService.html":{},"injectables/TypesNotificationsService.html":{},"injectables/UserConfigService.html":{},"injectables/UserLogService.html":{},"injectables/UsersService.html":{}}}],["injectmodel(acta.name",{"_index":318,"title":{},"body":{"injectables/ActaService.html":{}}}],["injectmodel(activitiesconfig.name",{"_index":485,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["injectmodel(announcement.name",{"_index":791,"title":{},"body":{"injectables/AnnouncementsService.html":{}}}],["injectmodel(authcode.name",{"_index":1080,"title":{},"body":{"injectables/AuthCodeService.html":{}}}],["injectmodel(business.name",{"_index":1398,"title":{},"body":{"injectables/BusinessService.html":{}}}],["injectmodel(configevaluation.name",{"_index":1556,"title":{},"body":{"injectables/ConfigEvaluationsService.html":{}}}],["injectmodel(confignotification.name",{"_index":1622,"title":{},"body":{"injectables/ConfigNotificationsService.html":{}}}],["injectmodel(configurationapp.name",{"_index":1683,"title":{},"body":{"injectables/ConfigurationAppService.html":{}}}],["injectmodel(content.name",{"_index":1823,"title":{},"body":{"injectables/ContentService.html":{}}}],["injectmodel(download.name",{"_index":2215,"title":{},"body":{"injectables/DownloadsService.html":{}}}],["injectmodel(form.name",{"_index":2645,"title":{},"body":{"injectables/FormsService.html":{}}}],["injectmodel(formsubscription.name",{"_index":2541,"title":{},"body":{"injectables/FormSubscriptionService.html":{}}}],["injectmodel(formtag.name",{"_index":2601,"title":{},"body":{"injectables/FormTagService.html":{}}}],["injectmodel(helpdeskticket.name",{"_index":2733,"title":{},"body":{"injectables/HelpDeskService.html":{}}}],["injectmodel(integration.name",{"_index":2864,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["injectmodel(invitation.name",{"_index":3059,"title":{},"body":{"injectables/InvitationsService.html":{}}}],["injectmodel(notification.name",{"_index":3226,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["injectmodel(participationevent.name",{"_index":3308,"title":{},"body":{"injectables/ParticipationEventsService.html":{}}}],["injectmodel(resource.name",{"_index":3458,"title":{},"body":{"injectables/ResourcesService.html":{}}}],["injectmodel(site.name",{"_index":3619,"title":{},"body":{"injectables/SitesService.html":{}}}],["injectmodel(stage.name",{"_index":3674,"title":{},"body":{"injectables/StagesService.html":{}}}],["injectmodel(table.name",{"_index":3866,"title":{},"body":{"injectables/TableService.html":{}}}],["injectmodel(tableconfig.name",{"_index":3808,"title":{},"body":{"injectables/TableConfigService.html":{}}}],["injectmodel(termsofuse.name",{"_index":3964,"title":{},"body":{"injectables/TermsOfUseService.html":{}}}],["injectmodel(ticketcategory.name",{"_index":3998,"title":{},"body":{"injectables/TicketCategoriesService.html":{}}}],["injectmodel(typesevent.name",{"_index":4050,"title":{},"body":{"injectables/TypesEventsService.html":{}}}],["injectmodel(typesnotification.name",{"_index":4074,"title":{},"body":{"injectables/TypesNotificationsService.html":{}}}],["injectmodel(user.name",{"_index":4486,"title":{},"body":{"injectables/UsersService.html":{}}}],["injectmodel(userconfig.name",{"_index":4305,"title":{},"body":{"injectables/UserConfigService.html":{}}}],["injectmodel(userlog.name",{"_index":4388,"title":{},"body":{"injectables/UserLogService.html":{}}}],["inner",{"_index":3783,"title":{},"body":{"classes/TableConfig.html":{}}}],["inprogress",{"_index":4738,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["input",{"_index":180,"title":{},"body":{"classes/AcceptInvitationDto.html":{},"classes/AnnouncementApplicantArgs.html":{},"classes/AnnouncementApplicantsArgs.html":{},"classes/ApplicantArgs.html":{},"classes/AttachmentSubmit.html":{},"classes/CloseFormSubscriptionArgs.html":{},"classes/ContactArgs.html":{},"classes/CreateActaInput.html":{},"classes/CreateActivitiesConfigInput.html":{},"classes/CreateAnnouncementInput.html":{},"classes/CreateConfigEvaluationInput.html":{},"classes/CreateConfigNotificationInput.html":{},"classes/CreateContentInput.html":{},"classes/CreateEventInput.html":{},"classes/CreateFormInput.html":{},"classes/CreateFormSubscriptionInput.html":{},"classes/CreateHelpDeskInput.html":{},"classes/CreateIntegrationInput.html":{},"classes/CreateInvitationArgs.html":{},"classes/CreateNotificationInput.html":{},"classes/CreateParticipationEventInput.html":{},"classes/CreatePhaseInput.html":{},"classes/CreateResourceInput.html":{},"classes/CreateResourcesReplyInput.html":{},"classes/CreateRolInput.html":{},"classes/CreateTypesEventInput.html":{},"classes/EntrepreneurStartupArgs.html":{},"classes/FindFormsArgs.html":{},"classes/FindInvitationArgs.html":{},"classes/FormSubmission.html":{},"classes/FormSubmissionFiles.html":{},"classes/GetSubmittedFilesArgs.html":{},"classes/HelpDeskFilterInput.html":{},"classes/LastContentOutput.html":{},"classes/LinkExpertsToPhaseArgs.html":{},"classes/LinkStartupToPhaseArgs.html":{},"classes/LinkStartupsExpertsArgs.html":{},"classes/LinkWithTargetsArgs.html":{},"classes/LinkWithTargetsByRequestArgs.html":{},"classes/OthersInput.html":{},"classes/SearchBatchInput.html":{},"classes/SelectApplicantsArgs.html":{},"classes/SendEmailInput.html":{},"classes/SignUpInput.html":{},"classes/SubmitAnnouncementDocInput.html":{},"classes/SubmitFileInput.html":{},"classes/SubmitFormSubscriptionArgs.html":{},"classes/TemplateInput.html":{},"classes/UpdateActaInput.html":{},"classes/UpdateActivitiesConfigInput.html":{},"classes/UpdateAnnouncementInput.html":{},"classes/UpdateApplicantInput.html":{},"classes/UpdateApplicantStateInput.html":{},"classes/UpdateConfigEvaluationInput.html":{},"classes/UpdateContentInput.html":{},"classes/UpdateEventInput.html":{},"classes/UpdateExpertInput.html":{},"classes/UpdateFormInput.html":{},"classes/UpdateHelpDeskInput.html":{},"classes/UpdateIntegrationInput.html":{},"classes/UpdateNotificationInput.html":{},"classes/UpdateParticipationEventInput.html":{},"classes/UpdatePhaseInput.html":{},"classes/UpdateResourceInput.html":{},"classes/UpdateResourcesReplyInput.html":{},"classes/UpdateRolInput.html":{},"classes/UpdateTypesEventInput.html":{}}}],["inputformdocument",{"_index":4168,"title":{},"body":{"classes/UpdateFormInput.html":{}}}],["inputs",{"_index":624,"title":{},"body":{"classes/AddTableJoinInput.html":{},"classes/ContactServicesInput.html":{},"classes/CreateFormTagInput.html":{},"classes/CreateSiteInput.html":{},"classes/CreateStageInput.html":{},"classes/CreateTableConfigInput.html":{},"classes/CreateTableInput.html":{},"classes/CreateUserInput.html":{},"classes/CreateUserLogInput.html":{},"classes/FindUsersArgs.html":{},"classes/RemoveTableJoinInput.html":{},"classes/UpdateFormTagInput.html":{},"classes/UpdateSiteInput.html":{},"classes/UpdateStageInput.html":{},"classes/UpdateTableConfigInput.html":{},"classes/UpdateTermsOfUseInput.html":{},"classes/UpdateUserConfigInput.html":{},"classes/UpdateUserInput.html":{}}}],["inputs/submit",{"_index":2535,"title":{},"body":{"injectables/FormSubscriptionService.html":{}}}],["inputtype",{"_index":633,"title":{},"body":{"classes/AddTableJoinInput.html":{},"classes/AttachmentSubmit.html":{},"classes/ContactServicesInput.html":{},"classes/CreateActaInput.html":{},"classes/CreateActivitiesConfigInput.html":{},"classes/CreateAnnouncementInput.html":{},"classes/CreateConfigEvaluationInput.html":{},"classes/CreateConfigNotificationInput.html":{},"classes/CreateContentInput.html":{},"classes/CreateEventInput.html":{},"classes/CreateFormInput.html":{},"classes/CreateFormSubscriptionInput.html":{},"classes/CreateFormTagInput.html":{},"classes/CreateHelpDeskInput.html":{},"classes/CreateIntegrationInput.html":{},"classes/CreateNotificationInput.html":{},"classes/CreateParticipationEventInput.html":{},"classes/CreatePhaseInput.html":{},"classes/CreateResourceInput.html":{},"classes/CreateResourcesReplyInput.html":{},"classes/CreateRolInput.html":{},"classes/CreateSiteInput.html":{},"classes/CreateStageInput.html":{},"classes/CreateTableConfigInput.html":{},"classes/CreateTableInput.html":{},"classes/CreateTypesEventInput.html":{},"classes/CreateUserInput.html":{},"classes/CreateUserLogInput.html":{},"classes/HelpDeskFilterInput.html":{},"classes/LinkStartupsExpertsArgs.html":{},"classes/OthersInput.html":{},"classes/RemoveTableJoinInput.html":{},"classes/SearchBatchInput.html":{},"classes/SignUpInput.html":{},"classes/SubmitAnnouncementDocInput.html":{},"classes/SubmitFileInput.html":{},"classes/TableJoin.html":{},"classes/UpdateActaInput.html":{},"classes/UpdateActivitiesConfigInput.html":{},"classes/UpdateAnnouncementInput.html":{},"classes/UpdateApplicantInput.html":{},"classes/UpdateApplicantStateInput.html":{},"classes/UpdateConfigEvaluationInput.html":{},"classes/UpdateConfigurationAppInput.html":{},"classes/UpdateContentInput.html":{},"classes/UpdateEventInput.html":{},"classes/UpdateExpertInput.html":{},"classes/UpdateFormInput.html":{},"classes/UpdateFormTagInput.html":{},"classes/UpdateHelpDeskInput.html":{},"classes/UpdateIntegrationInput.html":{},"classes/UpdateNotificationInput.html":{},"classes/UpdateParticipationEventInput.html":{},"classes/UpdatePhaseInput.html":{},"classes/UpdateResourceInput.html":{},"classes/UpdateResourcesReplyInput.html":{},"classes/UpdateRolInput.html":{},"classes/UpdateSiteInput.html":{},"classes/UpdateStageInput.html":{},"classes/UpdateTableConfigInput.html":{},"classes/UpdateTermsOfUseInput.html":{},"classes/UpdateTypesEventInput.html":{},"classes/UpdateUserConfigInput.html":{},"classes/UpdateUserInput.html":{}}}],["inside",{"_index":2508,"title":{},"body":{"injectables/FormSubscriptionService.html":{},"miscellaneous/variables.html":{}}}],["installation",{"_index":4768,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":4771,"title":{},"body":{"index.html":{}}}],["instance",{"_index":2540,"title":{},"body":{"injectables/FormSubscriptionService.html":{},"injectables/HelpDeskService.html":{},"injectables/NotificationsService.html":{},"miscellaneous/functions.html":{}}}],["int",{"_index":362,"title":{},"body":{"classes/ActivitiesConfig.html":{},"classes/Assign.html":{},"classes/ContactServicesInput.html":{},"classes/CreateActaInput.html":{},"classes/CreateActivitiesConfigInput.html":{},"classes/CreateConfigEvaluationInput.html":{},"classes/CreateConfigNotificationInput.html":{},"classes/CreateEventInput.html":{},"classes/CreateHelpDeskInput.html":{},"classes/CreateIntegrationInput.html":{},"classes/CreateNotificationInput.html":{},"classes/CreateParticipationEventInput.html":{},"classes/CreatePhaseInput.html":{},"classes/CreateResourcesReplyInput.html":{},"classes/CreateSiteInput.html":{},"classes/CreateStageInput.html":{},"classes/CreateTypesEventInput.html":{},"classes/CreateUserLogInput.html":{},"classes/FindInvitationArgs.html":{},"classes/HelpDeskFilterInput.html":{},"classes/HelpDeskTicket.html":{},"classes/Notification-1.html":{},"classes/Rating.html":{},"classes/Stage.html":{},"classes/TicketChild.html":{},"classes/UpdateActaInput.html":{},"classes/UpdateActivitiesConfigInput.html":{},"classes/UpdateApplicantInput.html":{},"classes/UpdateConfigEvaluationInput.html":{},"classes/UpdateConfigurationAppInput.html":{},"classes/UpdateContentInput.html":{},"classes/UpdateEventInput.html":{},"classes/UpdateHelpDeskInput.html":{},"classes/UpdateIntegrationInput.html":{},"classes/UpdateNotificationInput.html":{},"classes/UpdateParticipationEventInput.html":{},"classes/UpdatePhaseInput.html":{},"classes/UpdateResourceInput.html":{},"classes/UpdateResourcesReplyInput.html":{},"classes/UpdateRolInput.html":{},"classes/UpdateSiteInput.html":{},"classes/UpdateStageInput.html":{},"classes/UpdateTermsOfUseInput.html":{},"classes/UpdateTypesEventInput.html":{},"classes/activities.html":{}}}],["integrate",{"_index":2898,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["integration",{"_index":2801,"title":{"classes/Integration.html":{}},"body":{"classes/Integration.html":{},"modules/IntegrationsModule.html":{},"injectables/IntegrationsService.html":{}}}],["integration.input",{"_index":2855,"title":{},"body":{"injectables/IntegrationsService.html":{},"classes/UpdateIntegrationInput.html":{}}}],["integration.input.ts",{"_index":2049,"title":{},"body":{"classes/CreateIntegrationInput.html":{},"classes/UpdateIntegrationInput.html":{}}}],["integration.input.ts:11",{"_index":4186,"title":{},"body":{"classes/UpdateIntegrationInput.html":{}}}],["integration.input.ts:13",{"_index":2052,"title":{},"body":{"classes/CreateIntegrationInput.html":{}}}],["integration.input.ts:18",{"_index":2055,"title":{},"body":{"classes/CreateIntegrationInput.html":{}}}],["integration.input.ts:22",{"_index":2053,"title":{},"body":{"classes/CreateIntegrationInput.html":{}}}],["integration.metadata['accountid",{"_index":2874,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["integration.metadata['clientid']}:${integration.metadata['clientsecret",{"_index":2883,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["integration.metadata['email",{"_index":2904,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["integration.name",{"_index":2827,"title":{},"body":{"modules/IntegrationsModule.html":{}}}],["integrationmodel",{"_index":2837,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["integrations",{"_index":2803,"title":{},"body":{"classes/Integration.html":{},"miscellaneous/enumerations.html":{}}}],["integrations.resolver",{"_index":2825,"title":{},"body":{"modules/IntegrationsModule.html":{}}}],["integrations.service",{"_index":2823,"title":{},"body":{"modules/IntegrationsModule.html":{}}}],["integrations/integrations.module",{"_index":907,"title":{},"body":{"modules/AppModule.html":{}}}],["integrationschema",{"_index":2815,"title":{},"body":{"classes/Integration.html":{},"modules/IntegrationsModule.html":{}}}],["integrationsmodule",{"_index":824,"title":{"modules/IntegrationsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/EventsModule.html":{},"modules/IntegrationsModule.html":{},"modules.html":{},"overview.html":{}}}],["integrationsresolver",{"_index":2824,"title":{},"body":{"modules/IntegrationsModule.html":{}}}],["integrationsservice",{"_index":2821,"title":{"injectables/IntegrationsService.html":{}},"body":{"modules/IntegrationsModule.html":{},"injectables/IntegrationsService.html":{},"overview.html":{}}}],["intended",{"_index":1342,"title":{},"body":{"injectables/BusinessService.html":{}}}],["interface",{"_index":370,"title":{"interfaces/EmailsRepository.html":{},"interfaces/IAttachment.html":{},"interfaces/item_permission.html":{}},"body":{"classes/ActivitiesConfig.html":{},"classes/Applicant.html":{},"classes/ApplicantState.html":{},"classes/Assign.html":{},"classes/Attachment.html":{},"interfaces/EmailsRepository.html":{},"classes/Event.html":{},"classes/ExpertEventLink.html":{},"classes/Form.html":{},"interfaces/IAttachment.html":{},"classes/ParticipantEventLink.html":{},"classes/TeamCoachLink.html":{},"classes/activities.html":{},"interfaces/item_permission.html":{}}}],["interfaces",{"_index":2264,"title":{},"body":{"interfaces/EmailsRepository.html":{},"interfaces/IAttachment.html":{},"interfaces/item_permission.html":{},"overview.html":{}}}],["intermediario",{"_index":4550,"title":{},"body":{"injectables/UsersService.html":{}}}],["internal_meeting",{"_index":2947,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["internalservererrorexception",{"_index":76,"title":{},"body":{"classes/AWSSESProvider.html":{},"injectables/AuthCodeService.html":{},"injectables/AwsService.html":{},"injectables/BusinessService.html":{},"injectables/ConfigNotificationsService.html":{},"injectables/EmailsService.html":{},"injectables/FormSubscriptionService.html":{},"injectables/IntegrationsService.html":{},"injectables/InvitationsService.html":{},"injectables/NotificationsService.html":{},"classes/SendGridProvider.html":{},"injectables/TableService.html":{},"injectables/TicketCategoriesService.html":{},"miscellaneous/variables.html":{}}}],["internalservererrorexception('failed",{"_index":3085,"title":{},"body":{"injectables/InvitationsService.html":{}}}],["internalservererrorexception(`check",{"_index":4000,"title":{},"body":{"injectables/TicketCategoriesService.html":{}}}],["internalservererrorexception(`error",{"_index":3246,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["internalservererrorexception(error",{"_index":2888,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["invalid",{"_index":1173,"title":{},"body":{"injectables/AuthService.html":{}}}],["investor/investor.module",{"_index":872,"title":{},"body":{"modules/AppModule.html":{}}}],["investormodule",{"_index":871,"title":{},"body":{"modules/AppModule.html":{}}}],["invitación",{"_index":5061,"title":{},"body":{"miscellaneous/variables.html":{}}}],["invitar",{"_index":4531,"title":{},"body":{"injectables/UsersService.html":{}}}],["invitation",{"_index":2973,"title":{"classes/Invitation.html":{}},"body":{"classes/Invitation.html":{},"controllers/InvitationsController.html":{},"modules/InvitationsModule.html":{},"injectables/InvitationsService.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{}}}],["invitation.args",{"_index":3054,"title":{},"body":{"injectables/InvitationsService.html":{}}}],["invitation.args.ts",{"_index":2060,"title":{},"body":{"classes/CreateInvitationArgs.html":{},"classes/FindInvitationArgs.html":{}}}],["invitation.args.ts:11",{"_index":2426,"title":{},"body":{"classes/FindInvitationArgs.html":{}}}],["invitation.args.ts:13",{"_index":2062,"title":{},"body":{"classes/CreateInvitationArgs.html":{}}}],["invitation.args.ts:15",{"_index":2425,"title":{},"body":{"classes/FindInvitationArgs.html":{}}}],["invitation.args.ts:18",{"_index":2064,"title":{},"body":{"classes/CreateInvitationArgs.html":{}}}],["invitation.code",{"_index":3093,"title":{},"body":{"injectables/InvitationsService.html":{}}}],["invitation.dto",{"_index":3014,"title":{},"body":{"controllers/InvitationsController.html":{},"injectables/InvitationsService.html":{}}}],["invitation.dto.ts",{"_index":178,"title":{},"body":{"classes/AcceptInvitationDto.html":{}}}],["invitation.dto.ts:12",{"_index":186,"title":{},"body":{"classes/AcceptInvitationDto.html":{}}}],["invitation.dto.ts:16",{"_index":188,"title":{},"body":{"classes/AcceptInvitationDto.html":{}}}],["invitation.dto.ts:8",{"_index":187,"title":{},"body":{"classes/AcceptInvitationDto.html":{}}}],["invitation.email",{"_index":3078,"title":{},"body":{"injectables/InvitationsService.html":{}}}],["invitation.expired",{"_index":3102,"title":{},"body":{"injectables/InvitationsService.html":{}}}],["invitation.name",{"_index":3028,"title":{},"body":{"modules/InvitationsModule.html":{}}}],["invitation.save",{"_index":3100,"title":{},"body":{"injectables/InvitationsService.html":{}}}],["invitation.state",{"_index":3091,"title":{},"body":{"injectables/InvitationsService.html":{}}}],["invitationdata",{"_index":3073,"title":{},"body":{"injectables/InvitationsService.html":{}}}],["invitationmodel",{"_index":3035,"title":{},"body":{"injectables/InvitationsService.html":{}}}],["invitations",{"_index":2975,"title":{},"body":{"classes/Invitation.html":{},"controllers/InvitationsController.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["invitations.controller",{"_index":3025,"title":{},"body":{"modules/InvitationsModule.html":{}}}],["invitations.resolver",{"_index":3024,"title":{},"body":{"modules/InvitationsModule.html":{}}}],["invitations.service",{"_index":3012,"title":{},"body":{"controllers/InvitationsController.html":{},"modules/InvitationsModule.html":{}}}],["invitations/invitations.module",{"_index":857,"title":{},"body":{"modules/AppModule.html":{}}}],["invitationschema",{"_index":3026,"title":{},"body":{"modules/InvitationsModule.html":{}}}],["invitationscontroller",{"_index":3004,"title":{"controllers/InvitationsController.html":{}},"body":{"controllers/InvitationsController.html":{},"modules/InvitationsModule.html":{}}}],["invitationsmodule",{"_index":825,"title":{"modules/InvitationsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ApplicantModule.html":{},"modules/InvitationsModule.html":{},"modules.html":{},"overview.html":{}}}],["invitationsresolver",{"_index":3023,"title":{},"body":{"modules/InvitationsModule.html":{}}}],["invitationsservice",{"_index":3011,"title":{"injectables/InvitationsService.html":{}},"body":{"controllers/InvitationsController.html":{},"modules/InvitationsModule.html":{},"injectables/InvitationsService.html":{},"overview.html":{}}}],["invitationstates",{"_index":2993,"title":{},"body":{"classes/Invitation.html":{},"injectables/InvitationsService.html":{},"miscellaneous/enumerations.html":{}}}],["invitationstates.accepted",{"_index":3098,"title":{},"body":{"injectables/InvitationsService.html":{}}}],["invitationstates.disabled",{"_index":3095,"title":{},"body":{"injectables/InvitationsService.html":{}}}],["invitationstates.enabled",{"_index":2999,"title":{},"body":{"classes/Invitation.html":{},"injectables/InvitationsService.html":{}}}],["invitationtemplate",{"_index":3055,"title":{},"body":{"injectables/InvitationsService.html":{},"classes/TemplateInput.html":{}}}],["invitationtoevent",{"_index":4645,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["invitatión",{"_index":5123,"title":{},"body":{"miscellaneous/variables.html":{}}}],["invite",{"_index":4447,"title":{},"body":{"injectables/UsersService.html":{}}}],["invite${event._id}.ics",{"_index":3572,"title":{},"body":{"classes/SendGridProvider.html":{}}}],["invite(contactargs",{"_index":4471,"title":{},"body":{"injectables/UsersService.html":{}}}],["isactive",{"_index":3317,"title":{},"body":{"classes/Phase.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["isarray",{"_index":1038,"title":{},"body":{"classes/AttachmentSubmit.html":{},"classes/EntrepreneurStartupArgs.html":{},"classes/LinkWithTargetsArgs.html":{},"classes/LinkWithTargetsByRequestArgs.html":{},"classes/UpdateApplicantStateInput.html":{}}}],["isboolean",{"_index":4191,"title":{},"body":{"classes/UpdateNotificationInput.html":{}}}],["iscanceled",{"_index":2350,"title":{},"body":{"classes/Event.html":{},"classes/ExpertEventLink.html":{},"classes/ParticipantEventLink.html":{},"classes/TeamCoachLink.html":{},"classes/UpdateEventInput.html":{}}}],["isdate",{"_index":1929,"title":{},"body":{"classes/CreateAnnouncementInput.html":{},"classes/UpdateAnnouncementInput.html":{}}}],["isdefined",{"_index":3138,"title":{},"body":{"classes/LinkStartupsExpertsArgs.html":{},"classes/UpdateActivitiesConfigInput.html":{},"classes/UpdateFormInput.html":{}}}],["isdeleted",{"_index":201,"title":{},"body":{"classes/Acta.html":{},"injectables/ActaService.html":{},"classes/ActivitiesConfig.html":{},"injectables/ActivitiesConfigService.html":{},"classes/Assign.html":{},"classes/ConfigEvaluation.html":{},"injectables/ConfigEvaluationsService.html":{},"classes/ContactServiceLink.html":{},"classes/ContactServicesInput.html":{},"classes/Content.html":{},"injectables/ContentService.html":{},"classes/Evaluation.html":{},"classes/Event.html":{},"classes/ExpertEventLink.html":{},"injectables/HelpDeskService.html":{},"classes/HelpDeskTicket.html":{},"classes/Notification.html":{},"classes/Notification-1.html":{},"injectables/NotificationsService.html":{},"classes/ParticipantEventLink.html":{},"classes/Phase.html":{},"classes/Resource.html":{},"classes/ResourcesReply.html":{},"injectables/ResourcesService.html":{},"classes/Site.html":{},"injectables/SitesService.html":{},"classes/Stage.html":{},"injectables/StagesService.html":{},"classes/TeamCoachLink.html":{},"injectables/TicketCategoriesService.html":{},"classes/TicketCategory.html":{},"classes/TicketChild.html":{},"classes/TypesEvent.html":{},"injectables/TypesEventsService.html":{},"classes/UpdateActaInput.html":{},"classes/UpdateActivitiesConfigInput.html":{},"classes/UpdateConfigEvaluationInput.html":{},"classes/UpdateContentInput.html":{},"classes/UpdateEventInput.html":{},"classes/UpdateNotificationInput.html":{},"classes/UpdateResourceInput.html":{},"classes/UpdateSiteInput.html":{},"classes/UpdateStageInput.html":{},"classes/UpdateTypesEventInput.html":{},"classes/activities.html":{}}}],["isemail",{"_index":2065,"title":{},"body":{"classes/CreateInvitationArgs.html":{},"classes/SendEmailInput.html":{}}}],["isempty",{"_index":2012,"title":{},"body":{"classes/CreateFormSubscriptionInput.html":{},"classes/UpdateFormInput.html":{}}}],["isenum",{"_index":747,"title":{},"body":{"classes/AnnouncementApplicantsArgs.html":{},"classes/ApplicantArgs.html":{},"classes/AttachmentSubmit.html":{},"classes/CreateAnnouncementInput.html":{},"classes/CreateHelpDeskInput.html":{},"classes/CreateIntegrationInput.html":{},"classes/CreateInvitationArgs.html":{},"classes/CreateUserInput.html":{},"classes/HelpDeskFilterInput.html":{},"classes/SelectApplicantsArgs.html":{},"classes/TemplateInput.html":{},"classes/UpdateApplicantStateInput.html":{},"classes/UpdateFormInput.html":{},"classes/UpdateHelpDeskInput.html":{}}}],["isenum(announcementtargets",{"_index":1931,"title":{},"body":{"classes/CreateAnnouncementInput.html":{},"classes/SelectApplicantsArgs.html":{}}}],["isenum(announcementtypes",{"_index":1930,"title":{},"body":{"classes/CreateAnnouncementInput.html":{}}}],["isenum(applicationstates",{"_index":750,"title":{},"body":{"classes/AnnouncementApplicantsArgs.html":{},"classes/ApplicantArgs.html":{},"classes/AttachmentSubmit.html":{},"classes/UpdateApplicantStateInput.html":{}}}],["isenum(emailtemplates",{"_index":3925,"title":{},"body":{"classes/TemplateInput.html":{}}}],["isenum(formcollections",{"_index":4177,"title":{},"body":{"classes/UpdateFormInput.html":{}}}],["isenum(ticketcategory",{"_index":2046,"title":{},"body":{"classes/CreateHelpDeskInput.html":{}}}],["isenum(ticketenum",{"_index":2685,"title":{},"body":{"classes/HelpDeskFilterInput.html":{},"classes/UpdateHelpDeskInput.html":{}}}],["isenum(typeintegration",{"_index":2057,"title":{},"body":{"classes/CreateIntegrationInput.html":{}}}],["isenum(typeintegration)@isnotempty()@field(undefined",{"_index":2054,"title":{},"body":{"classes/CreateIntegrationInput.html":{}}}],["isenum(validroles",{"_index":2066,"title":{},"body":{"classes/CreateInvitationArgs.html":{},"classes/CreateUserInput.html":{}}}],["isenum(validroles)@isnotempty()@field(undefined",{"_index":2063,"title":{},"body":{"classes/CreateInvitationArgs.html":{}}}],["isglobal",{"_index":920,"title":{},"body":{"modules/AppModule.html":{}}}],["isint",{"_index":2681,"title":{},"body":{"classes/HelpDeskFilterInput.html":{}}}],["isnotempty",{"_index":190,"title":{},"body":{"classes/AcceptInvitationDto.html":{},"classes/AddTableJoinInput.html":{},"classes/AnnouncementApplicantArgs.html":{},"classes/AnnouncementApplicantsArgs.html":{},"classes/ApplicantArgs.html":{},"classes/AttachmentSubmit.html":{},"classes/CloseFormSubscriptionArgs.html":{},"classes/ContactArgs.html":{},"classes/ContactServicesInput.html":{},"classes/CreateActaInput.html":{},"classes/CreateActivitiesConfigInput.html":{},"classes/CreateConfigEvaluationInput.html":{},"classes/CreateContentInput.html":{},"classes/CreateEventInput.html":{},"classes/CreateFormInput.html":{},"classes/CreateFormSubscriptionInput.html":{},"classes/CreateFormTagInput.html":{},"classes/CreateIntegrationInput.html":{},"classes/CreateInvitationArgs.html":{},"classes/CreateNotificationInput.html":{},"classes/CreateParticipationEventInput.html":{},"classes/CreatePhaseInput.html":{},"classes/CreateResourceInput.html":{},"classes/CreateResourcesReplyInput.html":{},"classes/CreateRolInput.html":{},"classes/CreateSiteInput.html":{},"classes/CreateStageInput.html":{},"classes/CreateTableConfigInput.html":{},"classes/CreateTableInput.html":{},"classes/CreateTypesEventInput.html":{},"classes/CreateUserLogInput.html":{},"classes/EntrepreneurStartupArgs.html":{},"classes/GetSubmittedFilesArgs.html":{},"classes/LastContentOutput.html":{},"classes/LinkExpertsToPhaseArgs.html":{},"classes/LinkStartupToPhaseArgs.html":{},"classes/LinkStartupsExpertsArgs.html":{},"classes/LinkWithTargetsArgs.html":{},"classes/LinkWithTargetsByRequestArgs.html":{},"classes/OthersInput.html":{},"classes/RemoveTableJoinInput.html":{},"classes/SearchBatchInput.html":{},"classes/SelectApplicantsArgs.html":{},"classes/SubmitAnnouncementDocInput.html":{},"classes/SubmitFileInput.html":{},"classes/SubmitFormSubscriptionArgs.html":{},"classes/TemplateInput.html":{},"classes/UpdateActaInput.html":{},"classes/UpdateActivitiesConfigInput.html":{},"classes/UpdateAnnouncementInput.html":{},"classes/UpdateApplicantStateInput.html":{},"classes/UpdateConfigEvaluationInput.html":{},"classes/UpdateConfigurationAppInput.html":{},"classes/UpdateContentInput.html":{},"classes/UpdateEventInput.html":{},"classes/UpdateExpertInput.html":{},"classes/UpdateFormInput.html":{},"classes/UpdateFormTagInput.html":{},"classes/UpdateHelpDeskInput.html":{},"classes/UpdateNotificationInput.html":{},"classes/UpdateParticipationEventInput.html":{},"classes/UpdatePhaseInput.html":{},"classes/UpdateResourceInput.html":{},"classes/UpdateResourcesReplyInput.html":{},"classes/UpdateRolInput.html":{},"classes/UpdateSiteInput.html":{},"classes/UpdateStageInput.html":{},"classes/UpdateTableConfigInput.html":{},"classes/UpdateTermsOfUseInput.html":{},"classes/UpdateTypesEventInput.html":{},"classes/UpdateUserConfigInput.html":{},"classes/UpdateUserInput.html":{}}}],["isnotempty()@field(undefined",{"_index":1703,"title":{},"body":{"classes/ContactArgs.html":{},"classes/LinkExpertsToPhaseArgs.html":{},"classes/LinkStartupToPhaseArgs.html":{}}}],["isnotempty()@isenum(emailtemplates",{"_index":3920,"title":{},"body":{"classes/TemplateInput.html":{}}}],["isnotempty()@isstring()@field(undefined",{"_index":1701,"title":{},"body":{"classes/ContactArgs.html":{},"classes/LinkExpertsToPhaseArgs.html":{},"classes/LinkStartupToPhaseArgs.html":{},"classes/LinkStartupsExpertsArgs.html":{}}}],["isobject",{"_index":2035,"title":{},"body":{"classes/CreateHelpDeskInput.html":{},"classes/HelpDeskFilterInput.html":{}}}],["isoptional",{"_index":1487,"title":{},"body":{"classes/CloseFormSubscriptionArgs.html":{},"classes/ContactArgs.html":{},"classes/ContactServicesInput.html":{},"classes/CreateActaInput.html":{},"classes/CreateActivitiesConfigInput.html":{},"classes/CreateConfigEvaluationInput.html":{},"classes/CreateContentInput.html":{},"classes/CreateEventInput.html":{},"classes/CreateFormInput.html":{},"classes/CreateFormSubscriptionInput.html":{},"classes/CreateIntegrationInput.html":{},"classes/CreateNotificationInput.html":{},"classes/CreateParticipationEventInput.html":{},"classes/CreatePhaseInput.html":{},"classes/CreateResourceInput.html":{},"classes/CreateResourcesReplyInput.html":{},"classes/CreateRolInput.html":{},"classes/CreateSiteInput.html":{},"classes/CreateStageInput.html":{},"classes/CreateTypesEventInput.html":{},"classes/CreateUserLogInput.html":{},"classes/FindFormsArgs.html":{},"classes/FindInvitationArgs.html":{},"classes/FindUsersArgs.html":{},"classes/GetSubmittedFilesArgs.html":{},"classes/HelpDeskFilterInput.html":{},"classes/LastContentOutput.html":{},"classes/LinkExpertsToPhaseArgs.html":{},"classes/LinkStartupToPhaseArgs.html":{},"classes/LinkStartupsExpertsArgs.html":{},"classes/OthersInput.html":{},"classes/SearchBatchInput.html":{},"classes/SelectApplicantsArgs.html":{},"classes/SendEmailInput.html":{},"classes/TableJoin.html":{},"classes/UpdateActaInput.html":{},"classes/UpdateActivitiesConfigInput.html":{},"classes/UpdateConfigEvaluationInput.html":{},"classes/UpdateConfigurationAppInput.html":{},"classes/UpdateContentInput.html":{},"classes/UpdateEventInput.html":{},"classes/UpdateExpertInput.html":{},"classes/UpdateFormInput.html":{},"classes/UpdateHelpDeskInput.html":{},"classes/UpdateNotificationInput.html":{},"classes/UpdateParticipationEventInput.html":{},"classes/UpdatePhaseInput.html":{},"classes/UpdateResourceInput.html":{},"classes/UpdateResourcesReplyInput.html":{},"classes/UpdateRolInput.html":{},"classes/UpdateSiteInput.html":{},"classes/UpdateStageInput.html":{},"classes/UpdateTableConfigInput.html":{},"classes/UpdateTermsOfUseInput.html":{},"classes/UpdateTypesEventInput.html":{},"classes/UpdateUserInput.html":{}}}],["isoptional()@field(undefined",{"_index":1705,"title":{},"body":{"classes/ContactArgs.html":{},"classes/FindFormsArgs.html":{},"classes/FindInvitationArgs.html":{},"classes/FindUsersArgs.html":{}}}],["isoptional()@isint()@min(1",{"_index":2674,"title":{},"body":{"classes/HelpDeskFilterInput.html":{}}}],["isprospect",{"_index":1314,"title":{},"body":{"classes/BusinessRelationship.html":{},"classes/Entrepreneur.html":{},"classes/EntrepreneurRelationship-1.html":{},"classes/Expert.html":{},"classes/PhaseExpertRelationship.html":{},"classes/PhaseRelationship.html":{},"classes/Startup.html":{},"classes/StartupLink.html":{},"classes/StartupRelationship.html":{}}}],["isresponse",{"_index":2042,"title":{},"body":{"classes/CreateHelpDeskInput.html":{},"classes/HelpDeskTicket.html":{},"classes/TicketChild.html":{}}}],["isschedulable",{"_index":4021,"title":{},"body":{"classes/TypesEvent.html":{}}}],["isstring",{"_index":189,"title":{},"body":{"classes/AcceptInvitationDto.html":{},"classes/AttachmentSubmit.html":{},"classes/CloseFormSubscriptionArgs.html":{},"classes/ContactArgs.html":{},"classes/CreateAnnouncementInput.html":{},"classes/CreateHelpDeskInput.html":{},"classes/CreateIntegrationInput.html":{},"classes/CreateInvitationArgs.html":{},"classes/CreateNotificationInput.html":{},"classes/GetSubmittedFilesArgs.html":{},"classes/HelpDeskFilterInput.html":{},"classes/LinkExpertsToPhaseArgs.html":{},"classes/LinkStartupToPhaseArgs.html":{},"classes/LinkStartupsExpertsArgs.html":{},"classes/OthersInput.html":{},"classes/SearchBatchInput.html":{},"classes/SendEmailInput.html":{},"classes/SubmitAnnouncementDocInput.html":{},"classes/SubmitFileInput.html":{},"classes/TableJoin.html":{},"classes/UpdateAnnouncementInput.html":{},"classes/UpdateApplicantStateInput.html":{},"classes/UpdateNotificationInput.html":{}}}],["isstring()@field()@prop",{"_index":3822,"title":{},"body":{"classes/TableJoin.html":{}}}],["isstring()@isemail",{"_index":3544,"title":{},"body":{"classes/SendEmailInput.html":{}}}],["isstring()@isemail()@isnotempty()@field(undefined",{"_index":2061,"title":{},"body":{"classes/CreateInvitationArgs.html":{}}}],["isstring()@isnotempty",{"_index":185,"title":{},"body":{"classes/AcceptInvitationDto.html":{},"classes/CreateNotificationInput.html":{}}}],["isstring()@isnotempty()@field(undefined",{"_index":2051,"title":{},"body":{"classes/CreateIntegrationInput.html":{}}}],["isstring()@isoptional",{"_index":3540,"title":{},"body":{"classes/SendEmailInput.html":{}}}],["item",{"_index":472,"title":{},"body":{"injectables/ActivitiesConfigService.html":{},"classes/Applicant.html":{},"classes/ApplicantState.html":{},"classes/Attachment.html":{},"classes/Business.html":{},"classes/BusinessRelationship.html":{},"injectables/BusinessService.html":{},"classes/CreateResourcesReplyInput.html":{},"classes/Entrepreneur.html":{},"classes/EntrepreneurRelationship.html":{},"classes/EntrepreneurRelationship-1.html":{},"classes/Evaluation.html":{},"classes/Expert.html":{},"interfaces/IAttachment.html":{},"classes/PhaseExpertRelationship.html":{},"classes/PhaseRelationship.html":{},"classes/ResourcesReply.html":{},"classes/Startup.html":{},"classes/StartupLink.html":{},"classes/StartupRelationship.html":{},"classes/UpdateResourcesReplyInput.html":{}}}],["item_permission",{"_index":4805,"title":{"interfaces/item_permission.html":{}},"body":{"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["iterator",{"_index":3242,"title":{},"body":{"injectables/NotificationsService.html":{},"injectables/UserLogService.html":{},"injectables/UsersService.html":{}}}],["jbh_time",{"_index":2931,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["joi",{"_index":4605,"title":{},"body":{"dependencies.html":{}}}],["join",{"_index":625,"title":{},"body":{"classes/AddTableJoinInput.html":{},"modules/AppModule.html":{},"classes/RemoveTableJoinInput.html":{},"classes/Table.html":{},"injectables/TableService.html":{},"index.html":{}}}],["join(process.cwd",{"_index":941,"title":{},"body":{"modules/AppModule.html":{}}}],["join.'})@validatenested()@type(undefined)@isnotempty",{"_index":631,"title":{},"body":{"classes/AddTableJoinInput.html":{}}}],["join.input",{"_index":3863,"title":{},"body":{"injectables/TableService.html":{}}}],["join.input.ts",{"_index":623,"title":{},"body":{"classes/AddTableJoinInput.html":{},"classes/RemoveTableJoinInput.html":{}}}],["join.input.ts:10",{"_index":3371,"title":{},"body":{"classes/RemoveTableJoinInput.html":{}}}],["join.input.ts:12",{"_index":627,"title":{},"body":{"classes/AddTableJoinInput.html":{}}}],["join.input.ts:14",{"_index":3373,"title":{},"body":{"classes/RemoveTableJoinInput.html":{}}}],["join.input.ts:18",{"_index":632,"title":{},"body":{"classes/AddTableJoinInput.html":{}}}],["join.key",{"_index":3891,"title":{},"body":{"injectables/TableService.html":{}}}],["join.ts",{"_index":3818,"title":{},"body":{"classes/TableJoin.html":{}}}],["join.ts:16",{"_index":3825,"title":{},"body":{"classes/TableJoin.html":{}}}],["join.ts:21",{"_index":3824,"title":{},"body":{"classes/TableJoin.html":{}}}],["join.ts:26",{"_index":3823,"title":{},"body":{"classes/TableJoin.html":{}}}],["join.ts:31",{"_index":3821,"title":{},"body":{"classes/TableJoin.html":{}}}],["join?.extracolumns",{"_index":3892,"title":{},"body":{"injectables/TableService.html":{}}}],["join_before_host",{"_index":2932,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["joined",{"_index":3769,"title":{},"body":{"classes/Table.html":{}}}],["joinform",{"_index":3884,"title":{},"body":{"injectables/TableService.html":{}}}],["joinform.documents",{"_index":3890,"title":{},"body":{"injectables/TableService.html":{}}}],["joinform.name",{"_index":3896,"title":{},"body":{"injectables/TableService.html":{}}}],["joins",{"_index":3767,"title":{},"body":{"classes/Table.html":{},"classes/TableJoin.html":{},"injectables/TableService.html":{}}}],["joinscolumns",{"_index":3882,"title":{},"body":{"injectables/TableService.html":{}}}],["json",{"_index":890,"title":{},"body":{"modules/AppModule.html":{},"classes/Applicant.html":{},"classes/ApplicantState.html":{},"classes/Attachment.html":{},"classes/Business.html":{},"classes/BusinessRelationship.html":{},"classes/ColumnGroup.html":{},"classes/CreateFormInput.html":{},"classes/CreateFormSubscriptionInput.html":{},"classes/CreateHelpDeskInput.html":{},"classes/CreateIntegrationInput.html":{},"classes/Entrepreneur.html":{},"classes/EntrepreneurRelationship.html":{},"classes/EntrepreneurRelationship-1.html":{},"classes/Evaluation.html":{},"classes/Expert.html":{},"classes/FormSubmission.html":{},"classes/FormSubmissionFiles.html":{},"classes/FormSubscription.html":{},"classes/HelpDeskFilterInput.html":{},"injectables/HelpDeskService.html":{},"interfaces/IAttachment.html":{},"classes/Integration.html":{},"classes/Invitation.html":{},"classes/OthersInput.html":{},"classes/PhaseExpertRelationship.html":{},"classes/PhaseRelationship.html":{},"classes/ResourcesReply.html":{},"classes/SearchBatchInput.html":{},"classes/SelectApplicantsArgs.html":{},"classes/Startup.html":{},"classes/StartupLink.html":{},"classes/StartupRelationship.html":{},"classes/SubmitAnnouncementDocInput.html":{},"classes/SubmitFormSubscriptionArgs.html":{},"classes/Table.html":{},"classes/TableConfig.html":{},"classes/TableJoin.html":{},"classes/UpdateHelpDeskInput.html":{},"classes/UpdateTableConfigInput.html":{},"classes/UserLog.html":{},"dependencies.html":{}}}],["json.parse(form.formjson",{"_index":3900,"title":{},"body":{"injectables/TableService.html":{}}}],["json.parse(joinform.formjson",{"_index":3887,"title":{},"body":{"injectables/TableService.html":{}}}],["json.stringify(i",{"_index":157,"title":{},"body":{"classes/AWSSESProvider.html":{}}}],["jueves",{"_index":4412,"title":{},"body":{"injectables/UserLogService.html":{}}}],["jwt",{"_index":1073,"title":{},"body":{"injectables/AuthCodeService.html":{}}}],["kamil",{"_index":4798,"title":{},"body":{"index.html":{}}}],["keepdiscriminatorproperty",{"_index":3918,"title":{},"body":{"classes/TemplateInput.html":{}}}],["key",{"_index":93,"title":{},"body":{"classes/AWSSESProvider.html":{},"injectables/ActivitiesConfigService.html":{},"classes/Applicant.html":{},"classes/ApplicantState.html":{},"classes/Attachment.html":{},"classes/AttachmentSubmit.html":{},"injectables/AwsService.html":{},"classes/ColumnGroup.html":{},"classes/CreateTableInput.html":{},"injectables/EmailsService.html":{},"classes/Form.html":{},"injectables/FormSubscriptionService.html":{},"classes/Hours.html":{},"interfaces/IAttachment.html":{},"classes/RemoveTableJoinInput.html":{},"classes/SendGridProvider.html":{},"classes/StorageService.html":{},"classes/SubmitFileInput.html":{},"classes/Table.html":{},"classes/TableJoin.html":{},"injectables/TableService.html":{},"classes/UpdateApplicantStateInput.html":{},"classes/UpdateFormInput.html":{},"injectables/UserConfigService.html":{},"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["keys",{"_index":1976,"title":{},"body":{"classes/CreateFormInput.html":{},"classes/Form.html":{},"classes/UpdateFormInput.html":{},"injectables/UsersService.html":{}}}],["kickoff",{"_index":5098,"title":{},"body":{"miscellaneous/variables.html":{}}}],["la",{"_index":686,"title":{},"body":{"classes/Announcement.html":{}}}],["label",{"_index":2138,"title":{},"body":{"classes/CreateStageInput.html":{},"classes/Stage.html":{},"classes/UpdateStageInput.html":{},"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["labels",{"_index":4407,"title":{},"body":{"injectables/UserLogService.html":{}}}],["labels[index",{"_index":4420,"title":{},"body":{"injectables/UserLogService.html":{}}}],["landing",{"_index":647,"title":{},"body":{"classes/Announcement.html":{},"classes/CreatePhaseInput.html":{},"classes/Phase.html":{},"classes/UpdateAnnouncementInput.html":{},"classes/UpdatePhaseInput.html":{}}}],["las",{"_index":1569,"title":{},"body":{"injectables/ConfigEvaluationsService.html":{},"injectables/UserLogService.html":{},"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["last",{"_index":719,"title":{},"body":{"classes/Announcement.html":{},"classes/Applicant.html":{},"classes/ApplicantState.html":{},"classes/Attachment.html":{},"classes/Business.html":{},"classes/BusinessRelationship.html":{},"classes/ConfigEvaluation.html":{},"classes/Download.html":{},"classes/Entrepreneur.html":{},"classes/EntrepreneurRelationship.html":{},"classes/EntrepreneurRelationship-1.html":{},"classes/Evaluation.html":{},"classes/Expert.html":{},"classes/Form.html":{},"classes/FormSubscription.html":{},"classes/FormTag.html":{},"interfaces/IAttachment.html":{},"classes/Integration.html":{},"classes/PhaseExpertRelationship.html":{},"classes/PhaseRelationship.html":{},"classes/ResourcesReply.html":{},"classes/Rol.html":{},"classes/Stage.html":{},"classes/Startup.html":{},"classes/StartupLink.html":{},"classes/StartupRelationship.html":{},"classes/User.html":{},"classes/UserLog.html":{},"miscellaneous/variables.html":{}}}],["lastcontent",{"_index":1841,"title":{},"body":{"injectables/ContentService.html":{},"classes/LastContentOutput.html":{}}}],["lastcontentoutput",{"_index":3114,"title":{"classes/LastContentOutput.html":{}},"body":{"classes/LastContentOutput.html":{}}}],["lastsprint",{"_index":1853,"title":{},"body":{"injectables/ContentService.html":{}}}],["lastsprint.childs[lastsprint.childs.length",{"_index":1855,"title":{},"body":{"injectables/ContentService.html":{}}}],["latest",{"_index":1809,"title":{},"body":{"injectables/ContentService.html":{}}}],["lean",{"_index":325,"title":{},"body":{"injectables/ActaService.html":{},"injectables/ActivitiesConfigService.html":{},"injectables/AnnouncementsService.html":{},"injectables/BusinessService.html":{},"injectables/ConfigEvaluationsService.html":{},"injectables/ConfigNotificationsService.html":{},"injectables/ConfigurationAppService.html":{},"injectables/ContentService.html":{},"injectables/FormSubscriptionService.html":{},"injectables/FormTagService.html":{},"injectables/FormsService.html":{},"injectables/HelpDeskService.html":{},"injectables/IntegrationsService.html":{},"injectables/InvitationsService.html":{},"injectables/NotificationsService.html":{},"injectables/ParticipationEventsService.html":{},"injectables/ResourcesService.html":{},"injectables/RolService.html":{},"injectables/SitesService.html":{},"injectables/StagesService.html":{},"injectables/TableConfigService.html":{},"injectables/TableService.html":{},"injectables/TermsOfUseService.html":{},"injectables/TicketCategoriesService.html":{},"injectables/TypesEventsService.html":{},"injectables/UserConfigService.html":{},"injectables/UserLogService.html":{},"injectables/UsersService.html":{}}}],["legend",{"_index":253,"title":{},"body":{"modules/ActaModule.html":{},"modules/ActivitiesConfigModule.html":{},"modules/AnnouncementsModule.html":{},"modules/AppModule.html":{},"modules/ApplicantModule.html":{},"modules/AuthCodeModule.html":{},"modules/AuthModule.html":{},"modules/BusinessModule.html":{},"modules/ConfigEvaluationsModule.html":{},"modules/ConfigNotificationsModule.html":{},"modules/ConfigurationAppModule.html":{},"modules/ContentModule.html":{},"modules/DownloadsModule.html":{},"modules/EmailsModule.html":{},"modules/EntrepreneurModule.html":{},"modules/EvaluationsModule.html":{},"modules/EventsModule.html":{},"modules/ExpertModule.html":{},"modules/FormsModule.html":{},"modules/HelpDeskModule.html":{},"modules/IntegrationsModule.html":{},"modules/InvitationsModule.html":{},"modules/LoggerModule.html":{},"modules/NotificationsModule.html":{},"modules/ParticipationEventsModule.html":{},"modules/PhasesModule.html":{},"modules/ResourcesModule.html":{},"modules/ResourcesRepliesModule.html":{},"modules/RolModule.html":{},"modules/SitesModule.html":{},"modules/StagesModule.html":{},"modules/StartupModule.html":{},"modules/StorageModule.html":{},"modules/TableModule.html":{},"modules/TermsOfUseModule.html":{},"modules/TicketCategoriesModule.html":{},"modules/TypesEventsModule.html":{},"modules/TypesNotificationsModule.html":{},"modules/UserConfigModule.html":{},"modules/UserLogModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["license",{"_index":4804,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":4787,"title":{},"body":{"index.html":{}}}],["limit",{"_index":338,"title":{},"body":{"classes/ActivitiesConfig.html":{},"injectables/ActivitiesConfigService.html":{},"classes/Assign.html":{},"classes/CreateActivitiesConfigInput.html":{},"classes/FindInvitationArgs.html":{},"injectables/InvitationsService.html":{},"classes/UpdateActivitiesConfigInput.html":{},"classes/activities.html":{},"miscellaneous/variables.html":{}}}],["limited",{"_index":3063,"title":{},"body":{"injectables/InvitationsService.html":{}}}],["limithoursits",{"_index":545,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["link",{"_index":701,"title":{},"body":{"classes/Announcement.html":{},"injectables/BusinessService.html":{},"classes/ContactServiceLink.html":{},"classes/Event.html":{},"classes/ExpertEventLink.html":{},"classes/ParticipantEventLink.html":{},"classes/Phase.html":{},"classes/Site.html":{},"classes/TeamCoachLink.html":{},"injectables/UsersService.html":{}}}],["linkbusinessesandentrepreneurs",{"_index":1326,"title":{},"body":{"injectables/BusinessService.html":{}}}],["linkbusinessesandentrepreneurs(ids",{"_index":1364,"title":{},"body":{"injectables/BusinessService.html":{}}}],["linked",{"_index":1281,"title":{},"body":{"classes/Business.html":{},"classes/EntrepreneurRelationship.html":{}}}],["linkexpertstophaseargs",{"_index":3121,"title":{"classes/LinkExpertsToPhaseArgs.html":{}},"body":{"classes/LinkExpertsToPhaseArgs.html":{}}}],["linkresult",{"_index":1403,"title":{},"body":{"injectables/BusinessService.html":{}}}],["linkresult.acknowledged",{"_index":1406,"title":{},"body":{"injectables/BusinessService.html":{}}}],["linkstartupsexpertsargs",{"_index":3131,"title":{"classes/LinkStartupsExpertsArgs.html":{}},"body":{"classes/LinkStartupsExpertsArgs.html":{}}}],["linkstartuptophaseargs",{"_index":3128,"title":{"classes/LinkStartupToPhaseArgs.html":{}},"body":{"classes/LinkStartupToPhaseArgs.html":{}}}],["linkwithentrepreneurs",{"_index":1327,"title":{},"body":{"injectables/BusinessService.html":{}}}],["linkwithentrepreneurs(ids",{"_index":1366,"title":{},"body":{"injectables/BusinessService.html":{}}}],["linkwithentrepreneursbyrequest",{"_index":1328,"title":{},"body":{"injectables/BusinessService.html":{}}}],["linkwithentrepreneursbyrequest(undefined",{"_index":1370,"title":{},"body":{"injectables/BusinessService.html":{}}}],["linkwithtargetsargs",{"_index":3139,"title":{"classes/LinkWithTargetsArgs.html":{}},"body":{"classes/LinkWithTargetsArgs.html":{}}}],["linkwithtargetsbyrequestargs",{"_index":1371,"title":{"classes/LinkWithTargetsByRequestArgs.html":{}},"body":{"injectables/BusinessService.html":{},"classes/LinkWithTargetsByRequestArgs.html":{}}}],["list",{"_index":303,"title":{},"body":{"injectables/ActaService.html":{},"classes/Business.html":{},"injectables/BusinessService.html":{},"classes/CreateFormInput.html":{},"classes/EntrepreneurRelationship.html":{},"injectables/FormTagService.html":{},"injectables/NotificationsService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["list_of_permissions",{"_index":4930,"title":{},"body":{"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["listactivities",{"_index":425,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["listactivities.filter((i",{"_index":575,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["listactivitiesexpert",{"_index":574,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["listactivitiesteamcoach",{"_index":611,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["listener.service",{"_index":3193,"title":{},"body":{"modules/NotificationsModule.html":{}}}],["listener/notification",{"_index":3192,"title":{},"body":{"modules/NotificationsModule.html":{}}}],["listenformsubscription",{"_index":2551,"title":{},"body":{"injectables/FormSubscriptionService.html":{}}}],["listexpert",{"_index":427,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["listexperts",{"_index":517,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["listpermission",{"_index":4961,"title":{},"body":{"miscellaneous/variables.html":{}}}],["liststartups",{"_index":429,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["liststartups.find",{"_index":603,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["liststartups.foreach",{"_index":534,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["listteamcoach",{"_index":519,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["listteamcoaches",{"_index":437,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["listteamcoaches.foreach",{"_index":607,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["listtriggernotifications",{"_index":3228,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["listtriggernotifications.push",{"_index":3231,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["literal",{"_index":59,"title":{},"body":{"classes/AWSSESProvider.html":{},"classes/CreateHelpDeskInput.html":{},"injectables/EmailsService.html":{},"classes/Hours.html":{},"injectables/IntegrationsService.html":{},"injectables/InvitationsService.html":{},"classes/SendGridProvider.html":{},"injectables/TableService.html":{},"injectables/UsersService.html":{}}}],["load",{"_index":921,"title":{},"body":{"modules/AppModule.html":{}}}],["load_all_entrepreneurs",{"_index":4673,"title":{},"body":{"miscellaneous/enumerations.html":{},"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["load_all_events",{"_index":4706,"title":{},"body":{"miscellaneous/enumerations.html":{},"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["load_all_startups",{"_index":4666,"title":{},"body":{"miscellaneous/enumerations.html":{},"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["loadevent",{"_index":3784,"title":{},"body":{"classes/TableConfig.html":{},"classes/UpdateTableConfigInput.html":{}}}],["local",{"_index":5025,"title":{},"body":{"miscellaneous/variables.html":{}}}],["locale",{"_index":1419,"title":{},"body":{"injectables/BusinessService.html":{}}}],["location",{"_index":1218,"title":{},"body":{"injectables/AwsService.html":{},"classes/CreateTableInput.html":{},"classes/Table.html":{},"miscellaneous/functions.html":{}}}],["location.'})@isnotempty",{"_index":2156,"title":{},"body":{"classes/CreateTableInput.html":{}}}],["location.'})@prop({index",{"_index":3776,"title":{},"body":{"classes/Table.html":{}}}],["locator",{"_index":2153,"title":{},"body":{"classes/CreateTableInput.html":{},"classes/Table.html":{},"injectables/TableService.html":{}}}],["log",{"_index":4363,"title":{},"body":{"injectables/UserLogService.html":{}}}],["log.entity",{"_index":4349,"title":{},"body":{"modules/UserLogModule.html":{},"injectables/UserLogService.html":{}}}],["log.entity.ts",{"_index":4335,"title":{},"body":{"classes/UserLog.html":{}}}],["log.entity.ts:11",{"_index":4336,"title":{},"body":{"classes/UserLog.html":{}}}],["log.entity.ts:17",{"_index":4338,"title":{},"body":{"classes/UserLog.html":{}}}],["log.entity.ts:20",{"_index":4337,"title":{},"body":{"classes/UserLog.html":{}}}],["log.entity.ts:23",{"_index":4339,"title":{},"body":{"classes/UserLog.html":{}}}],["log.input",{"_index":4385,"title":{},"body":{"injectables/UserLogService.html":{}}}],["log.input.ts",{"_index":2173,"title":{},"body":{"classes/CreateUserLogInput.html":{}}}],["log.input.ts:11",{"_index":2174,"title":{},"body":{"classes/CreateUserLogInput.html":{}}}],["log.module",{"_index":895,"title":{},"body":{"modules/AppModule.html":{},"modules/ConfigurationAppModule.html":{},"modules/ContentModule.html":{},"modules/PhasesModule.html":{},"modules/UsersModule.html":{}}}],["log.module.ts",{"_index":4346,"title":{},"body":{"modules/UserLogModule.html":{}}}],["log.resolver",{"_index":4348,"title":{},"body":{"modules/UserLogModule.html":{}}}],["log.service",{"_index":1681,"title":{},"body":{"injectables/ConfigurationAppService.html":{},"injectables/ContentService.html":{},"modules/UserLogModule.html":{},"injectables/UsersService.html":{}}}],["log.service.ts",{"_index":4351,"title":{},"body":{"injectables/UserLogService.html":{}}}],["log.service.ts:10",{"_index":4359,"title":{},"body":{"injectables/UserLogService.html":{}}}],["log.service.ts:109",{"_index":4383,"title":{},"body":{"injectables/UserLogService.html":{}}}],["log.service.ts:127",{"_index":4381,"title":{},"body":{"injectables/UserLogService.html":{}}}],["log.service.ts:145",{"_index":4368,"title":{},"body":{"injectables/UserLogService.html":{}}}],["log.service.ts:175",{"_index":4373,"title":{},"body":{"injectables/UserLogService.html":{}}}],["log.service.ts:19",{"_index":4362,"title":{},"body":{"injectables/UserLogService.html":{}}}],["log.service.ts:28",{"_index":4364,"title":{},"body":{"injectables/UserLogService.html":{}}}],["log.service.ts:35",{"_index":4366,"title":{},"body":{"injectables/UserLogService.html":{}}}],["log.service.ts:42",{"_index":4367,"title":{},"body":{"injectables/UserLogService.html":{}}}],["log.service.ts:49",{"_index":4384,"title":{},"body":{"injectables/UserLogService.html":{}}}],["log.service.ts:56",{"_index":4375,"title":{},"body":{"injectables/UserLogService.html":{}}}],["log.service.ts:92",{"_index":4379,"title":{},"body":{"injectables/UserLogService.html":{}}}],["log/dto/create",{"_index":2172,"title":{},"body":{"classes/CreateUserLogInput.html":{}}}],["log/entities/user",{"_index":4334,"title":{},"body":{"classes/UserLog.html":{}}}],["log/user",{"_index":894,"title":{},"body":{"modules/AppModule.html":{},"modules/ConfigurationAppModule.html":{},"injectables/ConfigurationAppService.html":{},"modules/ContentModule.html":{},"injectables/ContentService.html":{},"modules/PhasesModule.html":{},"modules/UserLogModule.html":{},"injectables/UserLogService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["logged",{"_index":1099,"title":{},"body":{"guards/AuthGuard.html":{},"guards/GqlAuthGuard.html":{}}}],["logger",{"_index":20,"title":{},"body":{"classes/AWSSESProvider.html":{},"injectables/AuthService.html":{},"injectables/EmailsService.html":{},"injectables/HelpDeskService.html":{},"injectables/InvitationsService.html":{},"modules/LoggerModule.html":{},"injectables/NotificationsService.html":{},"classes/SendGridProvider.html":{},"injectables/TicketCategoriesService.html":{}}}],["logger(awssesprovider.name",{"_index":40,"title":{},"body":{"classes/AWSSESProvider.html":{}}}],["logger(helpdeskservice.name",{"_index":2725,"title":{},"body":{"injectables/HelpDeskService.html":{}}}],["logger(notificationsservice.name",{"_index":3214,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["logger(ticketcategoriesservice.name",{"_index":3995,"title":{},"body":{"injectables/TicketCategoriesService.html":{}}}],["logger.setcontext(authservice.name",{"_index":1165,"title":{},"body":{"injectables/AuthService.html":{}}}],["logger/logger.module",{"_index":858,"title":{},"body":{"modules/AppModule.html":{}}}],["loggermodule",{"_index":263,"title":{"modules/LoggerModule.html":{}},"body":{"modules/ActaModule.html":{},"modules/ActivitiesConfigModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigEvaluationsModule.html":{},"modules/ConfigurationAppModule.html":{},"modules/ContentModule.html":{},"modules/EmailsModule.html":{},"modules/EvaluationsModule.html":{},"modules/EventsModule.html":{},"modules/HelpDeskModule.html":{},"modules/IntegrationsModule.html":{},"modules/InvitationsModule.html":{},"modules/LoggerModule.html":{},"modules/ParticipationEventsModule.html":{},"modules/PhasesModule.html":{},"modules/ResourcesModule.html":{},"modules/ResourcesRepliesModule.html":{},"modules/SitesModule.html":{},"modules/StagesModule.html":{},"modules/TermsOfUseModule.html":{},"modules/TypesEventsModule.html":{},"modules/UserLogModule.html":{},"modules.html":{},"overview.html":{}}}],["login",{"_index":1148,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserLogService.html":{}}}],["logs",{"_index":4001,"title":{},"body":{"injectables/TicketCategoriesService.html":{},"classes/UserLog.html":{},"injectables/UserLogService.html":{}}}],["logsbatch",{"_index":1836,"title":{},"body":{"injectables/ContentService.html":{}}}],["logsbatch.find",{"_index":1848,"title":{},"body":{"injectables/ContentService.html":{}}}],["logsbatch.length",{"_index":1877,"title":{},"body":{"injectables/ContentService.html":{}}}],["logsresources",{"_index":1862,"title":{},"body":{"injectables/ContentService.html":{}}}],["logsresources.find",{"_index":1869,"title":{},"body":{"injectables/ContentService.html":{}}}],["lookups",{"_index":4967,"title":{},"body":{"miscellaneous/variables.html":{}}}],["los",{"_index":4833,"title":{},"body":{"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["lt",{"_index":1584,"title":{},"body":{"injectables/ConfigEvaluationsService.html":{},"injectables/UserLogService.html":{}}}],["lunes",{"_index":4409,"title":{},"body":{"injectables/UserLogService.html":{}}}],["límite",{"_index":4907,"title":{},"body":{"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["mail",{"_index":51,"title":{},"body":{"classes/AWSSESProvider.html":{},"interfaces/EmailsRepository.html":{},"injectables/EmailsService.html":{},"classes/SendGridProvider.html":{}}}],["mail.from",{"_index":116,"title":{},"body":{"classes/AWSSESProvider.html":{},"injectables/EmailsService.html":{},"classes/SendGridProvider.html":{}}}],["mail.html",{"_index":130,"title":{},"body":{"classes/AWSSESProvider.html":{},"classes/SendGridProvider.html":{}}}],["mail.subject",{"_index":132,"title":{},"body":{"classes/AWSSESProvider.html":{},"classes/SendGridProvider.html":{}}}],["mail.text",{"_index":3562,"title":{},"body":{"classes/SendGridProvider.html":{}}}],["mail.to",{"_index":125,"title":{},"body":{"classes/AWSSESProvider.html":{},"injectables/EmailsService.html":{},"classes/SendGridProvider.html":{}}}],["main",{"_index":1094,"title":{},"body":{"guards/AuthGuard.html":{},"classes/ConfigurationApp.html":{},"guards/GqlAuthGuard.html":{},"miscellaneous/functions.html":{}}}],["make",{"_index":5048,"title":{},"body":{"miscellaneous/variables.html":{}}}],["manage",{"_index":3927,"title":{},"body":{"classes/TemplateInput.html":{}}}],["management",{"_index":1045,"title":{},"body":{"classes/AuthCode.html":{}}}],["many",{"_index":1097,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/BusinessService.html":{},"injectables/ContentService.html":{},"injectables/FormsService.html":{},"guards/GqlAuthGuard.html":{},"injectables/NotificationsService.html":{},"injectables/ResourcesService.html":{},"injectables/UsersService.html":{}}}],["map(([key",{"_index":4932,"title":{},"body":{"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["map((extracolumn",{"_index":3893,"title":{},"body":{"injectables/TableService.html":{}}}],["martes",{"_index":4410,"title":{},"body":{"injectables/UserLogService.html":{}}}],["master",{"_index":5094,"title":{},"body":{"miscellaneous/variables.html":{}}}],["match",{"_index":4982,"title":{},"body":{"miscellaneous/variables.html":{}}}],["matching",{"_index":175,"title":{},"body":{"classes/AWSSESProvider.html":{},"classes/AcceptInvitationDto.html":{},"classes/Acta.html":{},"modules/ActaModule.html":{},"injectables/ActaService.html":{},"classes/ActivitiesConfig.html":{},"modules/ActivitiesConfigModule.html":{},"injectables/ActivitiesConfigService.html":{},"classes/AddTableJoinInput.html":{},"classes/Announcement.html":{},"classes/AnnouncementApplicantArgs.html":{},"classes/AnnouncementApplicantsArgs.html":{},"modules/AnnouncementsModule.html":{},"injectables/AnnouncementsService.html":{},"modules/AppModule.html":{},"classes/Applicant.html":{},"classes/ApplicantArgs.html":{},"modules/ApplicantModule.html":{},"classes/ApplicantState.html":{},"classes/Assign.html":{},"classes/Attachment.html":{},"classes/AttachmentSubmit.html":{},"classes/AuthCode.html":{},"modules/AuthCodeModule.html":{},"injectables/AuthCodeService.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/AwsService.html":{},"classes/Business.html":{},"modules/BusinessModule.html":{},"classes/BusinessRelationship.html":{},"injectables/BusinessService.html":{},"classes/CloseFormSubscriptionArgs.html":{},"classes/ColumnGroup.html":{},"classes/ConfigEvaluation.html":{},"modules/ConfigEvaluationsModule.html":{},"injectables/ConfigEvaluationsService.html":{},"modules/ConfigNotificationsModule.html":{},"injectables/ConfigNotificationsService.html":{},"classes/ConfigurationApp.html":{},"modules/ConfigurationAppModule.html":{},"injectables/ConfigurationAppService.html":{},"classes/ContactArgs.html":{},"classes/ContactServiceLink.html":{},"classes/ContactServicesInput.html":{},"classes/Content.html":{},"modules/ContentModule.html":{},"injectables/ContentService.html":{},"classes/CreateActaInput.html":{},"classes/CreateActivitiesConfigInput.html":{},"classes/CreateAnnouncementInput.html":{},"classes/CreateConfigEvaluationInput.html":{},"classes/CreateConfigNotificationInput.html":{},"classes/CreateContentInput.html":{},"classes/CreateEventInput.html":{},"classes/CreateFormInput.html":{},"classes/CreateFormSubscriptionInput.html":{},"classes/CreateFormTagInput.html":{},"classes/CreateHelpDeskInput.html":{},"classes/CreateIntegrationInput.html":{},"classes/CreateInvitationArgs.html":{},"classes/CreateNotificationInput.html":{},"classes/CreateParticipationEventInput.html":{},"classes/CreatePhaseInput.html":{},"classes/CreateResourceInput.html":{},"classes/CreateResourcesReplyInput.html":{},"classes/CreateRolInput.html":{},"classes/CreateSiteInput.html":{},"classes/CreateStageInput.html":{},"classes/CreateTableConfigInput.html":{},"classes/CreateTableInput.html":{},"classes/CreateTypesEventInput.html":{},"classes/CreateUserInput.html":{},"classes/CreateUserLogInput.html":{},"classes/Download.html":{},"modules/DownloadsModule.html":{},"injectables/DownloadsService.html":{},"controllers/EmailsController.html":{},"modules/EmailsModule.html":{},"interfaces/EmailsRepository.html":{},"injectables/EmailsService.html":{},"classes/Entrepreneur.html":{},"modules/EntrepreneurModule.html":{},"classes/EntrepreneurRelationship.html":{},"classes/EntrepreneurRelationship-1.html":{},"classes/EntrepreneurStartupArgs.html":{},"classes/Evaluation.html":{},"modules/EvaluationsModule.html":{},"classes/Event.html":{},"modules/EventsModule.html":{},"classes/Expert.html":{},"classes/ExpertEventLink.html":{},"modules/ExpertModule.html":{},"classes/FindFormsArgs.html":{},"classes/FindInvitationArgs.html":{},"classes/FindUsersArgs.html":{},"classes/Form.html":{},"classes/FormSubmission.html":{},"classes/FormSubmissionFiles.html":{},"classes/FormSubscription.html":{},"injectables/FormSubscriptionService.html":{},"classes/FormTag.html":{},"injectables/FormTagService.html":{},"modules/FormsModule.html":{},"injectables/FormsService.html":{},"classes/GetSubmittedFilesArgs.html":{},"guards/GqlAuthGuard.html":{},"classes/HelpDeskFilterInput.html":{},"modules/HelpDeskModule.html":{},"injectables/HelpDeskService.html":{},"classes/HelpDeskTicket.html":{},"classes/Hours.html":{},"interfaces/IAttachment.html":{},"classes/Integration.html":{},"modules/IntegrationsModule.html":{},"injectables/IntegrationsService.html":{},"classes/Invitation.html":{},"controllers/InvitationsController.html":{},"modules/InvitationsModule.html":{},"injectables/InvitationsService.html":{},"classes/LastContentOutput.html":{},"classes/LinkExpertsToPhaseArgs.html":{},"classes/LinkStartupToPhaseArgs.html":{},"classes/LinkStartupsExpertsArgs.html":{},"classes/LinkWithTargetsArgs.html":{},"classes/LinkWithTargetsByRequestArgs.html":{},"modules/LoggerModule.html":{},"classes/Notification.html":{},"classes/Notification-1.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"classes/OthersInput.html":{},"classes/ParticipantEventLink.html":{},"classes/ParticipationEvent.html":{},"modules/ParticipationEventsModule.html":{},"injectables/ParticipationEventsService.html":{},"classes/Phase.html":{},"classes/PhaseExpertRelationship.html":{},"classes/PhaseRelationship.html":{},"modules/PhasesModule.html":{},"classes/Rating.html":{},"classes/RemoveTableJoinInput.html":{},"classes/Resource.html":{},"modules/ResourcesModule.html":{},"modules/ResourcesRepliesModule.html":{},"classes/ResourcesReply.html":{},"injectables/ResourcesService.html":{},"classes/Rol.html":{},"modules/RolModule.html":{},"injectables/RolService.html":{},"classes/SearchBatchInput.html":{},"classes/SelectApplicantsArgs.html":{},"classes/SendEmailInput.html":{},"classes/SendGridProvider.html":{},"classes/SignUpInput.html":{},"classes/Site.html":{},"modules/SitesModule.html":{},"injectables/SitesService.html":{},"classes/Stage.html":{},"modules/StagesModule.html":{},"injectables/StagesService.html":{},"classes/Startup.html":{},"classes/StartupLink.html":{},"modules/StartupModule.html":{},"classes/StartupRelationship.html":{},"controllers/StorageController.html":{},"modules/StorageModule.html":{},"classes/StorageService.html":{},"classes/SubmitAnnouncementDocInput.html":{},"classes/SubmitFileInput.html":{},"classes/SubmitFormSubscriptionArgs.html":{},"classes/Table.html":{},"classes/TableConfig.html":{},"injectables/TableConfigService.html":{},"classes/TableJoin.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"classes/TeamCoachLink.html":{},"classes/TemplateInput.html":{},"classes/TermsOfUse.html":{},"modules/TermsOfUseModule.html":{},"injectables/TermsOfUseService.html":{},"modules/TicketCategoriesModule.html":{},"injectables/TicketCategoriesService.html":{},"classes/TicketCategory.html":{},"classes/TicketChild.html":{},"classes/TypesEvent.html":{},"modules/TypesEventsModule.html":{},"injectables/TypesEventsService.html":{},"classes/TypesNotification.html":{},"modules/TypesNotificationsModule.html":{},"injectables/TypesNotificationsService.html":{},"classes/UpdateActaInput.html":{},"classes/UpdateActivitiesConfigInput.html":{},"classes/UpdateAnnouncementInput.html":{},"classes/UpdateApplicantInput.html":{},"classes/UpdateApplicantStateInput.html":{},"classes/UpdateConfigEvaluationInput.html":{},"classes/UpdateConfigurationAppInput.html":{},"classes/UpdateContentInput.html":{},"classes/UpdateEventInput.html":{},"classes/UpdateExpertInput.html":{},"classes/UpdateFormInput.html":{},"classes/UpdateFormTagInput.html":{},"classes/UpdateHelpDeskInput.html":{},"classes/UpdateIntegrationInput.html":{},"classes/UpdateNotificationInput.html":{},"classes/UpdateParticipationEventInput.html":{},"classes/UpdatePhaseInput.html":{},"classes/UpdateResourceInput.html":{},"classes/UpdateResourcesReplyInput.html":{},"classes/UpdateRolInput.html":{},"classes/UpdateSiteInput.html":{},"classes/UpdateStageInput.html":{},"classes/UpdateTableConfigInput.html":{},"classes/UpdateTermsOfUseInput.html":{},"classes/UpdateTypesEventInput.html":{},"classes/UpdateUserConfigInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"classes/UserConfig.html":{},"modules/UserConfigModule.html":{},"injectables/UserConfigService.html":{},"classes/UserLog.html":{},"modules/UserLogModule.html":{},"injectables/UserLogService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/activities.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"interfaces/item_permission.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["math.round(limit",{"_index":572,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["means",{"_index":541,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["meeting",{"_index":2840,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["meeting_authentication",{"_index":2933,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["meeting_invitees",{"_index":2934,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["meetingid",{"_index":2841,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["meetingname",{"_index":2853,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["meetings/${meetingid",{"_index":2970,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["mensaje",{"_index":4548,"title":{},"body":{"injectables/UsersService.html":{}}}],["mentoring",{"_index":4735,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["mentoría",{"_index":5083,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mesa",{"_index":4861,"title":{},"body":{"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["message",{"_index":126,"title":{},"body":{"classes/AWSSESProvider.html":{},"classes/Announcement.html":{}}}],["metadata",{"_index":629,"title":{},"body":{"classes/AddTableJoinInput.html":{},"classes/CreateIntegrationInput.html":{},"classes/CreateParticipationEventInput.html":{},"classes/CreateUserLogInput.html":{},"classes/Integration.html":{},"classes/Invitation.html":{},"injectables/InvitationsService.html":{},"classes/ParticipationEvent.html":{},"classes/SelectApplicantsArgs.html":{},"classes/UpdateParticipationEventInput.html":{},"classes/UserLog.html":{},"injectables/UserLogService.html":{},"dependencies.html":{}}}],["metadata.batch",{"_index":1838,"title":{},"body":{"injectables/ContentService.html":{}}}],["metadata.content",{"_index":4405,"title":{},"body":{"injectables/UserLogService.html":{}}}],["metadata.login",{"_index":4398,"title":{},"body":{"injectables/UserLogService.html":{}}}],["metadata.loginapp",{"_index":4400,"title":{},"body":{"injectables/UserLogService.html":{}}}],["metadata.startup",{"_index":1839,"title":{},"body":{"injectables/ContentService.html":{}}}],["metadata.user",{"_index":4396,"title":{},"body":{"injectables/UserLogService.html":{}}}],["method",{"_index":2875,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["method=request",{"_index":3576,"title":{},"body":{"classes/SendGridProvider.html":{}}}],["methodnotallowedexception",{"_index":77,"title":{},"body":{"classes/AWSSESProvider.html":{},"injectables/EmailsService.html":{},"injectables/FormSubscriptionService.html":{},"injectables/InvitationsService.html":{},"classes/SendGridProvider.html":{}}}],["methodnotallowedexception('the",{"_index":3096,"title":{},"body":{"injectables/InvitationsService.html":{}}}],["methodnotallowedexception('this",{"_index":114,"title":{},"body":{"classes/AWSSESProvider.html":{},"injectables/EmailsService.html":{},"classes/SendGridProvider.html":{}}}],["methodnotallowedexception(`invitation",{"_index":3092,"title":{},"body":{"injectables/InvitationsService.html":{}}}],["methodology",{"_index":1720,"title":{},"body":{"classes/ContactServiceLink.html":{},"classes/ContactServicesInput.html":{},"classes/CreateSiteInput.html":{},"classes/Site.html":{},"classes/UpdateSiteInput.html":{}}}],["methods",{"_index":22,"title":{},"body":{"classes/AWSSESProvider.html":{},"injectables/ActaService.html":{},"injectables/ActivitiesConfigService.html":{},"injectables/AnnouncementsService.html":{},"injectables/AuthCodeService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AwsService.html":{},"injectables/BusinessService.html":{},"injectables/ConfigEvaluationsService.html":{},"injectables/ConfigNotificationsService.html":{},"injectables/ConfigurationAppService.html":{},"injectables/ContentService.html":{},"injectables/DownloadsService.html":{},"controllers/EmailsController.html":{},"injectables/EmailsService.html":{},"injectables/FormSubscriptionService.html":{},"injectables/FormTagService.html":{},"injectables/FormsService.html":{},"guards/GqlAuthGuard.html":{},"injectables/HelpDeskService.html":{},"injectables/IntegrationsService.html":{},"controllers/InvitationsController.html":{},"injectables/InvitationsService.html":{},"injectables/NotificationsService.html":{},"injectables/ParticipationEventsService.html":{},"injectables/ResourcesService.html":{},"injectables/RolService.html":{},"classes/SendGridProvider.html":{},"injectables/SitesService.html":{},"injectables/StagesService.html":{},"controllers/StorageController.html":{},"classes/StorageService.html":{},"injectables/TableConfigService.html":{},"injectables/TableService.html":{},"injectables/TermsOfUseService.html":{},"injectables/TicketCategoriesService.html":{},"injectables/TypesEventsService.html":{},"injectables/TypesNotificationsService.html":{},"injectables/UserConfigService.html":{},"injectables/UserLogService.html":{},"injectables/UsersService.html":{}}}],["min",{"_index":2682,"title":{},"body":{"classes/HelpDeskFilterInput.html":{}}}],["min(1",{"_index":2686,"title":{},"body":{"classes/HelpDeskFilterInput.html":{}}}],["minlength",{"_index":2036,"title":{},"body":{"classes/CreateHelpDeskInput.html":{},"classes/HelpDeskFilterInput.html":{}}}],["minlength(2",{"_index":2041,"title":{},"body":{"classes/CreateHelpDeskInput.html":{},"classes/HelpDeskFilterInput.html":{}}}],["minlength(5",{"_index":2045,"title":{},"body":{"classes/CreateHelpDeskInput.html":{}}}],["miscellaneous",{"_index":4612,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":163,"title":{},"body":{"classes/AWSSESProvider.html":{},"injectables/EmailsService.html":{},"classes/SendGridProvider.html":{}}}],["mit",{"_index":4786,"title":{},"body":{"index.html":{}}}],["miércoles",{"_index":4411,"title":{},"body":{"injectables/UserLogService.html":{}}}],["mm",{"_index":4402,"title":{},"body":{"injectables/UserLogService.html":{}}}],["mmm",{"_index":3168,"title":{},"body":{"classes/Notification.html":{}}}],["mode",{"_index":4775,"title":{},"body":{"index.html":{}}}],["model",{"_index":290,"title":{},"body":{"injectables/ActaService.html":{},"injectables/ActivitiesConfigService.html":{},"injectables/AnnouncementsService.html":{},"injectables/AuthCodeService.html":{},"injectables/BusinessService.html":{},"injectables/ConfigEvaluationsService.html":{},"injectables/ConfigNotificationsService.html":{},"injectables/ConfigurationAppService.html":{},"injectables/ContentService.html":{},"injectables/DownloadsService.html":{},"injectables/FormSubscriptionService.html":{},"injectables/FormTagService.html":{},"injectables/FormsService.html":{},"injectables/HelpDeskService.html":{},"injectables/IntegrationsService.html":{},"injectables/InvitationsService.html":{},"injectables/NotificationsService.html":{},"injectables/ParticipationEventsService.html":{},"injectables/ResourcesService.html":{},"injectables/RolService.html":{},"injectables/SitesService.html":{},"injectables/StagesService.html":{},"injectables/TableConfigService.html":{},"injectables/TableService.html":{},"injectables/TermsOfUseService.html":{},"injectables/TicketCategoriesService.html":{},"injectables/TypesEventsService.html":{},"injectables/TypesNotificationsService.html":{},"injectables/UserConfigService.html":{},"injectables/UserLogService.html":{},"injectables/UsersService.html":{}}}],["model/assign",{"_index":471,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["model/response",{"_index":2860,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["model/rol",{"_index":3505,"title":{},"body":{"injectables/RolService.html":{}}}],["model/type",{"_index":4049,"title":{},"body":{"injectables/TypesEventsService.html":{}}}],["model/types",{"_index":4073,"title":{},"body":{"injectables/TypesNotificationsService.html":{}}}],["model/user",{"_index":4303,"title":{},"body":{"injectables/UserConfigService.html":{}}}],["model/zoom",{"_index":2862,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["models/row",{"_index":3807,"title":{},"body":{"injectables/TableConfigService.html":{}}}],["models/stages",{"_index":3673,"title":{},"body":{"injectables/StagesService.html":{}}}],["models/storage",{"_index":1239,"title":{},"body":{"injectables/AwsService.html":{},"controllers/StorageController.html":{},"modules/StorageModule.html":{}}}],["modified",{"_index":3419,"title":{},"body":{"classes/ResourcesReply.html":{},"classes/UpdateResourcesReplyInput.html":{}}}],["modify",{"_index":3663,"title":{},"body":{"injectables/StagesService.html":{}}}],["modifyindex",{"_index":3651,"title":{},"body":{"injectables/StagesService.html":{}}}],["modifyindex(stageid",{"_index":3659,"title":{},"body":{"injectables/StagesService.html":{}}}],["module",{"_index":249,"title":{"modules/ActaModule.html":{},"modules/ActivitiesConfigModule.html":{},"modules/AnnouncementsModule.html":{},"modules/AppModule.html":{},"modules/ApplicantModule.html":{},"modules/AuthCodeModule.html":{},"modules/AuthModule.html":{},"modules/BusinessModule.html":{},"modules/ConfigEvaluationsModule.html":{},"modules/ConfigNotificationsModule.html":{},"modules/ConfigurationAppModule.html":{},"modules/ContentModule.html":{},"modules/DownloadsModule.html":{},"modules/EmailsModule.html":{},"modules/EntrepreneurModule.html":{},"modules/EvaluationsModule.html":{},"modules/EventsModule.html":{},"modules/ExpertModule.html":{},"modules/FormsModule.html":{},"modules/HelpDeskModule.html":{},"modules/IntegrationsModule.html":{},"modules/InvitationsModule.html":{},"modules/LoggerModule.html":{},"modules/NotificationsModule.html":{},"modules/ParticipationEventsModule.html":{},"modules/PhasesModule.html":{},"modules/ResourcesModule.html":{},"modules/ResourcesRepliesModule.html":{},"modules/RolModule.html":{},"modules/SitesModule.html":{},"modules/StagesModule.html":{},"modules/StartupModule.html":{},"modules/StorageModule.html":{},"modules/TableModule.html":{},"modules/TermsOfUseModule.html":{},"modules/TicketCategoriesModule.html":{},"modules/TypesEventsModule.html":{},"modules/TypesNotificationsModule.html":{},"modules/UserConfigModule.html":{},"modules/UserLogModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/ActaModule.html":{},"modules/ActivitiesConfigModule.html":{},"modules/AnnouncementsModule.html":{},"modules/AppModule.html":{},"modules/ApplicantModule.html":{},"modules/AuthCodeModule.html":{},"modules/AuthModule.html":{},"modules/BusinessModule.html":{},"modules/ConfigEvaluationsModule.html":{},"modules/ConfigNotificationsModule.html":{},"modules/ConfigurationAppModule.html":{},"modules/ContentModule.html":{},"modules/DownloadsModule.html":{},"modules/EmailsModule.html":{},"modules/EntrepreneurModule.html":{},"modules/EvaluationsModule.html":{},"modules/EventsModule.html":{},"modules/ExpertModule.html":{},"modules/FormsModule.html":{},"modules/HelpDeskModule.html":{},"modules/IntegrationsModule.html":{},"modules/InvitationsModule.html":{},"modules/LoggerModule.html":{},"modules/NotificationsModule.html":{},"modules/ParticipationEventsModule.html":{},"modules/PhasesModule.html":{},"modules/ResourcesModule.html":{},"modules/ResourcesRepliesModule.html":{},"modules/RolModule.html":{},"modules/SitesModule.html":{},"modules/StagesModule.html":{},"modules/StartupModule.html":{},"modules/StorageModule.html":{},"modules/TableModule.html":{},"modules/TermsOfUseModule.html":{},"modules/TicketCategoriesModule.html":{},"modules/TypesEventsModule.html":{},"modules/TypesNotificationsModule.html":{},"modules/UserConfigModule.html":{},"modules/UserLogModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["modules",{"_index":251,"title":{"modules.html":{}},"body":{"modules/ActaModule.html":{},"modules/ActivitiesConfigModule.html":{},"modules/AnnouncementsModule.html":{},"modules/AppModule.html":{},"modules/ApplicantModule.html":{},"modules/AuthCodeModule.html":{},"modules/AuthModule.html":{},"modules/BusinessModule.html":{},"modules/ConfigEvaluationsModule.html":{},"modules/ConfigNotificationsModule.html":{},"modules/ConfigurationAppModule.html":{},"modules/ContentModule.html":{},"modules/DownloadsModule.html":{},"modules/EmailsModule.html":{},"modules/EntrepreneurModule.html":{},"modules/EvaluationsModule.html":{},"modules/EventsModule.html":{},"modules/ExpertModule.html":{},"modules/FormsModule.html":{},"modules/HelpDeskModule.html":{},"modules/IntegrationsModule.html":{},"modules/InvitationsModule.html":{},"modules/LoggerModule.html":{},"modules/NotificationsModule.html":{},"modules/ParticipationEventsModule.html":{},"modules/PhasesModule.html":{},"modules/ResourcesModule.html":{},"modules/ResourcesRepliesModule.html":{},"modules/RolModule.html":{},"modules/SitesModule.html":{},"modules/StagesModule.html":{},"modules/StartupModule.html":{},"modules/StorageModule.html":{},"modules/TableModule.html":{},"modules/TermsOfUseModule.html":{},"modules/TicketCategoriesModule.html":{},"modules/TypesEventsModule.html":{},"modules/TypesNotificationsModule.html":{},"modules/UserConfigModule.html":{},"modules/UserLogModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["moment",{"_index":3163,"title":{},"body":{"classes/Notification.html":{},"dependencies.html":{}}}],["moment(date).locale('es').format('dddd",{"_index":3166,"title":{},"body":{"classes/Notification.html":{}}}],["mongoose",{"_index":241,"title":{},"body":{"classes/Acta.html":{},"injectables/ActaService.html":{},"classes/ActivitiesConfig.html":{},"injectables/ActivitiesConfigService.html":{},"injectables/AnnouncementsService.html":{},"classes/Assign.html":{},"injectables/AuthCodeService.html":{},"injectables/BusinessService.html":{},"injectables/ConfigEvaluationsService.html":{},"injectables/ConfigNotificationsService.html":{},"classes/ConfigurationApp.html":{},"injectables/ConfigurationAppService.html":{},"classes/Content.html":{},"injectables/ContentService.html":{},"injectables/DownloadsService.html":{},"classes/EntrepreneurRelationship-1.html":{},"classes/Event.html":{},"classes/Expert.html":{},"classes/ExpertEventLink.html":{},"injectables/FormSubscriptionService.html":{},"injectables/FormTagService.html":{},"injectables/FormsService.html":{},"injectables/HelpDeskService.html":{},"classes/HelpDeskTicket.html":{},"injectables/IntegrationsService.html":{},"injectables/InvitationsService.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"classes/ParticipantEventLink.html":{},"classes/ParticipationEvent.html":{},"injectables/ParticipationEventsService.html":{},"classes/PhaseExpertRelationship.html":{},"classes/PhaseRelationship.html":{},"classes/Resource.html":{},"classes/ResourcesReply.html":{},"injectables/ResourcesService.html":{},"injectables/RolService.html":{},"injectables/SitesService.html":{},"injectables/StagesService.html":{},"classes/Startup.html":{},"classes/StartupLink.html":{},"classes/TableConfig.html":{},"injectables/TableConfigService.html":{},"injectables/TableService.html":{},"classes/TeamCoachLink.html":{},"classes/TermsOfUse.html":{},"injectables/TermsOfUseService.html":{},"injectables/TicketCategoriesService.html":{},"classes/TicketChild.html":{},"classes/TypesEvent.html":{},"injectables/TypesEventsService.html":{},"injectables/TypesNotificationsService.html":{},"classes/User.html":{},"classes/UserConfig.html":{},"injectables/UserConfigService.html":{},"injectables/UserLogService.html":{},"injectables/UsersService.html":{},"classes/activities.html":{},"dependencies.html":{}}}],["mongoosemodule",{"_index":275,"title":{},"body":{"modules/ActaModule.html":{},"modules/ActivitiesConfigModule.html":{},"modules/AnnouncementsModule.html":{},"modules/AppModule.html":{},"modules/ApplicantModule.html":{},"modules/AuthCodeModule.html":{},"modules/BusinessModule.html":{},"modules/ConfigEvaluationsModule.html":{},"modules/ConfigNotificationsModule.html":{},"modules/ConfigurationAppModule.html":{},"modules/ContentModule.html":{},"modules/DownloadsModule.html":{},"modules/EntrepreneurModule.html":{},"modules/EvaluationsModule.html":{},"modules/EventsModule.html":{},"modules/ExpertModule.html":{},"modules/FormsModule.html":{},"modules/HelpDeskModule.html":{},"modules/IntegrationsModule.html":{},"modules/InvitationsModule.html":{},"modules/NotificationsModule.html":{},"modules/ParticipationEventsModule.html":{},"modules/PhasesModule.html":{},"modules/ResourcesModule.html":{},"modules/ResourcesRepliesModule.html":{},"modules/RolModule.html":{},"modules/SitesModule.html":{},"modules/StagesModule.html":{},"modules/StartupModule.html":{},"modules/TableModule.html":{},"modules/TermsOfUseModule.html":{},"modules/TicketCategoriesModule.html":{},"modules/TypesEventsModule.html":{},"modules/TypesNotificationsModule.html":{},"modules/UserConfigModule.html":{},"modules/UserLogModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forfeature",{"_index":277,"title":{},"body":{"modules/ActaModule.html":{},"modules/ActivitiesConfigModule.html":{},"modules/AnnouncementsModule.html":{},"modules/ApplicantModule.html":{},"modules/AuthCodeModule.html":{},"modules/BusinessModule.html":{},"modules/ConfigEvaluationsModule.html":{},"modules/ConfigNotificationsModule.html":{},"modules/ConfigurationAppModule.html":{},"modules/ContentModule.html":{},"modules/DownloadsModule.html":{},"modules/EntrepreneurModule.html":{},"modules/EvaluationsModule.html":{},"modules/EventsModule.html":{},"modules/ExpertModule.html":{},"modules/FormsModule.html":{},"modules/HelpDeskModule.html":{},"modules/IntegrationsModule.html":{},"modules/InvitationsModule.html":{},"modules/NotificationsModule.html":{},"modules/ParticipationEventsModule.html":{},"modules/PhasesModule.html":{},"modules/ResourcesModule.html":{},"modules/ResourcesRepliesModule.html":{},"modules/RolModule.html":{},"modules/SitesModule.html":{},"modules/StagesModule.html":{},"modules/StartupModule.html":{},"modules/TableModule.html":{},"modules/TermsOfUseModule.html":{},"modules/TicketCategoriesModule.html":{},"modules/TypesEventsModule.html":{},"modules/TypesNotificationsModule.html":{},"modules/UserConfigModule.html":{},"modules/UserLogModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forrootasync",{"_index":922,"title":{},"body":{"modules/AppModule.html":{}}}],["more",{"_index":3378,"title":{},"body":{"classes/Resource.html":{},"index.html":{}}}],["multiple",{"_index":4369,"title":{},"body":{"injectables/UserLogService.html":{}}}],["mute_upon_entry",{"_index":2935,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["myśliwiec",{"_index":4799,"title":{},"body":{"index.html":{}}}],["name",{"_index":49,"title":{},"body":{"classes/AWSSESProvider.html":{},"classes/AcceptInvitationDto.html":{},"classes/Acta.html":{},"modules/ActaModule.html":{},"injectables/ActaService.html":{},"modules/ActivitiesConfigModule.html":{},"injectables/ActivitiesConfigService.html":{},"classes/Announcement.html":{},"modules/AnnouncementsModule.html":{},"injectables/AnnouncementsService.html":{},"classes/Applicant.html":{},"modules/ApplicantModule.html":{},"classes/ApplicantState.html":{},"classes/Attachment.html":{},"classes/AttachmentSubmit.html":{},"modules/AuthCodeModule.html":{},"injectables/AuthCodeService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AwsService.html":{},"modules/BusinessModule.html":{},"injectables/BusinessService.html":{},"classes/ColumnGroup.html":{},"modules/ConfigEvaluationsModule.html":{},"injectables/ConfigEvaluationsService.html":{},"modules/ConfigNotificationsModule.html":{},"injectables/ConfigNotificationsService.html":{},"modules/ConfigurationAppModule.html":{},"injectables/ConfigurationAppService.html":{},"classes/ContactServiceLink.html":{},"classes/ContactServicesInput.html":{},"classes/Content.html":{},"modules/ContentModule.html":{},"injectables/ContentService.html":{},"classes/CreateActaInput.html":{},"classes/CreateAnnouncementInput.html":{},"classes/CreateContentInput.html":{},"classes/CreateEventInput.html":{},"classes/CreateFormInput.html":{},"classes/CreateFormTagInput.html":{},"classes/CreatePhaseInput.html":{},"classes/CreateResourceInput.html":{},"classes/CreateSiteInput.html":{},"classes/CreateStageInput.html":{},"classes/CreateTableConfigInput.html":{},"classes/CreateTypesEventInput.html":{},"classes/Download.html":{},"modules/DownloadsModule.html":{},"injectables/DownloadsService.html":{},"controllers/EmailsController.html":{},"injectables/EmailsService.html":{},"modules/EntrepreneurModule.html":{},"classes/EntrepreneurRelationship-1.html":{},"modules/EvaluationsModule.html":{},"classes/Event.html":{},"modules/EventsModule.html":{},"classes/Expert.html":{},"classes/ExpertEventLink.html":{},"modules/ExpertModule.html":{},"classes/Form.html":{},"injectables/FormSubscriptionService.html":{},"classes/FormTag.html":{},"injectables/FormTagService.html":{},"modules/FormsModule.html":{},"injectables/FormsService.html":{},"guards/GqlAuthGuard.html":{},"modules/HelpDeskModule.html":{},"injectables/HelpDeskService.html":{},"interfaces/IAttachment.html":{},"modules/IntegrationsModule.html":{},"injectables/IntegrationsService.html":{},"controllers/InvitationsController.html":{},"modules/InvitationsModule.html":{},"injectables/InvitationsService.html":{},"classes/LinkExpertsToPhaseArgs.html":{},"classes/LinkStartupToPhaseArgs.html":{},"classes/LinkStartupsExpertsArgs.html":{},"classes/Notification.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"classes/ParticipantEventLink.html":{},"modules/ParticipationEventsModule.html":{},"injectables/ParticipationEventsService.html":{},"classes/Phase.html":{},"classes/PhaseExpertRelationship.html":{},"classes/PhaseRelationship.html":{},"modules/PhasesModule.html":{},"classes/Resource.html":{},"modules/ResourcesModule.html":{},"modules/ResourcesRepliesModule.html":{},"injectables/ResourcesService.html":{},"classes/Rol.html":{},"modules/RolModule.html":{},"injectables/RolService.html":{},"classes/SendGridProvider.html":{},"classes/Site.html":{},"modules/SitesModule.html":{},"injectables/SitesService.html":{},"classes/Stage.html":{},"modules/StagesModule.html":{},"injectables/StagesService.html":{},"classes/Startup.html":{},"classes/StartupLink.html":{},"modules/StartupModule.html":{},"controllers/StorageController.html":{},"classes/StorageService.html":{},"classes/TableConfig.html":{},"injectables/TableConfigService.html":{},"classes/TableJoin.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"classes/TeamCoachLink.html":{},"classes/TermsOfUse.html":{},"modules/TermsOfUseModule.html":{},"injectables/TermsOfUseService.html":{},"modules/TicketCategoriesModule.html":{},"injectables/TicketCategoriesService.html":{},"classes/TicketCategory.html":{},"classes/TypesEvent.html":{},"modules/TypesEventsModule.html":{},"injectables/TypesEventsService.html":{},"classes/TypesNotification.html":{},"modules/TypesNotificationsModule.html":{},"injectables/TypesNotificationsService.html":{},"classes/UpdateActaInput.html":{},"classes/UpdateAnnouncementInput.html":{},"classes/UpdateApplicantStateInput.html":{},"classes/UpdateEventInput.html":{},"classes/UpdateFormInput.html":{},"classes/UpdateFormTagInput.html":{},"classes/UpdatePhaseInput.html":{},"classes/UpdateResourceInput.html":{},"classes/UpdateRolInput.html":{},"classes/UpdateSiteInput.html":{},"classes/UpdateStageInput.html":{},"classes/UpdateTableConfigInput.html":{},"classes/UpdateTermsOfUseInput.html":{},"classes/User.html":{},"modules/UserConfigModule.html":{},"injectables/UserConfigService.html":{},"modules/UserLogModule.html":{},"injectables/UserLogService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["name.'})@isstring",{"_index":1921,"title":{},"body":{"classes/CreateAnnouncementInput.html":{}}}],["name.'})@prop({default",{"_index":695,"title":{},"body":{"classes/Announcement.html":{},"classes/User.html":{}}}],["name.'})@prop({required",{"_index":3332,"title":{},"body":{"classes/Phase.html":{}}}],["namebatch",{"_index":3528,"title":{},"body":{"classes/SelectApplicantsArgs.html":{}}}],["nameorganizer",{"_index":169,"title":{},"body":{"classes/AWSSESProvider.html":{},"interfaces/EmailsRepository.html":{},"injectables/EmailsService.html":{},"classes/SendGridProvider.html":{},"miscellaneous/functions.html":{}}}],["names",{"_index":5118,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nbsp",{"_index":4544,"title":{},"body":{"injectables/UsersService.html":{}}}],["ne",{"_index":3687,"title":{},"body":{"injectables/StagesService.html":{}}}],["necesarios",{"_index":4912,"title":{},"body":{"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["necessary",{"_index":5112,"title":{},"body":{"miscellaneous/variables.html":{}}}],["need",{"_index":1550,"title":{},"body":{"injectables/ConfigEvaluationsService.html":{},"miscellaneous/variables.html":{}}}],["nest",{"_index":4765,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":4803,"title":{},"body":{"index.html":{}}}],["nestjs/apollo",{"_index":842,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":78,"title":{},"body":{"classes/AWSSESProvider.html":{},"modules/ActaModule.html":{},"injectables/ActaService.html":{},"modules/ActivitiesConfigModule.html":{},"injectables/ActivitiesConfigService.html":{},"modules/AnnouncementsModule.html":{},"injectables/AnnouncementsService.html":{},"modules/AppModule.html":{},"modules/ApplicantModule.html":{},"modules/AuthCodeModule.html":{},"injectables/AuthCodeService.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/AwsService.html":{},"modules/BusinessModule.html":{},"injectables/BusinessService.html":{},"modules/ConfigEvaluationsModule.html":{},"injectables/ConfigEvaluationsService.html":{},"modules/ConfigNotificationsModule.html":{},"injectables/ConfigNotificationsService.html":{},"modules/ConfigurationAppModule.html":{},"injectables/ConfigurationAppService.html":{},"modules/ContentModule.html":{},"injectables/ContentService.html":{},"modules/DownloadsModule.html":{},"injectables/DownloadsService.html":{},"controllers/EmailsController.html":{},"modules/EmailsModule.html":{},"injectables/EmailsService.html":{},"modules/EntrepreneurModule.html":{},"modules/EvaluationsModule.html":{},"modules/EventsModule.html":{},"modules/ExpertModule.html":{},"injectables/FormSubscriptionService.html":{},"injectables/FormTagService.html":{},"modules/FormsModule.html":{},"injectables/FormsService.html":{},"guards/GqlAuthGuard.html":{},"modules/HelpDeskModule.html":{},"injectables/HelpDeskService.html":{},"modules/IntegrationsModule.html":{},"injectables/IntegrationsService.html":{},"controllers/InvitationsController.html":{},"modules/InvitationsModule.html":{},"injectables/InvitationsService.html":{},"modules/LoggerModule.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"modules/ParticipationEventsModule.html":{},"injectables/ParticipationEventsService.html":{},"modules/PhasesModule.html":{},"modules/ResourcesModule.html":{},"modules/ResourcesRepliesModule.html":{},"injectables/ResourcesService.html":{},"modules/RolModule.html":{},"injectables/RolService.html":{},"classes/SendGridProvider.html":{},"modules/SitesModule.html":{},"injectables/SitesService.html":{},"modules/StagesModule.html":{},"injectables/StagesService.html":{},"modules/StartupModule.html":{},"controllers/StorageController.html":{},"modules/StorageModule.html":{},"injectables/TableConfigService.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"modules/TermsOfUseModule.html":{},"injectables/TermsOfUseService.html":{},"modules/TicketCategoriesModule.html":{},"injectables/TicketCategoriesService.html":{},"modules/TypesEventsModule.html":{},"injectables/TypesEventsService.html":{},"modules/TypesNotificationsModule.html":{},"injectables/TypesNotificationsService.html":{},"modules/UserConfigModule.html":{},"injectables/UserConfigService.html":{},"modules/UserLogModule.html":{},"injectables/UserLogService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":845,"title":{},"body":{"modules/AppModule.html":{},"injectables/AwsService.html":{},"injectables/EmailsService.html":{},"injectables/InvitationsService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":4571,"title":{},"body":{"dependencies.html":{}}}],["nestjs/event",{"_index":903,"title":{},"body":{"modules/AppModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/graphql",{"_index":233,"title":{},"body":{"classes/Acta.html":{},"classes/ActivitiesConfig.html":{},"classes/AddTableJoinInput.html":{},"classes/Announcement.html":{},"classes/AnnouncementApplicantArgs.html":{},"classes/AnnouncementApplicantsArgs.html":{},"modules/AppModule.html":{},"classes/Applicant.html":{},"classes/ApplicantArgs.html":{},"classes/ApplicantState.html":{},"classes/Assign.html":{},"classes/Attachment.html":{},"classes/AttachmentSubmit.html":{},"classes/AuthCode.html":{},"classes/Business.html":{},"classes/BusinessRelationship.html":{},"classes/CloseFormSubscriptionArgs.html":{},"classes/ColumnGroup.html":{},"classes/ConfigEvaluation.html":{},"classes/ConfigurationApp.html":{},"classes/ContactArgs.html":{},"classes/ContactServiceLink.html":{},"classes/ContactServicesInput.html":{},"classes/Content.html":{},"classes/CreateActaInput.html":{},"classes/CreateActivitiesConfigInput.html":{},"classes/CreateAnnouncementInput.html":{},"classes/CreateConfigEvaluationInput.html":{},"classes/CreateConfigNotificationInput.html":{},"classes/CreateContentInput.html":{},"classes/CreateEventInput.html":{},"classes/CreateFormInput.html":{},"classes/CreateFormSubscriptionInput.html":{},"classes/CreateFormTagInput.html":{},"classes/CreateHelpDeskInput.html":{},"classes/CreateIntegrationInput.html":{},"classes/CreateInvitationArgs.html":{},"classes/CreateNotificationInput.html":{},"classes/CreateParticipationEventInput.html":{},"classes/CreatePhaseInput.html":{},"classes/CreateResourceInput.html":{},"classes/CreateResourcesReplyInput.html":{},"classes/CreateRolInput.html":{},"classes/CreateSiteInput.html":{},"classes/CreateStageInput.html":{},"classes/CreateTableConfigInput.html":{},"classes/CreateTableInput.html":{},"classes/CreateTypesEventInput.html":{},"classes/CreateUserInput.html":{},"classes/CreateUserLogInput.html":{},"classes/Download.html":{},"classes/Entrepreneur.html":{},"classes/EntrepreneurRelationship.html":{},"classes/EntrepreneurRelationship-1.html":{},"classes/EntrepreneurStartupArgs.html":{},"classes/Evaluation.html":{},"classes/Event.html":{},"classes/Expert.html":{},"classes/ExpertEventLink.html":{},"classes/FindFormsArgs.html":{},"classes/FindInvitationArgs.html":{},"classes/FindUsersArgs.html":{},"classes/Form.html":{},"classes/FormSubmission.html":{},"classes/FormSubmissionFiles.html":{},"classes/FormSubscription.html":{},"classes/FormTag.html":{},"classes/GetSubmittedFilesArgs.html":{},"guards/GqlAuthGuard.html":{},"classes/HelpDeskFilterInput.html":{},"classes/HelpDeskTicket.html":{},"classes/Hours.html":{},"interfaces/IAttachment.html":{},"classes/Integration.html":{},"classes/Invitation.html":{},"classes/LastContentOutput.html":{},"classes/LinkExpertsToPhaseArgs.html":{},"classes/LinkStartupToPhaseArgs.html":{},"classes/LinkStartupsExpertsArgs.html":{},"classes/LinkWithTargetsArgs.html":{},"classes/LinkWithTargetsByRequestArgs.html":{},"classes/Notification-1.html":{},"classes/OthersInput.html":{},"classes/ParticipantEventLink.html":{},"classes/ParticipationEvent.html":{},"classes/Phase.html":{},"classes/PhaseExpertRelationship.html":{},"classes/PhaseRelationship.html":{},"classes/Rating.html":{},"classes/RemoveTableJoinInput.html":{},"classes/Resource.html":{},"classes/ResourcesReply.html":{},"classes/Rol.html":{},"classes/SearchBatchInput.html":{},"classes/SelectApplicantsArgs.html":{},"classes/SignUpInput.html":{},"classes/Site.html":{},"classes/Stage.html":{},"classes/Startup.html":{},"classes/StartupLink.html":{},"classes/StartupRelationship.html":{},"classes/SubmitAnnouncementDocInput.html":{},"classes/SubmitFileInput.html":{},"classes/SubmitFormSubscriptionArgs.html":{},"classes/Table.html":{},"classes/TableConfig.html":{},"classes/TableJoin.html":{},"classes/TeamCoachLink.html":{},"classes/TermsOfUse.html":{},"classes/TicketCategory.html":{},"classes/TicketChild.html":{},"classes/TypesEvent.html":{},"classes/TypesNotification.html":{},"classes/UpdateActaInput.html":{},"classes/UpdateActivitiesConfigInput.html":{},"classes/UpdateAnnouncementInput.html":{},"classes/UpdateApplicantInput.html":{},"classes/UpdateApplicantStateInput.html":{},"classes/UpdateConfigEvaluationInput.html":{},"classes/UpdateConfigurationAppInput.html":{},"classes/UpdateContentInput.html":{},"classes/UpdateEventInput.html":{},"classes/UpdateExpertInput.html":{},"classes/UpdateFormInput.html":{},"classes/UpdateFormTagInput.html":{},"classes/UpdateHelpDeskInput.html":{},"classes/UpdateIntegrationInput.html":{},"classes/UpdateNotificationInput.html":{},"classes/UpdateParticipationEventInput.html":{},"classes/UpdatePhaseInput.html":{},"classes/UpdateResourceInput.html":{},"classes/UpdateResourcesReplyInput.html":{},"classes/UpdateRolInput.html":{},"classes/UpdateSiteInput.html":{},"classes/UpdateStageInput.html":{},"classes/UpdateTableConfigInput.html":{},"classes/UpdateTermsOfUseInput.html":{},"classes/UpdateTypesEventInput.html":{},"classes/UpdateUserConfigInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"classes/UserConfig.html":{},"classes/UserLog.html":{},"classes/activities.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":4574,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mongoose",{"_index":237,"title":{},"body":{"classes/Acta.html":{},"modules/ActaModule.html":{},"injectables/ActaService.html":{},"classes/ActivitiesConfig.html":{},"modules/ActivitiesConfigModule.html":{},"injectables/ActivitiesConfigService.html":{},"classes/Announcement.html":{},"modules/AnnouncementsModule.html":{},"injectables/AnnouncementsService.html":{},"modules/AppModule.html":{},"classes/Applicant.html":{},"modules/ApplicantModule.html":{},"classes/ApplicantState.html":{},"classes/Assign.html":{},"classes/Attachment.html":{},"classes/AuthCode.html":{},"modules/AuthCodeModule.html":{},"injectables/AuthCodeService.html":{},"classes/Business.html":{},"modules/BusinessModule.html":{},"classes/BusinessRelationship.html":{},"injectables/BusinessService.html":{},"classes/ConfigEvaluation.html":{},"modules/ConfigEvaluationsModule.html":{},"injectables/ConfigEvaluationsService.html":{},"modules/ConfigNotificationsModule.html":{},"injectables/ConfigNotificationsService.html":{},"classes/ConfigurationApp.html":{},"modules/ConfigurationAppModule.html":{},"injectables/ConfigurationAppService.html":{},"classes/ContactServiceLink.html":{},"classes/Content.html":{},"modules/ContentModule.html":{},"injectables/ContentService.html":{},"classes/Download.html":{},"modules/DownloadsModule.html":{},"injectables/DownloadsService.html":{},"classes/Entrepreneur.html":{},"modules/EntrepreneurModule.html":{},"classes/EntrepreneurRelationship.html":{},"classes/EntrepreneurRelationship-1.html":{},"classes/Evaluation.html":{},"modules/EvaluationsModule.html":{},"classes/Event.html":{},"modules/EventsModule.html":{},"classes/Expert.html":{},"classes/ExpertEventLink.html":{},"modules/ExpertModule.html":{},"classes/Form.html":{},"classes/FormSubscription.html":{},"injectables/FormSubscriptionService.html":{},"classes/FormTag.html":{},"injectables/FormTagService.html":{},"modules/FormsModule.html":{},"injectables/FormsService.html":{},"modules/HelpDeskModule.html":{},"injectables/HelpDeskService.html":{},"classes/HelpDeskTicket.html":{},"interfaces/IAttachment.html":{},"classes/Integration.html":{},"modules/IntegrationsModule.html":{},"injectables/IntegrationsService.html":{},"classes/Invitation.html":{},"modules/InvitationsModule.html":{},"injectables/InvitationsService.html":{},"classes/Notification-1.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"classes/ParticipantEventLink.html":{},"classes/ParticipationEvent.html":{},"modules/ParticipationEventsModule.html":{},"injectables/ParticipationEventsService.html":{},"classes/Phase.html":{},"classes/PhaseExpertRelationship.html":{},"classes/PhaseRelationship.html":{},"modules/PhasesModule.html":{},"classes/Rating.html":{},"classes/Resource.html":{},"modules/ResourcesModule.html":{},"modules/ResourcesRepliesModule.html":{},"classes/ResourcesReply.html":{},"injectables/ResourcesService.html":{},"classes/Rol.html":{},"modules/RolModule.html":{},"injectables/RolService.html":{},"classes/Site.html":{},"modules/SitesModule.html":{},"injectables/SitesService.html":{},"classes/Stage.html":{},"modules/StagesModule.html":{},"injectables/StagesService.html":{},"classes/Startup.html":{},"classes/StartupLink.html":{},"modules/StartupModule.html":{},"classes/StartupRelationship.html":{},"classes/Table.html":{},"classes/TableConfig.html":{},"injectables/TableConfigService.html":{},"classes/TableJoin.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"classes/TeamCoachLink.html":{},"classes/TermsOfUse.html":{},"modules/TermsOfUseModule.html":{},"injectables/TermsOfUseService.html":{},"modules/TicketCategoriesModule.html":{},"injectables/TicketCategoriesService.html":{},"classes/TicketCategory.html":{},"classes/TicketChild.html":{},"classes/TypesEvent.html":{},"modules/TypesEventsModule.html":{},"injectables/TypesEventsService.html":{},"classes/TypesNotification.html":{},"modules/TypesNotificationsModule.html":{},"injectables/TypesNotificationsService.html":{},"classes/User.html":{},"classes/UserConfig.html":{},"modules/UserConfigModule.html":{},"injectables/UserConfigService.html":{},"classes/UserLog.html":{},"modules/UserLogModule.html":{},"injectables/UserLogService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/activities.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":4576,"title":{},"body":{"dependencies.html":{}}}],["nestjs/schedule",{"_index":915,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":4580,"title":{},"body":{"dependencies.html":{}}}],["nestjs/websockets",{"_index":4582,"title":{},"body":{"dependencies.html":{}}}],["networking",{"_index":5102,"title":{},"body":{"miscellaneous/variables.html":{}}}],["new",{"_index":39,"title":{},"body":{"classes/AWSSESProvider.html":{},"injectables/ActaService.html":{},"injectables/ActivitiesConfigService.html":{},"classes/AddTableJoinInput.html":{},"injectables/AnnouncementsService.html":{},"injectables/AuthCodeService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AwsService.html":{},"injectables/BusinessService.html":{},"injectables/ConfigEvaluationsService.html":{},"injectables/ConfigNotificationsService.html":{},"injectables/ConfigurationAppService.html":{},"injectables/ContentService.html":{},"injectables/DownloadsService.html":{},"injectables/EmailsService.html":{},"injectables/FormSubscriptionService.html":{},"injectables/FormTagService.html":{},"injectables/FormsService.html":{},"guards/GqlAuthGuard.html":{},"injectables/HelpDeskService.html":{},"injectables/IntegrationsService.html":{},"classes/Invitation.html":{},"injectables/InvitationsService.html":{},"classes/Notification.html":{},"classes/Notification-1.html":{},"injectables/NotificationsService.html":{},"injectables/ParticipationEventsService.html":{},"injectables/ResourcesService.html":{},"injectables/RolService.html":{},"classes/SendGridProvider.html":{},"injectables/SitesService.html":{},"injectables/StagesService.html":{},"injectables/TableConfigService.html":{},"injectables/TableService.html":{},"injectables/TermsOfUseService.html":{},"injectables/TicketCategoriesService.html":{},"injectables/TypesEventsService.html":{},"injectables/UserLogService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["newchild",{"_index":2024,"title":{},"body":{"classes/CreateHelpDeskInput.html":{}}}],["newcontent",{"_index":1825,"title":{},"body":{"injectables/ContentService.html":{}}}],["newcontent._id",{"_index":1828,"title":{},"body":{"injectables/ContentService.html":{}}}],["newindex",{"_index":3660,"title":{},"body":{"injectables/StagesService.html":{}}}],["newnotification",{"_index":3239,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["newnotification.target.split",{"_index":3241,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["newnotification.toobject",{"_index":3244,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["newpassword",{"_index":1154,"title":{},"body":{"injectables/AuthService.html":{}}}],["newphaseid",{"_index":445,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["newresource",{"_index":3459,"title":{},"body":{"injectables/ResourcesService.html":{}}}],["newresource._id",{"_index":3464,"title":{},"body":{"injectables/ResourcesService.html":{}}}],["newticket",{"_index":2734,"title":{},"body":{"injectables/HelpDeskService.html":{}}}],["newticket.toobject",{"_index":2738,"title":{},"body":{"injectables/HelpDeskService.html":{}}}],["newvalue",{"_index":4316,"title":{},"body":{"injectables/UserConfigService.html":{}}}],["next",{"_index":551,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["node.js",{"_index":4758,"title":{},"body":{"index.html":{}}}],["node:stream",{"_index":2214,"title":{},"body":{"injectables/DownloadsService.html":{}}}],["nombre",{"_index":609,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["non",{"_index":981,"title":{},"body":{"classes/Applicant.html":{},"classes/ApplicantState.html":{},"classes/Attachment.html":{},"interfaces/IAttachment.html":{},"miscellaneous/variables.html":{}}}],["noop",{"_index":2222,"title":{},"body":{"injectables/DownloadsService.html":{}}}],["notes",{"_index":995,"title":{},"body":{"classes/Applicant.html":{},"classes/ApplicantState.html":{},"classes/Attachment.html":{},"classes/AttachmentSubmit.html":{},"interfaces/IAttachment.html":{},"classes/UpdateApplicantStateInput.html":{},"miscellaneous/enumerations.html":{}}}],["notfoundexception",{"_index":461,"title":{},"body":{"injectables/ActivitiesConfigService.html":{},"injectables/AnnouncementsService.html":{},"injectables/AuthCodeService.html":{},"injectables/BusinessService.html":{},"injectables/FormSubscriptionService.html":{},"injectables/FormTagService.html":{},"injectables/FormsService.html":{},"injectables/HelpDeskService.html":{},"injectables/IntegrationsService.html":{},"injectables/InvitationsService.html":{},"injectables/NotificationsService.html":{},"injectables/RolService.html":{},"injectables/TableConfigService.html":{},"injectables/TableService.html":{},"injectables/TicketCategoriesService.html":{},"injectables/UsersService.html":{}}}],["notfoundexception('the",{"_index":1087,"title":{},"body":{"injectables/AuthCodeService.html":{}}}],["notfoundexception(`couldn't",{"_index":1430,"title":{},"body":{"injectables/BusinessService.html":{},"injectables/FormsService.html":{},"injectables/IntegrationsService.html":{}}}],["notfoundexception(`no",{"_index":794,"title":{},"body":{"injectables/AnnouncementsService.html":{},"injectables/FormSubscriptionService.html":{},"injectables/FormTagService.html":{},"injectables/RolService.html":{},"injectables/UsersService.html":{}}}],["notfoundexception(`notification",{"_index":3249,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["notfoundexception(`the",{"_index":802,"title":{},"body":{"injectables/AnnouncementsService.html":{}}}],["notfoundexception(`ticket",{"_index":2758,"title":{},"body":{"injectables/HelpDeskService.html":{},"injectables/TicketCategoriesService.html":{}}}],["notification",{"_index":1611,"title":{"classes/Notification.html":{},"classes/Notification-1.html":{}},"body":{"injectables/ConfigNotificationsService.html":{},"injectables/HelpDeskService.html":{},"classes/Notification.html":{},"classes/Notification-1.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"classes/TypesNotification.html":{},"miscellaneous/enumerations.html":{}}}],["notification.default",{"_index":3222,"title":{},"body":{"injectables/NotificationsService.html":{},"injectables/TypesNotificationsService.html":{},"injectables/UserConfigService.html":{}}}],["notification.default.ts",{"_index":4956,"title":{},"body":{"miscellaneous/variables.html":{}}}],["notification.entity",{"_index":1599,"title":{},"body":{"modules/ConfigNotificationsModule.html":{},"injectables/ConfigNotificationsService.html":{},"modules/TypesNotificationsModule.html":{},"injectables/TypesNotificationsService.html":{}}}],["notification.entity.ts",{"_index":4060,"title":{},"body":{"classes/TypesNotification.html":{}}}],["notification.entity.ts:10",{"_index":4061,"title":{},"body":{"classes/TypesNotification.html":{}}}],["notification.entity.ts:14",{"_index":4062,"title":{},"body":{"classes/TypesNotification.html":{}}}],["notification.enum",{"_index":3218,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["notification.input",{"_index":1621,"title":{},"body":{"injectables/ConfigNotificationsService.html":{},"injectables/NotificationsService.html":{},"classes/UpdateNotificationInput.html":{}}}],["notification.input.ts",{"_index":1943,"title":{},"body":{"classes/CreateConfigNotificationInput.html":{},"classes/CreateNotificationInput.html":{},"classes/UpdateNotificationInput.html":{}}}],["notification.input.ts:11",{"_index":1944,"title":{},"body":{"classes/CreateConfigNotificationInput.html":{}}}],["notification.input.ts:12",{"_index":2074,"title":{},"body":{"classes/CreateNotificationInput.html":{}}}],["notification.input.ts:15",{"_index":4188,"title":{},"body":{"classes/UpdateNotificationInput.html":{}}}],["notification.input.ts:17",{"_index":2078,"title":{},"body":{"classes/CreateNotificationInput.html":{}}}],["notification.input.ts:19",{"_index":4190,"title":{},"body":{"classes/UpdateNotificationInput.html":{}}}],["notification.input.ts:22",{"_index":2072,"title":{},"body":{"classes/CreateNotificationInput.html":{}}}],["notification.input.ts:23",{"_index":4189,"title":{},"body":{"classes/UpdateNotificationInput.html":{}}}],["notification.input.ts:26",{"_index":2070,"title":{},"body":{"classes/CreateNotificationInput.html":{}}}],["notification.input.ts:30",{"_index":2076,"title":{},"body":{"classes/CreateNotificationInput.html":{}}}],["notification.input.ts:8",{"_index":1945,"title":{},"body":{"classes/CreateConfigNotificationInput.html":{}}}],["notification.name",{"_index":3194,"title":{},"body":{"modules/NotificationsModule.html":{}}}],["notificationlistenerservice",{"_index":3188,"title":{},"body":{"modules/NotificationsModule.html":{},"overview.html":{}}}],["notificationmodel",{"_index":3200,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["notifications",{"_index":3171,"title":{},"body":{"classes/Notification-1.html":{},"injectables/NotificationsService.html":{},"injectables/TypesNotificationsService.html":{},"classes/UpdateUserConfigInput.html":{},"classes/UserConfig.html":{},"injectables/UserConfigService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["notifications.module",{"_index":913,"title":{},"body":{"modules/AppModule.html":{},"modules/EvaluationsModule.html":{},"modules/EventsModule.html":{},"modules/NotificationsModule.html":{},"modules/PhasesModule.html":{},"modules/ResourcesRepliesModule.html":{},"modules/UserConfigModule.html":{}}}],["notifications.module.ts",{"_index":1593,"title":{},"body":{"modules/ConfigNotificationsModule.html":{},"modules/TypesNotificationsModule.html":{}}}],["notifications.resolver",{"_index":1596,"title":{},"body":{"modules/ConfigNotificationsModule.html":{},"modules/NotificationsModule.html":{},"modules/TypesNotificationsModule.html":{}}}],["notifications.service",{"_index":1594,"title":{},"body":{"modules/ConfigNotificationsModule.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"modules/TypesNotificationsModule.html":{},"injectables/UserConfigService.html":{}}}],["notifications.service.ts",{"_index":1601,"title":{},"body":{"injectables/ConfigNotificationsService.html":{},"injectables/TypesNotificationsService.html":{}}}],["notifications.service.ts:17",{"_index":1610,"title":{},"body":{"injectables/ConfigNotificationsService.html":{},"injectables/TypesNotificationsService.html":{}}}],["notifications.service.ts:27",{"_index":1618,"title":{},"body":{"injectables/ConfigNotificationsService.html":{},"injectables/TypesNotificationsService.html":{}}}],["notifications.service.ts:45",{"_index":1614,"title":{},"body":{"injectables/ConfigNotificationsService.html":{}}}],["notifications.service.ts:57",{"_index":1620,"title":{},"body":{"injectables/ConfigNotificationsService.html":{}}}],["notifications.service.ts:8",{"_index":1606,"title":{},"body":{"injectables/ConfigNotificationsService.html":{},"injectables/TypesNotificationsService.html":{}}}],["notifications/config",{"_index":1592,"title":{},"body":{"modules/ConfigNotificationsModule.html":{},"injectables/ConfigNotificationsService.html":{},"modules/EvaluationsModule.html":{},"modules/EventsModule.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"modules/PhasesModule.html":{},"modules/ResourcesRepliesModule.html":{},"modules/UserConfigModule.html":{},"injectables/UserConfigService.html":{}}}],["notifications/dto/create",{"_index":1942,"title":{},"body":{"classes/CreateConfigNotificationInput.html":{}}}],["notifications/entities/types",{"_index":4059,"title":{},"body":{"classes/TypesNotification.html":{}}}],["notifications/model/email",{"_index":3224,"title":{},"body":{"injectables/NotificationsService.html":{},"miscellaneous/enumerations.html":{}}}],["notifications/model/types",{"_index":3221,"title":{},"body":{"injectables/NotificationsService.html":{},"injectables/UserConfigService.html":{},"miscellaneous/variables.html":{}}}],["notifications/notifications.module",{"_index":896,"title":{},"body":{"modules/AppModule.html":{}}}],["notifications/types",{"_index":912,"title":{},"body":{"modules/AppModule.html":{},"modules/NotificationsModule.html":{},"modules/TypesNotificationsModule.html":{},"injectables/TypesNotificationsService.html":{}}}],["notificationschema",{"_index":3182,"title":{},"body":{"classes/Notification-1.html":{},"modules/NotificationsModule.html":{}}}],["notificationservice",{"_index":4451,"title":{},"body":{"injectables/UsersService.html":{}}}],["notificationsmodule",{"_index":826,"title":{"modules/NotificationsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/EvaluationsModule.html":{},"modules/EventsModule.html":{},"modules/HelpDeskModule.html":{},"modules/NotificationsModule.html":{},"modules/PhasesModule.html":{},"modules/ResourcesRepliesModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["notificationsresolver",{"_index":3190,"title":{},"body":{"modules/NotificationsModule.html":{}}}],["notificationsservice",{"_index":2708,"title":{"injectables/NotificationsService.html":{}},"body":{"injectables/HelpDeskService.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["notificationstates",{"_index":2069,"title":{},"body":{"classes/CreateNotificationInput.html":{},"injectables/HelpDeskService.html":{},"classes/Notification.html":{},"classes/Notification-1.html":{},"classes/UpdateNotificationInput.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{}}}],["notificationstates.pending",{"_index":2780,"title":{},"body":{"injectables/HelpDeskService.html":{},"injectables/UsersService.html":{}}}],["notificationtemplate",{"_index":3922,"title":{},"body":{"classes/TemplateInput.html":{}}}],["notificationtypes",{"_index":2075,"title":{},"body":{"classes/CreateNotificationInput.html":{},"injectables/HelpDeskService.html":{},"classes/Notification.html":{},"classes/Notification-1.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{}}}],["notificationtypes.advise",{"_index":4560,"title":{},"body":{"injectables/UsersService.html":{}}}],["notificationtypes.notes",{"_index":2781,"title":{},"body":{"injectables/HelpDeskService.html":{}}}],["notificatión",{"_index":5124,"title":{},"body":{"miscellaneous/variables.html":{}}}],["npm",{"_index":4770,"title":{},"body":{"index.html":{}}}],["null",{"_index":173,"title":{},"body":{"classes/AWSSESProvider.html":{},"injectables/AnnouncementsService.html":{},"injectables/AuthService.html":{},"injectables/BusinessService.html":{},"injectables/ContentService.html":{},"injectables/FormTagService.html":{},"injectables/FormsService.html":{},"injectables/HelpDeskService.html":{},"injectables/TableConfigService.html":{},"miscellaneous/variables.html":{}}}],["nullable",{"_index":660,"title":{},"body":{"classes/Announcement.html":{},"classes/Applicant.html":{},"classes/ApplicantState.html":{},"classes/Attachment.html":{},"classes/AuthCode.html":{},"classes/Business.html":{},"classes/BusinessRelationship.html":{},"classes/CloseFormSubscriptionArgs.html":{},"classes/ConfigEvaluation.html":{},"classes/ContactServiceLink.html":{},"classes/ContactServicesInput.html":{},"classes/CreateActaInput.html":{},"classes/CreateAnnouncementInput.html":{},"classes/CreateFormSubscriptionInput.html":{},"classes/CreatePhaseInput.html":{},"classes/CreateResourceInput.html":{},"classes/CreateSiteInput.html":{},"classes/CreateStageInput.html":{},"classes/CreateTypesEventInput.html":{},"classes/CreateUserInput.html":{},"classes/Download.html":{},"classes/Entrepreneur.html":{},"classes/EntrepreneurRelationship.html":{},"classes/EntrepreneurRelationship-1.html":{},"classes/Event.html":{},"classes/Expert.html":{},"classes/ExpertEventLink.html":{},"classes/FindFormsArgs.html":{},"classes/FindInvitationArgs.html":{},"classes/FindUsersArgs.html":{},"classes/Form.html":{},"classes/FormSubscription.html":{},"classes/FormTag.html":{},"interfaces/IAttachment.html":{},"classes/Integration.html":{},"classes/Invitation.html":{},"classes/LinkStartupsExpertsArgs.html":{},"classes/Notification-1.html":{},"classes/ParticipantEventLink.html":{},"classes/Phase.html":{},"classes/PhaseExpertRelationship.html":{},"classes/PhaseRelationship.html":{},"classes/SignUpInput.html":{},"classes/Site.html":{},"classes/Stage.html":{},"classes/Startup.html":{},"classes/StartupLink.html":{},"classes/StartupRelationship.html":{},"classes/Table.html":{},"classes/TableConfig.html":{},"classes/TeamCoachLink.html":{},"classes/UpdateActaInput.html":{},"classes/UpdateActivitiesConfigInput.html":{},"classes/UpdateAnnouncementInput.html":{},"classes/UpdateConfigEvaluationInput.html":{},"classes/UpdateConfigurationAppInput.html":{},"classes/UpdateContentInput.html":{},"classes/UpdateEventInput.html":{},"classes/UpdateExpertInput.html":{},"classes/UpdateFormInput.html":{},"classes/UpdateHelpDeskInput.html":{},"classes/UpdateNotificationInput.html":{},"classes/UpdateParticipationEventInput.html":{},"classes/UpdatePhaseInput.html":{},"classes/UpdateResourceInput.html":{},"classes/UpdateResourcesReplyInput.html":{},"classes/UpdateRolInput.html":{},"classes/UpdateSiteInput.html":{},"classes/UpdateStageInput.html":{},"classes/UpdateTableConfigInput.html":{},"classes/UpdateTermsOfUseInput.html":{},"classes/UpdateTypesEventInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{}}}],["number",{"_index":355,"title":{},"body":{"classes/ActivitiesConfig.html":{},"injectables/ActivitiesConfigService.html":{},"classes/Assign.html":{},"classes/CreateActivitiesConfigInput.html":{},"classes/CreatePhaseInput.html":{},"classes/CreateStageInput.html":{},"classes/FindInvitationArgs.html":{},"classes/HelpDeskFilterInput.html":{},"injectables/IntegrationsService.html":{},"injectables/InvitationsService.html":{},"classes/LastContentOutput.html":{},"classes/Phase.html":{},"classes/Rating.html":{},"classes/Stage.html":{},"injectables/StagesService.html":{},"injectables/TermsOfUseService.html":{},"classes/UpdateActivitiesConfigInput.html":{},"classes/UpdateApplicantInput.html":{},"classes/UpdateIntegrationInput.html":{},"classes/UpdatePhaseInput.html":{},"classes/UpdateStageInput.html":{},"classes/activities.html":{}}}],["numberofcontent",{"_index":1859,"title":{},"body":{"injectables/ContentService.html":{},"classes/LastContentOutput.html":{}}}],["numberofresourcespending",{"_index":1864,"title":{},"body":{"injectables/ContentService.html":{},"classes/LastContentOutput.html":{}}}],["numbofstartupswithoutassign",{"_index":547,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["o",{"_index":2773,"title":{},"body":{"injectables/HelpDeskService.html":{},"classes/OthersInput.html":{},"injectables/UsersService.html":{}}}],["o.email",{"_index":155,"title":{},"body":{"classes/AWSSESProvider.html":{}}}],["obj",{"_index":4927,"title":{},"body":{"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["object",{"_index":968,"title":{},"body":{"classes/Applicant.html":{},"classes/ApplicantState.html":{},"classes/Attachment.html":{},"classes/Business.html":{},"classes/BusinessRelationship.html":{},"classes/Entrepreneur.html":{},"classes/EntrepreneurRelationship.html":{},"classes/EntrepreneurRelationship-1.html":{},"classes/Evaluation.html":{},"classes/Expert.html":{},"classes/FormSubscription.html":{},"interfaces/IAttachment.html":{},"classes/Integration.html":{},"classes/Invitation.html":{},"classes/PhaseExpertRelationship.html":{},"classes/PhaseRelationship.html":{},"classes/ResourcesReply.html":{},"classes/Startup.html":{},"classes/StartupLink.html":{},"classes/StartupRelationship.html":{},"classes/TableConfig.html":{},"classes/TemplateInput.html":{},"classes/UserLog.html":{},"miscellaneous/variables.html":{}}}],["object.assign(this",{"_index":3165,"title":{},"body":{"classes/Notification.html":{}}}],["object.entries",{"_index":4931,"title":{},"body":{"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["object.keys(currentconfig.notifications).map",{"_index":4315,"title":{},"body":{"injectables/UserConfigService.html":{}}}],["object.keys(relationsassign",{"_index":4500,"title":{},"body":{"injectables/UsersService.html":{}}}],["object.keys(startupconfig[0].hours).foreach((k",{"_index":502,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["object.keys(startupswithoutconfig",{"_index":566,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["object.keys(startupswithoutconfig).length",{"_index":564,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["object.template",{"_index":3926,"title":{},"body":{"classes/TemplateInput.html":{}}}],["object.values(hoursassignexpert",{"_index":606,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["object.values(hoursassignstartups",{"_index":568,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["object.values(hoursassignteamcoaches",{"_index":619,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["objective",{"_index":202,"title":{},"body":{"classes/Acta.html":{},"classes/CreateActaInput.html":{},"classes/UpdateActaInput.html":{}}}],["objecttype",{"_index":231,"title":{},"body":{"classes/Acta.html":{},"classes/ActivitiesConfig.html":{},"classes/Announcement.html":{},"classes/Applicant.html":{},"classes/ApplicantState.html":{},"classes/Assign.html":{},"classes/Attachment.html":{},"classes/AuthCode.html":{},"classes/Business.html":{},"classes/BusinessRelationship.html":{},"classes/ColumnGroup.html":{},"classes/ConfigEvaluation.html":{},"classes/ConfigurationApp.html":{},"classes/ContactServiceLink.html":{},"classes/Content.html":{},"classes/Download.html":{},"classes/Entrepreneur.html":{},"classes/EntrepreneurRelationship.html":{},"classes/EntrepreneurRelationship-1.html":{},"classes/Evaluation.html":{},"classes/Event.html":{},"classes/Expert.html":{},"classes/ExpertEventLink.html":{},"classes/Form.html":{},"classes/FormSubmission.html":{},"classes/FormSubmissionFiles.html":{},"classes/FormSubscription.html":{},"classes/FormTag.html":{},"classes/HelpDeskTicket.html":{},"classes/Hours.html":{},"interfaces/IAttachment.html":{},"classes/Integration.html":{},"classes/Invitation.html":{},"classes/LastContentOutput.html":{},"classes/Notification-1.html":{},"classes/ParticipantEventLink.html":{},"classes/ParticipationEvent.html":{},"classes/Phase.html":{},"classes/PhaseExpertRelationship.html":{},"classes/PhaseRelationship.html":{},"classes/Rating.html":{},"classes/Resource.html":{},"classes/ResourcesReply.html":{},"classes/Rol.html":{},"classes/Site.html":{},"classes/Stage.html":{},"classes/Startup.html":{},"classes/StartupLink.html":{},"classes/StartupRelationship.html":{},"classes/Table.html":{},"classes/TableConfig.html":{},"classes/TableJoin.html":{},"classes/TeamCoachLink.html":{},"classes/TermsOfUse.html":{},"classes/TicketCategory.html":{},"classes/TicketChild.html":{},"classes/TypesEvent.html":{},"classes/TypesNotification.html":{},"classes/User.html":{},"classes/UserConfig.html":{},"classes/UserLog.html":{},"classes/activities.html":{}}}],["observation",{"_index":2455,"title":{},"body":{"classes/Form.html":{},"classes/UpdateFormInput.html":{}}}],["observations",{"_index":3420,"title":{},"body":{"classes/ResourcesReply.html":{},"classes/UpdateResourcesReplyInput.html":{}}}],["oldvalue",{"_index":4318,"title":{},"body":{"injectables/UserConfigService.html":{}}}],["om4x74g11zhh4i7iorh8en91d9vlctbi",{"_index":1159,"title":{},"body":{"injectables/AuthService.html":{}}}],["omit",{"_index":787,"title":{},"body":{"injectables/AnnouncementsService.html":{},"injectables/TableService.html":{}}}],["one",{"_index":46,"title":{},"body":{"classes/AWSSESProvider.html":{},"injectables/EmailsService.html":{},"injectables/InvitationsService.html":{},"classes/SendGridProvider.html":{}}}],["onmoduleinit",{"_index":1668,"title":{},"body":{"injectables/ConfigurationAppService.html":{},"injectables/RolService.html":{},"injectables/StagesService.html":{},"injectables/TypesEventsService.html":{},"injectables/TypesNotificationsService.html":{}}}],["open",{"_index":4641,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["opened",{"_index":2469,"title":{},"body":{"classes/FormSubscription.html":{},"injectables/FormSubscriptionService.html":{}}}],["operation",{"_index":3109,"title":{},"body":{"injectables/InvitationsService.html":{},"miscellaneous/variables.html":{}}}],["operations",{"_index":4999,"title":{},"body":{"miscellaneous/variables.html":{}}}],["optional",{"_index":50,"title":{},"body":{"classes/AWSSESProvider.html":{},"injectables/ActaService.html":{},"injectables/ActivitiesConfigService.html":{},"injectables/AnnouncementsService.html":{},"classes/Applicant.html":{},"injectables/AuthCodeService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AwsService.html":{},"injectables/BusinessService.html":{},"classes/CloseFormSubscriptionArgs.html":{},"injectables/ConfigEvaluationsService.html":{},"injectables/ConfigNotificationsService.html":{},"injectables/ConfigurationAppService.html":{},"classes/ContactArgs.html":{},"injectables/ContentService.html":{},"classes/CreateActaInput.html":{},"classes/CreateEventInput.html":{},"classes/CreateFormSubscriptionInput.html":{},"classes/CreatePhaseInput.html":{},"classes/CreateResourceInput.html":{},"classes/CreateTypesEventInput.html":{},"classes/CreateUserInput.html":{},"injectables/DownloadsService.html":{},"controllers/EmailsController.html":{},"injectables/EmailsService.html":{},"classes/FindFormsArgs.html":{},"classes/FindUsersArgs.html":{},"classes/Form.html":{},"classes/FormSubscription.html":{},"injectables/FormSubscriptionService.html":{},"injectables/FormTagService.html":{},"injectables/FormsService.html":{},"guards/GqlAuthGuard.html":{},"injectables/HelpDeskService.html":{},"injectables/IntegrationsService.html":{},"controllers/InvitationsController.html":{},"injectables/InvitationsService.html":{},"classes/Notification.html":{},"injectables/NotificationsService.html":{},"injectables/ParticipationEventsService.html":{},"injectables/ResourcesService.html":{},"injectables/RolService.html":{},"classes/SearchBatchInput.html":{},"classes/SendGridProvider.html":{},"classes/SignUpInput.html":{},"injectables/SitesService.html":{},"injectables/StagesService.html":{},"controllers/StorageController.html":{},"classes/StorageService.html":{},"classes/Table.html":{},"injectables/TableConfigService.html":{},"injectables/TableService.html":{},"injectables/TermsOfUseService.html":{},"injectables/TicketCategoriesService.html":{},"injectables/TypesEventsService.html":{},"injectables/TypesNotificationsService.html":{},"classes/UpdateActaInput.html":{},"classes/UpdateActivitiesConfigInput.html":{},"classes/UpdateAnnouncementInput.html":{},"classes/UpdateConfigEvaluationInput.html":{},"classes/UpdateConfigurationAppInput.html":{},"classes/UpdateContentInput.html":{},"classes/UpdateEventInput.html":{},"classes/UpdateExpertInput.html":{},"classes/UpdateFormInput.html":{},"classes/UpdateHelpDeskInput.html":{},"classes/UpdateNotificationInput.html":{},"classes/UpdateParticipationEventInput.html":{},"classes/UpdatePhaseInput.html":{},"classes/UpdateResourceInput.html":{},"classes/UpdateResourcesReplyInput.html":{},"classes/UpdateRolInput.html":{},"classes/UpdateSiteInput.html":{},"classes/UpdateStageInput.html":{},"classes/UpdateTableConfigInput.html":{},"classes/UpdateTermsOfUseInput.html":{},"classes/UpdateTypesEventInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"injectables/UserConfigService.html":{},"injectables/UserLogService.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":1383,"title":{},"body":{"injectables/BusinessService.html":{},"miscellaneous/variables.html":{}}}],["options.outputprojection",{"_index":1413,"title":{},"body":{"injectables/BusinessService.html":{}}}],["options.paginated",{"_index":1424,"title":{},"body":{"injectables/BusinessService.html":{}}}],["order",{"_index":3664,"title":{},"body":{"injectables/StagesService.html":{}}}],["origin",{"_index":935,"title":{},"body":{"modules/AppModule.html":{}}}],["original",{"_index":2182,"title":{},"body":{"classes/Download.html":{}}}],["others",{"_index":61,"title":{},"body":{"classes/AWSSESProvider.html":{},"classes/ContactServiceLink.html":{},"classes/ContactServicesInput.html":{},"interfaces/EmailsRepository.html":{},"injectables/EmailsService.html":{},"injectables/IntegrationsService.html":{},"injectables/NotificationsService.html":{},"classes/OthersInput.html":{},"classes/SendGridProvider.html":{},"classes/Site.html":{},"classes/UpdateSiteInput.html":{}}}],["others.country",{"_index":3567,"title":{},"body":{"classes/SendGridProvider.html":{}}}],["others.emailorganizer",{"_index":3571,"title":{},"body":{"classes/SendGridProvider.html":{}}}],["others.nameorganizer",{"_index":3570,"title":{},"body":{"classes/SendGridProvider.html":{}}}],["others.urlredirect",{"_index":3569,"title":{},"body":{"classes/SendGridProvider.html":{}}}],["others?.alternative_hosts",{"_index":2907,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["others?.entrepreneurid",{"_index":3230,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["others?.expertid",{"_index":3235,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["others?.startupid",{"_index":3233,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["othersinput",{"_index":3259,"title":{"classes/OthersInput.html":{}},"body":{"classes/OthersInput.html":{}}}],["out",{"_index":267,"title":{},"body":{"modules/ActaModule.html":{},"modules/ActivitiesConfigModule.html":{},"modules/AnnouncementsModule.html":{},"modules/AppModule.html":{},"modules/ApplicantModule.html":{},"modules/AuthCodeModule.html":{},"modules/AuthModule.html":{},"modules/BusinessModule.html":{},"modules/ConfigEvaluationsModule.html":{},"modules/ConfigNotificationsModule.html":{},"modules/ConfigurationAppModule.html":{},"modules/ContentModule.html":{},"modules/DownloadsModule.html":{},"modules/EmailsModule.html":{},"modules/EntrepreneurModule.html":{},"modules/EvaluationsModule.html":{},"modules/EventsModule.html":{},"modules/ExpertModule.html":{},"modules/FormsModule.html":{},"modules/HelpDeskModule.html":{},"modules/IntegrationsModule.html":{},"modules/InvitationsModule.html":{},"modules/LoggerModule.html":{},"modules/NotificationsModule.html":{},"modules/ParticipationEventsModule.html":{},"modules/PhasesModule.html":{},"modules/ResourcesModule.html":{},"modules/ResourcesRepliesModule.html":{},"modules/RolModule.html":{},"modules/SitesModule.html":{},"modules/StagesModule.html":{},"modules/StartupModule.html":{},"modules/StorageModule.html":{},"modules/TableModule.html":{},"modules/TermsOfUseModule.html":{},"modules/TicketCategoriesModule.html":{},"modules/TypesEventsModule.html":{},"modules/TypesNotificationsModule.html":{},"modules/UserConfigModule.html":{},"modules/UserLogModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["output",{"_index":2799,"title":{},"body":{"classes/Hours.html":{},"miscellaneous/variables.html":{}}}],["output.ts",{"_index":3116,"title":{},"body":{"classes/LastContentOutput.html":{}}}],["output.ts:12",{"_index":3118,"title":{},"body":{"classes/LastContentOutput.html":{}}}],["output.ts:14",{"_index":3117,"title":{},"body":{"classes/LastContentOutput.html":{}}}],["output.ts:16",{"_index":3119,"title":{},"body":{"classes/LastContentOutput.html":{}}}],["output.ts:18",{"_index":3120,"title":{},"body":{"classes/LastContentOutput.html":{}}}],["outputprojection",{"_index":1359,"title":{},"body":{"injectables/BusinessService.html":{},"miscellaneous/variables.html":{}}}],["overview",{"_index":4939,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":4565,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":692,"title":{},"body":{"classes/Announcement.html":{},"classes/HelpDeskFilterInput.html":{},"injectables/HelpDeskService.html":{}}}],["pagerequest",{"_index":1354,"title":{},"body":{"injectables/BusinessService.html":{},"classes/LinkWithTargetsByRequestArgs.html":{},"miscellaneous/variables.html":{}}}],["pageresult",{"_index":1467,"title":{},"body":{"injectables/BusinessService.html":{}}}],["pageresult.documents",{"_index":1471,"title":{},"body":{"injectables/BusinessService.html":{}}}],["paginated",{"_index":1356,"title":{},"body":{"injectables/BusinessService.html":{},"miscellaneous/variables.html":{}}}],["paginatedresult",{"_index":1384,"title":{},"body":{"injectables/BusinessService.html":{}}}],["para",{"_index":1571,"title":{},"body":{"injectables/ConfigEvaluationsService.html":{},"injectables/UserLogService.html":{},"injectables/UsersService.html":{},"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["param",{"_index":1912,"title":{},"body":{"classes/CreateActivitiesConfigInput.html":{},"controllers/StorageController.html":{}}}],["parameters",{"_index":48,"title":{},"body":{"classes/AWSSESProvider.html":{},"injectables/ActaService.html":{},"injectables/ActivitiesConfigService.html":{},"injectables/AnnouncementsService.html":{},"injectables/AuthCodeService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AwsService.html":{},"injectables/BusinessService.html":{},"injectables/ConfigEvaluationsService.html":{},"injectables/ConfigNotificationsService.html":{},"injectables/ConfigurationAppService.html":{},"injectables/ContentService.html":{},"injectables/DownloadsService.html":{},"controllers/EmailsController.html":{},"injectables/EmailsService.html":{},"injectables/FormSubscriptionService.html":{},"injectables/FormTagService.html":{},"injectables/FormsService.html":{},"guards/GqlAuthGuard.html":{},"injectables/HelpDeskService.html":{},"injectables/IntegrationsService.html":{},"controllers/InvitationsController.html":{},"injectables/InvitationsService.html":{},"classes/Notification.html":{},"injectables/NotificationsService.html":{},"injectables/ParticipationEventsService.html":{},"injectables/ResourcesService.html":{},"injectables/RolService.html":{},"classes/SendGridProvider.html":{},"injectables/SitesService.html":{},"injectables/StagesService.html":{},"controllers/StorageController.html":{},"classes/StorageService.html":{},"injectables/TableConfigService.html":{},"injectables/TableService.html":{},"injectables/TermsOfUseService.html":{},"injectables/TicketCategoriesService.html":{},"injectables/TypesEventsService.html":{},"injectables/TypesNotificationsService.html":{},"injectables/UserConfigService.html":{},"injectables/UserLogService.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":458,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["parent",{"_index":3790,"title":{},"body":{"classes/TableConfig.html":{}}}],["parsedocumentstorows",{"_index":5111,"title":{},"body":{"miscellaneous/variables.html":{}}}],["parte",{"_index":4533,"title":{},"body":{"injectables/UsersService.html":{}}}],["partial",{"_index":1338,"title":{},"body":{"injectables/BusinessService.html":{},"injectables/FormsService.html":{},"classes/Notification.html":{},"injectables/TableConfigService.html":{},"injectables/UsersService.html":{}}}],["partialtype",{"_index":1737,"title":{},"body":{"classes/ContactServicesInput.html":{},"classes/UpdateActaInput.html":{},"classes/UpdateActivitiesConfigInput.html":{},"classes/UpdateAnnouncementInput.html":{},"classes/UpdateApplicantInput.html":{},"classes/UpdateConfigEvaluationInput.html":{},"classes/UpdateConfigurationAppInput.html":{},"classes/UpdateContentInput.html":{},"classes/UpdateEventInput.html":{},"classes/UpdateHelpDeskInput.html":{},"classes/UpdateIntegrationInput.html":{},"classes/UpdateNotificationInput.html":{},"classes/UpdateParticipationEventInput.html":{},"classes/UpdateResourceInput.html":{},"classes/UpdateResourcesReplyInput.html":{},"classes/UpdateRolInput.html":{},"classes/UpdateSiteInput.html":{},"classes/UpdateStageInput.html":{},"classes/UpdateTermsOfUseInput.html":{},"classes/UpdateTypesEventInput.html":{}}}],["partialtype(createactainput",{"_index":4091,"title":{},"body":{"classes/UpdateActaInput.html":{}}}],["partialtype(createannouncementinput",{"_index":4110,"title":{},"body":{"classes/UpdateAnnouncementInput.html":{}}}],["partialtype(createapplicantinput",{"_index":4116,"title":{},"body":{"classes/UpdateApplicantInput.html":{}}}],["partialtype(createcontentinput",{"_index":4143,"title":{},"body":{"classes/UpdateContentInput.html":{}}}],["partialtype(createeventinput",{"_index":4157,"title":{},"body":{"classes/UpdateEventInput.html":{}}}],["partialtype(createhelpdeskinput",{"_index":4183,"title":{},"body":{"classes/UpdateHelpDeskInput.html":{}}}],["partialtype(createresourceinput",{"_index":4198,"title":{},"body":{"classes/UpdateResourceInput.html":{}}}],["partialtype(createrolinput",{"_index":4211,"title":{},"body":{"classes/UpdateRolInput.html":{}}}],["partialtype(createstageinput",{"_index":4223,"title":{},"body":{"classes/UpdateStageInput.html":{}}}],["partialtype(createtypeseventinput",{"_index":4238,"title":{},"body":{"classes/UpdateTypesEventInput.html":{}}}],["participant",{"_index":736,"title":{},"body":{"classes/AnnouncementApplicantArgs.html":{},"classes/Applicant.html":{},"classes/ApplicantState.html":{},"classes/Attachment.html":{},"classes/CreateParticipationEventInput.html":{},"classes/Event.html":{},"classes/ExpertEventLink.html":{},"interfaces/IAttachment.html":{},"classes/ParticipantEventLink.html":{},"classes/ParticipationEvent.html":{},"injectables/ParticipationEventsService.html":{},"classes/SubmitAnnouncementDocInput.html":{},"classes/TeamCoachLink.html":{}}}],["participant_focused_meeting",{"_index":2950,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["participant_video",{"_index":2936,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["participantes",{"_index":4926,"title":{},"body":{"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["participanteventlink",{"_index":2363,"title":{"classes/ParticipantEventLink.html":{}},"body":{"classes/Event.html":{},"classes/ExpertEventLink.html":{},"classes/ParticipantEventLink.html":{},"classes/TeamCoachLink.html":{}}}],["participanteventsubmit",{"_index":1965,"title":{},"body":{"classes/CreateEventInput.html":{},"classes/UpdateEventInput.html":{}}}],["participantid",{"_index":1762,"title":{},"body":{"classes/Content.html":{}}}],["participants",{"_index":1956,"title":{},"body":{"classes/CreateEventInput.html":{},"classes/Event.html":{},"classes/ExpertEventLink.html":{},"injectables/IntegrationsService.html":{},"classes/ParticipantEventLink.html":{},"classes/ParticipationEvent.html":{},"classes/TeamCoachLink.html":{},"classes/UpdateEventInput.html":{}}}],["participants.map((i",{"_index":2919,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["participar",{"_index":684,"title":{},"body":{"classes/Announcement.html":{}}}],["participates",{"_index":955,"title":{},"body":{"classes/Applicant.html":{},"classes/ApplicantState.html":{},"classes/Attachment.html":{},"interfaces/IAttachment.html":{}}}],["participation",{"_index":2083,"title":{},"body":{"classes/CreateParticipationEventInput.html":{},"modules/EventsModule.html":{},"modules/ParticipationEventsModule.html":{},"injectables/ParticipationEventsService.html":{},"classes/UpdateParticipationEventInput.html":{}}}],["participationevent",{"_index":3270,"title":{"classes/ParticipationEvent.html":{}},"body":{"classes/ParticipationEvent.html":{},"modules/ParticipationEventsModule.html":{},"injectables/ParticipationEventsService.html":{}}}],["participationevent.name",{"_index":3291,"title":{},"body":{"modules/ParticipationEventsModule.html":{}}}],["participationeventmodel",{"_index":3296,"title":{},"body":{"injectables/ParticipationEventsService.html":{}}}],["participationeventschema",{"_index":3281,"title":{},"body":{"classes/ParticipationEvent.html":{},"modules/ParticipationEventsModule.html":{}}}],["participationeventsmodule",{"_index":2378,"title":{"modules/ParticipationEventsModule.html":{}},"body":{"modules/EventsModule.html":{},"modules/ParticipationEventsModule.html":{},"modules.html":{},"overview.html":{}}}],["participationeventsresolver",{"_index":3289,"title":{},"body":{"modules/ParticipationEventsModule.html":{}}}],["participationeventsservice",{"_index":3287,"title":{"injectables/ParticipationEventsService.html":{}},"body":{"modules/ParticipationEventsModule.html":{},"injectables/ParticipationEventsService.html":{},"overview.html":{}}}],["pasan",{"_index":4892,"title":{},"body":{"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["password",{"_index":183,"title":{},"body":{"classes/AcceptInvitationDto.html":{},"injectables/AuthService.html":{},"injectables/InvitationsService.html":{},"classes/SignUpInput.html":{},"classes/User.html":{}}}],["passwordset",{"_index":1193,"title":{},"body":{"injectables/AuthService.html":{},"injectables/InvitationsService.html":{},"classes/User.html":{}}}],["path",{"_index":851,"title":{},"body":{"modules/AppModule.html":{},"injectables/ContentService.html":{},"miscellaneous/variables.html":{}}}],["pendiente",{"_index":4724,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["pendientes",{"_index":1861,"title":{},"body":{"injectables/ContentService.html":{}}}],["pending",{"_index":570,"title":{},"body":{"injectables/ActivitiesConfigService.html":{},"injectables/InvitationsService.html":{},"miscellaneous/enumerations.html":{}}}],["per",{"_index":342,"title":{},"body":{"classes/ActivitiesConfig.html":{},"classes/Assign.html":{},"injectables/InvitationsService.html":{},"classes/activities.html":{}}}],["permission",{"_index":4625,"title":{},"body":{"miscellaneous/enumerations.html":{},"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["permission.actas_close",{"_index":4902,"title":{},"body":{"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["permission.actas_create",{"_index":4900,"title":{},"body":{"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["permission.actas_edit",{"_index":4901,"title":{},"body":{"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["permission.actas_view",{"_index":4899,"title":{},"body":{"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["permission.announcements_challenges",{"_index":4873,"title":{},"body":{"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["permission.announcements_create",{"_index":4876,"title":{},"body":{"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["permission.announcements_edit",{"_index":4877,"title":{},"body":{"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["permission.announcements_edit_challenge",{"_index":4875,"title":{},"body":{"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["permission.announcements_view",{"_index":4871,"title":{},"body":{"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["permission.community_edit",{"_index":4851,"title":{},"body":{"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["permission.community_view",{"_index":4849,"title":{},"body":{"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["permission.create_business",{"_index":4838,"title":{},"body":{"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["permission.create_entrepreneurs",{"_index":4834,"title":{},"body":{"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["permission.create_experts",{"_index":4826,"title":{},"body":{"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["permission.create_startups",{"_index":4820,"title":{},"body":{"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["permission.download_all_tables",{"_index":4841,"title":{},"body":{"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["permission.edit_business",{"_index":4840,"title":{},"body":{"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["permission.edit_entrepreneurs",{"_index":4835,"title":{},"body":{"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["permission.edit_experts",{"_index":4828,"title":{},"body":{"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["permission.edit_startups",{"_index":4822,"title":{},"body":{"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["permission.evaluation_create",{"_index":4916,"title":{},"body":{"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["permission.evaluation_edit",{"_index":4919,"title":{},"body":{"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["permission.evaluation_edit_docs",{"_index":4922,"title":{},"body":{"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["permission.evaluation_view",{"_index":4914,"title":{},"body":{"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["permission.events_create",{"_index":4896,"title":{},"body":{"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["permission.events_edit",{"_index":4898,"title":{},"body":{"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["permission.events_view",{"_index":4893,"title":{},"body":{"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["permission.form_create",{"_index":4856,"title":{},"body":{"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["permission.form_edit",{"_index":4858,"title":{},"body":{"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["permission.form_view",{"_index":4854,"title":{},"body":{"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["permission.help_desk_create",{"_index":4863,"title":{},"body":{"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["permission.help_desk_edit",{"_index":4864,"title":{},"body":{"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["permission.help_desk_view",{"_index":4860,"title":{},"body":{"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["permission.homeworks_evaluate",{"_index":4925,"title":{},"body":{"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["permission.homeworks_view",{"_index":4924,"title":{},"body":{"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["permission.hours_edit_activities",{"_index":4906,"title":{},"body":{"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["permission.hours_edit_experts",{"_index":4911,"title":{},"body":{"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["permission.hours_edit_startups",{"_index":4909,"title":{},"body":{"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["permission.hours_edit_teamcoach",{"_index":4913,"title":{},"body":{"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["permission.hours_view",{"_index":4903,"title":{},"body":{"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["permission.load_all_entrepreneurs",{"_index":4831,"title":{},"body":{"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["permission.load_all_events",{"_index":4895,"title":{},"body":{"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["permission.load_all_startups",{"_index":4816,"title":{},"body":{"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["permission.phases_batch_access",{"_index":4878,"title":{},"body":{"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["permission.phases_batch_close",{"_index":4887,"title":{},"body":{"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["permission.phases_batch_create",{"_index":4885,"title":{},"body":{"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["permission.phases_batch_edit",{"_index":4886,"title":{},"body":{"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["permission.phases_phase_access",{"_index":4880,"title":{},"body":{"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["permission.phases_phase_edit",{"_index":4883,"title":{},"body":{"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["permission.reports_create",{"_index":4846,"title":{},"body":{"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["permission.reports_edit",{"_index":4848,"title":{},"body":{"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["permission.reports_view",{"_index":4844,"title":{},"body":{"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["permission.sites_and_services_create",{"_index":4868,"title":{},"body":{"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["permission.sites_and_services_edit",{"_index":4870,"title":{},"body":{"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["permission.sites_and_services_view",{"_index":4865,"title":{},"body":{"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["permission.view_business",{"_index":4836,"title":{},"body":{"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["permission.view_entrepreneurs",{"_index":4829,"title":{},"body":{"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["permission.view_experts",{"_index":4824,"title":{},"body":{"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["permission.view_startups",{"_index":4813,"title":{},"body":{"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["permission_level",{"_index":2956,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["permissiondescription",{"_index":4928,"title":{},"body":{"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["permissiondescriptions",{"_index":4812,"title":{},"body":{"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["permissiondescriptions[permission",{"_index":4929,"title":{},"body":{"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["permissions",{"_index":1047,"title":{},"body":{"classes/AuthCode.html":{},"injectables/AuthCodeService.html":{},"classes/Rol.html":{},"classes/UpdateRolInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["permitir",{"_index":4817,"title":{},"body":{"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["perpage",{"_index":2673,"title":{},"body":{"classes/HelpDeskFilterInput.html":{},"injectables/HelpDeskService.html":{}}}],["perpage).limit(perpage",{"_index":2746,"title":{},"body":{"injectables/HelpDeskService.html":{}}}],["person",{"_index":1730,"title":{},"body":{"classes/ContactServicesInput.html":{},"classes/UpdateSiteInput.html":{}}}],["personalizado",{"_index":3265,"title":{},"body":{"classes/OthersInput.html":{}}}],["phase",{"_index":203,"title":{"classes/Phase.html":{}},"body":{"classes/Acta.html":{},"classes/ActivitiesConfig.html":{},"injectables/ActivitiesConfigService.html":{},"classes/Assign.html":{},"classes/ConfigEvaluation.html":{},"injectables/ConfigEvaluationsService.html":{},"classes/Content.html":{},"injectables/ContentService.html":{},"classes/CreateActaInput.html":{},"classes/CreateActivitiesConfigInput.html":{},"classes/CreateConfigEvaluationInput.html":{},"classes/CreateContentInput.html":{},"classes/CreateResourceInput.html":{},"classes/CreateResourcesReplyInput.html":{},"classes/EntrepreneurRelationship-1.html":{},"classes/Event.html":{},"classes/Expert.html":{},"classes/ExpertEventLink.html":{},"classes/LinkExpertsToPhaseArgs.html":{},"classes/LinkStartupToPhaseArgs.html":{},"classes/LinkStartupsExpertsArgs.html":{},"classes/ParticipantEventLink.html":{},"classes/Phase.html":{},"classes/PhaseExpertRelationship.html":{},"classes/PhaseRelationship.html":{},"modules/PhasesModule.html":{},"classes/Resource.html":{},"classes/ResourcesReply.html":{},"classes/Startup.html":{},"classes/StartupLink.html":{},"injectables/TableService.html":{},"classes/TeamCoachLink.html":{},"classes/activities.html":{},"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["phase.input.ts",{"_index":2086,"title":{},"body":{"classes/CreatePhaseInput.html":{},"classes/UpdatePhaseInput.html":{}}}],["phase.input.ts:10",{"_index":2091,"title":{},"body":{"classes/CreatePhaseInput.html":{},"classes/UpdatePhaseInput.html":{}}}],["phase.input.ts:14",{"_index":2097,"title":{},"body":{"classes/CreatePhaseInput.html":{},"classes/UpdatePhaseInput.html":{}}}],["phase.input.ts:18",{"_index":2096,"title":{},"body":{"classes/CreatePhaseInput.html":{},"classes/UpdatePhaseInput.html":{}}}],["phase.input.ts:22",{"_index":2092,"title":{},"body":{"classes/CreatePhaseInput.html":{},"classes/UpdatePhaseInput.html":{}}}],["phase.input.ts:26",{"_index":2095,"title":{},"body":{"classes/CreatePhaseInput.html":{},"classes/UpdatePhaseInput.html":{}}}],["phase.input.ts:30",{"_index":2099,"title":{},"body":{"classes/CreatePhaseInput.html":{},"classes/UpdatePhaseInput.html":{}}}],["phase.input.ts:34",{"_index":2090,"title":{},"body":{"classes/CreatePhaseInput.html":{},"classes/UpdatePhaseInput.html":{}}}],["phase.input.ts:38",{"_index":2098,"title":{},"body":{"classes/CreatePhaseInput.html":{},"classes/UpdatePhaseInput.html":{}}}],["phase.input.ts:42",{"_index":2093,"title":{},"body":{"classes/CreatePhaseInput.html":{}}}],["phase.input.ts:46",{"_index":2094,"title":{},"body":{"classes/CreatePhaseInput.html":{}}}],["phase.name",{"_index":3361,"title":{},"body":{"modules/PhasesModule.html":{}}}],["phasecompletion",{"_index":4649,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["phaseexpertrelationship",{"_index":2398,"title":{"classes/PhaseExpertRelationship.html":{}},"body":{"classes/Expert.html":{},"classes/PhaseExpertRelationship.html":{},"classes/StartupLink.html":{}}}],["phaseid",{"_index":3124,"title":{},"body":{"classes/LinkExpertsToPhaseArgs.html":{},"classes/LinkStartupToPhaseArgs.html":{}}}],["phaserelationship",{"_index":1309,"title":{"classes/PhaseRelationship.html":{}},"body":{"classes/BusinessRelationship.html":{},"classes/Entrepreneur.html":{},"classes/EntrepreneurRelationship-1.html":{},"classes/PhaseRelationship.html":{},"classes/Startup.html":{},"classes/StartupRelationship.html":{}}}],["phases",{"_index":1318,"title":{},"body":{"classes/BusinessRelationship.html":{},"classes/Entrepreneur.html":{},"classes/EntrepreneurRelationship-1.html":{},"classes/Expert.html":{},"classes/Phase.html":{},"classes/PhaseExpertRelationship.html":{},"classes/PhaseRelationship.html":{},"classes/Stage.html":{},"classes/Startup.html":{},"classes/StartupLink.html":{},"classes/StartupRelationship.html":{}}}],["phases.resolver",{"_index":3356,"title":{},"body":{"modules/PhasesModule.html":{}}}],["phases.service",{"_index":3354,"title":{},"body":{"modules/PhasesModule.html":{}}}],["phases/phases.module",{"_index":861,"title":{},"body":{"modules/AppModule.html":{}}}],["phases_batch_access",{"_index":4699,"title":{},"body":{"miscellaneous/enumerations.html":{},"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["phases_batch_close",{"_index":4704,"title":{},"body":{"miscellaneous/enumerations.html":{},"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["phases_batch_content",{"_index":5108,"title":{},"body":{"miscellaneous/variables.html":{}}}],["phases_batch_create",{"_index":4702,"title":{},"body":{"miscellaneous/enumerations.html":{},"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["phases_batch_edit",{"_index":4703,"title":{},"body":{"miscellaneous/enumerations.html":{},"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["phases_phase_access",{"_index":4700,"title":{},"body":{"miscellaneous/enumerations.html":{},"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["phases_phase_edit",{"_index":4701,"title":{},"body":{"miscellaneous/enumerations.html":{},"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["phases_view",{"_index":5107,"title":{},"body":{"miscellaneous/variables.html":{}}}],["phaseschema",{"_index":3340,"title":{},"body":{"classes/Phase.html":{},"modules/PhasesModule.html":{}}}],["phasesmodule",{"_index":827,"title":{"modules/PhasesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/EventsModule.html":{},"modules/PhasesModule.html":{},"modules.html":{},"overview.html":{}}}],["phasesresolver",{"_index":3355,"title":{},"body":{"modules/PhasesModule.html":{}}}],["phasesservice",{"_index":3352,"title":{},"body":{"modules/PhasesModule.html":{},"overview.html":{}}}],["pipelines",{"_index":5043,"title":{},"body":{"miscellaneous/variables.html":{}}}],["playground",{"_index":937,"title":{},"body":{"modules/AppModule.html":{}}}],["please",{"_index":4794,"title":{},"body":{"index.html":{}}}],["plugins",{"_index":931,"title":{},"body":{"modules/AppModule.html":{}}}],["plugins.push(apolloserverpluginlandingpagelocaldefault",{"_index":932,"title":{},"body":{"modules/AppModule.html":{}}}],["populate",{"_index":1832,"title":{},"body":{"injectables/ContentService.html":{}}}],["populate('resources",{"_index":1833,"title":{},"body":{"injectables/ContentService.html":{}}}],["populate('rol",{"_index":4489,"title":{},"body":{"injectables/UsersService.html":{}}}],["por",{"_index":683,"title":{},"body":{"classes/Announcement.html":{},"injectables/UsersService.html":{},"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["posibles",{"_index":4653,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["post",{"_index":2237,"title":{},"body":{"controllers/EmailsController.html":{},"injectables/HelpDeskService.html":{},"classes/HelpDeskTicket.html":{},"injectables/IntegrationsService.html":{},"controllers/InvitationsController.html":{},"controllers/StorageController.html":{},"classes/TicketChild.html":{}}}],["post('/accept",{"_index":3008,"title":{},"body":{"controllers/InvitationsController.html":{}}}],["post('/template",{"_index":2242,"title":{},"body":{"controllers/EmailsController.html":{}}}],["pre_schedule",{"_index":2897,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["prefix",{"_index":2233,"title":{},"body":{"controllers/EmailsController.html":{},"controllers/InvitationsController.html":{},"controllers/StorageController.html":{}}}],["prepare",{"_index":2209,"title":{},"body":{"injectables/DownloadsService.html":{}}}],["preregistered",{"_index":4643,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["preservenullandemptyarrays",{"_index":4995,"title":{},"body":{"miscellaneous/variables.html":{}}}],["presigned",{"_index":1265,"title":{},"body":{"injectables/AwsService.html":{}}}],["presigner",{"_index":1237,"title":{},"body":{"injectables/AwsService.html":{},"dependencies.html":{}}}],["prev",{"_index":4978,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prev[curr.field",{"_index":4976,"title":{},"body":{"miscellaneous/variables.html":{}}}],["previousconfig",{"_index":554,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["previousconfig.limit",{"_index":559,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["private",{"_index":15,"title":{},"body":{"classes/AWSSESProvider.html":{},"injectables/ActaService.html":{},"injectables/ActivitiesConfigService.html":{},"injectables/AnnouncementsService.html":{},"injectables/AuthCodeService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AwsService.html":{},"injectables/BusinessService.html":{},"injectables/ConfigEvaluationsService.html":{},"injectables/ConfigNotificationsService.html":{},"injectables/ConfigurationAppService.html":{},"injectables/ContentService.html":{},"injectables/DownloadsService.html":{},"injectables/EmailsService.html":{},"injectables/FormSubscriptionService.html":{},"injectables/FormTagService.html":{},"injectables/FormsService.html":{},"guards/GqlAuthGuard.html":{},"injectables/HelpDeskService.html":{},"injectables/IntegrationsService.html":{},"injectables/InvitationsService.html":{},"injectables/NotificationsService.html":{},"injectables/ParticipationEventsService.html":{},"injectables/ResourcesService.html":{},"injectables/RolService.html":{},"classes/SendGridProvider.html":{},"injectables/SitesService.html":{},"injectables/StagesService.html":{},"injectables/TableConfigService.html":{},"injectables/TableService.html":{},"injectables/TermsOfUseService.html":{},"injectables/TicketCategoriesService.html":{},"injectables/TypesEventsService.html":{},"injectables/TypesNotificationsService.html":{},"injectables/UserConfigService.html":{},"injectables/UserLogService.html":{},"injectables/UsersService.html":{}}}],["private_meeting",{"_index":2937,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["process.cwd()}/env/${process.env.node_env}.env",{"_index":919,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.app_uri",{"_index":2776,"title":{},"body":{"injectables/HelpDeskService.html":{},"injectables/UsersService.html":{}}}],["process.env.aws_ses_access",{"_index":106,"title":{},"body":{"classes/AWSSESProvider.html":{}}}],["process.env.aws_ses_key",{"_index":104,"title":{},"body":{"classes/AWSSESProvider.html":{}}}],["process.env.aws_ses_region",{"_index":101,"title":{},"body":{"classes/AWSSESProvider.html":{}}}],["process.env.node_env",{"_index":918,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.send_grid_default_verified_email",{"_index":3557,"title":{},"body":{"classes/SendGridProvider.html":{},"injectables/UsersService.html":{}}}],["process.env.send_grid_invitation_template_id",{"_index":110,"title":{},"body":{"classes/AWSSESProvider.html":{},"classes/SendGridProvider.html":{}}}],["process.env.send_grid_key",{"_index":3556,"title":{},"body":{"classes/SendGridProvider.html":{}}}],["process.env.send_grid_notification_template_id",{"_index":112,"title":{},"body":{"classes/AWSSESProvider.html":{},"classes/SendGridProvider.html":{}}}],["production",{"_index":4777,"title":{},"body":{"index.html":{}}}],["profileimageurl",{"_index":2164,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{}}}],["profilephase",{"_index":598,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["profilephase.startups",{"_index":601,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["progressive",{"_index":4757,"title":{},"body":{"index.html":{}}}],["project",{"_index":1425,"title":{},"body":{"injectables/BusinessService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["projection",{"_index":5029,"title":{},"body":{"miscellaneous/variables.html":{}}}],["promise",{"_index":422,"title":{},"body":{"injectables/ActivitiesConfigService.html":{},"injectables/AnnouncementsService.html":{},"injectables/AuthCodeService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AwsService.html":{},"injectables/BusinessService.html":{},"injectables/ConfigNotificationsService.html":{},"injectables/ContentService.html":{},"injectables/DownloadsService.html":{},"interfaces/EmailsRepository.html":{},"injectables/FormSubscriptionService.html":{},"injectables/FormsService.html":{},"guards/GqlAuthGuard.html":{},"injectables/HelpDeskService.html":{},"injectables/InvitationsService.html":{},"controllers/StorageController.html":{},"classes/StorageService.html":{},"injectables/TableConfigService.html":{},"injectables/TableService.html":{},"injectables/TicketCategoriesService.html":{}}}],["promise.all(joinscolumns",{"_index":3898,"title":{},"body":{"injectables/TableService.html":{}}}],["promise.all(updatepromises",{"_index":4327,"title":{},"body":{"injectables/UserConfigService.html":{}}}],["prop",{"_index":234,"title":{},"body":{"classes/Acta.html":{},"classes/ActivitiesConfig.html":{},"classes/Announcement.html":{},"classes/Applicant.html":{},"classes/ApplicantState.html":{},"classes/Assign.html":{},"classes/Attachment.html":{},"classes/AuthCode.html":{},"classes/Business.html":{},"classes/BusinessRelationship.html":{},"classes/ConfigEvaluation.html":{},"classes/ConfigurationApp.html":{},"classes/ContactServiceLink.html":{},"classes/Content.html":{},"classes/Download.html":{},"classes/Entrepreneur.html":{},"classes/EntrepreneurRelationship.html":{},"classes/EntrepreneurRelationship-1.html":{},"classes/Evaluation.html":{},"classes/Event.html":{},"classes/Expert.html":{},"classes/ExpertEventLink.html":{},"classes/Form.html":{},"classes/FormSubscription.html":{},"classes/FormTag.html":{},"classes/HelpDeskTicket.html":{},"interfaces/IAttachment.html":{},"classes/Integration.html":{},"classes/Invitation.html":{},"classes/Notification-1.html":{},"classes/ParticipantEventLink.html":{},"classes/ParticipationEvent.html":{},"classes/Phase.html":{},"classes/PhaseExpertRelationship.html":{},"classes/PhaseRelationship.html":{},"classes/Rating.html":{},"classes/Resource.html":{},"classes/ResourcesReply.html":{},"classes/Rol.html":{},"classes/Site.html":{},"classes/Stage.html":{},"classes/Startup.html":{},"classes/StartupLink.html":{},"classes/StartupRelationship.html":{},"classes/Table.html":{},"classes/TableConfig.html":{},"classes/TableJoin.html":{},"classes/TeamCoachLink.html":{},"classes/TermsOfUse.html":{},"classes/TicketCategory.html":{},"classes/TicketChild.html":{},"classes/TypesEvent.html":{},"classes/TypesNotification.html":{},"classes/User.html":{},"classes/UserConfig.html":{},"classes/UserLog.html":{},"classes/activities.html":{}}}],["prop()@field(undefined",{"_index":2991,"title":{},"body":{"classes/Invitation.html":{}}}],["prop({default",{"_index":2985,"title":{},"body":{"classes/Invitation.html":{},"classes/Phase.html":{}}}],["prop({index",{"_index":2983,"title":{},"body":{"classes/Invitation.html":{}}}],["prop({required",{"_index":2805,"title":{},"body":{"classes/Integration.html":{},"classes/Invitation.html":{}}}],["prop({type",{"_index":1747,"title":{},"body":{"classes/Content.html":{},"classes/HelpDeskTicket.html":{},"classes/Phase.html":{},"classes/Resource.html":{},"classes/User.html":{}}}],["properties",{"_index":14,"title":{"properties.html":{}},"body":{"classes/AWSSESProvider.html":{},"classes/AcceptInvitationDto.html":{},"classes/Acta.html":{},"classes/ActivitiesConfig.html":{},"injectables/ActivitiesConfigService.html":{},"classes/AddTableJoinInput.html":{},"classes/Announcement.html":{},"classes/AnnouncementApplicantArgs.html":{},"classes/AnnouncementApplicantsArgs.html":{},"classes/Applicant.html":{},"classes/ApplicantArgs.html":{},"classes/ApplicantState.html":{},"classes/Assign.html":{},"classes/Attachment.html":{},"classes/AttachmentSubmit.html":{},"classes/AuthCode.html":{},"injectables/AuthService.html":{},"injectables/AwsService.html":{},"classes/Business.html":{},"classes/BusinessRelationship.html":{},"classes/CloseFormSubscriptionArgs.html":{},"classes/ColumnGroup.html":{},"classes/ConfigEvaluation.html":{},"classes/ConfigurationApp.html":{},"classes/ContactArgs.html":{},"classes/ContactServiceLink.html":{},"classes/ContactServicesInput.html":{},"classes/Content.html":{},"classes/CreateActaInput.html":{},"classes/CreateActivitiesConfigInput.html":{},"classes/CreateAnnouncementInput.html":{},"classes/CreateConfigEvaluationInput.html":{},"classes/CreateConfigNotificationInput.html":{},"classes/CreateContentInput.html":{},"classes/CreateEventInput.html":{},"classes/CreateFormInput.html":{},"classes/CreateFormSubscriptionInput.html":{},"classes/CreateFormTagInput.html":{},"classes/CreateHelpDeskInput.html":{},"classes/CreateIntegrationInput.html":{},"classes/CreateInvitationArgs.html":{},"classes/CreateNotificationInput.html":{},"classes/CreateParticipationEventInput.html":{},"classes/CreatePhaseInput.html":{},"classes/CreateResourceInput.html":{},"classes/CreateResourcesReplyInput.html":{},"classes/CreateRolInput.html":{},"classes/CreateSiteInput.html":{},"classes/CreateStageInput.html":{},"classes/CreateTableConfigInput.html":{},"classes/CreateTableInput.html":{},"classes/CreateTypesEventInput.html":{},"classes/CreateUserInput.html":{},"classes/CreateUserLogInput.html":{},"classes/Download.html":{},"interfaces/EmailsRepository.html":{},"classes/Entrepreneur.html":{},"classes/EntrepreneurRelationship.html":{},"classes/EntrepreneurRelationship-1.html":{},"classes/EntrepreneurStartupArgs.html":{},"classes/Evaluation.html":{},"classes/Event.html":{},"classes/Expert.html":{},"classes/ExpertEventLink.html":{},"classes/FindFormsArgs.html":{},"classes/FindInvitationArgs.html":{},"classes/FindUsersArgs.html":{},"classes/Form.html":{},"classes/FormSubmission.html":{},"classes/FormSubmissionFiles.html":{},"classes/FormSubscription.html":{},"injectables/FormSubscriptionService.html":{},"classes/FormTag.html":{},"classes/GetSubmittedFilesArgs.html":{},"classes/HelpDeskFilterInput.html":{},"injectables/HelpDeskService.html":{},"classes/HelpDeskTicket.html":{},"classes/Hours.html":{},"interfaces/IAttachment.html":{},"classes/Integration.html":{},"injectables/IntegrationsService.html":{},"classes/Invitation.html":{},"classes/LastContentOutput.html":{},"classes/LinkExpertsToPhaseArgs.html":{},"classes/LinkStartupToPhaseArgs.html":{},"classes/LinkStartupsExpertsArgs.html":{},"classes/LinkWithTargetsArgs.html":{},"classes/LinkWithTargetsByRequestArgs.html":{},"classes/Notification.html":{},"classes/Notification-1.html":{},"injectables/NotificationsService.html":{},"classes/OthersInput.html":{},"classes/ParticipantEventLink.html":{},"classes/ParticipationEvent.html":{},"classes/Phase.html":{},"classes/PhaseExpertRelationship.html":{},"classes/PhaseRelationship.html":{},"classes/Rating.html":{},"classes/RemoveTableJoinInput.html":{},"classes/Resource.html":{},"classes/ResourcesReply.html":{},"classes/Rol.html":{},"classes/SearchBatchInput.html":{},"classes/SelectApplicantsArgs.html":{},"classes/SendEmailInput.html":{},"classes/SendGridProvider.html":{},"classes/SignUpInput.html":{},"classes/Site.html":{},"classes/Stage.html":{},"classes/Startup.html":{},"classes/StartupLink.html":{},"classes/StartupRelationship.html":{},"classes/SubmitAnnouncementDocInput.html":{},"classes/SubmitFileInput.html":{},"classes/SubmitFormSubscriptionArgs.html":{},"classes/Table.html":{},"classes/TableConfig.html":{},"classes/TableJoin.html":{},"classes/TeamCoachLink.html":{},"classes/TemplateInput.html":{},"classes/TermsOfUse.html":{},"injectables/TicketCategoriesService.html":{},"classes/TicketCategory.html":{},"classes/TicketChild.html":{},"classes/TypesEvent.html":{},"classes/TypesNotification.html":{},"classes/UpdateActaInput.html":{},"classes/UpdateActivitiesConfigInput.html":{},"classes/UpdateAnnouncementInput.html":{},"classes/UpdateApplicantInput.html":{},"classes/UpdateApplicantStateInput.html":{},"classes/UpdateConfigEvaluationInput.html":{},"classes/UpdateConfigurationAppInput.html":{},"classes/UpdateContentInput.html":{},"classes/UpdateEventInput.html":{},"classes/UpdateExpertInput.html":{},"classes/UpdateFormInput.html":{},"classes/UpdateFormTagInput.html":{},"classes/UpdateHelpDeskInput.html":{},"classes/UpdateIntegrationInput.html":{},"classes/UpdateNotificationInput.html":{},"classes/UpdateParticipationEventInput.html":{},"classes/UpdatePhaseInput.html":{},"classes/UpdateResourceInput.html":{},"classes/UpdateResourcesReplyInput.html":{},"classes/UpdateRolInput.html":{},"classes/UpdateSiteInput.html":{},"classes/UpdateStageInput.html":{},"classes/UpdateTableConfigInput.html":{},"classes/UpdateTermsOfUseInput.html":{},"classes/UpdateTypesEventInput.html":{},"classes/UpdateUserConfigInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"classes/UserConfig.html":{},"classes/UserLog.html":{},"classes/activities.html":{},"interfaces/item_permission.html":{},"properties.html":{}}}],["properties.'})@prop({type",{"_index":978,"title":{},"body":{"classes/Applicant.html":{},"classes/Business.html":{},"classes/Evaluation.html":{},"classes/ResourcesReply.html":{},"classes/UserLog.html":{}}}],["property",{"_index":1369,"title":{},"body":{"injectables/BusinessService.html":{},"injectables/FormSubscriptionService.html":{}}}],["proposals",{"_index":957,"title":{},"body":{"classes/Applicant.html":{},"classes/ApplicantState.html":{},"classes/Attachment.html":{},"interfaces/IAttachment.html":{}}}],["protect",{"_index":1096,"title":{},"body":{"guards/AuthGuard.html":{},"guards/GqlAuthGuard.html":{}}}],["protected",{"_index":5054,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provide",{"_index":2262,"title":{},"body":{"modules/EmailsModule.html":{},"modules/StorageModule.html":{}}}],["provider",{"_index":9,"title":{},"body":{"classes/AWSSESProvider.html":{},"injectables/FormSubscriptionService.html":{},"modules/FormsModule.html":{},"classes/SendGridProvider.html":{}}}],["provider/aws.service",{"_index":2260,"title":{},"body":{"modules/EmailsModule.html":{}}}],["provider/sendgrid.service",{"_index":2259,"title":{},"body":{"modules/EmailsModule.html":{}}}],["providers",{"_index":256,"title":{},"body":{"modules/ActaModule.html":{},"modules/ActivitiesConfigModule.html":{},"modules/AnnouncementsModule.html":{},"modules/AppModule.html":{},"modules/ApplicantModule.html":{},"modules/AuthCodeModule.html":{},"modules/AuthModule.html":{},"modules/BusinessModule.html":{},"modules/ConfigEvaluationsModule.html":{},"modules/ConfigNotificationsModule.html":{},"modules/ConfigurationAppModule.html":{},"modules/ContentModule.html":{},"modules/DownloadsModule.html":{},"modules/EmailsModule.html":{},"modules/EntrepreneurModule.html":{},"modules/EvaluationsModule.html":{},"modules/EventsModule.html":{},"modules/ExpertModule.html":{},"modules/FormsModule.html":{},"modules/HelpDeskModule.html":{},"modules/IntegrationsModule.html":{},"modules/InvitationsModule.html":{},"modules/LoggerModule.html":{},"modules/NotificationsModule.html":{},"modules/ParticipationEventsModule.html":{},"modules/PhasesModule.html":{},"modules/ResourcesModule.html":{},"modules/ResourcesRepliesModule.html":{},"modules/RolModule.html":{},"modules/SitesModule.html":{},"modules/StagesModule.html":{},"modules/StartupModule.html":{},"modules/StorageModule.html":{},"modules/TableModule.html":{},"modules/TermsOfUseModule.html":{},"modules/TicketCategoriesModule.html":{},"modules/TypesEventsModule.html":{},"modules/TypesNotificationsModule.html":{},"modules/UserConfigModule.html":{},"modules/UserLogModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["próximo",{"_index":5071,"title":{},"body":{"miscellaneous/variables.html":{}}}],["public",{"_index":3737,"title":{},"body":{"classes/StorageService.html":{}}}],["publicconfig",{"_index":1200,"title":{},"body":{"injectables/AwsService.html":{}}}],["publicfile",{"_index":1210,"title":{},"body":{"injectables/AwsService.html":{},"classes/StorageService.html":{}}}],["publish",{"_index":767,"title":{},"body":{"injectables/AnnouncementsService.html":{}}}],["publish(id",{"_index":780,"title":{},"body":{"injectables/AnnouncementsService.html":{}}}],["published",{"_index":648,"title":{},"body":{"classes/Announcement.html":{},"injectables/AnnouncementsService.html":{},"classes/Phase.html":{},"classes/UpdateAnnouncementInput.html":{}}}],["published.'})@prop({default",{"_index":699,"title":{},"body":{"classes/Announcement.html":{}}}],["publishedannouncement",{"_index":805,"title":{},"body":{"injectables/AnnouncementsService.html":{}}}],["pubsub",{"_index":2524,"title":{},"body":{"injectables/FormSubscriptionService.html":{},"injectables/NotificationsService.html":{}}}],["pubsub.asynciterator",{"_index":2552,"title":{},"body":{"injectables/FormSubscriptionService.html":{}}}],["pubsub.asynciterator(listtriggernotifications",{"_index":3237,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["pubsub.publish(formsubscriptionservice.triggername",{"_index":2550,"title":{},"body":{"injectables/FormSubscriptionService.html":{}}}],["pubsub.publish(iterator",{"_index":3243,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["pubsubinstance",{"_index":2538,"title":{},"body":{"injectables/FormSubscriptionService.html":{},"injectables/NotificationsService.html":{}}}],["puede",{"_index":4888,"title":{},"body":{"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["puedes",{"_index":3262,"title":{},"body":{"classes/OthersInput.html":{}}}],["pull",{"_index":1633,"title":{},"body":{"injectables/ConfigNotificationsService.html":{},"injectables/TableService.html":{}}}],["push",{"_index":5032,"title":{},"body":{"miscellaneous/variables.html":{}}}],["push_change_to_calendar",{"_index":2951,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["put",{"_index":1266,"title":{},"body":{"injectables/AwsService.html":{}}}],["putobjectcommand",{"_index":1231,"title":{},"body":{"injectables/AwsService.html":{}}}],["putobjectcommand(config",{"_index":1260,"title":{},"body":{"injectables/AwsService.html":{}}}],["qualifiedresource",{"_index":4647,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["que",{"_index":4546,"title":{},"body":{"injectables/UsersService.html":{},"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["query",{"_index":2740,"title":{},"body":{"injectables/HelpDeskService.html":{},"controllers/StorageController.html":{}}}],["query.exec",{"_index":2747,"title":{},"body":{"injectables/HelpDeskService.html":{}}}],["query.skip((page",{"_index":2745,"title":{},"body":{"injectables/HelpDeskService.html":{}}}],["query.where",{"_index":2742,"title":{},"body":{"injectables/HelpDeskService.html":{}}}],["querystring",{"_index":2857,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["quienes",{"_index":4891,"title":{},"body":{"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["quiere",{"_index":4530,"title":{},"body":{"injectables/UsersService.html":{}}}],["rango",{"_index":1573,"title":{},"body":{"injectables/ConfigEvaluationsService.html":{},"injectables/UserLogService.html":{}}}],["rate",{"_index":3364,"title":{},"body":{"classes/Rating.html":{},"miscellaneous/enumerations.html":{}}}],["rating",{"_index":3362,"title":{"classes/Rating.html":{}},"body":{"classes/Rating.html":{}}}],["rating/rating.module",{"_index":906,"title":{},"body":{"modules/AppModule.html":{}}}],["ratingmodule",{"_index":905,"title":{},"body":{"modules/AppModule.html":{}}}],["read",{"_index":4658,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["readable",{"_index":2213,"title":{},"body":{"injectables/DownloadsService.html":{},"classes/StorageService.html":{}}}],["readable._read",{"_index":2220,"title":{},"body":{"injectables/DownloadsService.html":{}}}],["readable.push(data",{"_index":2223,"title":{},"body":{"injectables/DownloadsService.html":{}}}],["readable.push(null",{"_index":2224,"title":{},"body":{"injectables/DownloadsService.html":{}}}],["readonly",{"_index":16,"title":{},"body":{"classes/AWSSESProvider.html":{},"injectables/ActaService.html":{},"injectables/ActivitiesConfigService.html":{},"injectables/AnnouncementsService.html":{},"injectables/AuthCodeService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AwsService.html":{},"injectables/BusinessService.html":{},"injectables/ConfigEvaluationsService.html":{},"injectables/ConfigNotificationsService.html":{},"injectables/ConfigurationAppService.html":{},"injectables/ContentService.html":{},"injectables/DownloadsService.html":{},"controllers/EmailsController.html":{},"injectables/EmailsService.html":{},"injectables/FormSubscriptionService.html":{},"injectables/FormTagService.html":{},"injectables/FormsService.html":{},"guards/GqlAuthGuard.html":{},"injectables/HelpDeskService.html":{},"injectables/IntegrationsService.html":{},"controllers/InvitationsController.html":{},"injectables/InvitationsService.html":{},"injectables/NotificationsService.html":{},"injectables/ParticipationEventsService.html":{},"injectables/ResourcesService.html":{},"injectables/RolService.html":{},"classes/SendGridProvider.html":{},"injectables/SitesService.html":{},"injectables/StagesService.html":{},"controllers/StorageController.html":{},"injectables/TableConfigService.html":{},"injectables/TableService.html":{},"injectables/TermsOfUseService.html":{},"injectables/TicketCategoriesService.html":{},"injectables/TypesEventsService.html":{},"injectables/TypesNotificationsService.html":{},"injectables/UserConfigService.html":{},"injectables/UserLogService.html":{},"injectables/UsersService.html":{}}}],["reason",{"_index":2007,"title":{},"body":{"classes/CreateFormSubscriptionInput.html":{},"classes/FormSubscription.html":{}}}],["receive",{"_index":4280,"title":{},"body":{"classes/UserConfig.html":{}}}],["recibido",{"_index":2771,"title":{},"body":{"injectables/HelpDeskService.html":{}}}],["recommendation",{"_index":4736,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["record",{"_index":41,"title":{},"body":{"classes/AWSSESProvider.html":{},"classes/Applicant.html":{},"classes/ApplicantState.html":{},"classes/Attachment.html":{},"classes/ConfigurationApp.html":{},"classes/ContactServicesInput.html":{},"classes/CreateActaInput.html":{},"classes/CreateContentInput.html":{},"classes/CreateEventInput.html":{},"classes/CreateIntegrationInput.html":{},"classes/CreateParticipationEventInput.html":{},"classes/CreateResourceInput.html":{},"classes/CreateResourcesReplyInput.html":{},"classes/CreateSiteInput.html":{},"classes/CreateTypesEventInput.html":{},"classes/CreateUserLogInput.html":{},"injectables/EmailsService.html":{},"classes/FindUsersArgs.html":{},"interfaces/IAttachment.html":{},"classes/Integration.html":{},"injectables/NotificationsService.html":{},"classes/ResourcesReply.html":{},"classes/SelectApplicantsArgs.html":{},"classes/SendGridProvider.html":{},"classes/UpdateActaInput.html":{},"classes/UpdateConfigurationAppInput.html":{},"classes/UpdateContentInput.html":{},"classes/UpdateEventInput.html":{},"classes/UpdateParticipationEventInput.html":{},"classes/UpdateResourceInput.html":{},"classes/UpdateResourcesReplyInput.html":{},"classes/UpdateSiteInput.html":{},"classes/UpdateTermsOfUseInput.html":{},"classes/UpdateTypesEventInput.html":{},"classes/UpdateUserInput.html":{},"injectables/UserLogService.html":{},"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["recuerda",{"_index":4545,"title":{},"body":{"injectables/UsersService.html":{}}}],["recurso",{"_index":5067,"title":{},"body":{"miscellaneous/variables.html":{}}}],["redirect",{"_index":702,"title":{},"body":{"classes/Announcement.html":{}}}],["redirectlink",{"_index":649,"title":{},"body":{"classes/Announcement.html":{},"classes/UpdateAnnouncementInput.html":{}}}],["redirecturi",{"_index":3080,"title":{},"body":{"injectables/InvitationsService.html":{}}}],["reduce",{"_index":5010,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ref",{"_index":219,"title":{},"body":{"classes/Acta.html":{},"classes/ActivitiesConfig.html":{},"classes/Assign.html":{},"classes/Content.html":{},"classes/EntrepreneurRelationship-1.html":{},"classes/Event.html":{},"classes/Expert.html":{},"classes/ExpertEventLink.html":{},"classes/ParticipantEventLink.html":{},"classes/ParticipationEvent.html":{},"classes/PhaseExpertRelationship.html":{},"classes/PhaseRelationship.html":{},"classes/Resource.html":{},"classes/ResourcesReply.html":{},"classes/Startup.html":{},"classes/StartupLink.html":{},"classes/TeamCoachLink.html":{},"classes/User.html":{},"classes/activities.html":{}}}],["reflect",{"_index":4609,"title":{},"body":{"dependencies.html":{}}}],["regex",{"_index":2743,"title":{},"body":{"injectables/HelpDeskService.html":{},"injectables/NotificationsService.html":{}}}],["regexconditions",{"_index":3253,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["regexp(`/.*${search",{"_index":4499,"title":{},"body":{"injectables/UsersService.html":{}}}],["regexp(status",{"_index":2744,"title":{},"body":{"injectables/HelpDeskService.html":{}}}],["region",{"_index":100,"title":{},"body":{"classes/AWSSESProvider.html":{},"injectables/AwsService.html":{}}}],["register",{"_index":3299,"title":{},"body":{"injectables/ParticipationEventsService.html":{}}}],["registered",{"_index":4258,"title":{},"body":{"classes/User.html":{}}}],["registerlogin",{"_index":4354,"title":{},"body":{"injectables/UserLogService.html":{}}}],["registerlogin(iduser",{"_index":4374,"title":{},"body":{"injectables/UserLogService.html":{}}}],["registerloginbydate",{"_index":4355,"title":{},"body":{"injectables/UserLogService.html":{}}}],["registerloginbydate(date",{"_index":4378,"title":{},"body":{"injectables/UserLogService.html":{}}}],["registerresourcesbyuser",{"_index":4356,"title":{},"body":{"injectables/UserLogService.html":{}}}],["registerresourcesbyuser(date",{"_index":4380,"title":{},"body":{"injectables/UserLogService.html":{}}}],["registers",{"_index":3301,"title":{},"body":{"injectables/ParticipationEventsService.html":{}}}],["registeruserbydate",{"_index":4357,"title":{},"body":{"injectables/UserLogService.html":{}}}],["registeruserbydate(user",{"_index":4382,"title":{},"body":{"injectables/UserLogService.html":{}}}],["registrado",{"_index":679,"title":{},"body":{"classes/Announcement.html":{}}}],["registrants_confirmation_email",{"_index":2938,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["registrants_email_notification",{"_index":2939,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["registration",{"_index":2988,"title":{},"body":{"classes/Invitation.html":{}}}],["registration_type",{"_index":2940,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["related",{"_index":630,"title":{},"body":{"classes/AddTableJoinInput.html":{},"classes/Table.html":{},"miscellaneous/variables.html":{}}}],["relationsassign",{"_index":523,"title":{},"body":{"injectables/ActivitiesConfigService.html":{},"classes/FindUsersArgs.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["relationsassign[iterator",{"_index":4502,"title":{},"body":{"injectables/UsersService.html":{}}}],["relationship",{"_index":1289,"title":{},"body":{"classes/Business.html":{},"classes/BusinessRelationship.html":{},"classes/ContactServiceLink.html":{},"classes/Entrepreneur.html":{},"classes/EntrepreneurRelationship.html":{},"classes/EntrepreneurRelationship-1.html":{},"classes/Expert.html":{},"classes/PhaseExpertRelationship.html":{},"classes/PhaseRelationship.html":{},"classes/Site.html":{},"classes/Startup.html":{},"classes/StartupLink.html":{},"classes/StartupRelationship.html":{},"classes/TableConfig.html":{}}}],["relationships",{"_index":1436,"title":{},"body":{"injectables/BusinessService.html":{}}}],["remove",{"_index":287,"title":{},"body":{"injectables/ActaService.html":{},"injectables/ActivitiesConfigService.html":{},"injectables/AnnouncementsService.html":{},"injectables/ConfigEvaluationsService.html":{},"injectables/ConfigNotificationsService.html":{},"injectables/ContentService.html":{},"injectables/HelpDeskService.html":{},"injectables/NotificationsService.html":{},"injectables/ResourcesService.html":{},"injectables/RolService.html":{},"injectables/SitesService.html":{},"injectables/StagesService.html":{},"injectables/TableService.html":{},"injectables/TicketCategoriesService.html":{},"injectables/TypesEventsService.html":{},"injectables/UserLogService.html":{},"miscellaneous/variables.html":{}}}],["remove(id",{"_index":306,"title":{},"body":{"injectables/ActaService.html":{},"injectables/ActivitiesConfigService.html":{},"injectables/AnnouncementsService.html":{},"injectables/ConfigEvaluationsService.html":{},"injectables/ContentService.html":{},"injectables/HelpDeskService.html":{},"injectables/NotificationsService.html":{},"injectables/ResourcesService.html":{},"injectables/RolService.html":{},"injectables/SitesService.html":{},"injectables/StagesService.html":{},"injectables/TermsOfUseService.html":{},"injectables/TicketCategoriesService.html":{},"injectables/TypesEventsService.html":{},"injectables/UserLogService.html":{}}}],["removed",{"_index":3374,"title":{},"body":{"classes/RemoveTableJoinInput.html":{}}}],["removed.'})@isnotempty",{"_index":3372,"title":{},"body":{"classes/RemoveTableJoinInput.html":{}}}],["removeexcludeduserfortype",{"_index":1604,"title":{},"body":{"injectables/ConfigNotificationsService.html":{}}}],["removeexcludeduserfortype(type",{"_index":1619,"title":{},"body":{"injectables/ConfigNotificationsService.html":{}}}],["removes",{"_index":3972,"title":{},"body":{"injectables/TermsOfUseService.html":{}}}],["removetablejoin",{"_index":3842,"title":{},"body":{"injectables/TableService.html":{}}}],["removetablejoin(undefined",{"_index":3852,"title":{},"body":{"injectables/TableService.html":{}}}],["removetablejoininput",{"_index":3369,"title":{"classes/RemoveTableJoinInput.html":{}},"body":{"classes/RemoveTableJoinInput.html":{},"injectables/TableService.html":{}}}],["removing",{"_index":2767,"title":{},"body":{"injectables/HelpDeskService.html":{},"injectables/TicketCategoriesService.html":{}}}],["render",{"_index":689,"title":{},"body":{"classes/Announcement.html":{},"classes/CreateAnnouncementInput.html":{},"classes/SubmitAnnouncementDocInput.html":{}}}],["rendered",{"_index":2002,"title":{},"body":{"classes/CreateFormInput.html":{}}}],["rendered.'})@isnotempty",{"_index":1990,"title":{},"body":{"classes/CreateFormInput.html":{}}}],["rendered.'})@isoptional",{"_index":1979,"title":{},"body":{"classes/CreateFormInput.html":{}}}],["replacementtemplatedata",{"_index":156,"title":{},"body":{"classes/AWSSESProvider.html":{}}}],["replies",{"_index":3418,"title":{},"body":{"classes/ResourcesReply.html":{},"injectables/TableService.html":{},"injectables/UserLogService.html":{},"miscellaneous/enumerations.html":{}}}],["replies.module",{"_index":893,"title":{},"body":{"modules/AppModule.html":{},"modules/ContentModule.html":{},"modules/PhasesModule.html":{},"modules/ResourcesModule.html":{}}}],["replies.module.ts",{"_index":3407,"title":{},"body":{"modules/ResourcesRepliesModule.html":{}}}],["replies.resolver",{"_index":3409,"title":{},"body":{"modules/ResourcesRepliesModule.html":{}}}],["replies.service",{"_index":1817,"title":{},"body":{"injectables/ContentService.html":{},"modules/ResourcesRepliesModule.html":{}}}],["replies/dto/create",{"_index":2111,"title":{},"body":{"classes/CreateResourcesReplyInput.html":{}}}],["replies/dto/update",{"_index":4200,"title":{},"body":{"classes/UpdateResourcesReplyInput.html":{}}}],["replies/entities/resources",{"_index":3416,"title":{},"body":{"classes/ResourcesReply.html":{}}}],["replies/models/resorce",{"_index":1819,"title":{},"body":{"injectables/ContentService.html":{},"miscellaneous/enumerations.html":{}}}],["replies/resources",{"_index":892,"title":{},"body":{"modules/AppModule.html":{},"modules/ContentModule.html":{},"injectables/ContentService.html":{},"modules/PhasesModule.html":{},"modules/ResourcesModule.html":{},"modules/ResourcesRepliesModule.html":{}}}],["reply",{"_index":1820,"title":{},"body":{"injectables/ContentService.html":{},"miscellaneous/enumerations.html":{}}}],["reply.entity",{"_index":3413,"title":{},"body":{"modules/ResourcesRepliesModule.html":{}}}],["reply.entity.ts",{"_index":3417,"title":{},"body":{"classes/ResourcesReply.html":{}}}],["reply.entity.ts:17",{"_index":3421,"title":{},"body":{"classes/ResourcesReply.html":{}}}],["reply.entity.ts:23",{"_index":3424,"title":{},"body":{"classes/ResourcesReply.html":{}}}],["reply.entity.ts:27",{"_index":3430,"title":{},"body":{"classes/ResourcesReply.html":{}}}],["reply.entity.ts:31",{"_index":3428,"title":{},"body":{"classes/ResourcesReply.html":{}}}],["reply.entity.ts:35",{"_index":3429,"title":{},"body":{"classes/ResourcesReply.html":{}}}],["reply.entity.ts:39",{"_index":3427,"title":{},"body":{"classes/ResourcesReply.html":{}}}],["reply.entity.ts:43",{"_index":3433,"title":{},"body":{"classes/ResourcesReply.html":{}}}],["reply.entity.ts:47",{"_index":3432,"title":{},"body":{"classes/ResourcesReply.html":{}}}],["reply.entity.ts:51",{"_index":3426,"title":{},"body":{"classes/ResourcesReply.html":{}}}],["reply.entity.ts:54",{"_index":3422,"title":{},"body":{"classes/ResourcesReply.html":{}}}],["reply.entity.ts:57",{"_index":3434,"title":{},"body":{"classes/ResourcesReply.html":{}}}],["reply.entity.ts:61",{"_index":3423,"title":{},"body":{"classes/ResourcesReply.html":{}}}],["reply.entity.ts:65",{"_index":3425,"title":{},"body":{"classes/ResourcesReply.html":{}}}],["reply.input",{"_index":4206,"title":{},"body":{"classes/UpdateResourcesReplyInput.html":{}}}],["reply.input.ts",{"_index":2112,"title":{},"body":{"classes/CreateResourcesReplyInput.html":{},"classes/UpdateResourcesReplyInput.html":{}}}],["reply.input.ts:11",{"_index":2113,"title":{},"body":{"classes/CreateResourcesReplyInput.html":{}}}],["reply.input.ts:14",{"_index":4201,"title":{},"body":{"classes/UpdateResourcesReplyInput.html":{}}}],["reply.input.ts:15",{"_index":2114,"title":{},"body":{"classes/CreateResourcesReplyInput.html":{}}}],["reply.input.ts:18",{"_index":4205,"title":{},"body":{"classes/UpdateResourcesReplyInput.html":{}}}],["reply.input.ts:19",{"_index":2117,"title":{},"body":{"classes/CreateResourcesReplyInput.html":{}}}],["reply.input.ts:22",{"_index":4204,"title":{},"body":{"classes/UpdateResourcesReplyInput.html":{}}}],["reply.input.ts:23",{"_index":2115,"title":{},"body":{"classes/CreateResourcesReplyInput.html":{}}}],["reply.input.ts:26",{"_index":4202,"title":{},"body":{"classes/UpdateResourcesReplyInput.html":{}}}],["reply.input.ts:27",{"_index":2116,"title":{},"body":{"classes/CreateResourcesReplyInput.html":{}}}],["reply.input.ts:30",{"_index":4203,"title":{},"body":{"classes/UpdateResourcesReplyInput.html":{}}}],["reply.input.ts:31",{"_index":2119,"title":{},"body":{"classes/CreateResourcesReplyInput.html":{}}}],["reply.input.ts:35",{"_index":2118,"title":{},"body":{"classes/CreateResourcesReplyInput.html":{}}}],["reporte",{"_index":4847,"title":{},"body":{"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["reportes",{"_index":4845,"title":{},"body":{"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["reports",{"_index":4808,"title":{},"body":{"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["reports_create",{"_index":4681,"title":{},"body":{"miscellaneous/enumerations.html":{},"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["reports_edit",{"_index":4682,"title":{},"body":{"miscellaneous/enumerations.html":{},"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["reports_view",{"_index":4680,"title":{},"body":{"miscellaneous/enumerations.html":{},"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["repository",{"_index":2266,"title":{},"body":{"interfaces/EmailsRepository.html":{},"classes/StorageService.html":{},"index.html":{}}}],["repository/email.repository",{"_index":67,"title":{},"body":{"classes/AWSSESProvider.html":{},"modules/EmailsModule.html":{},"injectables/EmailsService.html":{},"classes/SendGridProvider.html":{}}}],["req",{"_index":945,"title":{},"body":{"modules/AppModule.html":{}}}],["req.headers.authorization.replace('bearer",{"_index":947,"title":{},"body":{"modules/AppModule.html":{}}}],["request",{"_index":1098,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AwsService.html":{},"injectables/BusinessService.html":{},"guards/GqlAuthGuard.html":{},"injectables/IntegrationsService.html":{},"classes/LinkWithTargetsByRequestArgs.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["request.args",{"_index":1390,"title":{},"body":{"injectables/BusinessService.html":{}}}],["request.args.ts",{"_index":3144,"title":{},"body":{"classes/LinkWithTargetsByRequestArgs.html":{}}}],["request.args.ts:14",{"_index":3146,"title":{},"body":{"classes/LinkWithTargetsByRequestArgs.html":{}}}],["request.args.ts:19",{"_index":3147,"title":{},"body":{"classes/LinkWithTargetsByRequestArgs.html":{}}}],["request.filter.length",{"_index":5013,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request.foreignfilter.length",{"_index":5018,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request.foreignsort.length",{"_index":5023,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request.foreignsort.reduce((prev",{"_index":4980,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request.headers['authorization']?.split",{"_index":1120,"title":{},"body":{"guards/AuthGuard.html":{},"guards/GqlAuthGuard.html":{}}}],["request.limit",{"_index":4972,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request.rol",{"_index":1119,"title":{},"body":{"guards/AuthGuard.html":{},"guards/GqlAuthGuard.html":{}}}],["request.skip",{"_index":4971,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request.sort.length",{"_index":5022,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request.sort.reduce((prev",{"_index":4974,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request.token",{"_index":1118,"title":{},"body":{"guards/AuthGuard.html":{},"guards/GqlAuthGuard.html":{}}}],["request.user",{"_index":1117,"title":{},"body":{"guards/AuthGuard.html":{},"guards/GqlAuthGuard.html":{}}}],["request?.globalfilter",{"_index":4987,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requestutilities",{"_index":1386,"title":{},"body":{"injectables/BusinessService.html":{}}}],["requestutilities.buildaggregationfromrequest",{"_index":1415,"title":{},"body":{"injectables/BusinessService.html":{}}}],["requestutilities.getprojectionfromconfigtable(tablecolumns",{"_index":1466,"title":{},"body":{"injectables/BusinessService.html":{}}}],["require('util",{"_index":5037,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":243,"title":{},"body":{"classes/Acta.html":{},"classes/Announcement.html":{},"classes/Applicant.html":{},"classes/ApplicantState.html":{},"classes/Attachment.html":{},"classes/AuthCode.html":{},"injectables/BusinessService.html":{},"classes/ConfigEvaluation.html":{},"classes/ConfigurationApp.html":{},"classes/ContactServiceLink.html":{},"classes/Content.html":{},"injectables/DownloadsService.html":{},"classes/Event.html":{},"classes/ExpertEventLink.html":{},"classes/Form.html":{},"classes/FormSubscription.html":{},"classes/HelpDeskTicket.html":{},"interfaces/IAttachment.html":{},"classes/Integration.html":{},"classes/Invitation.html":{},"classes/Notification-1.html":{},"classes/ParticipantEventLink.html":{},"classes/Phase.html":{},"classes/Rating.html":{},"classes/Resource.html":{},"classes/Rol.html":{},"classes/Site.html":{},"classes/Stage.html":{},"classes/Table.html":{},"classes/TableConfig.html":{},"classes/TeamCoachLink.html":{},"classes/TermsOfUse.html":{},"classes/TicketCategory.html":{},"classes/TicketChild.html":{},"classes/TypesEvent.html":{},"classes/TypesNotification.html":{},"classes/User.html":{},"classes/UserConfig.html":{}}}],["resend",{"_index":3031,"title":{},"body":{"injectables/InvitationsService.html":{}}}],["resend(id",{"_index":3049,"title":{},"body":{"injectables/InvitationsService.html":{}}}],["reset",{"_index":266,"title":{},"body":{"modules/ActaModule.html":{},"modules/ActivitiesConfigModule.html":{},"modules/AnnouncementsModule.html":{},"modules/AppModule.html":{},"modules/ApplicantModule.html":{},"modules/AuthCodeModule.html":{},"modules/AuthModule.html":{},"modules/BusinessModule.html":{},"modules/ConfigEvaluationsModule.html":{},"modules/ConfigNotificationsModule.html":{},"modules/ConfigurationAppModule.html":{},"modules/ContentModule.html":{},"modules/DownloadsModule.html":{},"modules/EmailsModule.html":{},"modules/EntrepreneurModule.html":{},"modules/EvaluationsModule.html":{},"modules/EventsModule.html":{},"modules/ExpertModule.html":{},"modules/FormsModule.html":{},"modules/HelpDeskModule.html":{},"modules/IntegrationsModule.html":{},"modules/InvitationsModule.html":{},"modules/LoggerModule.html":{},"modules/NotificationsModule.html":{},"modules/ParticipationEventsModule.html":{},"modules/PhasesModule.html":{},"modules/ResourcesModule.html":{},"modules/ResourcesRepliesModule.html":{},"modules/RolModule.html":{},"modules/SitesModule.html":{},"modules/StagesModule.html":{},"modules/StartupModule.html":{},"modules/StorageModule.html":{},"modules/TableModule.html":{},"modules/TermsOfUseModule.html":{},"modules/TicketCategoriesModule.html":{},"modules/TypesEventsModule.html":{},"modules/TypesNotificationsModule.html":{},"modules/UserConfigModule.html":{},"modules/UserLogModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["resolvers",{"_index":933,"title":{},"body":{"modules/AppModule.html":{}}}],["resolvetablecolumns",{"_index":3843,"title":{},"body":{"injectables/TableService.html":{}}}],["resolvetablecolumns(table",{"_index":3854,"title":{},"body":{"injectables/TableService.html":{}}}],["resolvetablegroups",{"_index":3844,"title":{},"body":{"injectables/TableService.html":{}}}],["resolvetablegroups(table",{"_index":3856,"title":{},"body":{"injectables/TableService.html":{}}}],["resource",{"_index":1757,"title":{"classes/Resource.html":{}},"body":{"classes/Content.html":{},"injectables/ContentService.html":{},"classes/CreateResourcesReplyInput.html":{},"classes/Resource.html":{},"modules/ResourcesModule.html":{},"classes/ResourcesReply.html":{},"injectables/ResourcesService.html":{}}}],["resource._id.tostring",{"_index":1871,"title":{},"body":{"injectables/ContentService.html":{}}}],["resource.hide",{"_index":1866,"title":{},"body":{"injectables/ContentService.html":{}}}],["resource.input",{"_index":3456,"title":{},"body":{"injectables/ResourcesService.html":{},"classes/UpdateResourceInput.html":{}}}],["resource.input.ts",{"_index":2102,"title":{},"body":{"classes/CreateResourceInput.html":{},"classes/UpdateResourceInput.html":{}}}],["resource.input.ts:12",{"_index":2106,"title":{},"body":{"classes/CreateResourceInput.html":{},"classes/UpdateResourceInput.html":{}}}],["resource.input.ts:16",{"_index":2104,"title":{},"body":{"classes/CreateResourceInput.html":{},"classes/UpdateResourceInput.html":{}}}],["resource.input.ts:20",{"_index":2107,"title":{},"body":{"classes/CreateResourceInput.html":{},"classes/UpdateResourceInput.html":{}}}],["resource.input.ts:24",{"_index":2103,"title":{},"body":{"classes/CreateResourceInput.html":{},"classes/UpdateResourceInput.html":{}}}],["resource.input.ts:28",{"_index":2108,"title":{},"body":{"classes/CreateResourceInput.html":{},"classes/UpdateResourceInput.html":{}}}],["resource.input.ts:32",{"_index":2105,"title":{},"body":{"classes/CreateResourceInput.html":{}}}],["resource.isdeleted",{"_index":1867,"title":{},"body":{"injectables/ContentService.html":{}}}],["resource.name",{"_index":3402,"title":{},"body":{"modules/ResourcesModule.html":{}}}],["resource.type",{"_index":1872,"title":{},"body":{"injectables/ContentService.html":{}}}],["resource_id",{"_index":2954,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["resource_type",{"_index":2952,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["resourceexpiringsoon",{"_index":4648,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["resourcemodel",{"_index":3443,"title":{},"body":{"injectables/ResourcesService.html":{}}}],["resourcereplyschema",{"_index":3410,"title":{},"body":{"modules/ResourcesRepliesModule.html":{},"classes/ResourcesReply.html":{}}}],["resourcereplystate",{"_index":1818,"title":{},"body":{"injectables/ContentService.html":{},"miscellaneous/enumerations.html":{}}}],["resourcereplystate.aprobado",{"_index":1875,"title":{},"body":{"injectables/ContentService.html":{}}}],["resources",{"_index":1745,"title":{},"body":{"classes/Content.html":{},"injectables/ContentService.html":{},"classes/CreateResourcesReplyInput.html":{},"injectables/IntegrationsService.html":{},"classes/Resource.html":{},"modules/ResourcesModule.html":{},"modules/ResourcesRepliesModule.html":{},"classes/ResourcesReply.html":{},"injectables/ResourcesService.html":{},"classes/UpdateResourcesReplyInput.html":{},"injectables/UserLogService.html":{},"miscellaneous/enumerations.html":{}}}],["resources.module",{"_index":3414,"title":{},"body":{"modules/ResourcesRepliesModule.html":{}}}],["resources.resolver",{"_index":3400,"title":{},"body":{"modules/ResourcesModule.html":{}}}],["resources.service",{"_index":3398,"title":{},"body":{"modules/ResourcesModule.html":{}}}],["resources/resources",{"_index":891,"title":{},"body":{"modules/AppModule.html":{},"injectables/ContentService.html":{}}}],["resources/resources.module",{"_index":874,"title":{},"body":{"modules/AppModule.html":{}}}],["resourceschema",{"_index":3390,"title":{},"body":{"classes/Resource.html":{},"modules/ResourcesModule.html":{}}}],["resourceschild",{"_index":1886,"title":{},"body":{"injectables/ContentService.html":{}}}],["resourcesmodule",{"_index":828,"title":{"modules/ResourcesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PhasesModule.html":{},"modules/ResourcesModule.html":{},"modules/ResourcesRepliesModule.html":{},"modules/UserLogModule.html":{},"modules.html":{},"overview.html":{}}}],["resourcesrepliesmodule",{"_index":829,"title":{"modules/ResourcesRepliesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ContentModule.html":{},"modules/PhasesModule.html":{},"modules/ResourcesModule.html":{},"modules/ResourcesRepliesModule.html":{},"modules.html":{},"overview.html":{}}}],["resourcesrepliesresolver",{"_index":3408,"title":{},"body":{"modules/ResourcesRepliesModule.html":{}}}],["resourcesrepliesservice",{"_index":1787,"title":{},"body":{"injectables/ContentService.html":{},"modules/ResourcesRepliesModule.html":{},"overview.html":{}}}],["resourcesreply",{"_index":3411,"title":{"classes/ResourcesReply.html":{}},"body":{"modules/ResourcesRepliesModule.html":{},"classes/ResourcesReply.html":{}}}],["resourcesreply.name",{"_index":3415,"title":{},"body":{"modules/ResourcesRepliesModule.html":{}}}],["resourcesresolver",{"_index":3399,"title":{},"body":{"modules/ResourcesModule.html":{}}}],["resourcesservice",{"_index":3396,"title":{"injectables/ResourcesService.html":{}},"body":{"modules/ResourcesModule.html":{},"injectables/ResourcesService.html":{},"overview.html":{}}}],["resourcessprint",{"_index":1891,"title":{},"body":{"injectables/ContentService.html":{}}}],["resourcetype",{"_index":1821,"title":{},"body":{"injectables/ContentService.html":{},"classes/CreateResourceInput.html":{},"classes/Resource.html":{},"miscellaneous/enumerations.html":{}}}],["resourcetype.downloadable",{"_index":1873,"title":{},"body":{"injectables/ContentService.html":{}}}],["resourcetype})@field(undefined",{"_index":3387,"title":{},"body":{"classes/Resource.html":{}}}],["resp",{"_index":133,"title":{},"body":{"classes/AWSSESProvider.html":{}}}],["responder",{"_index":4555,"title":{},"body":{"injectables/UsersService.html":{}}}],["response",{"_index":2885,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["response.data",{"_index":2887,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["respuesta",{"_index":2772,"title":{},"body":{"injectables/HelpDeskService.html":{}}}],["respuestas",{"_index":676,"title":{},"body":{"classes/Announcement.html":{}}}],["result",{"_index":1270,"title":{},"body":{"injectables/AwsService.html":{},"injectables/BusinessService.html":{},"controllers/StorageController.html":{}}}],["results",{"_index":174,"title":{},"body":{"classes/AWSSESProvider.html":{},"classes/AcceptInvitationDto.html":{},"classes/Acta.html":{},"modules/ActaModule.html":{},"injectables/ActaService.html":{},"classes/ActivitiesConfig.html":{},"modules/ActivitiesConfigModule.html":{},"injectables/ActivitiesConfigService.html":{},"classes/AddTableJoinInput.html":{},"classes/Announcement.html":{},"classes/AnnouncementApplicantArgs.html":{},"classes/AnnouncementApplicantsArgs.html":{},"modules/AnnouncementsModule.html":{},"injectables/AnnouncementsService.html":{},"modules/AppModule.html":{},"classes/Applicant.html":{},"classes/ApplicantArgs.html":{},"modules/ApplicantModule.html":{},"classes/ApplicantState.html":{},"classes/Assign.html":{},"classes/Attachment.html":{},"classes/AttachmentSubmit.html":{},"classes/AuthCode.html":{},"modules/AuthCodeModule.html":{},"injectables/AuthCodeService.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/AwsService.html":{},"classes/Business.html":{},"modules/BusinessModule.html":{},"classes/BusinessRelationship.html":{},"injectables/BusinessService.html":{},"classes/CloseFormSubscriptionArgs.html":{},"classes/ColumnGroup.html":{},"classes/ConfigEvaluation.html":{},"modules/ConfigEvaluationsModule.html":{},"injectables/ConfigEvaluationsService.html":{},"modules/ConfigNotificationsModule.html":{},"injectables/ConfigNotificationsService.html":{},"classes/ConfigurationApp.html":{},"modules/ConfigurationAppModule.html":{},"injectables/ConfigurationAppService.html":{},"classes/ContactArgs.html":{},"classes/ContactServiceLink.html":{},"classes/ContactServicesInput.html":{},"classes/Content.html":{},"modules/ContentModule.html":{},"injectables/ContentService.html":{},"classes/CreateActaInput.html":{},"classes/CreateActivitiesConfigInput.html":{},"classes/CreateAnnouncementInput.html":{},"classes/CreateConfigEvaluationInput.html":{},"classes/CreateConfigNotificationInput.html":{},"classes/CreateContentInput.html":{},"classes/CreateEventInput.html":{},"classes/CreateFormInput.html":{},"classes/CreateFormSubscriptionInput.html":{},"classes/CreateFormTagInput.html":{},"classes/CreateHelpDeskInput.html":{},"classes/CreateIntegrationInput.html":{},"classes/CreateInvitationArgs.html":{},"classes/CreateNotificationInput.html":{},"classes/CreateParticipationEventInput.html":{},"classes/CreatePhaseInput.html":{},"classes/CreateResourceInput.html":{},"classes/CreateResourcesReplyInput.html":{},"classes/CreateRolInput.html":{},"classes/CreateSiteInput.html":{},"classes/CreateStageInput.html":{},"classes/CreateTableConfigInput.html":{},"classes/CreateTableInput.html":{},"classes/CreateTypesEventInput.html":{},"classes/CreateUserInput.html":{},"classes/CreateUserLogInput.html":{},"classes/Download.html":{},"modules/DownloadsModule.html":{},"injectables/DownloadsService.html":{},"controllers/EmailsController.html":{},"modules/EmailsModule.html":{},"interfaces/EmailsRepository.html":{},"injectables/EmailsService.html":{},"classes/Entrepreneur.html":{},"modules/EntrepreneurModule.html":{},"classes/EntrepreneurRelationship.html":{},"classes/EntrepreneurRelationship-1.html":{},"classes/EntrepreneurStartupArgs.html":{},"classes/Evaluation.html":{},"modules/EvaluationsModule.html":{},"classes/Event.html":{},"modules/EventsModule.html":{},"classes/Expert.html":{},"classes/ExpertEventLink.html":{},"modules/ExpertModule.html":{},"classes/FindFormsArgs.html":{},"classes/FindInvitationArgs.html":{},"classes/FindUsersArgs.html":{},"classes/Form.html":{},"classes/FormSubmission.html":{},"classes/FormSubmissionFiles.html":{},"classes/FormSubscription.html":{},"injectables/FormSubscriptionService.html":{},"classes/FormTag.html":{},"injectables/FormTagService.html":{},"modules/FormsModule.html":{},"injectables/FormsService.html":{},"classes/GetSubmittedFilesArgs.html":{},"guards/GqlAuthGuard.html":{},"classes/HelpDeskFilterInput.html":{},"modules/HelpDeskModule.html":{},"injectables/HelpDeskService.html":{},"classes/HelpDeskTicket.html":{},"classes/Hours.html":{},"interfaces/IAttachment.html":{},"classes/Integration.html":{},"modules/IntegrationsModule.html":{},"injectables/IntegrationsService.html":{},"classes/Invitation.html":{},"controllers/InvitationsController.html":{},"modules/InvitationsModule.html":{},"injectables/InvitationsService.html":{},"classes/LastContentOutput.html":{},"classes/LinkExpertsToPhaseArgs.html":{},"classes/LinkStartupToPhaseArgs.html":{},"classes/LinkStartupsExpertsArgs.html":{},"classes/LinkWithTargetsArgs.html":{},"classes/LinkWithTargetsByRequestArgs.html":{},"modules/LoggerModule.html":{},"classes/Notification.html":{},"classes/Notification-1.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"classes/OthersInput.html":{},"classes/ParticipantEventLink.html":{},"classes/ParticipationEvent.html":{},"modules/ParticipationEventsModule.html":{},"injectables/ParticipationEventsService.html":{},"classes/Phase.html":{},"classes/PhaseExpertRelationship.html":{},"classes/PhaseRelationship.html":{},"modules/PhasesModule.html":{},"classes/Rating.html":{},"classes/RemoveTableJoinInput.html":{},"classes/Resource.html":{},"modules/ResourcesModule.html":{},"modules/ResourcesRepliesModule.html":{},"classes/ResourcesReply.html":{},"injectables/ResourcesService.html":{},"classes/Rol.html":{},"modules/RolModule.html":{},"injectables/RolService.html":{},"classes/SearchBatchInput.html":{},"classes/SelectApplicantsArgs.html":{},"classes/SendEmailInput.html":{},"classes/SendGridProvider.html":{},"classes/SignUpInput.html":{},"classes/Site.html":{},"modules/SitesModule.html":{},"injectables/SitesService.html":{},"classes/Stage.html":{},"modules/StagesModule.html":{},"injectables/StagesService.html":{},"classes/Startup.html":{},"classes/StartupLink.html":{},"modules/StartupModule.html":{},"classes/StartupRelationship.html":{},"controllers/StorageController.html":{},"modules/StorageModule.html":{},"classes/StorageService.html":{},"classes/SubmitAnnouncementDocInput.html":{},"classes/SubmitFileInput.html":{},"classes/SubmitFormSubscriptionArgs.html":{},"classes/Table.html":{},"classes/TableConfig.html":{},"injectables/TableConfigService.html":{},"classes/TableJoin.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"classes/TeamCoachLink.html":{},"classes/TemplateInput.html":{},"classes/TermsOfUse.html":{},"modules/TermsOfUseModule.html":{},"injectables/TermsOfUseService.html":{},"modules/TicketCategoriesModule.html":{},"injectables/TicketCategoriesService.html":{},"classes/TicketCategory.html":{},"classes/TicketChild.html":{},"classes/TypesEvent.html":{},"modules/TypesEventsModule.html":{},"injectables/TypesEventsService.html":{},"classes/TypesNotification.html":{},"modules/TypesNotificationsModule.html":{},"injectables/TypesNotificationsService.html":{},"classes/UpdateActaInput.html":{},"classes/UpdateActivitiesConfigInput.html":{},"classes/UpdateAnnouncementInput.html":{},"classes/UpdateApplicantInput.html":{},"classes/UpdateApplicantStateInput.html":{},"classes/UpdateConfigEvaluationInput.html":{},"classes/UpdateConfigurationAppInput.html":{},"classes/UpdateContentInput.html":{},"classes/UpdateEventInput.html":{},"classes/UpdateExpertInput.html":{},"classes/UpdateFormInput.html":{},"classes/UpdateFormTagInput.html":{},"classes/UpdateHelpDeskInput.html":{},"classes/UpdateIntegrationInput.html":{},"classes/UpdateNotificationInput.html":{},"classes/UpdateParticipationEventInput.html":{},"classes/UpdatePhaseInput.html":{},"classes/UpdateResourceInput.html":{},"classes/UpdateResourcesReplyInput.html":{},"classes/UpdateRolInput.html":{},"classes/UpdateSiteInput.html":{},"classes/UpdateStageInput.html":{},"classes/UpdateTableConfigInput.html":{},"classes/UpdateTermsOfUseInput.html":{},"classes/UpdateTypesEventInput.html":{},"classes/UpdateUserConfigInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"classes/UserConfig.html":{},"modules/UserConfigModule.html":{},"injectables/UserConfigService.html":{},"classes/UserLog.html":{},"modules/UserLogModule.html":{},"injectables/UserLogService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/activities.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"interfaces/item_permission.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["reto",{"_index":4874,"title":{},"body":{"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":139,"title":{},"body":{"classes/AWSSESProvider.html":{},"injectables/ActaService.html":{},"injectables/ActivitiesConfigService.html":{},"injectables/AnnouncementsService.html":{},"modules/AppModule.html":{},"injectables/AuthCodeService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AwsService.html":{},"injectables/BusinessService.html":{},"injectables/ConfigEvaluationsService.html":{},"injectables/ConfigNotificationsService.html":{},"injectables/ConfigurationAppService.html":{},"injectables/ContentService.html":{},"injectables/DownloadsService.html":{},"controllers/EmailsController.html":{},"injectables/EmailsService.html":{},"injectables/FormSubscriptionService.html":{},"injectables/FormTagService.html":{},"injectables/FormsService.html":{},"guards/GqlAuthGuard.html":{},"injectables/HelpDeskService.html":{},"injectables/IntegrationsService.html":{},"classes/Invitation.html":{},"controllers/InvitationsController.html":{},"injectables/InvitationsService.html":{},"injectables/NotificationsService.html":{},"injectables/ParticipationEventsService.html":{},"injectables/ResourcesService.html":{},"injectables/RolService.html":{},"classes/SendGridProvider.html":{},"injectables/SitesService.html":{},"injectables/StagesService.html":{},"controllers/StorageController.html":{},"injectables/TableConfigService.html":{},"injectables/TableService.html":{},"classes/TemplateInput.html":{},"injectables/TermsOfUseService.html":{},"injectables/TicketCategoriesService.html":{},"injectables/TypesEventsService.html":{},"injectables/TypesNotificationsService.html":{},"injectables/UserConfigService.html":{},"injectables/UserLogService.html":{},"injectables/UsersService.html":{},"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":52,"title":{},"body":{"classes/AWSSESProvider.html":{},"injectables/ActaService.html":{},"injectables/ActivitiesConfigService.html":{},"injectables/AnnouncementsService.html":{},"injectables/AuthCodeService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AwsService.html":{},"injectables/BusinessService.html":{},"injectables/ConfigEvaluationsService.html":{},"injectables/ConfigNotificationsService.html":{},"injectables/ConfigurationAppService.html":{},"injectables/ContentService.html":{},"injectables/DownloadsService.html":{},"controllers/EmailsController.html":{},"injectables/EmailsService.html":{},"injectables/FormSubscriptionService.html":{},"injectables/FormTagService.html":{},"injectables/FormsService.html":{},"guards/GqlAuthGuard.html":{},"injectables/HelpDeskService.html":{},"injectables/IntegrationsService.html":{},"controllers/InvitationsController.html":{},"injectables/InvitationsService.html":{},"injectables/NotificationsService.html":{},"injectables/ParticipationEventsService.html":{},"injectables/ResourcesService.html":{},"injectables/RolService.html":{},"classes/SendGridProvider.html":{},"injectables/SitesService.html":{},"injectables/StagesService.html":{},"controllers/StorageController.html":{},"classes/StorageService.html":{},"injectables/TableConfigService.html":{},"injectables/TableService.html":{},"injectables/TermsOfUseService.html":{},"injectables/TicketCategoriesService.html":{},"injectables/TypesEventsService.html":{},"injectables/TypesNotificationsService.html":{},"injectables/UserConfigService.html":{},"injectables/UserLogService.html":{},"injectables/UsersService.html":{}}}],["reviewer",{"_index":1506,"title":{},"body":{"classes/ConfigEvaluation.html":{},"injectables/ConfigEvaluationsService.html":{},"classes/CreateConfigEvaluationInput.html":{},"classes/Evaluation.html":{}}}],["revisión",{"_index":3431,"title":{},"body":{"classes/ResourcesReply.html":{}}}],["rol",{"_index":1115,"title":{"classes/Rol.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/ConfigEvaluationsService.html":{},"classes/CreateInvitationArgs.html":{},"classes/CreateRolInput.html":{},"classes/EntrepreneurRelationship-1.html":{},"classes/EntrepreneurStartupArgs.html":{},"guards/GqlAuthGuard.html":{},"classes/Invitation.html":{},"injectables/InvitationsService.html":{},"classes/PhaseRelationship.html":{},"classes/Rol.html":{},"modules/RolModule.html":{},"injectables/RolService.html":{},"classes/Startup.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["rol.input",{"_index":3503,"title":{},"body":{"injectables/RolService.html":{},"classes/UpdateRolInput.html":{}}}],["rol.input.ts",{"_index":2122,"title":{},"body":{"classes/CreateRolInput.html":{},"classes/UpdateRolInput.html":{}}}],["rol.input.ts:10",{"_index":2123,"title":{},"body":{"classes/CreateRolInput.html":{}}}],["rol.input.ts:11",{"_index":4208,"title":{},"body":{"classes/UpdateRolInput.html":{}}}],["rol.input.ts:15",{"_index":4209,"title":{},"body":{"classes/UpdateRolInput.html":{}}}],["rol.input.ts:19",{"_index":4210,"title":{},"body":{"classes/UpdateRolInput.html":{}}}],["rol.name",{"_index":3488,"title":{},"body":{"modules/RolModule.html":{}}}],["rol.resolver",{"_index":3486,"title":{},"body":{"modules/RolModule.html":{}}}],["rol.service",{"_index":3484,"title":{},"body":{"modules/RolModule.html":{}}}],["rol/rol.module",{"_index":882,"title":{},"body":{"modules/AppModule.html":{}}}],["rol/rol.service",{"_index":4483,"title":{},"body":{"injectables/UsersService.html":{}}}],["roldoc",{"_index":1188,"title":{},"body":{"injectables/AuthService.html":{},"injectables/InvitationsService.html":{}}}],["roldoc._id",{"_index":1192,"title":{},"body":{"injectables/AuthService.html":{},"injectables/InvitationsService.html":{}}}],["roldoc._id.tostring",{"_index":3070,"title":{},"body":{"injectables/InvitationsService.html":{}}}],["role",{"_index":3068,"title":{},"body":{"injectables/InvitationsService.html":{},"classes/SignUpInput.html":{},"miscellaneous/variables.html":{}}}],["roles",{"_index":521,"title":{},"body":{"injectables/ActivitiesConfigService.html":{},"classes/CreateUserInput.html":{},"classes/FindUsersArgs.html":{},"classes/Rol.html":{},"injectables/RolService.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["roles.enum",{"_index":476,"title":{},"body":{"injectables/ActivitiesConfigService.html":{},"injectables/AuthService.html":{},"injectables/ConfigEvaluationsService.html":{},"injectables/ConfigurationAppService.html":{},"injectables/ContentService.html":{},"classes/CreateInvitationArgs.html":{},"classes/CreateUserInput.html":{},"classes/FindInvitationArgs.html":{},"classes/FindUsersArgs.html":{},"injectables/HelpDeskService.html":{},"classes/Invitation.html":{},"injectables/InvitationsService.html":{},"classes/SignUpInput.html":{},"classes/User.html":{}}}],["roles.enum.ts",{"_index":4639,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["roles.includes(rol.type",{"_index":5057,"title":{},"body":{"miscellaneous/variables.html":{}}}],["roles.length",{"_index":3508,"title":{},"body":{"injectables/RolService.html":{},"miscellaneous/variables.html":{}}}],["roles?.length",{"_index":4493,"title":{},"body":{"injectables/UsersService.html":{}}}],["rolesdocs",{"_index":4492,"title":{},"body":{"injectables/UsersService.html":{}}}],["rolesdocs.push(docrol._id",{"_index":4496,"title":{},"body":{"injectables/UsersService.html":{}}}],["rolmodel",{"_index":3492,"title":{},"body":{"injectables/RolService.html":{}}}],["rolmodule",{"_index":830,"title":{"modules/RolModule.html":{}},"body":{"modules/AppModule.html":{},"modules/RolModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["rolnames",{"_index":3057,"title":{},"body":{"injectables/InvitationsService.html":{},"miscellaneous/variables.html":{}}}],["rolnames[invitation.rol",{"_index":3082,"title":{},"body":{"injectables/InvitationsService.html":{}}}],["rolresolver",{"_index":3485,"title":{},"body":{"modules/RolModule.html":{}}}],["rolschema",{"_index":3476,"title":{},"body":{"classes/Rol.html":{},"modules/RolModule.html":{}}}],["rolservice",{"_index":3482,"title":{"injectables/RolService.html":{}},"body":{"modules/RolModule.html":{},"injectables/RolService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["rolvalues",{"_index":4271,"title":{},"body":{"classes/User.html":{},"miscellaneous/variables.html":{}}}],["room1",{"_index":2918,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["rooms",{"_index":2917,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["route",{"_index":5055,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rowconfigcolumn",{"_index":3799,"title":{},"body":{"injectables/TableConfigService.html":{}}}],["rows",{"_index":1469,"title":{},"body":{"injectables/BusinessService.html":{}}}],["run",{"_index":4773,"title":{},"body":{"index.html":{}}}],["rute",{"_index":1217,"title":{},"body":{"injectables/AwsService.html":{}}}],["s",{"_index":494,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["s._id.tostring",{"_index":495,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["s3",{"_index":1234,"title":{},"body":{"injectables/AwsService.html":{},"dependencies.html":{}}}],["s3client",{"_index":1233,"title":{},"body":{"injectables/AwsService.html":{}}}],["s3client(publicfile",{"_index":1257,"title":{},"body":{"injectables/AwsService.html":{}}}],["s3client(this.publicconfig",{"_index":1269,"title":{},"body":{"injectables/AwsService.html":{}}}],["s3clientconfig",{"_index":1226,"title":{},"body":{"injectables/AwsService.html":{}}}],["s3uri",{"_index":1201,"title":{},"body":{"injectables/AwsService.html":{}}}],["save",{"_index":550,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["saving",{"_index":3245,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["scalable",{"_index":4762,"title":{},"body":{"index.html":{}}}],["scalars",{"_index":239,"title":{},"body":{"classes/Acta.html":{},"classes/ConfigurationApp.html":{},"classes/ContactServicesInput.html":{},"classes/Content.html":{},"classes/CreateActaInput.html":{},"classes/CreateContentInput.html":{},"classes/CreateEventInput.html":{},"classes/CreateParticipationEventInput.html":{},"classes/CreateResourceInput.html":{},"classes/CreateResourcesReplyInput.html":{},"classes/CreateSiteInput.html":{},"classes/CreateTypesEventInput.html":{},"classes/CreateUserLogInput.html":{},"classes/Event.html":{},"classes/ExpertEventLink.html":{},"classes/FindUsersArgs.html":{},"classes/HelpDeskTicket.html":{},"classes/Hours.html":{},"classes/LastContentOutput.html":{},"classes/ParticipantEventLink.html":{},"classes/ParticipationEvent.html":{},"classes/Resource.html":{},"classes/TeamCoachLink.html":{},"classes/TermsOfUse.html":{},"classes/TicketChild.html":{},"classes/TypesEvent.html":{},"classes/UpdateActaInput.html":{},"classes/UpdateConfigurationAppInput.html":{},"classes/UpdateContentInput.html":{},"classes/UpdateEventInput.html":{},"classes/UpdateParticipationEventInput.html":{},"classes/UpdateResourceInput.html":{},"classes/UpdateResourcesReplyInput.html":{},"classes/UpdateSiteInput.html":{},"classes/UpdateTermsOfUseInput.html":{},"classes/UpdateTypesEventInput.html":{},"classes/UpdateUserConfigInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"classes/UserConfig.html":{},"dependencies.html":{}}}],["schedule_for",{"_index":2903,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["schedulemodule",{"_index":914,"title":{},"body":{"modules/AppModule.html":{}}}],["schedulemodule.forroot",{"_index":949,"title":{},"body":{"modules/AppModule.html":{}}}],["scheduleurl",{"_index":4022,"title":{},"body":{"classes/TypesEvent.html":{}}}],["schema",{"_index":235,"title":{},"body":{"classes/Acta.html":{},"modules/ActaModule.html":{},"classes/ActivitiesConfig.html":{},"modules/ActivitiesConfigModule.html":{},"classes/Announcement.html":{},"modules/AnnouncementsModule.html":{},"classes/Applicant.html":{},"modules/ApplicantModule.html":{},"classes/ApplicantState.html":{},"classes/Assign.html":{},"classes/Attachment.html":{},"classes/AuthCode.html":{},"modules/AuthCodeModule.html":{},"classes/Business.html":{},"modules/BusinessModule.html":{},"classes/BusinessRelationship.html":{},"classes/ConfigEvaluation.html":{},"modules/ConfigEvaluationsModule.html":{},"modules/ConfigNotificationsModule.html":{},"classes/ConfigurationApp.html":{},"modules/ConfigurationAppModule.html":{},"classes/ContactServiceLink.html":{},"classes/Content.html":{},"modules/ContentModule.html":{},"classes/Download.html":{},"modules/DownloadsModule.html":{},"classes/Entrepreneur.html":{},"modules/EntrepreneurModule.html":{},"classes/EntrepreneurRelationship.html":{},"classes/EntrepreneurRelationship-1.html":{},"classes/Evaluation.html":{},"modules/EvaluationsModule.html":{},"classes/Event.html":{},"modules/EventsModule.html":{},"classes/Expert.html":{},"classes/ExpertEventLink.html":{},"modules/ExpertModule.html":{},"classes/Form.html":{},"classes/FormSubscription.html":{},"classes/FormTag.html":{},"modules/FormsModule.html":{},"modules/HelpDeskModule.html":{},"classes/HelpDeskTicket.html":{},"interfaces/IAttachment.html":{},"classes/Integration.html":{},"modules/IntegrationsModule.html":{},"classes/Invitation.html":{},"modules/InvitationsModule.html":{},"classes/Notification-1.html":{},"modules/NotificationsModule.html":{},"classes/ParticipantEventLink.html":{},"classes/ParticipationEvent.html":{},"modules/ParticipationEventsModule.html":{},"classes/Phase.html":{},"classes/PhaseExpertRelationship.html":{},"classes/PhaseRelationship.html":{},"modules/PhasesModule.html":{},"classes/Rating.html":{},"classes/Resource.html":{},"modules/ResourcesModule.html":{},"modules/ResourcesRepliesModule.html":{},"classes/ResourcesReply.html":{},"classes/Rol.html":{},"modules/RolModule.html":{},"classes/Site.html":{},"modules/SitesModule.html":{},"classes/Stage.html":{},"modules/StagesModule.html":{},"classes/Startup.html":{},"classes/StartupLink.html":{},"modules/StartupModule.html":{},"classes/StartupRelationship.html":{},"classes/Table.html":{},"classes/TableConfig.html":{},"classes/TableJoin.html":{},"modules/TableModule.html":{},"classes/TeamCoachLink.html":{},"classes/TermsOfUse.html":{},"modules/TermsOfUseModule.html":{},"modules/TicketCategoriesModule.html":{},"classes/TicketCategory.html":{},"classes/TicketChild.html":{},"classes/TypesEvent.html":{},"modules/TypesEventsModule.html":{},"classes/TypesNotification.html":{},"modules/TypesNotificationsModule.html":{},"classes/User.html":{},"classes/UserConfig.html":{},"modules/UserConfigModule.html":{},"classes/UserLog.html":{},"modules/UserLogModule.html":{},"modules/UsersModule.html":{},"classes/activities.html":{}}}],["schemafactory",{"_index":236,"title":{},"body":{"classes/Acta.html":{},"classes/ActivitiesConfig.html":{},"classes/Announcement.html":{},"classes/Applicant.html":{},"classes/ApplicantState.html":{},"classes/Assign.html":{},"classes/Attachment.html":{},"classes/AuthCode.html":{},"classes/Business.html":{},"classes/BusinessRelationship.html":{},"classes/ConfigEvaluation.html":{},"classes/ConfigurationApp.html":{},"classes/ContactServiceLink.html":{},"classes/Content.html":{},"classes/Download.html":{},"classes/Entrepreneur.html":{},"classes/EntrepreneurRelationship.html":{},"classes/EntrepreneurRelationship-1.html":{},"classes/Evaluation.html":{},"classes/Event.html":{},"classes/Expert.html":{},"classes/ExpertEventLink.html":{},"classes/Form.html":{},"classes/FormSubscription.html":{},"classes/FormTag.html":{},"classes/HelpDeskTicket.html":{},"interfaces/IAttachment.html":{},"classes/Integration.html":{},"classes/Invitation.html":{},"classes/Notification-1.html":{},"classes/ParticipantEventLink.html":{},"classes/ParticipationEvent.html":{},"classes/Phase.html":{},"classes/PhaseExpertRelationship.html":{},"classes/PhaseRelationship.html":{},"classes/Rating.html":{},"classes/Resource.html":{},"classes/ResourcesReply.html":{},"classes/Rol.html":{},"classes/Site.html":{},"classes/Stage.html":{},"classes/Startup.html":{},"classes/StartupLink.html":{},"classes/StartupRelationship.html":{},"classes/Table.html":{},"classes/TableConfig.html":{},"classes/TableJoin.html":{},"classes/TeamCoachLink.html":{},"classes/TermsOfUse.html":{},"classes/TicketCategory.html":{},"classes/TicketChild.html":{},"classes/TypesEvent.html":{},"classes/TypesNotification.html":{},"classes/User.html":{},"classes/UserConfig.html":{},"classes/UserLog.html":{},"classes/activities.html":{}}}],["schemafactory.createforclass(acta",{"_index":248,"title":{},"body":{"classes/Acta.html":{}}}],["schemafactory.createforclass(activitiesconfig",{"_index":372,"title":{},"body":{"classes/ActivitiesConfig.html":{},"classes/Assign.html":{},"classes/activities.html":{}}}],["schemafactory.createforclass(announcement",{"_index":731,"title":{},"body":{"classes/Announcement.html":{}}}],["schemafactory.createforclass(applicant",{"_index":999,"title":{},"body":{"classes/Applicant.html":{},"classes/ApplicantState.html":{},"classes/Attachment.html":{},"interfaces/IAttachment.html":{}}}],["schemafactory.createforclass(authcode",{"_index":1056,"title":{},"body":{"classes/AuthCode.html":{}}}],["schemafactory.createforclass(business",{"_index":1288,"title":{},"body":{"classes/Business.html":{},"classes/EntrepreneurRelationship.html":{}}}],["schemafactory.createforclass(configevaluation",{"_index":1522,"title":{},"body":{"classes/ConfigEvaluation.html":{}}}],["schemafactory.createforclass(configurationapp",{"_index":1652,"title":{},"body":{"classes/ConfigurationApp.html":{}}}],["schemafactory.createforclass(content",{"_index":1767,"title":{},"body":{"classes/Content.html":{}}}],["schemafactory.createforclass(download",{"_index":2189,"title":{},"body":{"classes/Download.html":{}}}],["schemafactory.createforclass(entrepreneur",{"_index":1316,"title":{},"body":{"classes/BusinessRelationship.html":{},"classes/Entrepreneur.html":{},"classes/StartupRelationship.html":{}}}],["schemafactory.createforclass(evaluation",{"_index":2338,"title":{},"body":{"classes/Evaluation.html":{}}}],["schemafactory.createforclass(event",{"_index":2373,"title":{},"body":{"classes/Event.html":{},"classes/ExpertEventLink.html":{},"classes/ParticipantEventLink.html":{},"classes/TeamCoachLink.html":{}}}],["schemafactory.createforclass(expert",{"_index":2404,"title":{},"body":{"classes/Expert.html":{},"classes/PhaseExpertRelationship.html":{},"classes/StartupLink.html":{}}}],["schemafactory.createforclass(form",{"_index":2457,"title":{},"body":{"classes/Form.html":{}}}],["schemafactory.createforclass(formsubscription",{"_index":2481,"title":{},"body":{"classes/FormSubscription.html":{}}}],["schemafactory.createforclass(formtag",{"_index":2583,"title":{},"body":{"classes/FormTag.html":{}}}],["schemafactory.createforclass(helpdeskticket",{"_index":2797,"title":{},"body":{"classes/HelpDeskTicket.html":{},"classes/TicketChild.html":{}}}],["schemafactory.createforclass(integration",{"_index":2816,"title":{},"body":{"classes/Integration.html":{}}}],["schemafactory.createforclass(notification",{"_index":3183,"title":{},"body":{"classes/Notification-1.html":{}}}],["schemafactory.createforclass(participationevent",{"_index":3282,"title":{},"body":{"classes/ParticipationEvent.html":{}}}],["schemafactory.createforclass(phase",{"_index":3341,"title":{},"body":{"classes/Phase.html":{}}}],["schemafactory.createforclass(resource",{"_index":3391,"title":{},"body":{"classes/Resource.html":{}}}],["schemafactory.createforclass(resourcesreply",{"_index":3437,"title":{},"body":{"classes/ResourcesReply.html":{}}}],["schemafactory.createforclass(rol",{"_index":3477,"title":{},"body":{"classes/Rol.html":{}}}],["schemafactory.createforclass(site",{"_index":1726,"title":{},"body":{"classes/ContactServiceLink.html":{},"classes/Site.html":{}}}],["schemafactory.createforclass(stage",{"_index":3638,"title":{},"body":{"classes/Stage.html":{}}}],["schemafactory.createforclass(startup",{"_index":2317,"title":{},"body":{"classes/EntrepreneurRelationship-1.html":{},"classes/PhaseRelationship.html":{},"classes/Startup.html":{}}}],["schemafactory.createforclass(table",{"_index":3780,"title":{},"body":{"classes/Table.html":{}}}],["schemafactory.createforclass(tableconfig",{"_index":3793,"title":{},"body":{"classes/TableConfig.html":{}}}],["schemafactory.createforclass(tablejoin",{"_index":3826,"title":{},"body":{"classes/TableJoin.html":{}}}],["schemafactory.createforclass(termsofuse",{"_index":3941,"title":{},"body":{"classes/TermsOfUse.html":{}}}],["schemafactory.createforclass(ticketcategory",{"_index":4015,"title":{},"body":{"classes/TicketCategory.html":{}}}],["schemafactory.createforclass(typesevent",{"_index":4029,"title":{},"body":{"classes/TypesEvent.html":{}}}],["schemafactory.createforclass(typesnotification",{"_index":4064,"title":{},"body":{"classes/TypesNotification.html":{}}}],["schemafactory.createforclass(user",{"_index":4276,"title":{},"body":{"classes/User.html":{}}}],["schemafactory.createforclass(userconfig",{"_index":4285,"title":{},"body":{"classes/UserConfig.html":{}}}],["schemafactory.createforclass(userlog",{"_index":4341,"title":{},"body":{"classes/UserLog.html":{}}}],["schematypes",{"_index":240,"title":{},"body":{"classes/Acta.html":{},"classes/ActivitiesConfig.html":{},"classes/Assign.html":{},"classes/ConfigurationApp.html":{},"classes/Content.html":{},"classes/EntrepreneurRelationship-1.html":{},"classes/Event.html":{},"classes/Expert.html":{},"classes/ExpertEventLink.html":{},"classes/HelpDeskTicket.html":{},"classes/ParticipantEventLink.html":{},"classes/ParticipationEvent.html":{},"classes/PhaseExpertRelationship.html":{},"classes/PhaseRelationship.html":{},"classes/Resource.html":{},"classes/ResourcesReply.html":{},"classes/Startup.html":{},"classes/StartupLink.html":{},"classes/TableConfig.html":{},"classes/TeamCoachLink.html":{},"classes/TermsOfUse.html":{},"classes/TicketChild.html":{},"classes/TypesEvent.html":{},"classes/User.html":{},"classes/UserConfig.html":{},"classes/activities.html":{}}}],["schematypes.mixed",{"_index":245,"title":{},"body":{"classes/Acta.html":{},"classes/ConfigurationApp.html":{},"classes/ContactServiceLink.html":{},"classes/Content.html":{},"classes/Event.html":{},"classes/ExpertEventLink.html":{},"classes/HelpDeskTicket.html":{},"classes/ParticipantEventLink.html":{},"classes/ParticipationEvent.html":{},"classes/Resource.html":{},"classes/Site.html":{},"classes/TeamCoachLink.html":{},"classes/TermsOfUse.html":{},"classes/TicketChild.html":{},"classes/TypesEvent.html":{},"classes/User.html":{},"classes/UserConfig.html":{}}}],["schematypes.objectid",{"_index":244,"title":{},"body":{"classes/Acta.html":{},"classes/ActivitiesConfig.html":{},"classes/Assign.html":{},"classes/Content.html":{},"classes/EntrepreneurRelationship-1.html":{},"classes/Event.html":{},"classes/Expert.html":{},"classes/ExpertEventLink.html":{},"classes/ParticipantEventLink.html":{},"classes/ParticipationEvent.html":{},"classes/PhaseExpertRelationship.html":{},"classes/PhaseRelationship.html":{},"classes/Resource.html":{},"classes/ResourcesReply.html":{},"classes/Startup.html":{},"classes/StartupLink.html":{},"classes/TableConfig.html":{},"classes/TeamCoachLink.html":{},"classes/User.html":{},"classes/activities.html":{}}}],["scheme",{"_index":181,"title":{},"body":{"classes/AcceptInvitationDto.html":{},"classes/AttachmentSubmit.html":{},"classes/CreateActaInput.html":{},"classes/CreateActivitiesConfigInput.html":{},"classes/CreateAnnouncementInput.html":{},"classes/CreateConfigEvaluationInput.html":{},"classes/CreateConfigNotificationInput.html":{},"classes/CreateContentInput.html":{},"classes/CreateEventInput.html":{},"classes/CreateHelpDeskInput.html":{},"classes/CreateIntegrationInput.html":{},"classes/CreateNotificationInput.html":{},"classes/CreateParticipationEventInput.html":{},"classes/CreatePhaseInput.html":{},"classes/CreateResourceInput.html":{},"classes/CreateResourcesReplyInput.html":{},"classes/CreateRolInput.html":{},"classes/CreateTypesEventInput.html":{},"classes/HelpDeskFilterInput.html":{},"classes/LastContentOutput.html":{},"classes/OthersInput.html":{},"classes/SearchBatchInput.html":{},"classes/SendEmailInput.html":{},"classes/SignUpInput.html":{},"classes/SubmitAnnouncementDocInput.html":{},"classes/TemplateInput.html":{},"classes/UpdateActaInput.html":{},"classes/UpdateActivitiesConfigInput.html":{},"classes/UpdateAnnouncementInput.html":{},"classes/UpdateApplicantInput.html":{},"classes/UpdateApplicantStateInput.html":{},"classes/UpdateConfigEvaluationInput.html":{},"classes/UpdateConfigurationAppInput.html":{},"classes/UpdateContentInput.html":{},"classes/UpdateEventInput.html":{},"classes/UpdateHelpDeskInput.html":{},"classes/UpdateIntegrationInput.html":{},"classes/UpdateNotificationInput.html":{},"classes/UpdateParticipationEventInput.html":{},"classes/UpdatePhaseInput.html":{},"classes/UpdateResourceInput.html":{},"classes/UpdateResourcesReplyInput.html":{},"classes/UpdateRolInput.html":{},"classes/UpdateTypesEventInput.html":{}}}],["scope",{"_index":2893,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["sdk/client",{"_index":85,"title":{},"body":{"classes/AWSSESProvider.html":{},"injectables/AwsService.html":{},"dependencies.html":{}}}],["sdk/s3",{"_index":1236,"title":{},"body":{"injectables/AwsService.html":{},"dependencies.html":{}}}],["se",{"_index":677,"title":{},"body":{"classes/Announcement.html":{},"injectables/UsersService.html":{}}}],["search",{"_index":450,"title":{},"body":{"injectables/ActivitiesConfigService.html":{},"injectables/AnnouncementsService.html":{},"injectables/BusinessService.html":{},"injectables/ConfigurationAppService.html":{},"classes/FindUsersArgs.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["searchbatchinput",{"_index":3518,"title":{"classes/SearchBatchInput.html":{}},"body":{"classes/SearchBatchInput.html":{}}}],["searchvalue",{"_index":3521,"title":{},"body":{"classes/SearchBatchInput.html":{}}}],["sección",{"_index":4815,"title":{},"body":{"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["seconditem",{"_index":3680,"title":{},"body":{"injectables/StagesService.html":{}}}],["seconditem.index",{"_index":3682,"title":{},"body":{"injectables/StagesService.html":{}}}],["secretaccesskey",{"_index":105,"title":{},"body":{"classes/AWSSESProvider.html":{},"injectables/AwsService.html":{}}}],["sede",{"_index":4869,"title":{},"body":{"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["sedes",{"_index":4866,"title":{},"body":{"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["seen",{"_index":1797,"title":{},"body":{"injectables/ContentService.html":{}}}],["selectapplicantsargs",{"_index":3524,"title":{"classes/SelectApplicantsArgs.html":{}},"body":{"classes/SelectApplicantsArgs.html":{}}}],["selected",{"_index":966,"title":{},"body":{"classes/Applicant.html":{},"classes/ApplicantState.html":{},"classes/Attachment.html":{},"interfaces/IAttachment.html":{},"miscellaneous/enumerations.html":{}}}],["send",{"_index":24,"title":{},"body":{"classes/AWSSESProvider.html":{},"controllers/EmailsController.html":{},"interfaces/EmailsRepository.html":{},"injectables/EmailsService.html":{},"classes/SendGridProvider.html":{},"injectables/UsersService.html":{}}}],["send(mail",{"_index":43,"title":{},"body":{"classes/AWSSESProvider.html":{},"injectables/EmailsService.html":{},"classes/SendGridProvider.html":{}}}],["sendbulktemplatedemailcommand",{"_index":84,"title":{},"body":{"classes/AWSSESProvider.html":{}}}],["sended",{"_index":2515,"title":{},"body":{"injectables/FormSubscriptionService.html":{}}}],["sendemail",{"_index":2234,"title":{},"body":{"controllers/EmailsController.html":{}}}],["sendemail(@body",{"_index":2248,"title":{},"body":{"controllers/EmailsController.html":{}}}],["sendemail(createemaildto",{"_index":2236,"title":{},"body":{"controllers/EmailsController.html":{}}}],["sendemailcommand",{"_index":83,"title":{},"body":{"classes/AWSSESProvider.html":{}}}],["sendemailinput",{"_index":44,"title":{"classes/SendEmailInput.html":{}},"body":{"classes/AWSSESProvider.html":{},"controllers/EmailsController.html":{},"interfaces/EmailsRepository.html":{},"injectables/EmailsService.html":{},"classes/SendEmailInput.html":{},"classes/SendGridProvider.html":{}}}],["sendemailtemplate",{"_index":2235,"title":{},"body":{"controllers/EmailsController.html":{}}}],["sendemailtemplate(@body",{"_index":2250,"title":{},"body":{"controllers/EmailsController.html":{}}}],["sendemailtemplate(createemaildto",{"_index":2241,"title":{},"body":{"controllers/EmailsController.html":{}}}],["sendfromtemplate",{"_index":25,"title":{},"body":{"classes/AWSSESProvider.html":{},"interfaces/EmailsRepository.html":{},"injectables/EmailsService.html":{},"classes/SendGridProvider.html":{}}}],["sendfromtemplate(templateinput",{"_index":54,"title":{},"body":{"classes/AWSSESProvider.html":{},"injectables/EmailsService.html":{},"classes/SendGridProvider.html":{}}}],["sendgrid",{"_index":69,"title":{},"body":{"classes/AWSSESProvider.html":{},"injectables/EmailsService.html":{},"classes/SendGridProvider.html":{}}}],["sendgrid.maildatarequired",{"_index":3561,"title":{},"body":{"classes/SendGridProvider.html":{}}}],["sendgrid.send",{"_index":166,"title":{},"body":{"classes/AWSSESProvider.html":{},"injectables/EmailsService.html":{},"classes/SendGridProvider.html":{}}}],["sendgrid.send(mail",{"_index":2286,"title":{},"body":{"injectables/EmailsService.html":{},"classes/SendGridProvider.html":{}}}],["sendgrid.send(tosend",{"_index":3578,"title":{},"body":{"classes/SendGridProvider.html":{}}}],["sendgrid.setapikey(this.apikey",{"_index":2280,"title":{},"body":{"injectables/EmailsService.html":{},"classes/SendGridProvider.html":{}}}],["sendgrid/client",{"_index":72,"title":{},"body":{"classes/AWSSESProvider.html":{},"injectables/EmailsService.html":{},"classes/SendGridProvider.html":{}}}],["sendgrid/mail",{"_index":70,"title":{},"body":{"classes/AWSSESProvider.html":{},"injectables/EmailsService.html":{},"classes/SendGridProvider.html":{},"dependencies.html":{}}}],["sendgridclient",{"_index":71,"title":{},"body":{"classes/AWSSESProvider.html":{},"injectables/EmailsService.html":{},"classes/SendGridProvider.html":{}}}],["sendgridclient.setapikey(this.apikey",{"_index":2281,"title":{},"body":{"injectables/EmailsService.html":{},"classes/SendGridProvider.html":{}}}],["sendgriddefaultverifiedemail",{"_index":2285,"title":{},"body":{"injectables/EmailsService.html":{}}}],["sendgridinvitationtemplateid",{"_index":2283,"title":{},"body":{"injectables/EmailsService.html":{}}}],["sendgridnotificationtemplateid",{"_index":2284,"title":{},"body":{"injectables/EmailsService.html":{}}}],["sendgridprovider",{"_index":2258,"title":{"classes/SendGridProvider.html":{}},"body":{"modules/EmailsModule.html":{},"classes/SendGridProvider.html":{}}}],["sendics",{"_index":26,"title":{},"body":{"classes/AWSSESProvider.html":{},"interfaces/EmailsRepository.html":{},"injectables/EmailsService.html":{},"classes/SendGridProvider.html":{}}}],["sendics(mail",{"_index":58,"title":{},"body":{"classes/AWSSESProvider.html":{},"injectables/EmailsService.html":{},"classes/SendGridProvider.html":{}}}],["separate",{"_index":5004,"title":{},"body":{"miscellaneous/variables.html":{}}}],["serialized",{"_index":1983,"title":{},"body":{"classes/CreateFormInput.html":{}}}],["server",{"_index":4585,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["service",{"_index":115,"title":{},"body":{"classes/AWSSESProvider.html":{},"injectables/AwsService.html":{},"classes/ContactServicesInput.html":{},"injectables/DownloadsService.html":{},"injectables/EmailsService.html":{},"injectables/FormSubscriptionService.html":{},"modules/FormsModule.html":{},"classes/SendGridProvider.html":{},"injectables/SitesService.html":{},"controllers/StorageController.html":{},"modules/StorageModule.html":{},"classes/StorageService.html":{},"classes/UpdateSiteInput.html":{}}}],["service.ts",{"_index":3736,"title":{},"body":{"classes/StorageService.html":{}}}],["service.ts:10",{"_index":3740,"title":{},"body":{"classes/StorageService.html":{}}}],["service.ts:14",{"_index":3741,"title":{},"body":{"classes/StorageService.html":{}}}],["service.ts:6",{"_index":3739,"title":{},"body":{"classes/StorageService.html":{}}}],["serviceaccount",{"_index":1162,"title":{},"body":{"injectables/AuthService.html":{}}}],["services",{"_index":1641,"title":{},"body":{"classes/ConfigurationApp.html":{},"classes/ContactServiceLink.html":{},"classes/ContactServicesInput.html":{},"classes/Site.html":{},"injectables/SitesService.html":{},"classes/UpdateConfigurationAppInput.html":{},"classes/UpdateSiteInput.html":{}}}],["servicessiteinput",{"_index":1739,"title":{},"body":{"classes/ContactServicesInput.html":{},"classes/UpdateSiteInput.html":{}}}],["servicessitelink",{"_index":1723,"title":{},"body":{"classes/ContactServiceLink.html":{},"classes/Site.html":{}}}],["servicios",{"_index":4867,"title":{},"body":{"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["ses",{"_index":86,"title":{},"body":{"classes/AWSSESProvider.html":{},"dependencies.html":{}}}],["sesclient",{"_index":34,"title":{},"body":{"classes/AWSSESProvider.html":{}}}],["session",{"_index":4376,"title":{},"body":{"injectables/UserLogService.html":{},"miscellaneous/variables.html":{}}}],["sessions",{"_index":4370,"title":{},"body":{"injectables/UserLogService.html":{}}}],["set",{"_index":91,"title":{},"body":{"classes/AWSSESProvider.html":{},"classes/Announcement.html":{},"classes/Applicant.html":{},"classes/ApplicantState.html":{},"classes/Attachment.html":{},"classes/Business.html":{},"classes/BusinessRelationship.html":{},"classes/ConfigEvaluation.html":{},"classes/Download.html":{},"injectables/EmailsService.html":{},"classes/Entrepreneur.html":{},"classes/EntrepreneurRelationship.html":{},"classes/EntrepreneurRelationship-1.html":{},"classes/Evaluation.html":{},"classes/Expert.html":{},"classes/Form.html":{},"classes/FormTag.html":{},"interfaces/IAttachment.html":{},"classes/PhaseExpertRelationship.html":{},"classes/PhaseRelationship.html":{},"classes/ResourcesReply.html":{},"classes/SendGridProvider.html":{},"injectables/StagesService.html":{},"classes/Startup.html":{},"classes/StartupLink.html":{},"classes/StartupRelationship.html":{},"classes/TableConfig.html":{},"classes/User.html":{},"injectables/UserConfigService.html":{},"classes/UserLog.html":{},"injectables/UserLogService.html":{}}}],["setactive",{"_index":4479,"title":{},"body":{"injectables/UsersService.html":{}}}],["setoninsert",{"_index":4399,"title":{},"body":{"injectables/UserLogService.html":{}}}],["settings",{"_index":2905,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["show_share_button",{"_index":2941,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["showhidden",{"_index":5039,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shown",{"_index":673,"title":{},"body":{"classes/Announcement.html":{},"classes/CreateFormInput.html":{}}}],["side",{"_index":4763,"title":{},"body":{"index.html":{}}}],["signupinput",{"_index":3579,"title":{"classes/SignUpInput.html":{}},"body":{"classes/SignUpInput.html":{}}}],["siguiente",{"_index":4540,"title":{},"body":{"injectables/UsersService.html":{}}}],["sin",{"_index":1845,"title":{},"body":{"injectables/ContentService.html":{},"miscellaneous/enumerations.html":{}}}],["site",{"_index":1718,"title":{"classes/Site.html":{}},"body":{"classes/ContactServiceLink.html":{},"classes/Site.html":{},"modules/SitesModule.html":{},"injectables/SitesService.html":{}}}],["site.input",{"_index":1736,"title":{},"body":{"classes/ContactServicesInput.html":{},"classes/CreateSiteInput.html":{},"injectables/SitesService.html":{},"classes/UpdateSiteInput.html":{}}}],["site.input.ts",{"_index":1729,"title":{},"body":{"classes/ContactServicesInput.html":{},"classes/CreateSiteInput.html":{},"classes/UpdateSiteInput.html":{}}}],["site.input.ts:101",{"_index":1734,"title":{},"body":{"classes/ContactServicesInput.html":{}}}],["site.input.ts:12",{"_index":2130,"title":{},"body":{"classes/CreateSiteInput.html":{},"classes/UpdateSiteInput.html":{}}}],["site.input.ts:16",{"_index":2132,"title":{},"body":{"classes/CreateSiteInput.html":{},"classes/UpdateSiteInput.html":{}}}],["site.input.ts:20",{"_index":2126,"title":{},"body":{"classes/CreateSiteInput.html":{},"classes/UpdateSiteInput.html":{}}}],["site.input.ts:24",{"_index":2127,"title":{},"body":{"classes/CreateSiteInput.html":{},"classes/UpdateSiteInput.html":{}}}],["site.input.ts:28",{"_index":2129,"title":{},"body":{"classes/CreateSiteInput.html":{},"classes/UpdateSiteInput.html":{}}}],["site.input.ts:32",{"_index":2128,"title":{},"body":{"classes/CreateSiteInput.html":{},"classes/UpdateSiteInput.html":{}}}],["site.input.ts:36",{"_index":2131,"title":{},"body":{"classes/CreateSiteInput.html":{},"classes/UpdateSiteInput.html":{}}}],["site.input.ts:40",{"_index":2125,"title":{},"body":{"classes/CreateSiteInput.html":{},"classes/UpdateSiteInput.html":{}}}],["site.input.ts:44",{"_index":4212,"title":{},"body":{"classes/UpdateSiteInput.html":{}}}],["site.input.ts:56",{"_index":4213,"title":{},"body":{"classes/UpdateSiteInput.html":{}}}],["site.input.ts:89",{"_index":1733,"title":{},"body":{"classes/ContactServicesInput.html":{}}}],["site.input.ts:93",{"_index":1732,"title":{},"body":{"classes/ContactServicesInput.html":{}}}],["site.input.ts:97",{"_index":1731,"title":{},"body":{"classes/ContactServicesInput.html":{}}}],["site.name",{"_index":3608,"title":{},"body":{"modules/SitesModule.html":{}}}],["sitemodel",{"_index":3612,"title":{},"body":{"injectables/SitesService.html":{}}}],["sites",{"_index":1717,"title":{},"body":{"classes/ContactServiceLink.html":{},"classes/Site.html":{},"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["sites.resolver",{"_index":3606,"title":{},"body":{"modules/SitesModule.html":{}}}],["sites.service",{"_index":3604,"title":{},"body":{"modules/SitesModule.html":{}}}],["sites/sites.module",{"_index":881,"title":{},"body":{"modules/AppModule.html":{}}}],["sites_and_services_create",{"_index":4692,"title":{},"body":{"miscellaneous/enumerations.html":{},"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["sites_and_services_edit",{"_index":4693,"title":{},"body":{"miscellaneous/enumerations.html":{},"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["sites_and_services_view",{"_index":4691,"title":{},"body":{"miscellaneous/enumerations.html":{},"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["siteschema",{"_index":1725,"title":{},"body":{"classes/ContactServiceLink.html":{},"classes/Site.html":{},"modules/SitesModule.html":{}}}],["sitesmodule",{"_index":831,"title":{"modules/SitesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SitesModule.html":{},"modules.html":{},"overview.html":{}}}],["sitesresolver",{"_index":3605,"title":{},"body":{"modules/SitesModule.html":{}}}],["sitesservice",{"_index":3602,"title":{"injectables/SitesService.html":{}},"body":{"modules/SitesModule.html":{},"injectables/SitesService.html":{},"overview.html":{}}}],["skip",{"_index":2424,"title":{},"body":{"classes/FindInvitationArgs.html":{},"injectables/InvitationsService.html":{},"miscellaneous/variables.html":{}}}],["small",{"_index":711,"title":{},"body":{"classes/Announcement.html":{},"classes/ContactServiceLink.html":{},"classes/Phase.html":{},"classes/Site.html":{}}}],["socket.io",{"_index":4578,"title":{},"body":{"dependencies.html":{}}}],["soft",{"_index":308,"title":{},"body":{"injectables/ActaService.html":{},"injectables/ActivitiesConfigService.html":{},"injectables/AnnouncementsService.html":{},"injectables/BusinessService.html":{},"injectables/ConfigEvaluationsService.html":{},"injectables/ContentService.html":{},"injectables/FormTagService.html":{},"injectables/FormsService.html":{},"injectables/HelpDeskService.html":{},"injectables/NotificationsService.html":{},"injectables/ResourcesService.html":{},"injectables/SitesService.html":{},"injectables/StagesService.html":{},"injectables/TableConfigService.html":{},"injectables/TicketCategoriesService.html":{},"injectables/TypesEventsService.html":{}}}],["solo",{"_index":4552,"title":{},"body":{"injectables/UsersService.html":{}}}],["solution",{"_index":204,"title":{},"body":{"classes/Acta.html":{},"classes/CreateActaInput.html":{},"classes/UpdateActaInput.html":{}}}],["someone",{"_index":954,"title":{},"body":{"classes/Applicant.html":{},"classes/ApplicantState.html":{},"classes/Attachment.html":{},"interfaces/IAttachment.html":{}}}],["sort",{"_index":4973,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sorting",{"_index":5021,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sorts",{"_index":5026,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sortschema",{"_index":943,"title":{},"body":{"modules/AppModule.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AWSSESProvider.html":{},"classes/AcceptInvitationDto.html":{},"classes/Acta.html":{},"modules/ActaModule.html":{},"injectables/ActaService.html":{},"classes/ActivitiesConfig.html":{},"modules/ActivitiesConfigModule.html":{},"injectables/ActivitiesConfigService.html":{},"classes/AddTableJoinInput.html":{},"classes/Announcement.html":{},"classes/AnnouncementApplicantArgs.html":{},"classes/AnnouncementApplicantsArgs.html":{},"modules/AnnouncementsModule.html":{},"injectables/AnnouncementsService.html":{},"modules/AppModule.html":{},"classes/Applicant.html":{},"classes/ApplicantArgs.html":{},"modules/ApplicantModule.html":{},"classes/ApplicantState.html":{},"classes/Assign.html":{},"classes/Attachment.html":{},"classes/AttachmentSubmit.html":{},"classes/AuthCode.html":{},"modules/AuthCodeModule.html":{},"injectables/AuthCodeService.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/AwsService.html":{},"classes/Business.html":{},"modules/BusinessModule.html":{},"classes/BusinessRelationship.html":{},"injectables/BusinessService.html":{},"classes/CloseFormSubscriptionArgs.html":{},"classes/ColumnGroup.html":{},"classes/ConfigEvaluation.html":{},"modules/ConfigEvaluationsModule.html":{},"injectables/ConfigEvaluationsService.html":{},"modules/ConfigNotificationsModule.html":{},"injectables/ConfigNotificationsService.html":{},"classes/ConfigurationApp.html":{},"modules/ConfigurationAppModule.html":{},"injectables/ConfigurationAppService.html":{},"classes/ContactArgs.html":{},"classes/ContactServiceLink.html":{},"classes/ContactServicesInput.html":{},"classes/Content.html":{},"modules/ContentModule.html":{},"injectables/ContentService.html":{},"classes/CreateActaInput.html":{},"classes/CreateActivitiesConfigInput.html":{},"classes/CreateAnnouncementInput.html":{},"classes/CreateConfigEvaluationInput.html":{},"classes/CreateConfigNotificationInput.html":{},"classes/CreateContentInput.html":{},"classes/CreateEventInput.html":{},"classes/CreateFormInput.html":{},"classes/CreateFormSubscriptionInput.html":{},"classes/CreateFormTagInput.html":{},"classes/CreateHelpDeskInput.html":{},"classes/CreateIntegrationInput.html":{},"classes/CreateInvitationArgs.html":{},"classes/CreateNotificationInput.html":{},"classes/CreateParticipationEventInput.html":{},"classes/CreatePhaseInput.html":{},"classes/CreateResourceInput.html":{},"classes/CreateResourcesReplyInput.html":{},"classes/CreateRolInput.html":{},"classes/CreateSiteInput.html":{},"classes/CreateStageInput.html":{},"classes/CreateTableConfigInput.html":{},"classes/CreateTableInput.html":{},"classes/CreateTypesEventInput.html":{},"classes/CreateUserInput.html":{},"classes/CreateUserLogInput.html":{},"classes/Download.html":{},"modules/DownloadsModule.html":{},"injectables/DownloadsService.html":{},"controllers/EmailsController.html":{},"modules/EmailsModule.html":{},"interfaces/EmailsRepository.html":{},"injectables/EmailsService.html":{},"classes/Entrepreneur.html":{},"modules/EntrepreneurModule.html":{},"classes/EntrepreneurRelationship.html":{},"classes/EntrepreneurRelationship-1.html":{},"classes/EntrepreneurStartupArgs.html":{},"classes/Evaluation.html":{},"modules/EvaluationsModule.html":{},"classes/Event.html":{},"modules/EventsModule.html":{},"classes/Expert.html":{},"classes/ExpertEventLink.html":{},"modules/ExpertModule.html":{},"classes/FindFormsArgs.html":{},"classes/FindInvitationArgs.html":{},"classes/FindUsersArgs.html":{},"classes/Form.html":{},"classes/FormSubmission.html":{},"classes/FormSubmissionFiles.html":{},"classes/FormSubscription.html":{},"injectables/FormSubscriptionService.html":{},"classes/FormTag.html":{},"injectables/FormTagService.html":{},"modules/FormsModule.html":{},"injectables/FormsService.html":{},"classes/GetSubmittedFilesArgs.html":{},"guards/GqlAuthGuard.html":{},"classes/HelpDeskFilterInput.html":{},"modules/HelpDeskModule.html":{},"injectables/HelpDeskService.html":{},"classes/HelpDeskTicket.html":{},"classes/Hours.html":{},"interfaces/IAttachment.html":{},"classes/Integration.html":{},"modules/IntegrationsModule.html":{},"injectables/IntegrationsService.html":{},"classes/Invitation.html":{},"controllers/InvitationsController.html":{},"modules/InvitationsModule.html":{},"injectables/InvitationsService.html":{},"classes/LastContentOutput.html":{},"classes/LinkExpertsToPhaseArgs.html":{},"classes/LinkStartupToPhaseArgs.html":{},"classes/LinkStartupsExpertsArgs.html":{},"classes/LinkWithTargetsArgs.html":{},"classes/LinkWithTargetsByRequestArgs.html":{},"modules/LoggerModule.html":{},"classes/Notification.html":{},"classes/Notification-1.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"classes/OthersInput.html":{},"classes/ParticipantEventLink.html":{},"classes/ParticipationEvent.html":{},"modules/ParticipationEventsModule.html":{},"injectables/ParticipationEventsService.html":{},"classes/Phase.html":{},"classes/PhaseExpertRelationship.html":{},"classes/PhaseRelationship.html":{},"modules/PhasesModule.html":{},"classes/Rating.html":{},"classes/RemoveTableJoinInput.html":{},"classes/Resource.html":{},"modules/ResourcesModule.html":{},"modules/ResourcesRepliesModule.html":{},"classes/ResourcesReply.html":{},"injectables/ResourcesService.html":{},"classes/Rol.html":{},"modules/RolModule.html":{},"injectables/RolService.html":{},"classes/SearchBatchInput.html":{},"classes/SelectApplicantsArgs.html":{},"classes/SendEmailInput.html":{},"classes/SendGridProvider.html":{},"classes/SignUpInput.html":{},"classes/Site.html":{},"modules/SitesModule.html":{},"injectables/SitesService.html":{},"classes/Stage.html":{},"modules/StagesModule.html":{},"injectables/StagesService.html":{},"classes/Startup.html":{},"classes/StartupLink.html":{},"modules/StartupModule.html":{},"classes/StartupRelationship.html":{},"controllers/StorageController.html":{},"modules/StorageModule.html":{},"classes/StorageService.html":{},"classes/SubmitAnnouncementDocInput.html":{},"classes/SubmitFileInput.html":{},"classes/SubmitFormSubscriptionArgs.html":{},"classes/Table.html":{},"classes/TableConfig.html":{},"injectables/TableConfigService.html":{},"classes/TableJoin.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"classes/TeamCoachLink.html":{},"classes/TemplateInput.html":{},"classes/TermsOfUse.html":{},"modules/TermsOfUseModule.html":{},"injectables/TermsOfUseService.html":{},"modules/TicketCategoriesModule.html":{},"injectables/TicketCategoriesService.html":{},"classes/TicketCategory.html":{},"classes/TicketChild.html":{},"classes/TypesEvent.html":{},"modules/TypesEventsModule.html":{},"injectables/TypesEventsService.html":{},"classes/TypesNotification.html":{},"modules/TypesNotificationsModule.html":{},"injectables/TypesNotificationsService.html":{},"classes/UpdateActaInput.html":{},"classes/UpdateActivitiesConfigInput.html":{},"classes/UpdateAnnouncementInput.html":{},"classes/UpdateApplicantInput.html":{},"classes/UpdateApplicantStateInput.html":{},"classes/UpdateConfigEvaluationInput.html":{},"classes/UpdateConfigurationAppInput.html":{},"classes/UpdateContentInput.html":{},"classes/UpdateEventInput.html":{},"classes/UpdateExpertInput.html":{},"classes/UpdateFormInput.html":{},"classes/UpdateFormTagInput.html":{},"classes/UpdateHelpDeskInput.html":{},"classes/UpdateIntegrationInput.html":{},"classes/UpdateNotificationInput.html":{},"classes/UpdateParticipationEventInput.html":{},"classes/UpdatePhaseInput.html":{},"classes/UpdateResourceInput.html":{},"classes/UpdateResourcesReplyInput.html":{},"classes/UpdateRolInput.html":{},"classes/UpdateSiteInput.html":{},"classes/UpdateStageInput.html":{},"classes/UpdateTableConfigInput.html":{},"classes/UpdateTermsOfUseInput.html":{},"classes/UpdateTypesEventInput.html":{},"classes/UpdateUserConfigInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"classes/UserConfig.html":{},"modules/UserConfigModule.html":{},"injectables/UserConfigService.html":{},"classes/UserLog.html":{},"modules/UserLogModule.html":{},"injectables/UserLogService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/activities.html":{},"index.html":{},"interfaces/item_permission.html":{}}}],["spanish",{"_index":5125,"title":{},"body":{"miscellaneous/variables.html":{}}}],["specializedconsulting",{"_index":4734,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["specific",{"_index":1616,"title":{},"body":{"injectables/ConfigNotificationsService.html":{},"injectables/TermsOfUseService.html":{}}}],["specified",{"_index":2507,"title":{},"body":{"injectables/FormSubscriptionService.html":{},"injectables/TableConfigService.html":{},"injectables/TableService.html":{}}}],["specify",{"_index":118,"title":{},"body":{"classes/AWSSESProvider.html":{},"injectables/EmailsService.html":{},"classes/SendGridProvider.html":{}}}],["sponsors",{"_index":4790,"title":{},"body":{"index.html":{}}}],["sprint",{"_index":1793,"title":{},"body":{"injectables/ContentService.html":{},"classes/CreateResourcesReplyInput.html":{},"classes/ResourcesReply.html":{}}}],["sprint._id.tostring",{"_index":1852,"title":{},"body":{"injectables/ContentService.html":{}}}],["sprint.childs",{"_index":1847,"title":{},"body":{"injectables/ContentService.html":{}}}],["sprint.resources.filter",{"_index":1892,"title":{},"body":{"injectables/ContentService.html":{}}}],["sprints",{"_index":1742,"title":{},"body":{"classes/Content.html":{},"injectables/ContentService.html":{}}}],["sprintsfiltered",{"_index":1881,"title":{},"body":{"injectables/ContentService.html":{}}}],["sprintsfiltered.push",{"_index":1893,"title":{},"body":{"injectables/ContentService.html":{}}}],["src/.../announcement",{"_index":4614,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../application",{"_index":4617,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../bearer",{"_index":4948,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../current",{"_index":4953,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../dates.utilities.ts",{"_index":4746,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../email",{"_index":4619,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/.../excel.utilities.ts",{"_index":4960,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../form",{"_index":4621,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../ics.ts",{"_index":4745,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../invitation",{"_index":4623,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../main.ts",{"_index":4744,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../notification",{"_index":4624,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../permissions.enum.ts",{"_index":4626,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../request.utilities.ts",{"_index":4951,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../resorce",{"_index":4627,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../resources",{"_index":4629,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../rol.ts",{"_index":4959,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../table",{"_index":4632,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../ticket",{"_index":4634,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../type",{"_index":4957,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../types",{"_index":4955,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../types.enum.ts",{"_index":4637,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../valid",{"_index":4638,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/activities",{"_index":332,"title":{},"body":{"classes/ActivitiesConfig.html":{},"modules/ActivitiesConfigModule.html":{},"injectables/ActivitiesConfigService.html":{},"classes/Assign.html":{},"classes/CreateActivitiesConfigInput.html":{},"classes/Hours.html":{},"modules/PhasesModule.html":{},"classes/UpdateActivitiesConfigInput.html":{},"classes/activities.html":{}}}],["src/announcements/announcements.module.ts",{"_index":758,"title":{},"body":{"modules/AnnouncementsModule.html":{}}}],["src/announcements/announcements.service.ts",{"_index":766,"title":{},"body":{"injectables/AnnouncementsService.html":{}}}],["src/announcements/announcements.service.ts:10",{"_index":770,"title":{},"body":{"injectables/AnnouncementsService.html":{}}}],["src/announcements/announcements.service.ts:106",{"_index":785,"title":{},"body":{"injectables/AnnouncementsService.html":{}}}],["src/announcements/announcements.service.ts:119",{"_index":783,"title":{},"body":{"injectables/AnnouncementsService.html":{}}}],["src/announcements/announcements.service.ts:20",{"_index":778,"title":{},"body":{"injectables/AnnouncementsService.html":{}}}],["src/announcements/announcements.service.ts:31",{"_index":779,"title":{},"body":{"injectables/AnnouncementsService.html":{}}}],["src/announcements/announcements.service.ts:42",{"_index":777,"title":{},"body":{"injectables/AnnouncementsService.html":{}}}],["src/announcements/announcements.service.ts:57",{"_index":774,"title":{},"body":{"injectables/AnnouncementsService.html":{}}}],["src/announcements/announcements.service.ts:72",{"_index":788,"title":{},"body":{"injectables/AnnouncementsService.html":{}}}],["src/announcements/announcements.service.ts:93",{"_index":781,"title":{},"body":{"injectables/AnnouncementsService.html":{}}}],["src/announcements/dto/create",{"_index":1913,"title":{},"body":{"classes/CreateAnnouncementInput.html":{}}}],["src/announcements/dto/submit",{"_index":3744,"title":{},"body":{"classes/SubmitAnnouncementDocInput.html":{}}}],["src/announcements/dto/update",{"_index":4102,"title":{},"body":{"classes/UpdateAnnouncementInput.html":{}}}],["src/announcements/entities/announcement.entity.ts",{"_index":638,"title":{},"body":{"classes/Announcement.html":{}}}],["src/announcements/entities/announcement.entity.ts:100",{"_index":659,"title":{},"body":{"classes/Announcement.html":{}}}],["src/announcements/entities/announcement.entity.ts:107",{"_index":721,"title":{},"body":{"classes/Announcement.html":{}}}],["src/announcements/entities/announcement.entity.ts:114",{"_index":663,"title":{},"body":{"classes/Announcement.html":{}}}],["src/announcements/entities/announcement.entity.ts:117",{"_index":655,"title":{},"body":{"classes/Announcement.html":{}}}],["src/announcements/entities/announcement.entity.ts:120",{"_index":720,"title":{},"body":{"classes/Announcement.html":{}}}],["src/announcements/entities/announcement.entity.ts:127",{"_index":662,"title":{},"body":{"classes/Announcement.html":{}}}],["src/announcements/entities/announcement.entity.ts:14",{"_index":653,"title":{},"body":{"classes/Announcement.html":{}}}],["src/announcements/entities/announcement.entity.ts:18",{"_index":696,"title":{},"body":{"classes/Announcement.html":{}}}],["src/announcements/entities/announcement.entity.ts:25",{"_index":700,"title":{},"body":{"classes/Announcement.html":{}}}],["src/announcements/entities/announcement.entity.ts:29",{"_index":665,"title":{},"body":{"classes/Announcement.html":{}}}],["src/announcements/entities/announcement.entity.ts:36",{"_index":715,"title":{},"body":{"classes/Announcement.html":{}}}],["src/announcements/entities/announcement.entity.ts:40",{"_index":694,"title":{},"body":{"classes/Announcement.html":{}}}],["src/announcements/entities/announcement.entity.ts:47",{"_index":691,"title":{},"body":{"classes/Announcement.html":{}}}],["src/announcements/entities/announcement.entity.ts:53",{"_index":668,"title":{},"body":{"classes/Announcement.html":{}}}],["src/announcements/entities/announcement.entity.ts:59",{"_index":703,"title":{},"body":{"classes/Announcement.html":{}}}],["src/announcements/entities/announcement.entity.ts:68",{"_index":688,"title":{},"body":{"classes/Announcement.html":{}}}],["src/announcements/entities/announcement.entity.ts:72",{"_index":718,"title":{},"body":{"classes/Announcement.html":{}}}],["src/announcements/entities/announcement.entity.ts:82",{"_index":710,"title":{},"body":{"classes/Announcement.html":{}}}],["src/announcements/entities/announcement.entity.ts:88",{"_index":706,"title":{},"body":{"classes/Announcement.html":{}}}],["src/announcements/entities/announcement.entity.ts:94",{"_index":672,"title":{},"body":{"classes/Announcement.html":{}}}],["src/announcements/enums/announcement",{"_index":3536,"title":{},"body":{"classes/SelectApplicantsArgs.html":{},"miscellaneous/enumerations.html":{}}}],["src/app.module.ts",{"_index":839,"title":{},"body":{"modules/AppModule.html":{}}}],["src/applicant/applicant.module",{"_index":764,"title":{},"body":{"modules/AnnouncementsModule.html":{}}}],["src/applicant/applicant.module.ts",{"_index":1013,"title":{},"body":{"modules/ApplicantModule.html":{}}}],["src/applicant/args/announcement",{"_index":733,"title":{},"body":{"classes/AnnouncementApplicantArgs.html":{},"classes/AnnouncementApplicantsArgs.html":{}}}],["src/applicant/args/applicant.args.ts",{"_index":1005,"title":{},"body":{"classes/ApplicantArgs.html":{}}}],["src/applicant/args/applicant.args.ts:11",{"_index":1006,"title":{},"body":{"classes/ApplicantArgs.html":{}}}],["src/applicant/args/applicant.args.ts:15",{"_index":1007,"title":{},"body":{"classes/ApplicantArgs.html":{}}}],["src/applicant/args/select",{"_index":3525,"title":{},"body":{"classes/SelectApplicantsArgs.html":{}}}],["src/applicant/dto/update",{"_index":1032,"title":{},"body":{"classes/AttachmentSubmit.html":{},"classes/UpdateApplicantInput.html":{},"classes/UpdateApplicantStateInput.html":{}}}],["src/applicant/entities/applicant.entity.ts",{"_index":953,"title":{},"body":{"classes/Applicant.html":{},"classes/ApplicantState.html":{},"classes/Attachment.html":{},"interfaces/IAttachment.html":{}}}],["src/applicant/entities/applicant.entity.ts:100",{"_index":969,"title":{},"body":{"classes/Applicant.html":{}}}],["src/applicant/entities/applicant.entity.ts:113",{"_index":1029,"title":{},"body":{"classes/Attachment.html":{}}}],["src/applicant/entities/applicant.entity.ts:117",{"_index":1030,"title":{},"body":{"classes/Attachment.html":{}}}],["src/applicant/entities/applicant.entity.ts:121",{"_index":1028,"title":{},"body":{"classes/Attachment.html":{}}}],["src/applicant/entities/applicant.entity.ts:15",{"_index":1022,"title":{},"body":{"classes/ApplicantState.html":{}}}],["src/applicant/entities/applicant.entity.ts:19",{"_index":1021,"title":{},"body":{"classes/ApplicantState.html":{}}}],["src/applicant/entities/applicant.entity.ts:23",{"_index":1023,"title":{},"body":{"classes/ApplicantState.html":{}}}],["src/applicant/entities/applicant.entity.ts:32",{"_index":962,"title":{},"body":{"classes/Applicant.html":{}}}],["src/applicant/entities/applicant.entity.ts:38",{"_index":979,"title":{},"body":{"classes/Applicant.html":{}}}],["src/applicant/entities/applicant.entity.ts:41",{"_index":975,"title":{},"body":{"classes/Applicant.html":{}}}],["src/applicant/entities/applicant.entity.ts:48",{"_index":974,"title":{},"body":{"classes/Applicant.html":{}}}],["src/applicant/entities/applicant.entity.ts:54",{"_index":965,"title":{},"body":{"classes/Applicant.html":{}}}],["src/applicant/entities/applicant.entity.ts:61",{"_index":983,"title":{},"body":{"classes/Applicant.html":{}}}],["src/applicant/entities/applicant.entity.ts:64",{"_index":985,"title":{},"body":{"classes/Applicant.html":{}}}],["src/applicant/entities/applicant.entity.ts:73",{"_index":986,"title":{},"body":{"classes/Applicant.html":{}}}],["src/applicant/entities/applicant.entity.ts:80",{"_index":971,"title":{},"body":{"classes/Applicant.html":{}}}],["src/applicant/entities/applicant.entity.ts:87",{"_index":989,"title":{},"body":{"classes/Applicant.html":{}}}],["src/applicant/entities/applicant.entity.ts:90",{"_index":970,"title":{},"body":{"classes/Applicant.html":{}}}],["src/applicant/entities/applicant.entity.ts:93",{"_index":987,"title":{},"body":{"classes/Applicant.html":{}}}],["src/applicant/enums/application",{"_index":4642,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/auth",{"_index":1041,"title":{},"body":{"classes/AuthCode.html":{},"modules/AuthCodeModule.html":{},"injectables/AuthCodeService.html":{}}}],["src/auth/auth.module",{"_index":274,"title":{},"body":{"modules/ActaModule.html":{},"modules/ActivitiesConfigModule.html":{},"modules/AnnouncementsModule.html":{},"modules/ApplicantModule.html":{},"modules/AuthCodeModule.html":{},"modules/BusinessModule.html":{},"modules/ConfigEvaluationsModule.html":{},"modules/ConfigurationAppModule.html":{},"modules/ContentModule.html":{},"modules/DownloadsModule.html":{},"modules/EntrepreneurModule.html":{},"modules/EvaluationsModule.html":{},"modules/EventsModule.html":{},"modules/ExpertModule.html":{},"modules/FormsModule.html":{},"modules/HelpDeskModule.html":{},"modules/IntegrationsModule.html":{},"modules/InvitationsModule.html":{},"modules/ParticipationEventsModule.html":{},"modules/PhasesModule.html":{},"modules/ResourcesModule.html":{},"modules/ResourcesRepliesModule.html":{},"modules/RolModule.html":{},"modules/SitesModule.html":{},"modules/StagesModule.html":{},"modules/StartupModule.html":{},"modules/TableModule.html":{},"modules/TermsOfUseModule.html":{},"modules/TypesEventsModule.html":{},"modules/UserConfigModule.html":{},"modules/UserLogModule.html":{},"modules/UsersModule.html":{}}}],["src/auth/auth.module.ts",{"_index":1126,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service",{"_index":3058,"title":{},"body":{"injectables/InvitationsService.html":{}}}],["src/auth/auth.service.ts",{"_index":1129,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:103",{"_index":1151,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:11",{"_index":1160,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:12",{"_index":1138,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:27",{"_index":1157,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:42",{"_index":1147,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:68",{"_index":1140,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:87",{"_index":1155,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:96",{"_index":1143,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/decorators/bearer",{"_index":4962,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/auth/decorators/current",{"_index":5044,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/auth/dto/sign",{"_index":3580,"title":{},"body":{"classes/SignUpInput.html":{}}}],["src/auth/enums/permissions.enum",{"_index":1079,"title":{},"body":{"injectables/AuthCodeService.html":{}}}],["src/auth/enums/permissions.enum.ts",{"_index":4663,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["src/auth/enums/valid",{"_index":475,"title":{},"body":{"injectables/ActivitiesConfigService.html":{},"injectables/ConfigEvaluationsService.html":{},"injectables/ConfigurationAppService.html":{},"injectables/ContentService.html":{},"classes/CreateInvitationArgs.html":{},"classes/CreateUserInput.html":{},"classes/FindInvitationArgs.html":{},"classes/FindUsersArgs.html":{},"injectables/HelpDeskService.html":{},"classes/Invitation.html":{},"injectables/InvitationsService.html":{},"classes/User.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/auth/guards/jwt",{"_index":1092,"title":{},"body":{"guards/AuthGuard.html":{},"guards/GqlAuthGuard.html":{}}}],["src/auth/types/auth",{"_index":790,"title":{},"body":{"injectables/AnnouncementsService.html":{},"injectables/AuthCodeService.html":{},"injectables/AuthService.html":{},"injectables/BusinessService.html":{},"injectables/ConfigEvaluationsService.html":{},"injectables/FormsService.html":{},"injectables/HelpDeskService.html":{},"injectables/InvitationsService.html":{},"injectables/TableConfigService.html":{},"injectables/UserLogService.html":{}}}],["src/business/business.module",{"_index":2306,"title":{},"body":{"modules/EntrepreneurModule.html":{}}}],["src/business/business.module.ts",{"_index":1296,"title":{},"body":{"modules/BusinessModule.html":{}}}],["src/business/business.service.ts",{"_index":1319,"title":{},"body":{"injectables/BusinessService.html":{}}}],["src/business/business.service.ts:117",{"_index":1355,"title":{},"body":{"injectables/BusinessService.html":{}}}],["src/business/business.service.ts:135",{"_index":1361,"title":{},"body":{"injectables/BusinessService.html":{}}}],["src/business/business.service.ts:145",{"_index":1339,"title":{},"body":{"injectables/BusinessService.html":{}}}],["src/business/business.service.ts:153",{"_index":1373,"title":{},"body":{"injectables/BusinessService.html":{}}}],["src/business/business.service.ts:161",{"_index":1365,"title":{},"body":{"injectables/BusinessService.html":{}}}],["src/business/business.service.ts:199",{"_index":1368,"title":{},"body":{"injectables/BusinessService.html":{}}}],["src/business/business.service.ts:215",{"_index":1372,"title":{},"body":{"injectables/BusinessService.html":{}}}],["src/business/business.service.ts:226",{"_index":1345,"title":{},"body":{"injectables/BusinessService.html":{}}}],["src/business/business.service.ts:240",{"_index":1349,"title":{},"body":{"injectables/BusinessService.html":{}}}],["src/business/business.service.ts:26",{"_index":1335,"title":{},"body":{"injectables/BusinessService.html":{}}}],["src/business/business.service.ts:38",{"_index":1363,"title":{},"body":{"injectables/BusinessService.html":{}}}],["src/business/business.service.ts:46",{"_index":1341,"title":{},"body":{"injectables/BusinessService.html":{}}}],["src/business/business.service.ts:68",{"_index":1375,"title":{},"body":{"injectables/BusinessService.html":{}}}],["src/business/business.service.ts:76",{"_index":1350,"title":{},"body":{"injectables/BusinessService.html":{}}}],["src/business/business.service.ts:84",{"_index":1352,"title":{},"body":{"injectables/BusinessService.html":{}}}],["src/business/business.service.ts:94",{"_index":1360,"title":{},"body":{"injectables/BusinessService.html":{}}}],["src/business/entities/business.entity.ts",{"_index":1274,"title":{},"body":{"classes/Business.html":{},"classes/EntrepreneurRelationship.html":{}}}],["src/business/entities/business.entity.ts:12",{"_index":1277,"title":{},"body":{"classes/Business.html":{}}}],["src/business/entities/business.entity.ts:18",{"_index":1284,"title":{},"body":{"classes/Business.html":{}}}],["src/business/entities/business.entity.ts:24",{"_index":1283,"title":{},"body":{"classes/Business.html":{}}}],["src/business/entities/business.entity.ts:31",{"_index":1279,"title":{},"body":{"classes/Business.html":{}}}],["src/business/entities/business.entity.ts:38",{"_index":1286,"title":{},"body":{"classes/Business.html":{}}}],["src/business/entities/business.entity.ts:41",{"_index":1278,"title":{},"body":{"classes/Business.html":{}}}],["src/business/entities/business.entity.ts:44",{"_index":1285,"title":{},"body":{"classes/Business.html":{}}}],["src/business/entities/business.entity.ts:58",{"_index":2308,"title":{},"body":{"classes/EntrepreneurRelationship.html":{}}}],["src/business/entities/business.entity.ts:62",{"_index":2309,"title":{},"body":{"classes/EntrepreneurRelationship.html":{}}}],["src/configuration",{"_index":1635,"title":{},"body":{"classes/ConfigurationApp.html":{},"modules/ConfigurationAppModule.html":{},"injectables/ConfigurationAppService.html":{},"classes/UpdateConfigurationAppInput.html":{}}}],["src/content/content.module",{"_index":3358,"title":{},"body":{"modules/PhasesModule.html":{},"modules/ResourcesModule.html":{},"modules/ResourcesRepliesModule.html":{}}}],["src/content/content.module.ts",{"_index":1773,"title":{},"body":{"modules/ContentModule.html":{}}}],["src/content/content.service",{"_index":3457,"title":{},"body":{"injectables/ResourcesService.html":{}}}],["src/content/content.service.ts",{"_index":1780,"title":{},"body":{"injectables/ContentService.html":{}}}],["src/content/content.service.ts:14",{"_index":1788,"title":{},"body":{"injectables/ContentService.html":{}}}],["src/content/content.service.ts:158",{"_index":1815,"title":{},"body":{"injectables/ContentService.html":{}}}],["src/content/content.service.ts:171",{"_index":1813,"title":{},"body":{"injectables/ContentService.html":{}}}],["src/content/content.service.ts:183",{"_index":1791,"title":{},"body":{"injectables/ContentService.html":{}}}],["src/content/content.service.ts:192",{"_index":1802,"title":{},"body":{"injectables/ContentService.html":{}}}],["src/content/content.service.ts:199",{"_index":1796,"title":{},"body":{"injectables/ContentService.html":{}}}],["src/content/content.service.ts:26",{"_index":1800,"title":{},"body":{"injectables/ContentService.html":{}}}],["src/content/content.service.ts:42",{"_index":1804,"title":{},"body":{"injectables/ContentService.html":{}}}],["src/content/content.service.ts:67",{"_index":1806,"title":{},"body":{"injectables/ContentService.html":{}}}],["src/content/content.service.ts:74",{"_index":1812,"title":{},"body":{"injectables/ContentService.html":{}}}],["src/content/content.service.ts:84",{"_index":1808,"title":{},"body":{"injectables/ContentService.html":{}}}],["src/content/dto/create",{"_index":1946,"title":{},"body":{"classes/CreateContentInput.html":{}}}],["src/content/dto/last",{"_index":3115,"title":{},"body":{"classes/LastContentOutput.html":{}}}],["src/content/dto/update",{"_index":4137,"title":{},"body":{"classes/UpdateContentInput.html":{}}}],["src/content/entities/content.entity",{"_index":3435,"title":{},"body":{"classes/ResourcesReply.html":{}}}],["src/content/entities/content.entity.ts",{"_index":1741,"title":{},"body":{"classes/Content.html":{}}}],["src/content/entities/content.entity.ts:13",{"_index":1746,"title":{},"body":{"classes/Content.html":{}}}],["src/content/entities/content.entity.ts:17",{"_index":1758,"title":{},"body":{"classes/Content.html":{}}}],["src/content/entities/content.entity.ts:21",{"_index":1749,"title":{},"body":{"classes/Content.html":{}}}],["src/content/entities/content.entity.ts:38",{"_index":1755,"title":{},"body":{"classes/Content.html":{}}}],["src/content/entities/content.entity.ts:42",{"_index":1750,"title":{},"body":{"classes/Content.html":{}}}],["src/content/entities/content.entity.ts:46",{"_index":1752,"title":{},"body":{"classes/Content.html":{}}}],["src/content/entities/content.entity.ts:50",{"_index":1753,"title":{},"body":{"classes/Content.html":{}}}],["src/content/entities/content.entity.ts:54",{"_index":1756,"title":{},"body":{"classes/Content.html":{}}}],["src/content/entities/content.entity.ts:58",{"_index":1751,"title":{},"body":{"classes/Content.html":{}}}],["src/content/entities/content.entity.ts:62",{"_index":1759,"title":{},"body":{"classes/Content.html":{}}}],["src/content/entities/content.entity.ts:66",{"_index":1754,"title":{},"body":{"classes/Content.html":{}}}],["src/downloads/downloads.module",{"_index":1301,"title":{},"body":{"modules/BusinessModule.html":{},"modules/EntrepreneurModule.html":{},"modules/ExpertModule.html":{},"modules/StartupModule.html":{}}}],["src/downloads/downloads.module.ts",{"_index":2194,"title":{},"body":{"modules/DownloadsModule.html":{}}}],["src/downloads/downloads.service",{"_index":1397,"title":{},"body":{"injectables/BusinessService.html":{}}}],["src/downloads/downloads.service.ts",{"_index":2201,"title":{},"body":{"injectables/DownloadsService.html":{}}}],["src/downloads/downloads.service.ts:11",{"_index":2204,"title":{},"body":{"injectables/DownloadsService.html":{}}}],["src/downloads/downloads.service.ts:20",{"_index":2208,"title":{},"body":{"injectables/DownloadsService.html":{}}}],["src/downloads/entities/download.ts",{"_index":2175,"title":{},"body":{"classes/Download.html":{}}}],["src/downloads/entities/download.ts:11",{"_index":2177,"title":{},"body":{"classes/Download.html":{}}}],["src/downloads/entities/download.ts:15",{"_index":2184,"title":{},"body":{"classes/Download.html":{}}}],["src/downloads/entities/download.ts:19",{"_index":2187,"title":{},"body":{"classes/Download.html":{}}}],["src/downloads/entities/download.ts:27",{"_index":2181,"title":{},"body":{"classes/Download.html":{}}}],["src/downloads/entities/download.ts:34",{"_index":2186,"title":{},"body":{"classes/Download.html":{}}}],["src/downloads/entities/download.ts:37",{"_index":2178,"title":{},"body":{"classes/Download.html":{}}}],["src/downloads/entities/download.ts:40",{"_index":2185,"title":{},"body":{"classes/Download.html":{}}}],["src/emails/dto/send",{"_index":3537,"title":{},"body":{"classes/SendEmailInput.html":{}}}],["src/emails/dto/template.input.ts",{"_index":3916,"title":{},"body":{"classes/TemplateInput.html":{}}}],["src/emails/dto/template.input.ts:14",{"_index":3921,"title":{},"body":{"classes/TemplateInput.html":{}}}],["src/emails/dto/template.input.ts:31",{"_index":3919,"title":{},"body":{"classes/TemplateInput.html":{}}}],["src/emails/emails.controller.ts",{"_index":2232,"title":{},"body":{"controllers/EmailsController.html":{}}}],["src/emails/emails.controller.ts:12",{"_index":2238,"title":{},"body":{"controllers/EmailsController.html":{}}}],["src/emails/emails.controller.ts:20",{"_index":2243,"title":{},"body":{"controllers/EmailsController.html":{}}}],["src/emails/emails.module",{"_index":2387,"title":{},"body":{"modules/EventsModule.html":{},"modules/IntegrationsModule.html":{},"modules/InvitationsModule.html":{},"modules/ResourcesRepliesModule.html":{},"modules/StartupModule.html":{},"modules/UsersModule.html":{}}}],["src/emails/emails.module.ts",{"_index":2256,"title":{},"body":{"modules/EmailsModule.html":{}}}],["src/emails/emails.service",{"_index":2863,"title":{},"body":{"injectables/IntegrationsService.html":{},"injectables/InvitationsService.html":{},"injectables/UsersService.html":{}}}],["src/emails/emails.service.ts",{"_index":2267,"title":{},"body":{"injectables/EmailsService.html":{}}}],["src/emails/emails.service.ts:19",{"_index":2269,"title":{},"body":{"injectables/EmailsService.html":{}}}],["src/emails/emails.service.ts:30",{"_index":2271,"title":{},"body":{"injectables/EmailsService.html":{}}}],["src/emails/emails.service.ts:37",{"_index":2272,"title":{},"body":{"injectables/EmailsService.html":{}}}],["src/emails/emails.service.ts:44",{"_index":2273,"title":{},"body":{"injectables/EmailsService.html":{}}}],["src/emails/enums/email",{"_index":4652,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/emails/provider/aws.service.ts",{"_index":6,"title":{},"body":{"classes/AWSSESProvider.html":{}}}],["src/emails/provider/aws.service.ts:152",{"_index":62,"title":{},"body":{"classes/AWSSESProvider.html":{}}}],["src/emails/provider/aws.service.ts:26",{"_index":42,"title":{},"body":{"classes/AWSSESProvider.html":{}}}],["src/emails/provider/aws.service.ts:27",{"_index":36,"title":{},"body":{"classes/AWSSESProvider.html":{}}}],["src/emails/provider/aws.service.ts:28",{"_index":33,"title":{},"body":{"classes/AWSSESProvider.html":{}}}],["src/emails/provider/aws.service.ts:30",{"_index":35,"title":{},"body":{"classes/AWSSESProvider.html":{}}}],["src/emails/provider/aws.service.ts:31",{"_index":29,"title":{},"body":{"classes/AWSSESProvider.html":{}}}],["src/emails/provider/aws.service.ts:54",{"_index":45,"title":{},"body":{"classes/AWSSESProvider.html":{}}}],["src/emails/provider/aws.service.ts:96",{"_index":56,"title":{},"body":{"classes/AWSSESProvider.html":{}}}],["src/emails/provider/sendgrid.service.ts",{"_index":3546,"title":{},"body":{"classes/SendGridProvider.html":{}}}],["src/emails/provider/sendgrid.service.ts:106",{"_index":3553,"title":{},"body":{"classes/SendGridProvider.html":{}}}],["src/emails/provider/sendgrid.service.ts:20",{"_index":3550,"title":{},"body":{"classes/SendGridProvider.html":{}}}],["src/emails/provider/sendgrid.service.ts:21",{"_index":3549,"title":{},"body":{"classes/SendGridProvider.html":{}}}],["src/emails/provider/sendgrid.service.ts:22",{"_index":3548,"title":{},"body":{"classes/SendGridProvider.html":{}}}],["src/emails/provider/sendgrid.service.ts:42",{"_index":3551,"title":{},"body":{"classes/SendGridProvider.html":{}}}],["src/emails/provider/sendgrid.service.ts:70",{"_index":3552,"title":{},"body":{"classes/SendGridProvider.html":{}}}],["src/emails/repository/email.repository.ts",{"_index":2265,"title":{},"body":{"interfaces/EmailsRepository.html":{}}}],["src/emails/templates/invitation",{"_index":3056,"title":{},"body":{"injectables/InvitationsService.html":{}}}],["src/entrepreneur/entities/entrepreneur.entity",{"_index":3219,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["src/entrepreneur/entities/entrepreneur.entity.ts",{"_index":1305,"title":{},"body":{"classes/BusinessRelationship.html":{},"classes/Entrepreneur.html":{},"classes/StartupRelationship.html":{}}}],["src/entrepreneur/entities/entrepreneur.entity.ts:13",{"_index":2287,"title":{},"body":{"classes/Entrepreneur.html":{}}}],["src/entrepreneur/entities/entrepreneur.entity.ts:17",{"_index":2294,"title":{},"body":{"classes/Entrepreneur.html":{}}}],["src/entrepreneur/entities/entrepreneur.entity.ts:21",{"_index":2289,"title":{},"body":{"classes/Entrepreneur.html":{}}}],["src/entrepreneur/entities/entrepreneur.entity.ts:25",{"_index":2288,"title":{},"body":{"classes/Entrepreneur.html":{}}}],["src/entrepreneur/entities/entrepreneur.entity.ts:29",{"_index":2293,"title":{},"body":{"classes/Entrepreneur.html":{}}}],["src/entrepreneur/entities/entrepreneur.entity.ts:36",{"_index":2291,"title":{},"body":{"classes/Entrepreneur.html":{}}}],["src/entrepreneur/entities/entrepreneur.entity.ts:43",{"_index":2296,"title":{},"body":{"classes/Entrepreneur.html":{}}}],["src/entrepreneur/entities/entrepreneur.entity.ts:46",{"_index":2290,"title":{},"body":{"classes/Entrepreneur.html":{}}}],["src/entrepreneur/entities/entrepreneur.entity.ts:49",{"_index":2295,"title":{},"body":{"classes/Entrepreneur.html":{}}}],["src/entrepreneur/entities/entrepreneur.entity.ts:52",{"_index":2292,"title":{},"body":{"classes/Entrepreneur.html":{}}}],["src/entrepreneur/entities/entrepreneur.entity.ts:66",{"_index":3711,"title":{},"body":{"classes/StartupRelationship.html":{}}}],["src/entrepreneur/entities/entrepreneur.entity.ts:70",{"_index":3712,"title":{},"body":{"classes/StartupRelationship.html":{}}}],["src/entrepreneur/entities/entrepreneur.entity.ts:74",{"_index":3714,"title":{},"body":{"classes/StartupRelationship.html":{}}}],["src/entrepreneur/entities/entrepreneur.entity.ts:78",{"_index":3715,"title":{},"body":{"classes/StartupRelationship.html":{}}}],["src/entrepreneur/entities/entrepreneur.entity.ts:88",{"_index":1307,"title":{},"body":{"classes/BusinessRelationship.html":{}}}],["src/entrepreneur/entities/entrepreneur.entity.ts:92",{"_index":1308,"title":{},"body":{"classes/BusinessRelationship.html":{}}}],["src/entrepreneur/entrepreneur.module",{"_index":1019,"title":{},"body":{"modules/ApplicantModule.html":{},"modules/BusinessModule.html":{},"modules/EventsModule.html":{},"modules/HelpDeskModule.html":{},"modules/NotificationsModule.html":{},"modules/ResourcesRepliesModule.html":{},"modules/StartupModule.html":{}}}],["src/entrepreneur/entrepreneur.module.ts",{"_index":2301,"title":{},"body":{"modules/EntrepreneurModule.html":{}}}],["src/entrepreneur/entrepreneur.service",{"_index":2730,"title":{},"body":{"injectables/HelpDeskService.html":{}}}],["src/evaluations/config",{"_index":1500,"title":{},"body":{"classes/ConfigEvaluation.html":{},"modules/ConfigEvaluationsModule.html":{},"injectables/ConfigEvaluationsService.html":{},"classes/CreateConfigEvaluationInput.html":{},"classes/UpdateConfigEvaluationInput.html":{}}}],["src/evaluations/entities/evaluation.entity.ts",{"_index":2325,"title":{},"body":{"classes/Evaluation.html":{}}}],["src/evaluations/entities/evaluation.entity.ts:11",{"_index":2326,"title":{},"body":{"classes/Evaluation.html":{}}}],["src/evaluations/entities/evaluation.entity.ts:17",{"_index":2332,"title":{},"body":{"classes/Evaluation.html":{}}}],["src/evaluations/entities/evaluation.entity.ts:21",{"_index":2329,"title":{},"body":{"classes/Evaluation.html":{}}}],["src/evaluations/entities/evaluation.entity.ts:25",{"_index":2333,"title":{},"body":{"classes/Evaluation.html":{}}}],["src/evaluations/entities/evaluation.entity.ts:29",{"_index":2330,"title":{},"body":{"classes/Evaluation.html":{}}}],["src/evaluations/entities/evaluation.entity.ts:33",{"_index":2327,"title":{},"body":{"classes/Evaluation.html":{}}}],["src/evaluations/entities/evaluation.entity.ts:37",{"_index":2335,"title":{},"body":{"classes/Evaluation.html":{}}}],["src/evaluations/entities/evaluation.entity.ts:40",{"_index":2328,"title":{},"body":{"classes/Evaluation.html":{}}}],["src/evaluations/entities/evaluation.entity.ts:43",{"_index":2336,"title":{},"body":{"classes/Evaluation.html":{}}}],["src/evaluations/entities/evaluation.entity.ts:47",{"_index":2331,"title":{},"body":{"classes/Evaluation.html":{}}}],["src/evaluations/evaluations.module.ts",{"_index":2344,"title":{},"body":{"modules/EvaluationsModule.html":{}}}],["src/events/acta/acta.module.ts",{"_index":268,"title":{},"body":{"modules/ActaModule.html":{}}}],["src/events/acta/acta.service.ts",{"_index":281,"title":{},"body":{"injectables/ActaService.html":{}}}],["src/events/acta/acta.service.ts:18",{"_index":295,"title":{},"body":{"injectables/ActaService.html":{}}}],["src/events/acta/acta.service.ts:25",{"_index":296,"title":{},"body":{"injectables/ActaService.html":{}}}],["src/events/acta/acta.service.ts:32",{"_index":300,"title":{},"body":{"injectables/ActaService.html":{}}}],["src/events/acta/acta.service.ts:39",{"_index":302,"title":{},"body":{"injectables/ActaService.html":{}}}],["src/events/acta/acta.service.ts:51",{"_index":305,"title":{},"body":{"injectables/ActaService.html":{}}}],["src/events/acta/acta.service.ts:58",{"_index":312,"title":{},"body":{"injectables/ActaService.html":{}}}],["src/events/acta/acta.service.ts:69",{"_index":307,"title":{},"body":{"injectables/ActaService.html":{}}}],["src/events/acta/acta.service.ts:9",{"_index":291,"title":{},"body":{"injectables/ActaService.html":{}}}],["src/events/acta/dto/create",{"_index":1894,"title":{},"body":{"classes/CreateActaInput.html":{}}}],["src/events/acta/dto/update",{"_index":4078,"title":{},"body":{"classes/UpdateActaInput.html":{}}}],["src/events/acta/entities/acta.entity",{"_index":484,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["src/events/acta/entities/acta.entity.ts",{"_index":193,"title":{},"body":{"classes/Acta.html":{}}}],["src/events/acta/entities/acta.entity.ts:12",{"_index":208,"title":{},"body":{"classes/Acta.html":{}}}],["src/events/acta/entities/acta.entity.ts:16",{"_index":225,"title":{},"body":{"classes/Acta.html":{}}}],["src/events/acta/entities/acta.entity.ts:20",{"_index":216,"title":{},"body":{"classes/Acta.html":{}}}],["src/events/acta/entities/acta.entity.ts:24",{"_index":226,"title":{},"body":{"classes/Acta.html":{}}}],["src/events/acta/entities/acta.entity.ts:28",{"_index":228,"title":{},"body":{"classes/Acta.html":{}}}],["src/events/acta/entities/acta.entity.ts:32",{"_index":229,"title":{},"body":{"classes/Acta.html":{}}}],["src/events/acta/entities/acta.entity.ts:36",{"_index":214,"title":{},"body":{"classes/Acta.html":{}}}],["src/events/acta/entities/acta.entity.ts:40",{"_index":227,"title":{},"body":{"classes/Acta.html":{}}}],["src/events/acta/entities/acta.entity.ts:44",{"_index":220,"title":{},"body":{"classes/Acta.html":{}}}],["src/events/acta/entities/acta.entity.ts:48",{"_index":221,"title":{},"body":{"classes/Acta.html":{}}}],["src/events/acta/entities/acta.entity.ts:52",{"_index":212,"title":{},"body":{"classes/Acta.html":{}}}],["src/events/acta/entities/acta.entity.ts:56",{"_index":222,"title":{},"body":{"classes/Acta.html":{}}}],["src/events/acta/entities/acta.entity.ts:59",{"_index":215,"title":{},"body":{"classes/Acta.html":{}}}],["src/events/acta/entities/acta.entity.ts:62",{"_index":230,"title":{},"body":{"classes/Acta.html":{}}}],["src/events/dto/create",{"_index":1953,"title":{},"body":{"classes/CreateEventInput.html":{},"injectables/NotificationsService.html":{}}}],["src/events/dto/update",{"_index":4145,"title":{},"body":{"classes/UpdateEventInput.html":{}}}],["src/events/entities/event.entity",{"_index":89,"title":{},"body":{"classes/AWSSESProvider.html":{},"injectables/ActivitiesConfigService.html":{},"interfaces/EmailsRepository.html":{},"injectables/EmailsService.html":{},"injectables/NotificationsService.html":{},"classes/SendGridProvider.html":{}}}],["src/events/entities/event.entity.ts",{"_index":2349,"title":{},"body":{"classes/Event.html":{},"classes/ExpertEventLink.html":{},"classes/ParticipantEventLink.html":{},"classes/TeamCoachLink.html":{}}}],["src/events/entities/event.entity.ts:102",{"_index":2407,"title":{},"body":{"classes/ExpertEventLink.html":{}}}],["src/events/entities/event.entity.ts:106",{"_index":2406,"title":{},"body":{"classes/ExpertEventLink.html":{}}}],["src/events/entities/event.entity.ts:117",{"_index":3266,"title":{},"body":{"classes/ParticipantEventLink.html":{}}}],["src/events/entities/event.entity.ts:12",{"_index":2351,"title":{},"body":{"classes/Event.html":{}}}],["src/events/entities/event.entity.ts:121",{"_index":3268,"title":{},"body":{"classes/ParticipantEventLink.html":{}}}],["src/events/entities/event.entity.ts:125",{"_index":3267,"title":{},"body":{"classes/ParticipantEventLink.html":{}}}],["src/events/entities/event.entity.ts:129",{"_index":3269,"title":{},"body":{"classes/ParticipantEventLink.html":{}}}],["src/events/entities/event.entity.ts:16",{"_index":2362,"title":{},"body":{"classes/Event.html":{}}}],["src/events/entities/event.entity.ts:20",{"_index":2368,"title":{},"body":{"classes/Event.html":{}}}],["src/events/entities/event.entity.ts:24",{"_index":2352,"title":{},"body":{"classes/Event.html":{}}}],["src/events/entities/event.entity.ts:28",{"_index":2355,"title":{},"body":{"classes/Event.html":{}}}],["src/events/entities/event.entity.ts:32",{"_index":2359,"title":{},"body":{"classes/Event.html":{}}}],["src/events/entities/event.entity.ts:36",{"_index":2365,"title":{},"body":{"classes/Event.html":{}}}],["src/events/entities/event.entity.ts:40",{"_index":2356,"title":{},"body":{"classes/Event.html":{}}}],["src/events/entities/event.entity.ts:44",{"_index":2360,"title":{},"body":{"classes/Event.html":{}}}],["src/events/entities/event.entity.ts:48",{"_index":2361,"title":{},"body":{"classes/Event.html":{}}}],["src/events/entities/event.entity.ts:51",{"_index":2354,"title":{},"body":{"classes/Event.html":{}}}],["src/events/entities/event.entity.ts:54",{"_index":2369,"title":{},"body":{"classes/Event.html":{}}}],["src/events/entities/event.entity.ts:58",{"_index":2353,"title":{},"body":{"classes/Event.html":{}}}],["src/events/entities/event.entity.ts:62",{"_index":2358,"title":{},"body":{"classes/Event.html":{}}}],["src/events/entities/event.entity.ts:66",{"_index":2367,"title":{},"body":{"classes/Event.html":{}}}],["src/events/entities/event.entity.ts:70",{"_index":2364,"title":{},"body":{"classes/Event.html":{}}}],["src/events/entities/event.entity.ts:80",{"_index":3913,"title":{},"body":{"classes/TeamCoachLink.html":{}}}],["src/events/entities/event.entity.ts:84",{"_index":3915,"title":{},"body":{"classes/TeamCoachLink.html":{}}}],["src/events/entities/event.entity.ts:88",{"_index":3914,"title":{},"body":{"classes/TeamCoachLink.html":{}}}],["src/events/entities/event.entity.ts:98",{"_index":2405,"title":{},"body":{"classes/ExpertEventLink.html":{}}}],["src/events/events.module",{"_index":397,"title":{},"body":{"modules/ActivitiesConfigModule.html":{},"modules/ConfigurationAppModule.html":{}}}],["src/events/events.module.ts",{"_index":2379,"title":{},"body":{"modules/EventsModule.html":{}}}],["src/events/events.service",{"_index":483,"title":{},"body":{"injectables/ActivitiesConfigService.html":{},"injectables/ConfigurationAppService.html":{}}}],["src/events/participation",{"_index":2081,"title":{},"body":{"classes/CreateParticipationEventInput.html":{},"classes/ParticipationEvent.html":{},"modules/ParticipationEventsModule.html":{},"injectables/ParticipationEventsService.html":{},"classes/UpdateParticipationEventInput.html":{}}}],["src/events/types",{"_index":464,"title":{},"body":{"injectables/ActivitiesConfigService.html":{},"classes/CreateTypesEventInput.html":{},"classes/TypesEvent.html":{},"modules/TypesEventsModule.html":{},"injectables/TypesEventsService.html":{},"classes/UpdateTypesEventInput.html":{},"miscellaneous/variables.html":{}}}],["src/expert/args/link",{"_index":3122,"title":{},"body":{"classes/LinkExpertsToPhaseArgs.html":{},"classes/LinkStartupsExpertsArgs.html":{}}}],["src/expert/args/update",{"_index":4159,"title":{},"body":{"classes/UpdateExpertInput.html":{}}}],["src/expert/entities/expert.entity",{"_index":481,"title":{},"body":{"injectables/ActivitiesConfigService.html":{},"injectables/NotificationsService.html":{}}}],["src/expert/entities/expert.entity.ts",{"_index":2389,"title":{},"body":{"classes/Expert.html":{},"classes/PhaseExpertRelationship.html":{},"classes/StartupLink.html":{}}}],["src/expert/entities/expert.entity.ts:13",{"_index":2391,"title":{},"body":{"classes/Expert.html":{}}}],["src/expert/entities/expert.entity.ts:17",{"_index":2392,"title":{},"body":{"classes/Expert.html":{}}}],["src/expert/entities/expert.entity.ts:21",{"_index":2393,"title":{},"body":{"classes/Expert.html":{}}}],["src/expert/entities/expert.entity.ts:25",{"_index":2397,"title":{},"body":{"classes/Expert.html":{}}}],["src/expert/entities/expert.entity.ts:32",{"_index":2395,"title":{},"body":{"classes/Expert.html":{}}}],["src/expert/entities/expert.entity.ts:39",{"_index":2401,"title":{},"body":{"classes/Expert.html":{}}}],["src/expert/entities/expert.entity.ts:43",{"_index":2399,"title":{},"body":{"classes/Expert.html":{}}}],["src/expert/entities/expert.entity.ts:46",{"_index":2394,"title":{},"body":{"classes/Expert.html":{}}}],["src/expert/entities/expert.entity.ts:49",{"_index":2400,"title":{},"body":{"classes/Expert.html":{}}}],["src/expert/entities/expert.entity.ts:52",{"_index":2396,"title":{},"body":{"classes/Expert.html":{}}}],["src/expert/entities/expert.entity.ts:62",{"_index":3342,"title":{},"body":{"classes/PhaseExpertRelationship.html":{}}}],["src/expert/entities/expert.entity.ts:66",{"_index":3343,"title":{},"body":{"classes/PhaseExpertRelationship.html":{}}}],["src/expert/entities/expert.entity.ts:70",{"_index":3344,"title":{},"body":{"classes/PhaseExpertRelationship.html":{}}}],["src/expert/entities/expert.entity.ts:80",{"_index":3699,"title":{},"body":{"classes/StartupLink.html":{}}}],["src/expert/entities/expert.entity.ts:84",{"_index":3700,"title":{},"body":{"classes/StartupLink.html":{}}}],["src/expert/expert.module",{"_index":388,"title":{},"body":{"modules/ActivitiesConfigModule.html":{},"modules/ApplicantModule.html":{},"modules/EntrepreneurModule.html":{},"modules/EvaluationsModule.html":{},"modules/EventsModule.html":{},"modules/NotificationsModule.html":{},"modules/PhasesModule.html":{},"modules/StartupModule.html":{}}}],["src/expert/expert.module.ts",{"_index":2412,"title":{},"body":{"modules/ExpertModule.html":{}}}],["src/expert/expert.service",{"_index":467,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["src/forms/factories/form",{"_index":990,"title":{},"body":{"classes/Applicant.html":{},"classes/ApplicantState.html":{},"classes/Attachment.html":{},"classes/FormSubmissionFiles.html":{},"interfaces/IAttachment.html":{}}}],["src/forms/form",{"_index":1481,"title":{},"body":{"classes/CloseFormSubscriptionArgs.html":{},"classes/CreateFormSubscriptionInput.html":{},"classes/CreateFormTagInput.html":{},"classes/Form.html":{},"classes/FormSubscription.html":{},"injectables/FormSubscriptionService.html":{},"classes/FormTag.html":{},"injectables/FormTagService.html":{},"classes/GetSubmittedFilesArgs.html":{},"classes/SubmitFileInput.html":{},"classes/SubmitFormSubscriptionArgs.html":{},"classes/UpdateFormTagInput.html":{}}}],["src/forms/form/args/find",{"_index":2419,"title":{},"body":{"classes/FindFormsArgs.html":{}}}],["src/forms/form/dto/create",{"_index":1973,"title":{},"body":{"classes/CreateFormInput.html":{}}}],["src/forms/form/dto/update",{"_index":4164,"title":{},"body":{"classes/UpdateFormInput.html":{}}}],["src/forms/form/entities/form",{"_index":2459,"title":{},"body":{"classes/FormSubmission.html":{},"classes/FormSubmissionFiles.html":{}}}],["src/forms/form/entities/form.entity",{"_index":722,"title":{},"body":{"classes/Announcement.html":{},"classes/FormSubscription.html":{}}}],["src/forms/form/entities/form.entity.ts",{"_index":2433,"title":{},"body":{"classes/Form.html":{}}}],["src/forms/form/entities/form.entity.ts:12",{"_index":2435,"title":{},"body":{"classes/Form.html":{}}}],["src/forms/form/entities/form.entity.ts:16",{"_index":2445,"title":{},"body":{"classes/Form.html":{}}}],["src/forms/form/entities/form.entity.ts:20",{"_index":2440,"title":{},"body":{"classes/Form.html":{}}}],["src/forms/form/entities/form.entity.ts:24",{"_index":2443,"title":{},"body":{"classes/Form.html":{}}}],["src/forms/form/entities/form.entity.ts:28",{"_index":2448,"title":{},"body":{"classes/Form.html":{}}}],["src/forms/form/entities/form.entity.ts:32",{"_index":2442,"title":{},"body":{"classes/Form.html":{}}}],["src/forms/form/entities/form.entity.ts:36",{"_index":2444,"title":{},"body":{"classes/Form.html":{}}}],["src/forms/form/entities/form.entity.ts:40",{"_index":2446,"title":{},"body":{"classes/Form.html":{}}}],["src/forms/form/entities/form.entity.ts:46",{"_index":2437,"title":{},"body":{"classes/Form.html":{}}}],["src/forms/form/entities/form.entity.ts:53",{"_index":2450,"title":{},"body":{"classes/Form.html":{}}}],["src/forms/form/entities/form.entity.ts:60",{"_index":2439,"title":{},"body":{"classes/Form.html":{}}}],["src/forms/form/entities/form.entity.ts:63",{"_index":2436,"title":{},"body":{"classes/Form.html":{}}}],["src/forms/form/entities/form.entity.ts:66",{"_index":2449,"title":{},"body":{"classes/Form.html":{}}}],["src/forms/form/entities/form.entity.ts:73",{"_index":2438,"title":{},"body":{"classes/Form.html":{}}}],["src/forms/form/enums/form",{"_index":2014,"title":{},"body":{"classes/CreateFormSubscriptionInput.html":{},"classes/FormSubscription.html":{},"classes/GetSubmittedFilesArgs.html":{},"miscellaneous/enumerations.html":{}}}],["src/forms/form/forms.service",{"_index":3806,"title":{},"body":{"injectables/TableConfigService.html":{},"injectables/TableService.html":{}}}],["src/forms/form/forms.service.ts",{"_index":2628,"title":{},"body":{"injectables/FormsService.html":{}}}],["src/forms/form/forms.service.ts:11",{"_index":2630,"title":{},"body":{"injectables/FormsService.html":{}}}],["src/forms/form/forms.service.ts:19",{"_index":2637,"title":{},"body":{"injectables/FormsService.html":{}}}],["src/forms/form/forms.service.ts:29",{"_index":2638,"title":{},"body":{"injectables/FormsService.html":{}}}],["src/forms/form/forms.service.ts:38",{"_index":2634,"title":{},"body":{"injectables/FormsService.html":{}}}],["src/forms/form/forms.service.ts:49",{"_index":2632,"title":{},"body":{"injectables/FormsService.html":{}}}],["src/forms/form/forms.service.ts:63",{"_index":2640,"title":{},"body":{"injectables/FormsService.html":{}}}],["src/forms/form/forms.service.ts:85",{"_index":2635,"title":{},"body":{"injectables/FormsService.html":{}}}],["src/forms/forms.module",{"_index":763,"title":{},"body":{"modules/AnnouncementsModule.html":{},"modules/TableModule.html":{}}}],["src/forms/forms.module.ts",{"_index":2614,"title":{},"body":{"modules/FormsModule.html":{}}}],["src/help",{"_index":2020,"title":{},"body":{"classes/CreateHelpDeskInput.html":{},"classes/HelpDeskFilterInput.html":{},"modules/HelpDeskModule.html":{},"injectables/HelpDeskService.html":{},"classes/HelpDeskTicket.html":{},"modules/TicketCategoriesModule.html":{},"injectables/TicketCategoriesService.html":{},"classes/TicketCategory.html":{},"classes/TicketChild.html":{},"classes/UpdateHelpDeskInput.html":{},"miscellaneous/enumerations.html":{}}}],["src/integrations/dto/create",{"_index":2048,"title":{},"body":{"classes/CreateIntegrationInput.html":{}}}],["src/integrations/dto/update",{"_index":4185,"title":{},"body":{"classes/UpdateIntegrationInput.html":{}}}],["src/integrations/entities/integration.entity.ts",{"_index":2802,"title":{},"body":{"classes/Integration.html":{}}}],["src/integrations/entities/integration.entity.ts:12",{"_index":2804,"title":{},"body":{"classes/Integration.html":{}}}],["src/integrations/entities/integration.entity.ts:16",{"_index":2813,"title":{},"body":{"classes/Integration.html":{}}}],["src/integrations/entities/integration.entity.ts:20",{"_index":2807,"title":{},"body":{"classes/Integration.html":{}}}],["src/integrations/entities/integration.entity.ts:27",{"_index":2812,"title":{},"body":{"classes/Integration.html":{}}}],["src/integrations/entities/integration.entity.ts:30",{"_index":2808,"title":{},"body":{"classes/Integration.html":{}}}],["src/integrations/entities/integration.entity.ts:33",{"_index":2814,"title":{},"body":{"classes/Integration.html":{}}}],["src/integrations/enum/types.enum.ts",{"_index":4739,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/integrations/integrations.module",{"_index":2386,"title":{},"body":{"modules/EventsModule.html":{}}}],["src/integrations/integrations.module.ts",{"_index":2822,"title":{},"body":{"modules/IntegrationsModule.html":{}}}],["src/integrations/integrations.service.ts",{"_index":2828,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["src/integrations/integrations.service.ts:209",{"_index":2839,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["src/integrations/integrations.service.ts:21",{"_index":2836,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["src/integrations/integrations.service.ts:32",{"_index":2846,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["src/integrations/integrations.service.ts:45",{"_index":2842,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["src/integrations/integrations.service.ts:52",{"_index":2847,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["src/integrations/integrations.service.ts:61",{"_index":2843,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["src/integrations/integrations.service.ts:94",{"_index":2852,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["src/invitations/args/create",{"_index":2059,"title":{},"body":{"classes/CreateInvitationArgs.html":{}}}],["src/invitations/args/find",{"_index":2423,"title":{},"body":{"classes/FindInvitationArgs.html":{}}}],["src/invitations/dto/accept",{"_index":177,"title":{},"body":{"classes/AcceptInvitationDto.html":{}}}],["src/invitations/entities/invitation.entity.ts",{"_index":2974,"title":{},"body":{"classes/Invitation.html":{}}}],["src/invitations/entities/invitation.entity.ts:14",{"_index":2979,"title":{},"body":{"classes/Invitation.html":{}}}],["src/invitations/entities/invitation.entity.ts:17",{"_index":2980,"title":{},"body":{"classes/Invitation.html":{}}}],["src/invitations/entities/invitation.entity.ts:21",{"_index":2984,"title":{},"body":{"classes/Invitation.html":{}}}],["src/invitations/entities/invitation.entity.ts:25",{"_index":2992,"title":{},"body":{"classes/Invitation.html":{}}}],["src/invitations/entities/invitation.entity.ts:29",{"_index":2982,"title":{},"body":{"classes/Invitation.html":{}}}],["src/invitations/entities/invitation.entity.ts:33",{"_index":2994,"title":{},"body":{"classes/Invitation.html":{}}}],["src/invitations/entities/invitation.entity.ts:43",{"_index":2986,"title":{},"body":{"classes/Invitation.html":{}}}],["src/invitations/entities/invitation.entity.ts:46",{"_index":2981,"title":{},"body":{"classes/Invitation.html":{}}}],["src/invitations/entities/invitation.entity.ts:49",{"_index":2995,"title":{},"body":{"classes/Invitation.html":{}}}],["src/invitations/entities/invitation.entity.ts:57",{"_index":2990,"title":{},"body":{"classes/Invitation.html":{}}}],["src/invitations/entities/invitation.entity.ts:59",{"_index":2997,"title":{},"body":{"classes/Invitation.html":{}}}],["src/invitations/enums/invitation",{"_index":4657,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/invitations/invitations.controller.ts",{"_index":3005,"title":{},"body":{"controllers/InvitationsController.html":{}}}],["src/invitations/invitations.controller.ts:13",{"_index":3009,"title":{},"body":{"controllers/InvitationsController.html":{}}}],["src/invitations/invitations.module",{"_index":1018,"title":{},"body":{"modules/ApplicantModule.html":{}}}],["src/invitations/invitations.module.ts",{"_index":3022,"title":{},"body":{"modules/InvitationsModule.html":{}}}],["src/invitations/invitations.service.ts",{"_index":3029,"title":{},"body":{"injectables/InvitationsService.html":{}}}],["src/invitations/invitations.service.ts:114",{"_index":3045,"title":{},"body":{"injectables/InvitationsService.html":{}}}],["src/invitations/invitations.service.ts:121",{"_index":3048,"title":{},"body":{"injectables/InvitationsService.html":{}}}],["src/invitations/invitations.service.ts:133",{"_index":3052,"title":{},"body":{"injectables/InvitationsService.html":{}}}],["src/invitations/invitations.service.ts:147",{"_index":3050,"title":{},"body":{"injectables/InvitationsService.html":{}}}],["src/invitations/invitations.service.ts:173",{"_index":3040,"title":{},"body":{"injectables/InvitationsService.html":{}}}],["src/invitations/invitations.service.ts:191",{"_index":3037,"title":{},"body":{"injectables/InvitationsService.html":{}}}],["src/invitations/invitations.service.ts:27",{"_index":3034,"title":{},"body":{"injectables/InvitationsService.html":{}}}],["src/invitations/invitations.service.ts:43",{"_index":3043,"title":{},"body":{"injectables/InvitationsService.html":{}}}],["src/logger/app",{"_index":74,"title":{},"body":{"classes/AWSSESProvider.html":{},"injectables/AuthService.html":{},"injectables/EmailsService.html":{},"injectables/InvitationsService.html":{},"classes/SendGridProvider.html":{}}}],["src/logger/logger.module",{"_index":273,"title":{},"body":{"modules/ActaModule.html":{},"modules/ActivitiesConfigModule.html":{},"modules/AuthModule.html":{},"modules/ConfigEvaluationsModule.html":{},"modules/ConfigurationAppModule.html":{},"modules/ContentModule.html":{},"modules/EmailsModule.html":{},"modules/EvaluationsModule.html":{},"modules/EventsModule.html":{},"modules/HelpDeskModule.html":{},"modules/IntegrationsModule.html":{},"modules/InvitationsModule.html":{},"modules/ParticipationEventsModule.html":{},"modules/PhasesModule.html":{},"modules/ResourcesModule.html":{},"modules/ResourcesRepliesModule.html":{},"modules/SitesModule.html":{},"modules/StagesModule.html":{},"modules/TermsOfUseModule.html":{},"modules/TypesEventsModule.html":{},"modules/UserLogModule.html":{}}}],["src/logger/logger.module.ts",{"_index":3150,"title":{},"body":{"modules/LoggerModule.html":{}}}],["src/main.ts",{"_index":4747,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/notifications/class/notification.ts",{"_index":3151,"title":{},"body":{"classes/Notification.html":{}}}],["src/notifications/class/notification.ts:10",{"_index":3162,"title":{},"body":{"classes/Notification.html":{}}}],["src/notifications/class/notification.ts:11",{"_index":3156,"title":{},"body":{"classes/Notification.html":{}}}],["src/notifications/class/notification.ts:12",{"_index":3159,"title":{},"body":{"classes/Notification.html":{}}}],["src/notifications/class/notification.ts:13",{"_index":3161,"title":{},"body":{"classes/Notification.html":{}}}],["src/notifications/class/notification.ts:14",{"_index":3158,"title":{},"body":{"classes/Notification.html":{}}}],["src/notifications/class/notification.ts:15",{"_index":3157,"title":{},"body":{"classes/Notification.html":{}}}],["src/notifications/class/notification.ts:17",{"_index":3154,"title":{},"body":{"classes/Notification.html":{}}}],["src/notifications/class/notification.ts:8",{"_index":3155,"title":{},"body":{"classes/Notification.html":{}}}],["src/notifications/class/notification.ts:9",{"_index":3160,"title":{},"body":{"classes/Notification.html":{}}}],["src/notifications/config",{"_index":1591,"title":{},"body":{"modules/ConfigNotificationsModule.html":{},"injectables/ConfigNotificationsService.html":{},"classes/CreateConfigNotificationInput.html":{},"modules/EvaluationsModule.html":{},"modules/EventsModule.html":{},"modules/PhasesModule.html":{},"modules/ResourcesRepliesModule.html":{},"modules/UserConfigModule.html":{},"injectables/UserConfigService.html":{}}}],["src/notifications/dto/create",{"_index":2068,"title":{},"body":{"classes/CreateNotificationInput.html":{}}}],["src/notifications/dto/others.inpt.ts",{"_index":3260,"title":{},"body":{"classes/OthersInput.html":{}}}],["src/notifications/dto/others.inpt.ts:10",{"_index":3261,"title":{},"body":{"classes/OthersInput.html":{}}}],["src/notifications/dto/update",{"_index":4187,"title":{},"body":{"classes/UpdateNotificationInput.html":{}}}],["src/notifications/entities/notification.entity.ts",{"_index":3170,"title":{},"body":{"classes/Notification-1.html":{}}}],["src/notifications/entities/notification.entity.ts:12",{"_index":3172,"title":{},"body":{"classes/Notification-1.html":{}}}],["src/notifications/entities/notification.entity.ts:16",{"_index":3178,"title":{},"body":{"classes/Notification-1.html":{}}}],["src/notifications/entities/notification.entity.ts:20",{"_index":3174,"title":{},"body":{"classes/Notification-1.html":{}}}],["src/notifications/entities/notification.entity.ts:24",{"_index":3181,"title":{},"body":{"classes/Notification-1.html":{}}}],["src/notifications/entities/notification.entity.ts:28",{"_index":3177,"title":{},"body":{"classes/Notification-1.html":{}}}],["src/notifications/entities/notification.entity.ts:32",{"_index":3176,"title":{},"body":{"classes/Notification-1.html":{}}}],["src/notifications/entities/notification.entity.ts:36",{"_index":3179,"title":{},"body":{"classes/Notification-1.html":{}}}],["src/notifications/entities/notification.entity.ts:40",{"_index":3175,"title":{},"body":{"classes/Notification-1.html":{}}}],["src/notifications/entities/notification.entity.ts:43",{"_index":3173,"title":{},"body":{"classes/Notification-1.html":{}}}],["src/notifications/entities/notification.entity.ts:46",{"_index":3180,"title":{},"body":{"classes/Notification-1.html":{}}}],["src/notifications/enum/notification",{"_index":2731,"title":{},"body":{"injectables/HelpDeskService.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{}}}],["src/notifications/notifications.module",{"_index":2347,"title":{},"body":{"modules/EvaluationsModule.html":{},"modules/EventsModule.html":{},"modules/HelpDeskModule.html":{},"modules/PhasesModule.html":{},"modules/ResourcesRepliesModule.html":{},"modules/UsersModule.html":{}}}],["src/notifications/notifications.module.ts",{"_index":3189,"title":{},"body":{"modules/NotificationsModule.html":{}}}],["src/notifications/notifications.service",{"_index":2732,"title":{},"body":{"injectables/HelpDeskService.html":{},"injectables/UsersService.html":{}}}],["src/notifications/notifications.service.ts",{"_index":3195,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["src/notifications/notifications.service.ts:105",{"_index":3206,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["src/notifications/notifications.service.ts:115",{"_index":3209,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["src/notifications/notifications.service.ts:130",{"_index":3213,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["src/notifications/notifications.service.ts:152",{"_index":3211,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["src/notifications/notifications.service.ts:162",{"_index":3204,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["src/notifications/notifications.service.ts:27",{"_index":3199,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["src/notifications/notifications.service.ts:34",{"_index":3215,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["src/notifications/notifications.service.ts:67",{"_index":3202,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["src/notifications/notifications.service.ts:90",{"_index":3210,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["src/notifications/types",{"_index":4058,"title":{},"body":{"classes/TypesNotification.html":{},"modules/TypesNotificationsModule.html":{},"injectables/TypesNotificationsService.html":{},"injectables/UserConfigService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/phases/dto/create",{"_index":2085,"title":{},"body":{"classes/CreatePhaseInput.html":{}}}],["src/phases/dto/others.inpt.ts",{"_index":3519,"title":{},"body":{"classes/SearchBatchInput.html":{}}}],["src/phases/dto/others.inpt.ts:11",{"_index":3523,"title":{},"body":{"classes/SearchBatchInput.html":{}}}],["src/phases/dto/others.inpt.ts:15",{"_index":3522,"title":{},"body":{"classes/SearchBatchInput.html":{}}}],["src/phases/dto/update",{"_index":4196,"title":{},"body":{"classes/UpdatePhaseInput.html":{}}}],["src/phases/entities/phase.entity",{"_index":3436,"title":{},"body":{"classes/ResourcesReply.html":{}}}],["src/phases/entities/phase.entity.ts",{"_index":3315,"title":{},"body":{"classes/Phase.html":{}}}],["src/phases/entities/phase.entity.ts:11",{"_index":3318,"title":{},"body":{"classes/Phase.html":{}}}],["src/phases/entities/phase.entity.ts:15",{"_index":3336,"title":{},"body":{"classes/Phase.html":{}}}],["src/phases/entities/phase.entity.ts:19",{"_index":3333,"title":{},"body":{"classes/Phase.html":{}}}],["src/phases/entities/phase.entity.ts:26",{"_index":3338,"title":{},"body":{"classes/Phase.html":{}}}],["src/phases/entities/phase.entity.ts:30",{"_index":3324,"title":{},"body":{"classes/Phase.html":{}}}],["src/phases/entities/phase.entity.ts:34",{"_index":3331,"title":{},"body":{"classes/Phase.html":{}}}],["src/phases/entities/phase.entity.ts:38",{"_index":3323,"title":{},"body":{"classes/Phase.html":{}}}],["src/phases/entities/phase.entity.ts:42",{"_index":3337,"title":{},"body":{"classes/Phase.html":{}}}],["src/phases/entities/phase.entity.ts:46",{"_index":3325,"title":{},"body":{"classes/Phase.html":{}}}],["src/phases/entities/phase.entity.ts:50",{"_index":3329,"title":{},"body":{"classes/Phase.html":{}}}],["src/phases/entities/phase.entity.ts:54",{"_index":3334,"title":{},"body":{"classes/Phase.html":{}}}],["src/phases/entities/phase.entity.ts:58",{"_index":3330,"title":{},"body":{"classes/Phase.html":{}}}],["src/phases/entities/phase.entity.ts:62",{"_index":3320,"title":{},"body":{"classes/Phase.html":{}}}],["src/phases/entities/phase.entity.ts:66",{"_index":3328,"title":{},"body":{"classes/Phase.html":{}}}],["src/phases/entities/phase.entity.ts:70",{"_index":3321,"title":{},"body":{"classes/Phase.html":{}}}],["src/phases/entities/phase.entity.ts:74",{"_index":3326,"title":{},"body":{"classes/Phase.html":{}}}],["src/phases/entities/phase.entity.ts:77",{"_index":3322,"title":{},"body":{"classes/Phase.html":{}}}],["src/phases/entities/phase.entity.ts:80",{"_index":3339,"title":{},"body":{"classes/Phase.html":{}}}],["src/phases/phases.module",{"_index":2384,"title":{},"body":{"modules/EventsModule.html":{}}}],["src/phases/phases.module.ts",{"_index":3353,"title":{},"body":{"modules/PhasesModule.html":{}}}],["src/rating/entities/rating.entity.ts",{"_index":3363,"title":{},"body":{"classes/Rating.html":{}}}],["src/rating/entities/rating.entity.ts:11",{"_index":3365,"title":{},"body":{"classes/Rating.html":{}}}],["src/rating/entities/rating.entity.ts:15",{"_index":3368,"title":{},"body":{"classes/Rating.html":{}}}],["src/rating/entities/rating.entity.ts:19",{"_index":3367,"title":{},"body":{"classes/Rating.html":{}}}],["src/rating/entities/rating.entity.ts:23",{"_index":3366,"title":{},"body":{"classes/Rating.html":{}}}],["src/resources/dto/create",{"_index":2101,"title":{},"body":{"classes/CreateResourceInput.html":{}}}],["src/resources/dto/update",{"_index":4197,"title":{},"body":{"classes/UpdateResourceInput.html":{}}}],["src/resources/entities/resource.entity",{"_index":1760,"title":{},"body":{"classes/Content.html":{},"classes/ResourcesReply.html":{}}}],["src/resources/entities/resource.entity.ts",{"_index":3375,"title":{},"body":{"classes/Resource.html":{}}}],["src/resources/entities/resource.entity.ts:13",{"_index":3379,"title":{},"body":{"classes/Resource.html":{}}}],["src/resources/entities/resource.entity.ts:17",{"_index":3385,"title":{},"body":{"classes/Resource.html":{}}}],["src/resources/entities/resource.entity.ts:21",{"_index":3382,"title":{},"body":{"classes/Resource.html":{}}}],["src/resources/entities/resource.entity.ts:25",{"_index":3383,"title":{},"body":{"classes/Resource.html":{}}}],["src/resources/entities/resource.entity.ts:29",{"_index":3380,"title":{},"body":{"classes/Resource.html":{}}}],["src/resources/entities/resource.entity.ts:33",{"_index":3386,"title":{},"body":{"classes/Resource.html":{}}}],["src/resources/entities/resource.entity.ts:37",{"_index":3381,"title":{},"body":{"classes/Resource.html":{}}}],["src/resources/entities/resource.entity.ts:41",{"_index":3389,"title":{},"body":{"classes/Resource.html":{}}}],["src/resources/entities/resource.entity.ts:45",{"_index":3384,"title":{},"body":{"classes/Resource.html":{}}}],["src/resources/entities/resource.entity.ts:52",{"_index":3388,"title":{},"body":{"classes/Resource.html":{}}}],["src/resources/enums/resources",{"_index":1822,"title":{},"body":{"injectables/ContentService.html":{},"miscellaneous/enumerations.html":{}}}],["src/resources/resources",{"_index":1778,"title":{},"body":{"modules/ContentModule.html":{},"injectables/ContentService.html":{},"classes/CreateResourcesReplyInput.html":{},"modules/PhasesModule.html":{},"modules/ResourcesRepliesModule.html":{},"classes/ResourcesReply.html":{},"classes/UpdateResourcesReplyInput.html":{},"miscellaneous/enumerations.html":{}}}],["src/resources/resources.module",{"_index":3359,"title":{},"body":{"modules/PhasesModule.html":{}}}],["src/resources/resources.module.ts",{"_index":3397,"title":{},"body":{"modules/ResourcesModule.html":{}}}],["src/resources/resources.service.ts",{"_index":3438,"title":{},"body":{"injectables/ResourcesService.html":{}}}],["src/resources/resources.service.ts:19",{"_index":3445,"title":{},"body":{"injectables/ResourcesService.html":{}}}],["src/resources/resources.service.ts:31",{"_index":3449,"title":{},"body":{"injectables/ResourcesService.html":{}}}],["src/resources/resources.service.ts:38",{"_index":3451,"title":{},"body":{"injectables/ResourcesService.html":{}}}],["src/resources/resources.service.ts:45",{"_index":3452,"title":{},"body":{"injectables/ResourcesService.html":{}}}],["src/resources/resources.service.ts:52",{"_index":3455,"title":{},"body":{"injectables/ResourcesService.html":{}}}],["src/resources/resources.service.ts:64",{"_index":3453,"title":{},"body":{"injectables/ResourcesService.html":{}}}],["src/resources/resources.service.ts:75",{"_index":3447,"title":{},"body":{"injectables/ResourcesService.html":{}}}],["src/resources/resources.service.ts:9",{"_index":3442,"title":{},"body":{"injectables/ResourcesService.html":{}}}],["src/rol/dto/create",{"_index":2121,"title":{},"body":{"classes/CreateRolInput.html":{}}}],["src/rol/dto/update",{"_index":4207,"title":{},"body":{"classes/UpdateRolInput.html":{}}}],["src/rol/entities/rol.entity",{"_index":4272,"title":{},"body":{"classes/User.html":{}}}],["src/rol/entities/rol.entity.ts",{"_index":3469,"title":{},"body":{"classes/Rol.html":{}}}],["src/rol/entities/rol.entity.ts:10",{"_index":3470,"title":{},"body":{"classes/Rol.html":{}}}],["src/rol/entities/rol.entity.ts:14",{"_index":3474,"title":{},"body":{"classes/Rol.html":{}}}],["src/rol/entities/rol.entity.ts:18",{"_index":3472,"title":{},"body":{"classes/Rol.html":{}}}],["src/rol/entities/rol.entity.ts:22",{"_index":3473,"title":{},"body":{"classes/Rol.html":{}}}],["src/rol/entities/rol.entity.ts:25",{"_index":3471,"title":{},"body":{"classes/Rol.html":{}}}],["src/rol/entities/rol.entity.ts:28",{"_index":3475,"title":{},"body":{"classes/Rol.html":{}}}],["src/rol/model/rol.ts",{"_index":5103,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/rol/rol.module",{"_index":4439,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/rol/rol.module.ts",{"_index":3483,"title":{},"body":{"modules/RolModule.html":{}}}],["src/rol/rol.service.ts",{"_index":3489,"title":{},"body":{"injectables/RolService.html":{}}}],["src/rol/rol.service.ts:15",{"_index":3498,"title":{},"body":{"injectables/RolService.html":{}}}],["src/rol/rol.service.ts:25",{"_index":3494,"title":{},"body":{"injectables/RolService.html":{}}}],["src/rol/rol.service.ts:32",{"_index":3495,"title":{},"body":{"injectables/RolService.html":{}}}],["src/rol/rol.service.ts:39",{"_index":3497,"title":{},"body":{"injectables/RolService.html":{}}}],["src/rol/rol.service.ts:48",{"_index":3496,"title":{},"body":{"injectables/RolService.html":{}}}],["src/rol/rol.service.ts:57",{"_index":3502,"title":{},"body":{"injectables/RolService.html":{}}}],["src/rol/rol.service.ts:68",{"_index":3500,"title":{},"body":{"injectables/RolService.html":{}}}],["src/rol/rol.service.ts:9",{"_index":3491,"title":{},"body":{"injectables/RolService.html":{}}}],["src/schema.gql",{"_index":942,"title":{},"body":{"modules/AppModule.html":{}}}],["src/shared/args/entrepreneur",{"_index":2319,"title":{},"body":{"classes/EntrepreneurStartupArgs.html":{}}}],["src/shared/args/link",{"_index":1388,"title":{},"body":{"injectables/BusinessService.html":{},"classes/LinkWithTargetsArgs.html":{},"classes/LinkWithTargetsByRequestArgs.html":{}}}],["src/shared/models/aggregate",{"_index":1381,"title":{},"body":{"injectables/BusinessService.html":{}}}],["src/shared/models/download",{"_index":1391,"title":{},"body":{"injectables/BusinessService.html":{}}}],["src/shared/models/file",{"_index":2040,"title":{},"body":{"classes/CreateHelpDeskInput.html":{},"classes/HelpDeskTicket.html":{},"classes/TicketChild.html":{}}}],["src/shared/models/page",{"_index":1379,"title":{},"body":{"injectables/BusinessService.html":{},"classes/LinkWithTargetsByRequestArgs.html":{}}}],["src/shared/models/paginated",{"_index":1385,"title":{},"body":{"injectables/BusinessService.html":{}}}],["src/shared/models/table",{"_index":1497,"title":{},"body":{"classes/ColumnGroup.html":{},"classes/Table.html":{},"classes/TableConfig.html":{},"classes/TableJoin.html":{},"classes/UpdateTableConfigInput.html":{}}}],["src/shared/models/update",{"_index":1377,"title":{},"body":{"injectables/BusinessService.html":{}}}],["src/shared/sockets/socket",{"_index":2539,"title":{},"body":{"injectables/FormSubscriptionService.html":{},"injectables/NotificationsService.html":{}}}],["src/shared/utilities/dates.utilities",{"_index":4387,"title":{},"body":{"injectables/UserLogService.html":{}}}],["src/shared/utilities/dates.utilities.ts",{"_index":4753,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/shared/utilities/excel.utilities",{"_index":1394,"title":{},"body":{"injectables/BusinessService.html":{}}}],["src/shared/utilities/excel.utilities.ts",{"_index":5109,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/shared/utilities/ics",{"_index":3555,"title":{},"body":{"classes/SendGridProvider.html":{}}}],["src/shared/utilities/ics.ts",{"_index":4748,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/shared/utilities/request.utilities",{"_index":1387,"title":{},"body":{"injectables/BusinessService.html":{}}}],["src/shared/utilities/request.utilities.ts",{"_index":4966,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/sites/dto/create",{"_index":2124,"title":{},"body":{"classes/CreateSiteInput.html":{}}}],["src/sites/dto/update",{"_index":1728,"title":{},"body":{"classes/ContactServicesInput.html":{},"classes/UpdateSiteInput.html":{}}}],["src/sites/entities/site.entity.ts",{"_index":1711,"title":{},"body":{"classes/ContactServiceLink.html":{},"classes/Site.html":{}}}],["src/sites/entities/site.entity.ts:10",{"_index":3586,"title":{},"body":{"classes/Site.html":{}}}],["src/sites/entities/site.entity.ts:109",{"_index":1715,"title":{},"body":{"classes/ContactServiceLink.html":{}}}],["src/sites/entities/site.entity.ts:113",{"_index":1716,"title":{},"body":{"classes/ContactServiceLink.html":{}}}],["src/sites/entities/site.entity.ts:117",{"_index":1714,"title":{},"body":{"classes/ContactServiceLink.html":{}}}],["src/sites/entities/site.entity.ts:121",{"_index":1713,"title":{},"body":{"classes/ContactServiceLink.html":{}}}],["src/sites/entities/site.entity.ts:14",{"_index":3594,"title":{},"body":{"classes/Site.html":{}}}],["src/sites/entities/site.entity.ts:21",{"_index":3596,"title":{},"body":{"classes/Site.html":{}}}],["src/sites/entities/site.entity.ts:27",{"_index":3589,"title":{},"body":{"classes/Site.html":{}}}],["src/sites/entities/site.entity.ts:33",{"_index":3590,"title":{},"body":{"classes/Site.html":{}}}],["src/sites/entities/site.entity.ts:39",{"_index":3593,"title":{},"body":{"classes/Site.html":{}}}],["src/sites/entities/site.entity.ts:45",{"_index":3591,"title":{},"body":{"classes/Site.html":{}}}],["src/sites/entities/site.entity.ts:51",{"_index":3595,"title":{},"body":{"classes/Site.html":{}}}],["src/sites/entities/site.entity.ts:63",{"_index":3587,"title":{},"body":{"classes/Site.html":{}}}],["src/sites/entities/site.entity.ts:67",{"_index":3592,"title":{},"body":{"classes/Site.html":{}}}],["src/sites/entities/site.entity.ts:70",{"_index":3588,"title":{},"body":{"classes/Site.html":{}}}],["src/sites/entities/site.entity.ts:73",{"_index":3597,"title":{},"body":{"classes/Site.html":{}}}],["src/sites/sites.module.ts",{"_index":3603,"title":{},"body":{"modules/SitesModule.html":{}}}],["src/sites/sites.service.ts",{"_index":3609,"title":{},"body":{"injectables/SitesService.html":{}}}],["src/sites/sites.service.ts:11",{"_index":3611,"title":{},"body":{"injectables/SitesService.html":{}}}],["src/sites/sites.service.ts:19",{"_index":3614,"title":{},"body":{"injectables/SitesService.html":{}}}],["src/sites/sites.service.ts:26",{"_index":3615,"title":{},"body":{"injectables/SitesService.html":{}}}],["src/sites/sites.service.ts:33",{"_index":3616,"title":{},"body":{"injectables/SitesService.html":{}}}],["src/sites/sites.service.ts:40",{"_index":3618,"title":{},"body":{"injectables/SitesService.html":{}}}],["src/sites/sites.service.ts:51",{"_index":3617,"title":{},"body":{"injectables/SitesService.html":{}}}],["src/stages/dto/create",{"_index":2134,"title":{},"body":{"classes/CreateStageInput.html":{}}}],["src/stages/dto/update",{"_index":4214,"title":{},"body":{"classes/UpdateStageInput.html":{}}}],["src/stages/entities/stage.entity.ts",{"_index":3625,"title":{},"body":{"classes/Stage.html":{}}}],["src/stages/entities/stage.entity.ts:10",{"_index":3627,"title":{},"body":{"classes/Stage.html":{}}}],["src/stages/entities/stage.entity.ts:14",{"_index":3632,"title":{},"body":{"classes/Stage.html":{}}}],["src/stages/entities/stage.entity.ts:18",{"_index":3635,"title":{},"body":{"classes/Stage.html":{}}}],["src/stages/entities/stage.entity.ts:22",{"_index":3630,"title":{},"body":{"classes/Stage.html":{}}}],["src/stages/entities/stage.entity.ts:26",{"_index":3634,"title":{},"body":{"classes/Stage.html":{}}}],["src/stages/entities/stage.entity.ts:30",{"_index":3628,"title":{},"body":{"classes/Stage.html":{}}}],["src/stages/entities/stage.entity.ts:34",{"_index":3631,"title":{},"body":{"classes/Stage.html":{}}}],["src/stages/entities/stage.entity.ts:38",{"_index":3633,"title":{},"body":{"classes/Stage.html":{}}}],["src/stages/entities/stage.entity.ts:41",{"_index":3629,"title":{},"body":{"classes/Stage.html":{}}}],["src/stages/entities/stage.entity.ts:44",{"_index":3636,"title":{},"body":{"classes/Stage.html":{}}}],["src/stages/stages.module",{"_index":3360,"title":{},"body":{"modules/PhasesModule.html":{}}}],["src/stages/stages.module.ts",{"_index":3644,"title":{},"body":{"modules/StagesModule.html":{}}}],["src/stages/stages.service.ts",{"_index":3650,"title":{},"body":{"injectables/StagesService.html":{}}}],["src/stages/stages.service.ts:10",{"_index":3653,"title":{},"body":{"injectables/StagesService.html":{}}}],["src/stages/stages.service.ts:18",{"_index":3667,"title":{},"body":{"injectables/StagesService.html":{}}}],["src/stages/stages.service.ts:28",{"_index":3656,"title":{},"body":{"injectables/StagesService.html":{}}}],["src/stages/stages.service.ts:35",{"_index":3657,"title":{},"body":{"injectables/StagesService.html":{}}}],["src/stages/stages.service.ts:44",{"_index":3658,"title":{},"body":{"injectables/StagesService.html":{}}}],["src/stages/stages.service.ts:51",{"_index":3670,"title":{},"body":{"injectables/StagesService.html":{}}}],["src/stages/stages.service.ts:62",{"_index":3662,"title":{},"body":{"injectables/StagesService.html":{}}}],["src/stages/stages.service.ts:97",{"_index":3668,"title":{},"body":{"injectables/StagesService.html":{}}}],["src/startup/args/contact",{"_index":1698,"title":{},"body":{"classes/ContactArgs.html":{},"injectables/UsersService.html":{}}}],["src/startup/args/link",{"_index":3129,"title":{},"body":{"classes/LinkStartupToPhaseArgs.html":{}}}],["src/startup/entities/startup.entity",{"_index":480,"title":{},"body":{"injectables/ActivitiesConfigService.html":{},"classes/BusinessRelationship.html":{},"classes/Entrepreneur.html":{},"classes/ResourcesReply.html":{},"classes/StartupRelationship.html":{}}}],["src/startup/entities/startup.entity.ts",{"_index":2310,"title":{},"body":{"classes/EntrepreneurRelationship-1.html":{},"classes/PhaseRelationship.html":{},"classes/Startup.html":{}}}],["src/startup/entities/startup.entity.ts:13",{"_index":3689,"title":{},"body":{"classes/Startup.html":{}}}],["src/startup/entities/startup.entity.ts:17",{"_index":3695,"title":{},"body":{"classes/Startup.html":{}}}],["src/startup/entities/startup.entity.ts:21",{"_index":3692,"title":{},"body":{"classes/Startup.html":{}}}],["src/startup/entities/startup.entity.ts:25",{"_index":3694,"title":{},"body":{"classes/Startup.html":{}}}],["src/startup/entities/startup.entity.ts:32",{"_index":3691,"title":{},"body":{"classes/Startup.html":{}}}],["src/startup/entities/startup.entity.ts:39",{"_index":3698,"title":{},"body":{"classes/Startup.html":{}}}],["src/startup/entities/startup.entity.ts:42",{"_index":3690,"title":{},"body":{"classes/Startup.html":{}}}],["src/startup/entities/startup.entity.ts:45",{"_index":3697,"title":{},"body":{"classes/Startup.html":{}}}],["src/startup/entities/startup.entity.ts:48",{"_index":3693,"title":{},"body":{"classes/Startup.html":{}}}],["src/startup/entities/startup.entity.ts:52",{"_index":3696,"title":{},"body":{"classes/Startup.html":{}}}],["src/startup/entities/startup.entity.ts:62",{"_index":2311,"title":{},"body":{"classes/EntrepreneurRelationship-1.html":{}}}],["src/startup/entities/startup.entity.ts:66",{"_index":2313,"title":{},"body":{"classes/EntrepreneurRelationship-1.html":{}}}],["src/startup/entities/startup.entity.ts:70",{"_index":2314,"title":{},"body":{"classes/EntrepreneurRelationship-1.html":{}}}],["src/startup/entities/startup.entity.ts:74",{"_index":2312,"title":{},"body":{"classes/EntrepreneurRelationship-1.html":{}}}],["src/startup/entities/startup.entity.ts:78",{"_index":2315,"title":{},"body":{"classes/EntrepreneurRelationship-1.html":{}}}],["src/startup/entities/startup.entity.ts:88",{"_index":3345,"title":{},"body":{"classes/PhaseRelationship.html":{}}}],["src/startup/entities/startup.entity.ts:92",{"_index":3346,"title":{},"body":{"classes/PhaseRelationship.html":{}}}],["src/startup/entities/startup.entity.ts:96",{"_index":3347,"title":{},"body":{"classes/PhaseRelationship.html":{}}}],["src/startup/startup.module",{"_index":392,"title":{},"body":{"modules/ActivitiesConfigModule.html":{},"modules/ApplicantModule.html":{},"modules/EntrepreneurModule.html":{},"modules/EvaluationsModule.html":{},"modules/EventsModule.html":{},"modules/HelpDeskModule.html":{},"modules/PhasesModule.html":{},"modules/ResourcesRepliesModule.html":{}}}],["src/startup/startup.module.ts",{"_index":3705,"title":{},"body":{"modules/StartupModule.html":{}}}],["src/startup/startup.service",{"_index":468,"title":{},"body":{"injectables/ActivitiesConfigService.html":{},"injectables/HelpDeskService.html":{}}}],["src/storage/aws/aws.service.ts",{"_index":1198,"title":{},"body":{"injectables/AwsService.html":{}}}],["src/storage/aws/aws.service.ts:15",{"_index":1227,"title":{},"body":{"injectables/AwsService.html":{}}}],["src/storage/aws/aws.service.ts:16",{"_index":1230,"title":{},"body":{"injectables/AwsService.html":{}}}],["src/storage/aws/aws.service.ts:17",{"_index":1229,"title":{},"body":{"injectables/AwsService.html":{}}}],["src/storage/aws/aws.service.ts:18",{"_index":1228,"title":{},"body":{"injectables/AwsService.html":{}}}],["src/storage/aws/aws.service.ts:19",{"_index":1208,"title":{},"body":{"injectables/AwsService.html":{}}}],["src/storage/aws/aws.service.ts:48",{"_index":1216,"title":{},"body":{"injectables/AwsService.html":{}}}],["src/storage/aws/aws.service.ts:57",{"_index":1211,"title":{},"body":{"injectables/AwsService.html":{}}}],["src/storage/aws/aws.service.ts:77",{"_index":1221,"title":{},"body":{"injectables/AwsService.html":{}}}],["src/storage/aws/aws.service.ts:97",{"_index":1224,"title":{},"body":{"injectables/AwsService.html":{}}}],["src/storage/models/storage",{"_index":2211,"title":{},"body":{"injectables/DownloadsService.html":{},"classes/StorageService.html":{}}}],["src/storage/storage.controller.ts",{"_index":3717,"title":{},"body":{"controllers/StorageController.html":{}}}],["src/storage/storage.controller.ts:11",{"_index":3720,"title":{},"body":{"controllers/StorageController.html":{}}}],["src/storage/storage.controller.ts:20",{"_index":3722,"title":{},"body":{"controllers/StorageController.html":{}}}],["src/storage/storage.module",{"_index":2199,"title":{},"body":{"modules/DownloadsModule.html":{}}}],["src/storage/storage.module.ts",{"_index":3732,"title":{},"body":{"modules/StorageModule.html":{}}}],["src/table/models/table",{"_index":4730,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/table/table",{"_index":1395,"title":{},"body":{"injectables/BusinessService.html":{},"classes/CreateTableConfigInput.html":{},"classes/TableConfig.html":{},"injectables/TableConfigService.html":{},"classes/UpdateTableConfigInput.html":{}}}],["src/table/table.module",{"_index":1302,"title":{},"body":{"modules/BusinessModule.html":{},"modules/EntrepreneurModule.html":{},"modules/ExpertModule.html":{},"modules/StartupModule.html":{}}}],["src/table/table.module.ts",{"_index":3832,"title":{},"body":{"modules/TableModule.html":{}}}],["src/table/table/dto/add",{"_index":621,"title":{},"body":{"classes/AddTableJoinInput.html":{}}}],["src/table/table/dto/create",{"_index":2151,"title":{},"body":{"classes/CreateTableInput.html":{}}}],["src/table/table/dto/remove",{"_index":3370,"title":{},"body":{"classes/RemoveTableJoinInput.html":{}}}],["src/table/table/entities/column",{"_index":1489,"title":{},"body":{"classes/ColumnGroup.html":{}}}],["src/table/table/entities/table",{"_index":3817,"title":{},"body":{"classes/TableJoin.html":{}}}],["src/table/table/entities/table.entity.ts",{"_index":3764,"title":{},"body":{"classes/Table.html":{}}}],["src/table/table/entities/table.entity.ts:14",{"_index":3768,"title":{},"body":{"classes/Table.html":{}}}],["src/table/table/entities/table.entity.ts:20",{"_index":3777,"title":{},"body":{"classes/Table.html":{}}}],["src/table/table/entities/table.entity.ts:24",{"_index":3773,"title":{},"body":{"classes/Table.html":{}}}],["src/table/table/entities/table.entity.ts:31",{"_index":3775,"title":{},"body":{"classes/Table.html":{}}}],["src/table/table/entities/table.entity.ts:34",{"_index":3771,"title":{},"body":{"classes/Table.html":{}}}],["src/table/table/entities/table.entity.ts:37",{"_index":3770,"title":{},"body":{"classes/Table.html":{}}}],["src/table/table/table.service.ts",{"_index":3840,"title":{},"body":{"injectables/TableService.html":{}}}],["src/table/table/table.service.ts:122",{"_index":3855,"title":{},"body":{"injectables/TableService.html":{}}}],["src/table/table/table.service.ts:20",{"_index":3846,"title":{},"body":{"injectables/TableService.html":{}}}],["src/table/table/table.service.ts:31",{"_index":3850,"title":{},"body":{"injectables/TableService.html":{}}}],["src/table/table/table.service.ts:53",{"_index":3849,"title":{},"body":{"injectables/TableService.html":{}}}],["src/table/table/table.service.ts:65",{"_index":3853,"title":{},"body":{"injectables/TableService.html":{}}}],["src/table/table/table.service.ts:77",{"_index":3851,"title":{},"body":{"injectables/TableService.html":{}}}],["src/table/table/table.service.ts:89",{"_index":3857,"title":{},"body":{"injectables/TableService.html":{}}}],["src/terms",{"_index":3931,"title":{},"body":{"classes/TermsOfUse.html":{},"modules/TermsOfUseModule.html":{},"injectables/TermsOfUseService.html":{},"classes/UpdateTermsOfUseInput.html":{}}}],["src/user",{"_index":1664,"title":{},"body":{"modules/ConfigurationAppModule.html":{},"injectables/ConfigurationAppService.html":{},"modules/ContentModule.html":{},"injectables/ContentService.html":{},"classes/CreateUserLogInput.html":{},"modules/PhasesModule.html":{},"classes/UpdateUserConfigInput.html":{},"classes/UserConfig.html":{},"modules/UserConfigModule.html":{},"injectables/UserConfigService.html":{},"classes/UserLog.html":{},"modules/UserLogModule.html":{},"injectables/UserLogService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["src/users/args/find",{"_index":2428,"title":{},"body":{"classes/FindUsersArgs.html":{}}}],["src/users/dto/create",{"_index":2162,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["src/users/dto/update",{"_index":4244,"title":{},"body":{"classes/UpdateUserInput.html":{}}}],["src/users/entities/user.entity",{"_index":482,"title":{},"body":{"injectables/ActivitiesConfigService.html":{},"classes/Applicant.html":{},"classes/ApplicantState.html":{},"classes/Attachment.html":{},"injectables/AuthService.html":{},"classes/Business.html":{},"classes/BusinessRelationship.html":{},"classes/ConfigEvaluation.html":{},"classes/Download.html":{},"classes/Entrepreneur.html":{},"classes/EntrepreneurRelationship.html":{},"classes/EntrepreneurRelationship-1.html":{},"classes/Expert.html":{},"classes/FormTag.html":{},"interfaces/IAttachment.html":{},"classes/Invitation.html":{},"injectables/InvitationsService.html":{},"classes/Phase.html":{},"classes/PhaseExpertRelationship.html":{},"classes/PhaseRelationship.html":{},"classes/ResourcesReply.html":{},"classes/Startup.html":{},"classes/StartupLink.html":{},"classes/StartupRelationship.html":{},"injectables/UserConfigService.html":{}}}],["src/users/entities/user.entity.ts",{"_index":4250,"title":{},"body":{"classes/User.html":{}}}],["src/users/entities/user.entity.ts:14",{"_index":4251,"title":{},"body":{"classes/User.html":{}}}],["src/users/entities/user.entity.ts:18",{"_index":4268,"title":{},"body":{"classes/User.html":{}}}],["src/users/entities/user.entity.ts:22",{"_index":4256,"title":{},"body":{"classes/User.html":{}}}],["src/users/entities/user.entity.ts:26",{"_index":4254,"title":{},"body":{"classes/User.html":{}}}],["src/users/entities/user.entity.ts:30",{"_index":4263,"title":{},"body":{"classes/User.html":{}}}],["src/users/entities/user.entity.ts:43",{"_index":4266,"title":{},"body":{"classes/User.html":{}}}],["src/users/entities/user.entity.ts:47",{"_index":4260,"title":{},"body":{"classes/User.html":{}}}],["src/users/entities/user.entity.ts:50",{"_index":4252,"title":{},"body":{"classes/User.html":{}}}],["src/users/entities/user.entity.ts:53",{"_index":4269,"title":{},"body":{"classes/User.html":{}}}],["src/users/entities/user.entity.ts:60",{"_index":4270,"title":{},"body":{"classes/User.html":{}}}],["src/users/entities/user.entity.ts:66",{"_index":4261,"title":{},"body":{"classes/User.html":{}}}],["src/users/entities/user.entity.ts:72",{"_index":4259,"title":{},"body":{"classes/User.html":{}}}],["src/users/entities/user.entity.ts:76",{"_index":4265,"title":{},"body":{"classes/User.html":{}}}],["src/users/entities/user.entity.ts:80",{"_index":4262,"title":{},"body":{"classes/User.html":{}}}],["src/users/users.module",{"_index":390,"title":{},"body":{"modules/ActivitiesConfigModule.html":{},"modules/AnnouncementsModule.html":{},"modules/ApplicantModule.html":{},"modules/AuthModule.html":{},"modules/BusinessModule.html":{},"modules/ConfigurationAppModule.html":{},"modules/DownloadsModule.html":{},"modules/EntrepreneurModule.html":{},"modules/EvaluationsModule.html":{},"modules/EventsModule.html":{},"modules/ExpertModule.html":{},"modules/FormsModule.html":{},"modules/InvitationsModule.html":{},"modules/PhasesModule.html":{},"modules/ResourcesRepliesModule.html":{},"modules/TableModule.html":{}}}],["src/users/users.module.ts",{"_index":4434,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.service",{"_index":473,"title":{},"body":{"injectables/ActivitiesConfigService.html":{},"injectables/AuthService.html":{},"injectables/InvitationsService.html":{}}}],["src/users/users.service.ts",{"_index":4441,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:101",{"_index":4456,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:111",{"_index":4477,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:132",{"_index":4480,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:149",{"_index":4457,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:156",{"_index":4468,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:163",{"_index":4470,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:170",{"_index":4472,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:21",{"_index":4452,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:212",{"_index":4462,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:225",{"_index":4464,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:36",{"_index":4474,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:43",{"_index":4466,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:55",{"_index":4458,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:65",{"_index":4460,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:93",{"_index":4454,"title":{},"body":{"injectables/UsersService.html":{}}}],["stage",{"_index":2089,"title":{"classes/Stage.html":{}},"body":{"classes/CreatePhaseInput.html":{},"classes/Phase.html":{},"classes/Stage.html":{},"modules/StagesModule.html":{},"injectables/StagesService.html":{}}}],["stage.input",{"_index":3671,"title":{},"body":{"injectables/StagesService.html":{},"classes/UpdateStageInput.html":{}}}],["stage.input.ts",{"_index":2135,"title":{},"body":{"classes/CreateStageInput.html":{},"classes/UpdateStageInput.html":{}}}],["stage.input.ts:10",{"_index":2142,"title":{},"body":{"classes/CreateStageInput.html":{}}}],["stage.input.ts:11",{"_index":4215,"title":{},"body":{"classes/UpdateStageInput.html":{}}}],["stage.input.ts:14",{"_index":2144,"title":{},"body":{"classes/CreateStageInput.html":{}}}],["stage.input.ts:15",{"_index":4219,"title":{},"body":{"classes/UpdateStageInput.html":{}}}],["stage.input.ts:18",{"_index":2140,"title":{},"body":{"classes/CreateStageInput.html":{}}}],["stage.input.ts:19",{"_index":4222,"title":{},"body":{"classes/UpdateStageInput.html":{}}}],["stage.input.ts:22",{"_index":2143,"title":{},"body":{"classes/CreateStageInput.html":{}}}],["stage.input.ts:23",{"_index":4217,"title":{},"body":{"classes/UpdateStageInput.html":{}}}],["stage.input.ts:26",{"_index":2139,"title":{},"body":{"classes/CreateStageInput.html":{}}}],["stage.input.ts:27",{"_index":4221,"title":{},"body":{"classes/UpdateStageInput.html":{}}}],["stage.input.ts:30",{"_index":2141,"title":{},"body":{"classes/CreateStageInput.html":{}}}],["stage.input.ts:31",{"_index":4216,"title":{},"body":{"classes/UpdateStageInput.html":{}}}],["stage.input.ts:35",{"_index":4218,"title":{},"body":{"classes/UpdateStageInput.html":{}}}],["stage.input.ts:39",{"_index":4220,"title":{},"body":{"classes/UpdateStageInput.html":{}}}],["stage.name",{"_index":3649,"title":{},"body":{"modules/StagesModule.html":{}}}],["stageid",{"_index":3666,"title":{},"body":{"injectables/StagesService.html":{}}}],["stagemodel",{"_index":3654,"title":{},"body":{"injectables/StagesService.html":{}}}],["stages",{"_index":3626,"title":{},"body":{"classes/Stage.html":{},"injectables/StagesService.html":{}}}],["stages.resolver",{"_index":3647,"title":{},"body":{"modules/StagesModule.html":{}}}],["stages.service",{"_index":3645,"title":{},"body":{"modules/StagesModule.html":{}}}],["stages/stages.module",{"_index":862,"title":{},"body":{"modules/AppModule.html":{}}}],["stageschema",{"_index":3637,"title":{},"body":{"classes/Stage.html":{},"modules/StagesModule.html":{}}}],["stagesmodule",{"_index":832,"title":{"modules/StagesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PhasesModule.html":{},"modules/StagesModule.html":{},"modules.html":{},"overview.html":{}}}],["stagesresolver",{"_index":3646,"title":{},"body":{"modules/StagesModule.html":{}}}],["stagesservice",{"_index":3643,"title":{"injectables/StagesService.html":{}},"body":{"modules/StagesModule.html":{},"injectables/StagesService.html":{},"overview.html":{}}}],["start",{"_index":704,"title":{},"body":{"classes/Announcement.html":{},"classes/CreateAnnouncementInput.html":{},"index.html":{}}}],["start:dev",{"_index":4776,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":4778,"title":{},"body":{"index.html":{}}}],["start_time",{"_index":2849,"title":{},"body":{"injectables/IntegrationsService.html":{},"miscellaneous/functions.html":{}}}],["startat",{"_index":650,"title":{},"body":{"classes/Announcement.html":{},"classes/ConfigEvaluation.html":{},"injectables/ConfigEvaluationsService.html":{},"classes/CreateAnnouncementInput.html":{},"classes/CreateConfigEvaluationInput.html":{},"classes/CreateEventInput.html":{},"classes/CreatePhaseInput.html":{},"classes/Event.html":{},"classes/ExpertEventLink.html":{},"classes/ParticipantEventLink.html":{},"classes/Phase.html":{},"classes/TeamCoachLink.html":{},"classes/UpdateAnnouncementInput.html":{},"classes/UpdateConfigEvaluationInput.html":{},"classes/UpdateEventInput.html":{},"classes/UpdatePhaseInput.html":{}}}],["started",{"_index":4756,"title":{"index.html":{}},"body":{}}],["starter",{"_index":4767,"title":{},"body":{"index.html":{}}}],["startup",{"_index":430,"title":{"classes/Startup.html":{}},"body":{"injectables/ActivitiesConfigService.html":{},"classes/BusinessRelationship.html":{},"injectables/ContentService.html":{},"classes/CreateParticipationEventInput.html":{},"classes/CreateResourcesReplyInput.html":{},"classes/Entrepreneur.html":{},"classes/EntrepreneurRelationship-1.html":{},"classes/EntrepreneurStartupArgs.html":{},"classes/Expert.html":{},"classes/ParticipationEvent.html":{},"classes/PhaseExpertRelationship.html":{},"classes/PhaseRelationship.html":{},"classes/ResourcesReply.html":{},"classes/Startup.html":{},"classes/StartupLink.html":{},"modules/StartupModule.html":{},"classes/StartupRelationship.html":{},"injectables/UsersService.html":{},"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["startup._id",{"_index":604,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["startup._id.tostring",{"_index":557,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["startup.args",{"_index":4485,"title":{},"body":{"injectables/UsersService.html":{}}}],["startup.args.ts",{"_index":1699,"title":{},"body":{"classes/ContactArgs.html":{},"classes/LinkStartupToPhaseArgs.html":{}}}],["startup.args.ts:11",{"_index":1702,"title":{},"body":{"classes/ContactArgs.html":{},"classes/LinkStartupToPhaseArgs.html":{}}}],["startup.args.ts:16",{"_index":1708,"title":{},"body":{"classes/ContactArgs.html":{},"classes/LinkStartupToPhaseArgs.html":{}}}],["startup.args.ts:20",{"_index":3130,"title":{},"body":{"classes/LinkStartupToPhaseArgs.html":{}}}],["startup.args.ts:21",{"_index":1709,"title":{},"body":{"classes/ContactArgs.html":{}}}],["startup.args.ts:25",{"_index":1704,"title":{},"body":{"classes/ContactArgs.html":{}}}],["startup.args.ts:29",{"_index":1707,"title":{},"body":{"classes/ContactArgs.html":{}}}],["startup.args.ts:33",{"_index":1706,"title":{},"body":{"classes/ContactArgs.html":{}}}],["startup.name",{"_index":3710,"title":{},"body":{"modules/StartupModule.html":{}}}],["startup.resolver",{"_index":3708,"title":{},"body":{"modules/StartupModule.html":{}}}],["startup.service",{"_index":3706,"title":{},"body":{"modules/StartupModule.html":{}}}],["startup.tostring",{"_index":496,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["startup/startup.module",{"_index":870,"title":{},"body":{"modules/AppModule.html":{}}}],["startupconfig",{"_index":492,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["startupconfig.length",{"_index":497,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["startupconfig[0].hours[k",{"_index":505,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["startupentrepreneur",{"_index":1971,"title":{},"body":{"classes/CreateEventInput.html":{},"classes/Event.html":{},"classes/ExpertEventLink.html":{},"classes/ParticipantEventLink.html":{},"classes/TeamCoachLink.html":{}}}],["startupid",{"_index":565,"title":{},"body":{"injectables/ActivitiesConfigService.html":{},"classes/ContactArgs.html":{},"injectables/ContentService.html":{},"classes/CreateHelpDeskInput.html":{},"classes/HelpDeskFilterInput.html":{},"injectables/HelpDeskService.html":{},"classes/HelpDeskTicket.html":{},"injectables/NotificationsService.html":{},"classes/TicketChild.html":{}}}],["startupitem",{"_index":3135,"title":{},"body":{"classes/LinkStartupsExpertsArgs.html":{}}}],["startuplink",{"_index":2402,"title":{"classes/StartupLink.html":{}},"body":{"classes/Expert.html":{},"classes/LinkStartupsExpertsArgs.html":{},"classes/PhaseExpertRelationship.html":{},"classes/StartupLink.html":{}}}],["startupmodule",{"_index":391,"title":{"modules/StartupModule.html":{}},"body":{"modules/ActivitiesConfigModule.html":{},"modules/AppModule.html":{},"modules/ApplicantModule.html":{},"modules/EntrepreneurModule.html":{},"modules/EvaluationsModule.html":{},"modules/EventsModule.html":{},"modules/HelpDeskModule.html":{},"modules/PhasesModule.html":{},"modules/ResourcesRepliesModule.html":{},"modules/StartupModule.html":{},"modules/UserLogModule.html":{},"modules.html":{},"overview.html":{}}}],["startupname",{"_index":1700,"title":{},"body":{"classes/ContactArgs.html":{},"classes/CreateHelpDeskInput.html":{},"classes/HelpDeskTicket.html":{},"classes/TicketChild.html":{}}}],["startuprelationship",{"_index":1311,"title":{"classes/StartupRelationship.html":{}},"body":{"classes/BusinessRelationship.html":{},"classes/Entrepreneur.html":{},"classes/StartupRelationship.html":{}}}],["startupresolver",{"_index":3707,"title":{},"body":{"modules/StartupModule.html":{}}}],["startups",{"_index":347,"title":{},"body":{"classes/ActivitiesConfig.html":{},"injectables/ActivitiesConfigService.html":{},"classes/Assign.html":{},"classes/BusinessRelationship.html":{},"classes/Entrepreneur.html":{},"classes/Expert.html":{},"classes/LinkStartupToPhaseArgs.html":{},"classes/LinkStartupsExpertsArgs.html":{},"classes/PhaseExpertRelationship.html":{},"classes/StartupLink.html":{},"classes/StartupRelationship.html":{},"classes/UpdateActivitiesConfigInput.html":{},"classes/activities.html":{},"miscellaneous/enumerations.html":{},"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["startupschema",{"_index":2316,"title":{},"body":{"classes/EntrepreneurRelationship-1.html":{},"classes/PhaseRelationship.html":{},"classes/Startup.html":{},"modules/StartupModule.html":{}}}],["startupservice",{"_index":412,"title":{},"body":{"injectables/ActivitiesConfigService.html":{},"injectables/HelpDeskService.html":{},"modules/StartupModule.html":{},"overview.html":{}}}],["startupsservice",{"_index":411,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["startupswithoutconfig",{"_index":548,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["startupswithoutconfig[startup._id",{"_index":561,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["state",{"_index":140,"title":{},"body":{"classes/AWSSESProvider.html":{},"classes/AnnouncementApplicantsArgs.html":{},"injectables/AnnouncementsService.html":{},"classes/Applicant.html":{},"classes/ApplicantArgs.html":{},"classes/ApplicantState.html":{},"classes/Attachment.html":{},"classes/BusinessRelationship.html":{},"classes/CreateNotificationInput.html":{},"classes/CreateResourcesReplyInput.html":{},"classes/Entrepreneur.html":{},"classes/EntrepreneurRelationship-1.html":{},"classes/Evaluation.html":{},"injectables/HelpDeskService.html":{},"interfaces/IAttachment.html":{},"classes/Invitation.html":{},"controllers/InvitationsController.html":{},"injectables/InvitationsService.html":{},"classes/Notification.html":{},"classes/Notification-1.html":{},"classes/PhaseRelationship.html":{},"classes/ResourcesReply.html":{},"classes/Startup.html":{},"classes/StartupRelationship.html":{},"classes/UpdateNotificationInput.html":{},"classes/UpdateResourcesReplyInput.html":{},"injectables/UsersService.html":{}}}],["state.input.ts",{"_index":1033,"title":{},"body":{"classes/AttachmentSubmit.html":{},"classes/UpdateApplicantStateInput.html":{}}}],["state.input.ts:20",{"_index":4119,"title":{},"body":{"classes/UpdateApplicantStateInput.html":{}}}],["state.input.ts:24",{"_index":4120,"title":{},"body":{"classes/UpdateApplicantStateInput.html":{}}}],["state.input.ts:30",{"_index":4118,"title":{},"body":{"classes/UpdateApplicantStateInput.html":{}}}],["state.input.ts:34",{"_index":4121,"title":{},"body":{"classes/UpdateApplicantStateInput.html":{}}}],["state.input.ts:44",{"_index":1036,"title":{},"body":{"classes/AttachmentSubmit.html":{}}}],["state.input.ts:48",{"_index":1037,"title":{},"body":{"classes/AttachmentSubmit.html":{}}}],["state.input.ts:52",{"_index":1035,"title":{},"body":{"classes/AttachmentSubmit.html":{}}}],["states",{"_index":961,"title":{},"body":{"classes/Applicant.html":{},"classes/ApplicantState.html":{},"classes/Attachment.html":{},"injectables/ContentService.html":{},"interfaces/IAttachment.html":{},"injectables/InvitationsService.html":{},"miscellaneous/enumerations.html":{}}}],["states.enum",{"_index":749,"title":{},"body":{"classes/AnnouncementApplicantsArgs.html":{},"classes/Applicant.html":{},"classes/ApplicantArgs.html":{},"classes/ApplicantState.html":{},"classes/Attachment.html":{},"classes/AttachmentSubmit.html":{},"classes/CreateNotificationInput.html":{},"injectables/HelpDeskService.html":{},"interfaces/IAttachment.html":{},"classes/Invitation.html":{},"injectables/InvitationsService.html":{},"classes/Notification.html":{},"classes/Notification-1.html":{},"classes/SelectApplicantsArgs.html":{},"classes/UpdateApplicantStateInput.html":{},"classes/UpdateNotificationInput.html":{},"injectables/UsersService.html":{}}}],["states.enum.ts",{"_index":4618,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["states.ts",{"_index":4628,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["static",{"_index":2485,"title":{},"body":{"injectables/FormSubscriptionService.html":{}}}],["status",{"_index":994,"title":{},"body":{"classes/Applicant.html":{},"classes/ApplicantState.html":{},"classes/Attachment.html":{},"classes/HelpDeskFilterInput.html":{},"injectables/HelpDeskService.html":{},"classes/HelpDeskTicket.html":{},"interfaces/IAttachment.html":{},"classes/TicketChild.html":{},"classes/UpdateHelpDeskInput.html":{}}}],["status.enum",{"_index":2684,"title":{},"body":{"classes/HelpDeskFilterInput.html":{},"injectables/HelpDeskService.html":{},"classes/HelpDeskTicket.html":{},"classes/TicketChild.html":{},"classes/UpdateHelpDeskInput.html":{}}}],["status.enum.ts",{"_index":4636,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["stay",{"_index":4795,"title":{},"body":{"index.html":{}}}],["steps",{"_index":552,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["storage",{"_index":2180,"title":{},"body":{"classes/Download.html":{},"controllers/StorageController.html":{},"classes/StorageService.html":{}}}],["storage.controller",{"_index":3733,"title":{},"body":{"modules/StorageModule.html":{}}}],["storage/storage.module",{"_index":863,"title":{},"body":{"modules/AppModule.html":{}}}],["storagecontroller",{"_index":3716,"title":{"controllers/StorageController.html":{}},"body":{"controllers/StorageController.html":{},"modules/StorageModule.html":{}}}],["storagemodule",{"_index":833,"title":{"modules/StorageModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DownloadsModule.html":{},"modules/StorageModule.html":{},"modules.html":{},"overview.html":{}}}],["storageservice",{"_index":1238,"title":{"classes/StorageService.html":{}},"body":{"injectables/AwsService.html":{},"injectables/DownloadsService.html":{},"controllers/StorageController.html":{},"modules/StorageModule.html":{},"classes/StorageService.html":{},"overview.html":{}}}],["stored",{"_index":1997,"title":{},"body":{"classes/CreateFormInput.html":{},"classes/Download.html":{}}}],["stream",{"_index":3742,"title":{},"body":{"classes/StorageService.html":{}}}],["strength",{"_index":1421,"title":{},"body":{"injectables/BusinessService.html":{}}}],["string",{"_index":32,"title":{},"body":{"classes/AWSSESProvider.html":{},"classes/AcceptInvitationDto.html":{},"classes/Acta.html":{},"injectables/ActaService.html":{},"classes/ActivitiesConfig.html":{},"injectables/ActivitiesConfigService.html":{},"classes/AddTableJoinInput.html":{},"classes/Announcement.html":{},"classes/AnnouncementApplicantArgs.html":{},"classes/AnnouncementApplicantsArgs.html":{},"injectables/AnnouncementsService.html":{},"classes/Applicant.html":{},"classes/ApplicantArgs.html":{},"classes/ApplicantState.html":{},"classes/Assign.html":{},"classes/Attachment.html":{},"classes/AttachmentSubmit.html":{},"classes/AuthCode.html":{},"injectables/AuthCodeService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AwsService.html":{},"classes/Business.html":{},"classes/BusinessRelationship.html":{},"injectables/BusinessService.html":{},"classes/CloseFormSubscriptionArgs.html":{},"classes/ColumnGroup.html":{},"classes/ConfigEvaluation.html":{},"injectables/ConfigEvaluationsService.html":{},"injectables/ConfigNotificationsService.html":{},"classes/ConfigurationApp.html":{},"injectables/ConfigurationAppService.html":{},"classes/ContactArgs.html":{},"classes/ContactServiceLink.html":{},"classes/ContactServicesInput.html":{},"classes/Content.html":{},"injectables/ContentService.html":{},"classes/CreateActaInput.html":{},"classes/CreateActivitiesConfigInput.html":{},"classes/CreateAnnouncementInput.html":{},"classes/CreateConfigEvaluationInput.html":{},"classes/CreateConfigNotificationInput.html":{},"classes/CreateContentInput.html":{},"classes/CreateEventInput.html":{},"classes/CreateFormInput.html":{},"classes/CreateFormSubscriptionInput.html":{},"classes/CreateFormTagInput.html":{},"classes/CreateHelpDeskInput.html":{},"classes/CreateIntegrationInput.html":{},"classes/CreateInvitationArgs.html":{},"classes/CreateNotificationInput.html":{},"classes/CreateParticipationEventInput.html":{},"classes/CreatePhaseInput.html":{},"classes/CreateResourceInput.html":{},"classes/CreateResourcesReplyInput.html":{},"classes/CreateRolInput.html":{},"classes/CreateSiteInput.html":{},"classes/CreateStageInput.html":{},"classes/CreateTableConfigInput.html":{},"classes/CreateTableInput.html":{},"classes/CreateTypesEventInput.html":{},"classes/CreateUserInput.html":{},"classes/Download.html":{},"injectables/DownloadsService.html":{},"interfaces/EmailsRepository.html":{},"injectables/EmailsService.html":{},"classes/Entrepreneur.html":{},"classes/EntrepreneurRelationship.html":{},"classes/EntrepreneurRelationship-1.html":{},"classes/EntrepreneurStartupArgs.html":{},"classes/Evaluation.html":{},"classes/Event.html":{},"classes/Expert.html":{},"classes/ExpertEventLink.html":{},"classes/FindUsersArgs.html":{},"classes/Form.html":{},"classes/FormSubmission.html":{},"classes/FormSubscription.html":{},"injectables/FormSubscriptionService.html":{},"classes/FormTag.html":{},"injectables/FormTagService.html":{},"injectables/FormsService.html":{},"classes/GetSubmittedFilesArgs.html":{},"guards/GqlAuthGuard.html":{},"classes/HelpDeskFilterInput.html":{},"injectables/HelpDeskService.html":{},"classes/HelpDeskTicket.html":{},"classes/Hours.html":{},"interfaces/IAttachment.html":{},"classes/Integration.html":{},"injectables/IntegrationsService.html":{},"classes/Invitation.html":{},"injectables/InvitationsService.html":{},"classes/LinkExpertsToPhaseArgs.html":{},"classes/LinkStartupToPhaseArgs.html":{},"classes/LinkStartupsExpertsArgs.html":{},"classes/LinkWithTargetsArgs.html":{},"classes/LinkWithTargetsByRequestArgs.html":{},"classes/Notification.html":{},"classes/Notification-1.html":{},"injectables/NotificationsService.html":{},"classes/ParticipantEventLink.html":{},"classes/ParticipationEvent.html":{},"injectables/ParticipationEventsService.html":{},"classes/Phase.html":{},"classes/PhaseExpertRelationship.html":{},"classes/PhaseRelationship.html":{},"classes/Rating.html":{},"classes/RemoveTableJoinInput.html":{},"classes/Resource.html":{},"classes/ResourcesReply.html":{},"injectables/ResourcesService.html":{},"classes/Rol.html":{},"injectables/RolService.html":{},"classes/SearchBatchInput.html":{},"classes/SelectApplicantsArgs.html":{},"classes/SendEmailInput.html":{},"classes/SendGridProvider.html":{},"classes/SignUpInput.html":{},"classes/Site.html":{},"injectables/SitesService.html":{},"classes/Stage.html":{},"injectables/StagesService.html":{},"classes/Startup.html":{},"classes/StartupLink.html":{},"classes/StartupRelationship.html":{},"classes/StorageService.html":{},"classes/SubmitAnnouncementDocInput.html":{},"classes/SubmitFileInput.html":{},"classes/SubmitFormSubscriptionArgs.html":{},"classes/Table.html":{},"classes/TableConfig.html":{},"injectables/TableConfigService.html":{},"classes/TableJoin.html":{},"injectables/TableService.html":{},"classes/TeamCoachLink.html":{},"classes/TermsOfUse.html":{},"injectables/TermsOfUseService.html":{},"injectables/TicketCategoriesService.html":{},"classes/TicketCategory.html":{},"classes/TicketChild.html":{},"classes/TypesEvent.html":{},"injectables/TypesEventsService.html":{},"classes/TypesNotification.html":{},"classes/UpdateActaInput.html":{},"classes/UpdateActivitiesConfigInput.html":{},"classes/UpdateAnnouncementInput.html":{},"classes/UpdateApplicantStateInput.html":{},"classes/UpdateConfigEvaluationInput.html":{},"classes/UpdateConfigurationAppInput.html":{},"classes/UpdateContentInput.html":{},"classes/UpdateEventInput.html":{},"classes/UpdateExpertInput.html":{},"classes/UpdateFormInput.html":{},"classes/UpdateFormTagInput.html":{},"classes/UpdateHelpDeskInput.html":{},"classes/UpdateNotificationInput.html":{},"classes/UpdateParticipationEventInput.html":{},"classes/UpdatePhaseInput.html":{},"classes/UpdateResourceInput.html":{},"classes/UpdateResourcesReplyInput.html":{},"classes/UpdateRolInput.html":{},"classes/UpdateSiteInput.html":{},"classes/UpdateStageInput.html":{},"classes/UpdateTableConfigInput.html":{},"classes/UpdateTermsOfUseInput.html":{},"classes/UpdateTypesEventInput.html":{},"classes/UpdateUserConfigInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"classes/UserConfig.html":{},"injectables/UserConfigService.html":{},"classes/UserLog.html":{},"injectables/UserLogService.html":{},"injectables/UsersService.html":{},"classes/activities.html":{},"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["stringify",{"_index":2856,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["su",{"_index":4543,"title":{},"body":{"injectables/UsersService.html":{}}}],["subject",{"_index":131,"title":{},"body":{"classes/AWSSESProvider.html":{},"classes/ContactArgs.html":{},"interfaces/EmailsRepository.html":{},"injectables/EmailsService.html":{},"classes/SendEmailInput.html":{},"classes/SendGridProvider.html":{},"injectables/UsersService.html":{}}}],["submission",{"_index":991,"title":{},"body":{"classes/Applicant.html":{},"classes/ApplicantState.html":{},"classes/Attachment.html":{},"injectables/BusinessService.html":{},"classes/FormSubmission.html":{},"classes/FormSubmissionFiles.html":{},"classes/FormSubscription.html":{},"injectables/FormSubscriptionService.html":{},"interfaces/IAttachment.html":{},"classes/SubmitAnnouncementDocInput.html":{}}}],["submission.ts",{"_index":2460,"title":{},"body":{"classes/FormSubmission.html":{}}}],["submission.ts:12",{"_index":2462,"title":{},"body":{"classes/FormSubmission.html":{}}}],["submission.ts:9",{"_index":2461,"title":{},"body":{"classes/FormSubmission.html":{}}}],["submissions",{"_index":690,"title":{},"body":{"classes/Announcement.html":{},"classes/Applicant.html":{},"classes/ApplicantState.html":{},"classes/Attachment.html":{},"classes/CreateAnnouncementInput.html":{},"classes/CreateFormInput.html":{},"interfaces/IAttachment.html":{},"classes/SubmitAnnouncementDocInput.html":{}}}],["submissions'})@isnotempty",{"_index":3752,"title":{},"body":{"classes/SubmitAnnouncementDocInput.html":{}}}],["submit",{"_index":726,"title":{},"body":{"classes/Announcement.html":{},"injectables/FormSubscriptionService.html":{}}}],["submit(undefined",{"_index":2516,"title":{},"body":{"injectables/FormSubscriptionService.html":{}}}],["submit.'})@prop({default",{"_index":667,"title":{},"body":{"classes/Announcement.html":{}}}],["submitannouncementdocinput",{"_index":3743,"title":{"classes/SubmitAnnouncementDocInput.html":{}},"body":{"classes/SubmitAnnouncementDocInput.html":{}}}],["submited",{"_index":2511,"title":{},"body":{"injectables/FormSubscriptionService.html":{}}}],["submitfile",{"_index":2491,"title":{},"body":{"injectables/FormSubscriptionService.html":{}}}],["submitfile(undefined",{"_index":2519,"title":{},"body":{"injectables/FormSubscriptionService.html":{}}}],["submitfileinput",{"_index":2520,"title":{"classes/SubmitFileInput.html":{}},"body":{"injectables/FormSubscriptionService.html":{},"classes/SubmitFileInput.html":{}}}],["submitformsubscriptionargs",{"_index":2517,"title":{"classes/SubmitFormSubscriptionArgs.html":{}},"body":{"injectables/FormSubscriptionService.html":{},"classes/SubmitFormSubscriptionArgs.html":{}}}],["submitted",{"_index":727,"title":{},"body":{"classes/Announcement.html":{},"classes/Applicant.html":{},"classes/ApplicantState.html":{},"classes/Attachment.html":{},"classes/GetSubmittedFilesArgs.html":{},"interfaces/IAttachment.html":{},"classes/SubmitFileInput.html":{}}}],["submitted.'})@isstring",{"_index":3757,"title":{},"body":{"classes/SubmitFileInput.html":{}}}],["submitted.'})@prop({default",{"_index":674,"title":{},"body":{"classes/Announcement.html":{}}}],["subscribe",{"_index":2492,"title":{},"body":{"injectables/FormSubscriptionService.html":{},"injectables/NotificationsService.html":{}}}],["subscription",{"_index":2501,"title":{},"body":{"injectables/FormSubscriptionService.html":{},"injectables/NotificationsService.html":{}}}],["subscription.args",{"_index":2529,"title":{},"body":{"injectables/FormSubscriptionService.html":{}}}],["subscription.args.ts",{"_index":1483,"title":{},"body":{"classes/CloseFormSubscriptionArgs.html":{},"classes/SubmitFormSubscriptionArgs.html":{}}}],["subscription.args.ts:10",{"_index":1486,"title":{},"body":{"classes/CloseFormSubscriptionArgs.html":{}}}],["subscription.args.ts:11",{"_index":3763,"title":{},"body":{"classes/SubmitFormSubscriptionArgs.html":{}}}],["subscription.args.ts:15",{"_index":1485,"title":{},"body":{"classes/CloseFormSubscriptionArgs.html":{},"classes/SubmitFormSubscriptionArgs.html":{}}}],["subscription.data",{"_index":2556,"title":{},"body":{"injectables/FormSubscriptionService.html":{}}}],["subscription.entity",{"_index":2527,"title":{},"body":{"injectables/FormSubscriptionService.html":{},"modules/FormsModule.html":{}}}],["subscription.entity.ts",{"_index":2468,"title":{},"body":{"classes/FormSubscription.html":{}}}],["subscription.entity.ts:13",{"_index":2470,"title":{},"body":{"classes/FormSubscription.html":{}}}],["subscription.entity.ts:17",{"_index":2473,"title":{},"body":{"classes/FormSubscription.html":{}}}],["subscription.entity.ts:20",{"_index":2477,"title":{},"body":{"classes/FormSubscription.html":{}}}],["subscription.entity.ts:24",{"_index":2474,"title":{},"body":{"classes/FormSubscription.html":{}}}],["subscription.entity.ts:28",{"_index":2475,"title":{},"body":{"classes/FormSubscription.html":{}}}],["subscription.entity.ts:32",{"_index":2472,"title":{},"body":{"classes/FormSubscription.html":{}}}],["subscription.entity.ts:36",{"_index":2476,"title":{},"body":{"classes/FormSubscription.html":{}}}],["subscription.entity.ts:40",{"_index":2478,"title":{},"body":{"classes/FormSubscription.html":{}}}],["subscription.entity.ts:43",{"_index":2471,"title":{},"body":{"classes/FormSubscription.html":{}}}],["subscription.entity.ts:46",{"_index":2479,"title":{},"body":{"classes/FormSubscription.html":{}}}],["subscription.input",{"_index":2525,"title":{},"body":{"injectables/FormSubscriptionService.html":{}}}],["subscription.input.ts",{"_index":2006,"title":{},"body":{"classes/CreateFormSubscriptionInput.html":{}}}],["subscription.input.ts:12",{"_index":2009,"title":{},"body":{"classes/CreateFormSubscriptionInput.html":{}}}],["subscription.input.ts:16",{"_index":2010,"title":{},"body":{"classes/CreateFormSubscriptionInput.html":{}}}],["subscription.input.ts:20",{"_index":2008,"title":{},"body":{"classes/CreateFormSubscriptionInput.html":{}}}],["subscription.input.ts:24",{"_index":2011,"title":{},"body":{"classes/CreateFormSubscriptionInput.html":{}}}],["subscription.input.ts:27",{"_index":2013,"title":{},"body":{"classes/CreateFormSubscriptionInput.html":{}}}],["subscription.opened",{"_index":2554,"title":{},"body":{"injectables/FormSubscriptionService.html":{}}}],["subscription.resolver",{"_index":2622,"title":{},"body":{"modules/FormsModule.html":{}}}],["subscription.service",{"_index":2623,"title":{},"body":{"modules/FormsModule.html":{}}}],["subscription.service.ts",{"_index":2484,"title":{},"body":{"injectables/FormSubscriptionService.html":{}}}],["subscription.service.ts:112",{"_index":2500,"title":{},"body":{"injectables/FormSubscriptionService.html":{}}}],["subscription.service.ts:133",{"_index":2513,"title":{},"body":{"injectables/FormSubscriptionService.html":{}}}],["subscription.service.ts:151",{"_index":2506,"title":{},"body":{"injectables/FormSubscriptionService.html":{}}}],["subscription.service.ts:163",{"_index":2521,"title":{},"body":{"injectables/FormSubscriptionService.html":{}}}],["subscription.service.ts:179",{"_index":2510,"title":{},"body":{"injectables/FormSubscriptionService.html":{}}}],["subscription.service.ts:31",{"_index":2497,"title":{},"body":{"injectables/FormSubscriptionService.html":{}}}],["subscription.service.ts:44",{"_index":2504,"title":{},"body":{"injectables/FormSubscriptionService.html":{}}}],["subscription.service.ts:54",{"_index":2503,"title":{},"body":{"injectables/FormSubscriptionService.html":{}}}],["subscription.service.ts:73",{"_index":2522,"title":{},"body":{"injectables/FormSubscriptionService.html":{}}}],["subscription.service.ts:82",{"_index":2518,"title":{},"body":{"injectables/FormSubscriptionService.html":{}}}],["subscription/args/close",{"_index":1482,"title":{},"body":{"classes/CloseFormSubscriptionArgs.html":{}}}],["subscription/args/get",{"_index":2657,"title":{},"body":{"classes/GetSubmittedFilesArgs.html":{}}}],["subscription/args/submit",{"_index":3762,"title":{},"body":{"classes/SubmitFormSubscriptionArgs.html":{}}}],["subscription/dto/create",{"_index":2005,"title":{},"body":{"classes/CreateFormSubscriptionInput.html":{}}}],["subscription/entities/form",{"_index":2467,"title":{},"body":{"classes/FormSubscription.html":{},"modules/FormsModule.html":{}}}],["subscription/form",{"_index":2483,"title":{},"body":{"injectables/FormSubscriptionService.html":{},"modules/FormsModule.html":{}}}],["subscription/inputs/submit",{"_index":3754,"title":{},"body":{"classes/SubmitFileInput.html":{}}}],["subscriptionform",{"_index":2544,"title":{},"body":{"injectables/FormSubscriptionService.html":{}}}],["subscriptionform.target",{"_index":2547,"title":{},"body":{"injectables/FormSubscriptionService.html":{}}}],["subscriptions",{"_index":938,"title":{},"body":{"modules/AppModule.html":{},"injectables/FormSubscriptionService.html":{},"dependencies.html":{}}}],["subsequent",{"_index":2987,"title":{},"body":{"classes/Invitation.html":{}}}],["successful",{"_index":141,"title":{},"body":{"classes/AWSSESProvider.html":{}}}],["successfully",{"_index":137,"title":{},"body":{"classes/AWSSESProvider.html":{},"injectables/EmailsService.html":{},"classes/SendGridProvider.html":{}}}],["summary",{"_index":4751,"title":{},"body":{"miscellaneous/functions.html":{}}}],["super",{"_index":5104,"title":{},"body":{"miscellaneous/variables.html":{}}}],["superadmin",{"_index":4740,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["support",{"_index":4733,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{}}}],["sure",{"_index":5049,"title":{},"body":{"miscellaneous/variables.html":{}}}],["survey",{"_index":4656,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["sus",{"_index":675,"title":{},"body":{"classes/Announcement.html":{}}}],["svg",{"_index":4937,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":1558,"title":{},"body":{"injectables/ConfigEvaluationsService.html":{},"injectables/ConfigurationAppService.html":{},"injectables/HelpDeskService.html":{},"injectables/StagesService.html":{},"classes/TemplateInput.html":{}}}],["sábado",{"_index":4414,"title":{},"body":{"injectables/UserLogService.html":{}}}],["t.type",{"_index":4322,"title":{},"body":{"injectables/UserConfigService.html":{}}}],["tabla",{"_index":3871,"title":{},"body":{"injectables/TableService.html":{}}}],["tablas",{"_index":4843,"title":{},"body":{"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["table",{"_index":622,"title":{"classes/Table.html":{}},"body":{"classes/AddTableJoinInput.html":{},"injectables/BusinessService.html":{},"classes/CreateTableConfigInput.html":{},"classes/CreateTableInput.html":{},"classes/Download.html":{},"injectables/DownloadsService.html":{},"classes/RemoveTableJoinInput.html":{},"classes/Table.html":{},"classes/TableConfig.html":{},"injectables/TableConfigService.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"classes/UpdateTableConfigInput.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["table.'})@isnotempty",{"_index":2154,"title":{},"body":{"classes/CreateTableInput.html":{}}}],["table.'})@prop({required",{"_index":3772,"title":{},"body":{"classes/Table.html":{},"classes/TableConfig.html":{}}}],["table.input",{"_index":3858,"title":{},"body":{"injectables/TableService.html":{}}}],["table.input.ts",{"_index":2152,"title":{},"body":{"classes/CreateTableInput.html":{}}}],["table.input.ts:12",{"_index":2157,"title":{},"body":{"classes/CreateTableInput.html":{}}}],["table.input.ts:16",{"_index":2155,"title":{},"body":{"classes/CreateTableInput.html":{}}}],["table.locator.includes('applicants",{"_index":3910,"title":{},"body":{"injectables/TableService.html":{}}}],["table.locator.includes('communities",{"_index":3904,"title":{},"body":{"injectables/TableService.html":{}}}],["table.locator.includes('evaluation",{"_index":3906,"title":{},"body":{"injectables/TableService.html":{}}}],["table.locator.includes('experts",{"_index":3902,"title":{},"body":{"injectables/TableService.html":{}}}],["table.locator.includes('resource",{"_index":3908,"title":{},"body":{"injectables/TableService.html":{}}}],["table.locator.includes('selected",{"_index":3911,"title":{},"body":{"injectables/TableService.html":{}}}],["table.name",{"_index":3838,"title":{},"body":{"modules/TableModule.html":{}}}],["table/collection",{"_index":1995,"title":{},"body":{"classes/CreateFormInput.html":{}}}],["table/entities/table.entity",{"_index":3837,"title":{},"body":{"modules/TableModule.html":{}}}],["table/table.module",{"_index":878,"title":{},"body":{"modules/AppModule.html":{}}}],["table/table.resolver",{"_index":3834,"title":{},"body":{"modules/TableModule.html":{}}}],["table/table.service",{"_index":3836,"title":{},"body":{"modules/TableModule.html":{}}}],["table?.joins",{"_index":3881,"title":{},"body":{"injectables/TableService.html":{}}}],["tablecolumn",{"_index":1492,"title":{},"body":{"classes/ColumnGroup.html":{},"classes/Table.html":{},"classes/TableConfig.html":{},"classes/TableJoin.html":{},"classes/UpdateTableConfigInput.html":{}}}],["tablecolumns",{"_index":1464,"title":{},"body":{"injectables/BusinessService.html":{}}}],["tablecolumns.map((col",{"_index":1473,"title":{},"body":{"injectables/BusinessService.html":{}}}],["tablecolumntype",{"_index":4631,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["tableconfig",{"_index":3781,"title":{"classes/TableConfig.html":{}},"body":{"classes/TableConfig.html":{},"injectables/TableConfigService.html":{},"modules/TableModule.html":{}}}],["tableconfig.name",{"_index":3839,"title":{},"body":{"modules/TableModule.html":{}}}],["tableconfigmodel",{"_index":3797,"title":{},"body":{"injectables/TableConfigService.html":{}}}],["tableconfigresolver",{"_index":3835,"title":{},"body":{"modules/TableModule.html":{}}}],["tableconfigs",{"_index":3809,"title":{},"body":{"injectables/TableConfigService.html":{}}}],["tableconfigschema",{"_index":3792,"title":{},"body":{"classes/TableConfig.html":{},"modules/TableModule.html":{}}}],["tableconfigservice",{"_index":1332,"title":{"injectables/TableConfigService.html":{}},"body":{"injectables/BusinessService.html":{},"injectables/TableConfigService.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"overview.html":{}}}],["tablejoin",{"_index":628,"title":{"classes/TableJoin.html":{}},"body":{"classes/AddTableJoinInput.html":{},"classes/Table.html":{},"classes/TableJoin.html":{}}}],["tablejoins",{"_index":3880,"title":{},"body":{"injectables/TableService.html":{}}}],["tablejoins.map",{"_index":3883,"title":{},"body":{"injectables/TableService.html":{}}}],["tablejoinschema",{"_index":3774,"title":{},"body":{"classes/Table.html":{},"classes/TableJoin.html":{}}}],["tablemodel",{"_index":3847,"title":{},"body":{"injectables/TableService.html":{}}}],["tablemodule",{"_index":834,"title":{"modules/TableModule.html":{}},"body":{"modules/AppModule.html":{},"modules/BusinessModule.html":{},"modules/EntrepreneurModule.html":{},"modules/ExpertModule.html":{},"modules/StartupModule.html":{},"modules/TableModule.html":{},"modules.html":{},"overview.html":{}}}],["tableresolver",{"_index":3833,"title":{},"body":{"modules/TableModule.html":{}}}],["tables",{"_index":1491,"title":{},"body":{"classes/ColumnGroup.html":{},"classes/Table.html":{},"classes/TableJoin.html":{},"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["tableschema",{"_index":3779,"title":{},"body":{"classes/Table.html":{},"modules/TableModule.html":{}}}],["tableservice",{"_index":3831,"title":{"injectables/TableService.html":{}},"body":{"modules/TableModule.html":{},"injectables/TableService.html":{},"overview.html":{}}}],["tableutilities",{"_index":3860,"title":{},"body":{"injectables/TableService.html":{}}}],["tableutilities.convertformtocolumns",{"_index":3888,"title":{},"body":{"injectables/TableService.html":{}}}],["tag",{"_index":2592,"title":{},"body":{"injectables/FormTagService.html":{}}}],["tag.entity",{"_index":2453,"title":{},"body":{"classes/Form.html":{},"injectables/FormTagService.html":{},"modules/FormsModule.html":{}}}],["tag.entity.ts",{"_index":2575,"title":{},"body":{"classes/FormTag.html":{}}}],["tag.entity.ts:11",{"_index":2576,"title":{},"body":{"classes/FormTag.html":{}}}],["tag.entity.ts:15",{"_index":2579,"title":{},"body":{"classes/FormTag.html":{}}}],["tag.entity.ts:22",{"_index":2578,"title":{},"body":{"classes/FormTag.html":{}}}],["tag.entity.ts:25",{"_index":2577,"title":{},"body":{"classes/FormTag.html":{}}}],["tag.entity.ts:28",{"_index":2580,"title":{},"body":{"classes/FormTag.html":{}}}],["tag.entity.ts:35",{"_index":2581,"title":{},"body":{"classes/FormTag.html":{}}}],["tag.input",{"_index":2600,"title":{},"body":{"injectables/FormTagService.html":{}}}],["tag.input.ts",{"_index":2017,"title":{},"body":{"classes/CreateFormTagInput.html":{},"classes/UpdateFormTagInput.html":{}}}],["tag.input.ts:10",{"_index":2018,"title":{},"body":{"classes/CreateFormTagInput.html":{},"classes/UpdateFormTagInput.html":{}}}],["tag.input.ts:14",{"_index":4179,"title":{},"body":{"classes/UpdateFormTagInput.html":{}}}],["tag.resolver",{"_index":2619,"title":{},"body":{"modules/FormsModule.html":{}}}],["tag.service",{"_index":2620,"title":{},"body":{"modules/FormsModule.html":{}}}],["tag.service.ts",{"_index":2586,"title":{},"body":{"injectables/FormTagService.html":{}}}],["tag.service.ts:16",{"_index":2591,"title":{},"body":{"injectables/FormTagService.html":{}}}],["tag.service.ts:24",{"_index":2595,"title":{},"body":{"injectables/FormTagService.html":{}}}],["tag.service.ts:32",{"_index":2596,"title":{},"body":{"injectables/FormTagService.html":{}}}],["tag.service.ts:40",{"_index":2597,"title":{},"body":{"injectables/FormTagService.html":{}}}],["tag.service.ts:49",{"_index":2599,"title":{},"body":{"injectables/FormTagService.html":{}}}],["tag.service.ts:60",{"_index":2594,"title":{},"body":{"injectables/FormTagService.html":{}}}],["tag.service.ts:9",{"_index":2588,"title":{},"body":{"injectables/FormTagService.html":{}}}],["tag/dto/create",{"_index":2016,"title":{},"body":{"classes/CreateFormTagInput.html":{}}}],["tag/dto/update",{"_index":4178,"title":{},"body":{"classes/UpdateFormTagInput.html":{}}}],["tag/entities/form",{"_index":2452,"title":{},"body":{"classes/Form.html":{},"classes/FormTag.html":{},"modules/FormsModule.html":{}}}],["tag/form",{"_index":2585,"title":{},"body":{"injectables/FormTagService.html":{},"modules/FormsModule.html":{}}}],["tags",{"_index":1977,"title":{},"body":{"classes/CreateFormInput.html":{},"classes/Form.html":{},"classes/FormTag.html":{},"injectables/FormTagService.html":{},"classes/UpdateFormInput.html":{}}}],["tareas",{"_index":1860,"title":{},"body":{"injectables/ContentService.html":{},"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["target",{"_index":504,"title":{},"body":{"injectables/ActivitiesConfigService.html":{},"classes/Announcement.html":{},"classes/CreateAnnouncementInput.html":{},"classes/CreateFormInput.html":{},"classes/CreateFormSubscriptionInput.html":{},"classes/CreateNotificationInput.html":{},"classes/FindFormsArgs.html":{},"classes/Form.html":{},"classes/FormSubscription.html":{},"injectables/FormSubscriptionService.html":{},"classes/GetSubmittedFilesArgs.html":{},"injectables/HelpDeskService.html":{},"classes/Notification.html":{},"classes/Notification-1.html":{},"injectables/NotificationsService.html":{},"classes/SubmitAnnouncementDocInput.html":{},"classes/UpdateFormInput.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{}}}],["target.'})@isstring",{"_index":3749,"title":{},"body":{"classes/SubmitAnnouncementDocInput.html":{}}}],["targetform",{"_index":2567,"title":{},"body":{"injectables/FormSubscriptionService.html":{}}}],["targetids",{"_index":1452,"title":{},"body":{"injectables/BusinessService.html":{},"classes/LinkWithTargetsArgs.html":{},"classes/LinkWithTargetsByRequestArgs.html":{}}}],["targets",{"_index":1389,"title":{},"body":{"injectables/BusinessService.html":{},"classes/LinkWithTargetsByRequestArgs.html":{},"injectables/NotificationsService.html":{}}}],["targets.args.ts",{"_index":3140,"title":{},"body":{"classes/LinkWithTargetsArgs.html":{}}}],["targets.args.ts:11",{"_index":3142,"title":{},"body":{"classes/LinkWithTargetsArgs.html":{}}}],["targets.args.ts:16",{"_index":3143,"title":{},"body":{"classes/LinkWithTargetsArgs.html":{}}}],["targets.enum",{"_index":725,"title":{},"body":{"classes/Announcement.html":{},"classes/CreateAnnouncementInput.html":{},"classes/SelectApplicantsArgs.html":{}}}],["targets.enum.ts",{"_index":4615,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["targets.map((target",{"_index":3254,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["task",{"_index":4729,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["te",{"_index":4529,"title":{},"body":{"injectables/UsersService.html":{}}}],["team",{"_index":420,"title":{},"body":{"injectables/ActivitiesConfigService.html":{},"classes/Event.html":{},"classes/ExpertEventLink.html":{},"classes/ParticipantEventLink.html":{},"classes/TeamCoachLink.html":{},"classes/UpdateActivitiesConfigInput.html":{},"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["teamcoach",{"_index":613,"title":{},"body":{"injectables/ActivitiesConfigService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["teamcoach._id.tostring",{"_index":615,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["teamcoach.relationsassign.startups",{"_index":617,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["teamcoaches",{"_index":348,"title":{},"body":{"classes/ActivitiesConfig.html":{},"classes/Assign.html":{},"classes/CreateEventInput.html":{},"classes/Event.html":{},"classes/ExpertEventLink.html":{},"classes/ParticipantEventLink.html":{},"classes/TeamCoachLink.html":{},"classes/UpdateActivitiesConfigInput.html":{},"classes/UpdateEventInput.html":{},"classes/activities.html":{}}}],["teamcoachlink",{"_index":2366,"title":{"classes/TeamCoachLink.html":{}},"body":{"classes/Event.html":{},"classes/ExpertEventLink.html":{},"classes/ParticipantEventLink.html":{},"classes/TeamCoachLink.html":{}}}],["teamcoachsubmit",{"_index":1968,"title":{},"body":{"classes/CreateEventInput.html":{},"classes/UpdateEventInput.html":{}}}],["telephony",{"_index":2911,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["tempbucketname",{"_index":1202,"title":{},"body":{"injectables/AwsService.html":{}}}],["template",{"_index":55,"title":{},"body":{"classes/AWSSESProvider.html":{},"controllers/EmailsController.html":{},"interfaces/EmailsRepository.html":{},"injectables/EmailsService.html":{},"classes/SendGridProvider.html":{},"classes/TemplateInput.html":{}}}],["template_id",{"_index":2958,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["templatedata",{"_index":87,"title":{},"body":{"classes/AWSSESProvider.html":{}}}],["templateid",{"_index":159,"title":{},"body":{"classes/AWSSESProvider.html":{},"injectables/EmailsService.html":{},"classes/SendGridProvider.html":{}}}],["templateinput",{"_index":57,"title":{"classes/TemplateInput.html":{}},"body":{"classes/AWSSESProvider.html":{},"controllers/EmailsController.html":{},"interfaces/EmailsRepository.html":{},"injectables/EmailsService.html":{},"classes/SendGridProvider.html":{},"classes/TemplateInput.html":{}}}],["templateinput.from",{"_index":150,"title":{},"body":{"classes/AWSSESProvider.html":{},"injectables/EmailsService.html":{},"classes/SendGridProvider.html":{}}}],["templateinput.personalizations.map((i",{"_index":153,"title":{},"body":{"classes/AWSSESProvider.html":{}}}],["templateinput.template",{"_index":151,"title":{},"body":{"classes/AWSSESProvider.html":{},"injectables/EmailsService.html":{}}}],["templatenames",{"_index":80,"title":{},"body":{"classes/AWSSESProvider.html":{},"injectables/EmailsService.html":{},"classes/SendGridProvider.html":{},"miscellaneous/variables.html":{}}}],["templatenames[templateinput.template",{"_index":161,"title":{},"body":{"classes/AWSSESProvider.html":{},"injectables/EmailsService.html":{},"classes/SendGridProvider.html":{}}}],["templates",{"_index":82,"title":{},"body":{"classes/AWSSESProvider.html":{},"injectables/EmailsService.html":{},"classes/SendGridProvider.html":{},"classes/TemplateInput.html":{}}}],["templates.ts",{"_index":4620,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["templates/data",{"_index":88,"title":{},"body":{"classes/AWSSESProvider.html":{}}}],["templates/invitation",{"_index":3924,"title":{},"body":{"classes/TemplateInput.html":{}}}],["templates/notification",{"_index":3923,"title":{},"body":{"classes/TemplateInput.html":{}}}],["templates/template",{"_index":68,"title":{},"body":{"classes/AWSSESProvider.html":{},"interfaces/EmailsRepository.html":{},"injectables/EmailsService.html":{},"classes/SendGridProvider.html":{},"classes/TemplateInput.html":{}}}],["templatesid",{"_index":21,"title":{},"body":{"classes/AWSSESProvider.html":{},"injectables/EmailsService.html":{},"classes/SendGridProvider.html":{}}}],["terms",{"_index":908,"title":{},"body":{"modules/AppModule.html":{},"classes/TermsOfUse.html":{},"modules/TermsOfUseModule.html":{},"injectables/TermsOfUseService.html":{},"classes/UpdateTermsOfUseInput.html":{}}}],["termsofuse",{"_index":3930,"title":{"classes/TermsOfUse.html":{}},"body":{"classes/TermsOfUse.html":{},"modules/TermsOfUseModule.html":{},"injectables/TermsOfUseService.html":{}}}],["termsofuse.name",{"_index":3953,"title":{},"body":{"modules/TermsOfUseModule.html":{}}}],["termsofusemodel",{"_index":3957,"title":{},"body":{"injectables/TermsOfUseService.html":{}}}],["termsofusemodule",{"_index":835,"title":{"modules/TermsOfUseModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TermsOfUseModule.html":{},"modules.html":{},"overview.html":{}}}],["termsofuseresolver",{"_index":3949,"title":{},"body":{"modules/TermsOfUseModule.html":{}}}],["termsofuseschema",{"_index":3940,"title":{},"body":{"classes/TermsOfUse.html":{},"modules/TermsOfUseModule.html":{}}}],["termsofuseservice",{"_index":3946,"title":{"injectables/TermsOfUseService.html":{}},"body":{"modules/TermsOfUseModule.html":{},"injectables/TermsOfUseService.html":{},"overview.html":{}}}],["test",{"_index":4781,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":4785,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":4783,"title":{},"body":{"index.html":{}}}],["testics",{"_index":2971,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["tests",{"_index":4780,"title":{},"body":{"index.html":{}}}],["text",{"_index":168,"title":{},"body":{"classes/AWSSESProvider.html":{},"classes/Announcement.html":{},"classes/CreateNotificationInput.html":{},"interfaces/EmailsRepository.html":{},"injectables/EmailsService.html":{},"injectables/HelpDeskService.html":{},"classes/Notification.html":{},"classes/Notification-1.html":{},"classes/SendEmailInput.html":{},"classes/SendGridProvider.html":{},"injectables/UsersService.html":{}}}],["text/calendar",{"_index":3575,"title":{},"body":{"classes/SendGridProvider.html":{}}}],["thanks",{"_index":4789,"title":{},"body":{"index.html":{}}}],["this._logger.error",{"_index":2764,"title":{},"body":{"injectables/HelpDeskService.html":{},"injectables/NotificationsService.html":{},"injectables/TicketCategoriesService.html":{}}}],["this._logger.error(`error",{"_index":2766,"title":{},"body":{"injectables/HelpDeskService.html":{},"injectables/TicketCategoriesService.html":{}}}],["this.actamodel",{"_index":322,"title":{},"body":{"injectables/ActaService.html":{}}}],["this.actamodel.create(createactainput",{"_index":319,"title":{},"body":{"injectables/ActaService.html":{}}}],["this.actamodel.find",{"_index":320,"title":{},"body":{"injectables/ActaService.html":{}}}],["this.actamodel.findbyid(id",{"_index":326,"title":{},"body":{"injectables/ActaService.html":{}}}],["this.actamodel.findone",{"_index":321,"title":{},"body":{"injectables/ActaService.html":{}}}],["this.activitiesconfig",{"_index":510,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["this.activitiesconfig.create",{"_index":514,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["this.activitiesconfig.create(createactivitiesconfiginput",{"_index":487,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["this.activitiesconfig.findbyid(id).lean",{"_index":508,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["this.activitiesconfig.findone",{"_index":488,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["this.activitiesforteamcoach.includes(i._id.tostring",{"_index":612,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["this.announcementmodel",{"_index":801,"title":{},"body":{"injectables/AnnouncementsService.html":{}}}],["this.announcementmodel.create",{"_index":796,"title":{},"body":{"injectables/AnnouncementsService.html":{}}}],["this.announcementmodel.find",{"_index":792,"title":{},"body":{"injectables/AnnouncementsService.html":{}}}],["this.announcementmodel.findbyid",{"_index":799,"title":{},"body":{"injectables/AnnouncementsService.html":{}}}],["this.announcementmodel.findone",{"_index":793,"title":{},"body":{"injectables/AnnouncementsService.html":{}}}],["this.announcementmodel.updateone",{"_index":809,"title":{},"body":{"injectables/AnnouncementsService.html":{}}}],["this.apikey",{"_index":164,"title":{},"body":{"classes/AWSSESProvider.html":{},"injectables/EmailsService.html":{},"classes/SendGridProvider.html":{}}}],["this.apizoom",{"_index":2966,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["this.authcodemodel.create",{"_index":1082,"title":{},"body":{"injectables/AuthCodeService.html":{}}}],["this.authcodemodel.findbyid(id).lean",{"_index":1086,"title":{},"body":{"injectables/AuthCodeService.html":{}}}],["this.authservice.createaccountwithdefaultpassword",{"_index":3067,"title":{},"body":{"injectables/InvitationsService.html":{}}}],["this.authservice.deleteuser",{"_index":3101,"title":{},"body":{"injectables/InvitationsService.html":{}}}],["this.authservice.exchangetoken(token",{"_index":1114,"title":{},"body":{"guards/AuthGuard.html":{},"guards/GqlAuthGuard.html":{}}}],["this.authservice.getrol(user.rol",{"_index":1116,"title":{},"body":{"guards/AuthGuard.html":{},"guards/GqlAuthGuard.html":{}}}],["this.authservice.updatepassword(userdoc.uid",{"_index":3113,"title":{},"body":{"injectables/InvitationsService.html":{}}}],["this.buildnotification(updatedhelpdeskticket",{"_index":2763,"title":{},"body":{"injectables/HelpDeskService.html":{}}}],["this.businessmodel",{"_index":1416,"title":{},"body":{"injectables/BusinessService.html":{}}}],["this.businessmodel.create(data",{"_index":1432,"title":{},"body":{"injectables/BusinessService.html":{}}}],["this.businessmodel.find",{"_index":1409,"title":{},"body":{"injectables/BusinessService.html":{}}}],["this.businessmodel.findbyid(id",{"_index":1429,"title":{},"body":{"injectables/BusinessService.html":{}}}],["this.businessmodel.updatemany",{"_index":1456,"title":{},"body":{"injectables/BusinessService.html":{}}}],["this.businessmodel.updateone",{"_index":1433,"title":{},"body":{"injectables/BusinessService.html":{}}}],["this.calchours(item",{"_index":491,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["this.calchoursexpert",{"_index":531,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["this.calchoursstartups",{"_index":527,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["this.calchoursteamcoach",{"_index":533,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["this.checkstatedisplayuser(sprints",{"_index":1834,"title":{},"body":{"injectables/ContentService.html":{}}}],["this.client",{"_index":95,"title":{},"body":{"classes/AWSSESProvider.html":{}}}],["this.client.send(emailtemplate",{"_index":158,"title":{},"body":{"classes/AWSSESProvider.html":{}}}],["this.client.send(sendemailcommand",{"_index":135,"title":{},"body":{"classes/AWSSESProvider.html":{}}}],["this.config",{"_index":1247,"title":{},"body":{"injectables/AwsService.html":{}}}],["this.configevaluationmodel",{"_index":1562,"title":{},"body":{"injectables/ConfigEvaluationsService.html":{}}}],["this.configevaluationmodel.create(createconfigevaluationinput",{"_index":1557,"title":{},"body":{"injectables/ConfigEvaluationsService.html":{}}}],["this.configevaluationmodel.find",{"_index":1564,"title":{},"body":{"injectables/ConfigEvaluationsService.html":{}}}],["this.configevaluationmodel.find().lean",{"_index":1563,"title":{},"body":{"injectables/ConfigEvaluationsService.html":{}}}],["this.configevaluationmodel.findbyid(id).lean",{"_index":1565,"title":{},"body":{"injectables/ConfigEvaluationsService.html":{}}}],["this.confignotificationmodel",{"_index":1629,"title":{},"body":{"injectables/ConfigNotificationsService.html":{}}}],["this.confignotificationmodel.create(config",{"_index":1627,"title":{},"body":{"injectables/ConfigNotificationsService.html":{}}}],["this.confignotificationmodel.updateone",{"_index":1631,"title":{},"body":{"injectables/ConfigNotificationsService.html":{}}}],["this.confignotificationsservice.excludeuserfortype",{"_index":4326,"title":{},"body":{"injectables/UserConfigService.html":{}}}],["this.confignotificationsservice.removeexcludeduserfortype",{"_index":4324,"title":{},"body":{"injectables/UserConfigService.html":{}}}],["this.configservice.get",{"_index":1254,"title":{},"body":{"injectables/AwsService.html":{},"injectables/EmailsService.html":{}}}],["this.configservice.get('appuri')}/register",{"_index":3081,"title":{},"body":{"injectables/InvitationsService.html":{}}}],["this.configservice.get('awss3access",{"_index":1251,"title":{},"body":{"injectables/AwsService.html":{}}}],["this.configservice.get('awss3bucketname",{"_index":1242,"title":{},"body":{"injectables/AwsService.html":{}}}],["this.configservice.get('awss3key",{"_index":1250,"title":{},"body":{"injectables/AwsService.html":{}}}],["this.configservice.get('awss3publicuri",{"_index":1253,"title":{},"body":{"injectables/AwsService.html":{}}}],["this.configservice.get('awss3region",{"_index":1240,"title":{},"body":{"injectables/AwsService.html":{}}}],["this.configservice.get('awss3tempbucketname",{"_index":1244,"title":{},"body":{"injectables/AwsService.html":{}}}],["this.configservice.get('awss3uri",{"_index":1246,"title":{},"body":{"injectables/AwsService.html":{}}}],["this.configservice.get('sendgridkey",{"_index":2279,"title":{},"body":{"injectables/EmailsService.html":{}}}],["this.configurationapp",{"_index":1691,"title":{},"body":{"injectables/ConfigurationAppService.html":{}}}],["this.configurationapp.create",{"_index":1686,"title":{},"body":{"injectables/ConfigurationAppService.html":{}}}],["this.configurationapp.find",{"_index":1684,"title":{},"body":{"injectables/ConfigurationAppService.html":{}}}],["this.configurationapp.find())[0",{"_index":1688,"title":{},"body":{"injectables/ConfigurationAppService.html":{}}}],["this.contentmodel",{"_index":1830,"title":{},"body":{"injectables/ContentService.html":{}}}],["this.contentmodel.create(createcontentinput",{"_index":1826,"title":{},"body":{"injectables/ContentService.html":{}}}],["this.contentmodel.findbyid(id).lean",{"_index":1835,"title":{},"body":{"injectables/ContentService.html":{}}}],["this.contentmodel.findbyidandupdate",{"_index":1827,"title":{},"body":{"injectables/ContentService.html":{}}}],["this.contentmodel.findbyidandupdate(contentid",{"_index":1879,"title":{},"body":{"injectables/ContentService.html":{}}}],["this.contentmodel.insertmany(content",{"_index":1880,"title":{},"body":{"injectables/ContentService.html":{}}}],["this.contentservice.addresource",{"_index":3462,"title":{},"body":{"injectables/ResourcesService.html":{}}}],["this.create",{"_index":489,"title":{},"body":{"injectables/ActivitiesConfigService.html":{},"injectables/ConfigNotificationsService.html":{}}}],["this.create(data",{"_index":1401,"title":{},"body":{"injectables/BusinessService.html":{}}}],["this.create(uid",{"_index":4308,"title":{},"body":{"injectables/UserConfigService.html":{}}}],["this.defaultbucketname",{"_index":1241,"title":{},"body":{"injectables/AwsService.html":{}}}],["this.defaultuserpassword",{"_index":1187,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.defaultverifiedemail",{"_index":117,"title":{},"body":{"classes/AWSSESProvider.html":{},"injectables/EmailsService.html":{},"classes/SendGridProvider.html":{}}}],["this.documentserviceprovider(target",{"_index":2563,"title":{},"body":{"injectables/FormSubscriptionService.html":{}}}],["this.documentserviceprovider(targetform.target",{"_index":2569,"title":{},"body":{"injectables/FormSubscriptionService.html":{}}}],["this.downloadmodel.create(downloaddata",{"_index":2228,"title":{},"body":{"injectables/DownloadsService.html":{}}}],["this.downloadservice.uploadtempfile(data",{"_index":1479,"title":{},"body":{"injectables/BusinessService.html":{}}}],["this.emailservice.send(mail",{"_index":2276,"title":{},"body":{"injectables/EmailsService.html":{}}}],["this.emailservice.sendfromtemplate(templateinput",{"_index":2277,"title":{},"body":{"injectables/EmailsService.html":{}}}],["this.emailservice.sendics(mail",{"_index":2278,"title":{},"body":{"injectables/EmailsService.html":{}}}],["this.emailsservice.send",{"_index":4527,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.emailsservice.send(createemaildto",{"_index":2249,"title":{},"body":{"controllers/EmailsController.html":{}}}],["this.emailsservice.sendfromtemplate(createemaildto.data",{"_index":2251,"title":{},"body":{"controllers/EmailsController.html":{}}}],["this.emailsservice.sendfromtemplate(emailtemplate",{"_index":3083,"title":{},"body":{"injectables/InvitationsService.html":{}}}],["this.emailsservice.sendics",{"_index":2972,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["this.entrepreneurservice.findbyaccount",{"_index":2749,"title":{},"body":{"injectables/HelpDeskService.html":{}}}],["this.entrepreneurservice.findmany(entrepreneurs",{"_index":1445,"title":{},"body":{"injectables/BusinessService.html":{}}}],["this.entrepreneurservice.linkwithbusinesses",{"_index":1442,"title":{},"body":{"injectables/BusinessService.html":{}}}],["this.eventsservice.getconsumedhours",{"_index":499,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["this.eventsservice.geteventsandactas",{"_index":528,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["this.eventsservice.getexperthours(actasexpert",{"_index":594,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["this.eventsservice.registersexpert(user",{"_index":1695,"title":{},"body":{"injectables/ConfigurationAppService.html":{}}}],["this.expertsservice.findbyphase",{"_index":518,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["this.expiresat.gettime",{"_index":3003,"title":{},"body":{"classes/Invitation.html":{}}}],["this.extracttokenfromheader(request",{"_index":1113,"title":{},"body":{"guards/AuthGuard.html":{},"guards/GqlAuthGuard.html":{}}}],["this.findbyphase(id",{"_index":512,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["this.findmany(ids",{"_index":1434,"title":{},"body":{"injectables/BusinessService.html":{}}}],["this.findmanyidsbyrequest(request",{"_index":1453,"title":{},"body":{"injectables/BusinessService.html":{}}}],["this.findmanypage(request",{"_index":1468,"title":{},"body":{"injectables/BusinessService.html":{}}}],["this.findone",{"_index":3090,"title":{},"body":{"injectables/InvitationsService.html":{}}}],["this.findone(id",{"_index":1399,"title":{},"body":{"injectables/BusinessService.html":{},"injectables/FormSubscriptionService.html":{},"injectables/FormsService.html":{},"injectables/NotificationsService.html":{},"injectables/TicketCategoriesService.html":{}}}],["this.findone(uid",{"_index":4512,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.findone(updateuserconfiginput.uid",{"_index":4313,"title":{},"body":{"injectables/UserConfigService.html":{}}}],["this.findrolbytype(iterator",{"_index":4495,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.formmodel",{"_index":2655,"title":{},"body":{"injectables/FormsService.html":{}}}],["this.formmodel.create",{"_index":2649,"title":{},"body":{"injectables/FormsService.html":{}}}],["this.formmodel.find",{"_index":2646,"title":{},"body":{"injectables/FormsService.html":{}}}],["this.formmodel.findbyid(id).lean",{"_index":2647,"title":{},"body":{"injectables/FormsService.html":{}}}],["this.formsservice.findone",{"_index":2545,"title":{},"body":{"injectables/FormSubscriptionService.html":{}}}],["this.formsservice.findone(form",{"_index":2568,"title":{},"body":{"injectables/FormSubscriptionService.html":{}}}],["this.formsservice.findone(join.form",{"_index":3885,"title":{},"body":{"injectables/TableService.html":{}}}],["this.formsservice.findone(table.form",{"_index":3899,"title":{},"body":{"injectables/TableService.html":{}}}],["this.formsubscriptionmodel",{"_index":2559,"title":{},"body":{"injectables/FormSubscriptionService.html":{}}}],["this.formsubscriptionmodel.create(data",{"_index":2549,"title":{},"body":{"injectables/FormSubscriptionService.html":{}}}],["this.formsubscriptionmodel.findbyid(id).lean",{"_index":2543,"title":{},"body":{"injectables/FormSubscriptionService.html":{}}}],["this.formtagmodel",{"_index":2607,"title":{},"body":{"injectables/FormTagService.html":{}}}],["this.formtagmodel.create(createformtaginput",{"_index":2603,"title":{},"body":{"injectables/FormTagService.html":{}}}],["this.formtagmodel.find",{"_index":2604,"title":{},"body":{"injectables/FormTagService.html":{}}}],["this.formtagmodel.findbyid(id).lean",{"_index":2605,"title":{},"body":{"injectables/FormTagService.html":{}}}],["this.getfilelocation('files",{"_index":1272,"title":{},"body":{"injectables/AwsService.html":{}}}],["this.gethoursforothers",{"_index":563,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["this.handledocumentsubmit",{"_index":2557,"title":{},"body":{"injectables/FormSubscriptionService.html":{}}}],["this.integrationmodel",{"_index":2865,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["this.integrationmodel.find().lean",{"_index":2868,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["this.invitationmodel",{"_index":3088,"title":{},"body":{"injectables/InvitationsService.html":{}}}],["this.invitationmodel.create(invitationdata",{"_index":3076,"title":{},"body":{"injectables/InvitationsService.html":{}}}],["this.invitationmodel.find().skip(skip).limit(limit",{"_index":3086,"title":{},"body":{"injectables/InvitationsService.html":{}}}],["this.invitationmodel.findone",{"_index":3094,"title":{},"body":{"injectables/InvitationsService.html":{}}}],["this.invitationmodel.findone(filters).lean",{"_index":3087,"title":{},"body":{"injectables/InvitationsService.html":{}}}],["this.invitationsservice.accept(acceptinvitationdto",{"_index":3017,"title":{},"body":{"controllers/InvitationsController.html":{}}}],["this.linkbusinessesandentrepreneurs",{"_index":1404,"title":{},"body":{"injectables/BusinessService.html":{}}}],["this.linkbusinessesandentrepreneurs(businesses",{"_index":1454,"title":{},"body":{"injectables/BusinessService.html":{}}}],["this.linkwithentrepreneurs",{"_index":1448,"title":{},"body":{"injectables/BusinessService.html":{}}}],["this.logger.error",{"_index":1172,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logger.error(ex",{"_index":144,"title":{},"body":{"classes/AWSSESProvider.html":{},"injectables/EmailsService.html":{},"injectables/InvitationsService.html":{}}}],["this.logger.log",{"_index":167,"title":{},"body":{"classes/AWSSESProvider.html":{},"injectables/EmailsService.html":{}}}],["this.logger.log(`email",{"_index":136,"title":{},"body":{"classes/AWSSESProvider.html":{},"injectables/EmailsService.html":{}}}],["this.logger.setcontext(emailsservice.name",{"_index":2275,"title":{},"body":{"injectables/EmailsService.html":{}}}],["this.logger.setcontext(invitationsservice.name",{"_index":3060,"title":{},"body":{"injectables/InvitationsService.html":{}}}],["this.notificationmodel",{"_index":3257,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["this.notificationmodel.create",{"_index":3240,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["this.notificationmodel.find",{"_index":3252,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["this.notificationmodel.findone",{"_index":3248,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["this.notificationmodel.insertmany",{"_index":3258,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["this.notificationservice.create",{"_index":4559,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.notificationsservice.create",{"_index":2762,"title":{},"body":{"injectables/HelpDeskService.html":{}}}],["this.obtenerinfosemana",{"_index":1567,"title":{},"body":{"injectables/ConfigEvaluationsService.html":{},"injectables/UserLogService.html":{}}}],["this.participationeventmodel",{"_index":3314,"title":{},"body":{"injectables/ParticipationEventsService.html":{}}}],["this.participationeventmodel.create(createparticipationeventinput",{"_index":3309,"title":{},"body":{"injectables/ParticipationEventsService.html":{}}}],["this.participationeventmodel.find",{"_index":3310,"title":{},"body":{"injectables/ParticipationEventsService.html":{}}}],["this.participationeventmodel.findbyid(id).lean",{"_index":3311,"title":{},"body":{"injectables/ParticipationEventsService.html":{}}}],["this.participationeventmodel.findone",{"_index":3312,"title":{},"body":{"injectables/ParticipationEventsService.html":{}}}],["this.publicconfig",{"_index":1252,"title":{},"body":{"injectables/AwsService.html":{}}}],["this.registerloginbydate(iterator",{"_index":4417,"title":{},"body":{"injectables/UserLogService.html":{}}}],["this.registerresourcesbyuser(iterator",{"_index":4429,"title":{},"body":{"injectables/UserLogService.html":{}}}],["this.resolvetablecolumns(createdtable",{"_index":3873,"title":{},"body":{"injectables/TableService.html":{}}}],["this.resourcemodel",{"_index":3467,"title":{},"body":{"injectables/ResourcesService.html":{}}}],["this.resourcemodel.create(createresourceinput",{"_index":3460,"title":{},"body":{"injectables/ResourcesService.html":{}}}],["this.resourcemodel.find",{"_index":3465,"title":{},"body":{"injectables/ResourcesService.html":{}}}],["this.resourcemodel.findbyid(id).lean",{"_index":3466,"title":{},"body":{"injectables/ResourcesService.html":{}}}],["this.resourcemodel.insertmany(resources",{"_index":3468,"title":{},"body":{"injectables/ResourcesService.html":{}}}],["this.resourcesrepliesservice.findbystartupwithoutpopulate",{"_index":1863,"title":{},"body":{"injectables/ContentService.html":{}}}],["this.rolmodel",{"_index":3515,"title":{},"body":{"injectables/RolService.html":{}}}],["this.rolmodel.create(createrolinput",{"_index":3510,"title":{},"body":{"injectables/RolService.html":{}}}],["this.rolmodel.deleteone",{"_index":3517,"title":{},"body":{"injectables/RolService.html":{}}}],["this.rolmodel.find",{"_index":3507,"title":{},"body":{"injectables/RolService.html":{}}}],["this.rolmodel.find({}).lean",{"_index":3511,"title":{},"body":{"injectables/RolService.html":{}}}],["this.rolmodel.findone",{"_index":3512,"title":{},"body":{"injectables/RolService.html":{}}}],["this.rolmodel.insertmany(defaultroles",{"_index":3509,"title":{},"body":{"injectables/RolService.html":{}}}],["this.rolservice.findbytype(type",{"_index":4519,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.rolservice.findone(id",{"_index":4518,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.s3uri",{"_index":1245,"title":{},"body":{"injectables/AwsService.html":{}}}],["this.sitemodel",{"_index":3624,"title":{},"body":{"injectables/SitesService.html":{}}}],["this.sitemodel.create(createsiteinput",{"_index":3620,"title":{},"body":{"injectables/SitesService.html":{}}}],["this.sitemodel.find",{"_index":3621,"title":{},"body":{"injectables/SitesService.html":{}}}],["this.sitemodel.findbyid(id",{"_index":3622,"title":{},"body":{"injectables/SitesService.html":{}}}],["this.stagemodel",{"_index":3685,"title":{},"body":{"injectables/StagesService.html":{}}}],["this.stagemodel.create(createstageinput",{"_index":3677,"title":{},"body":{"injectables/StagesService.html":{}}}],["this.stagemodel.find",{"_index":3675,"title":{},"body":{"injectables/StagesService.html":{}}}],["this.stagemodel.find({}).lean()).sort",{"_index":3678,"title":{},"body":{"injectables/StagesService.html":{}}}],["this.stagemodel.findbyid(id).lean",{"_index":3683,"title":{},"body":{"injectables/StagesService.html":{}}}],["this.stagemodel.insertmany(default_stages",{"_index":3676,"title":{},"body":{"injectables/StagesService.html":{}}}],["this.stagemodel.updatemany",{"_index":3686,"title":{},"body":{"injectables/StagesService.html":{}}}],["this.startupservice.findbyentrepreneur",{"_index":2751,"title":{},"body":{"injectables/HelpDeskService.html":{}}}],["this.startupsservice.findbyphase",{"_index":515,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["this.storageservice.createpresignedurl",{"_index":3725,"title":{},"body":{"controllers/StorageController.html":{}}}],["this.storageservice.getpresignedurl(query.key",{"_index":3729,"title":{},"body":{"controllers/StorageController.html":{}}}],["this.storageservice.uploadtemporaryfile",{"_index":2225,"title":{},"body":{"injectables/DownloadsService.html":{}}}],["this.tableconfigmodel",{"_index":3810,"title":{},"body":{"injectables/TableConfigService.html":{}}}],["this.tableconfigmodel.create",{"_index":3814,"title":{},"body":{"injectables/TableConfigService.html":{}}}],["this.tableconfigmodel.findbyid(id).lean",{"_index":3811,"title":{},"body":{"injectables/TableConfigService.html":{}}}],["this.tableconfigmodel.updateone",{"_index":3816,"title":{},"body":{"injectables/TableConfigService.html":{}}}],["this.tableconfigservice.createfromtable",{"_index":3875,"title":{},"body":{"injectables/TableService.html":{}}}],["this.tableconfigservice.findone(configid",{"_index":1463,"title":{},"body":{"injectables/BusinessService.html":{}}}],["this.tablemodel.create(data",{"_index":3868,"title":{},"body":{"injectables/TableService.html":{}}}],["this.tablemodel.findbyidandupdate",{"_index":3878,"title":{},"body":{"injectables/TableService.html":{}}}],["this.tablemodel.findone(filters",{"_index":3879,"title":{},"body":{"injectables/TableService.html":{}}}],["this.tempbucketname",{"_index":1243,"title":{},"body":{"injectables/AwsService.html":{}}}],["this.templatesid",{"_index":108,"title":{},"body":{"classes/AWSSESProvider.html":{},"injectables/EmailsService.html":{},"classes/SendGridProvider.html":{}}}],["this.templatesid[templateinput.template",{"_index":160,"title":{},"body":{"classes/AWSSESProvider.html":{},"injectables/EmailsService.html":{},"classes/SendGridProvider.html":{}}}],["this.termsofusemodel",{"_index":3969,"title":{},"body":{"injectables/TermsOfUseService.html":{}}}],["this.termsofusemodel.create(createtermsofuseinput",{"_index":3967,"title":{},"body":{"injectables/TermsOfUseService.html":{}}}],["this.termsofusemodel.find().lean",{"_index":3968,"title":{},"body":{"injectables/TermsOfUseService.html":{}}}],["this.ticketcategorymodel",{"_index":4007,"title":{},"body":{"injectables/TicketCategoriesService.html":{}}}],["this.ticketcategorymodel.create",{"_index":3999,"title":{},"body":{"injectables/TicketCategoriesService.html":{}}}],["this.ticketcategorymodel.find",{"_index":4002,"title":{},"body":{"injectables/TicketCategoriesService.html":{}}}],["this.ticketcategorymodel.findone",{"_index":4003,"title":{},"body":{"injectables/TicketCategoriesService.html":{}}}],["this.ticketsmodel",{"_index":2761,"title":{},"body":{"injectables/HelpDeskService.html":{}}}],["this.ticketsmodel.create",{"_index":2735,"title":{},"body":{"injectables/HelpDeskService.html":{}}}],["this.ticketsmodel.find",{"_index":2741,"title":{},"body":{"injectables/HelpDeskService.html":{}}}],["this.ticketsmodel.find(filters).lean",{"_index":2756,"title":{},"body":{"injectables/HelpDeskService.html":{}}}],["this.ticketsmodel.findone",{"_index":2757,"title":{},"body":{"injectables/HelpDeskService.html":{}}}],["this.tokenzoom",{"_index":2894,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["this.tryfindone",{"_index":4505,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.tryfindonebyemail(email",{"_index":3062,"title":{},"body":{"injectables/InvitationsService.html":{}}}],["this.typeeventmodel",{"_index":4056,"title":{},"body":{"injectables/TypesEventsService.html":{}}}],["this.typeeventmodel.create(createtypeeventinput",{"_index":4053,"title":{},"body":{"injectables/TypesEventsService.html":{}}}],["this.typeeventmodel.find",{"_index":4051,"title":{},"body":{"injectables/TypesEventsService.html":{}}}],["this.typeeventmodel.findbyid(id).lean",{"_index":4054,"title":{},"body":{"injectables/TypesEventsService.html":{}}}],["this.typeeventmodel.insertmany(default_types_events",{"_index":4052,"title":{},"body":{"injectables/TypesEventsService.html":{}}}],["this.typeseventsservice.findall",{"_index":525,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["this.typesnotificationmodel.find",{"_index":4075,"title":{},"body":{"injectables/TypesNotificationsService.html":{}}}],["this.typesnotificationmodel.find({}).lean",{"_index":4077,"title":{},"body":{"injectables/TypesNotificationsService.html":{}}}],["this.typesnotificationmodel.insertmany(default_notification_types",{"_index":4076,"title":{},"body":{"injectables/TypesNotificationsService.html":{}}}],["this.update",{"_index":806,"title":{},"body":{"injectables/AnnouncementsService.html":{},"injectables/FormsService.html":{}}}],["this.update(id",{"_index":1408,"title":{},"body":{"injectables/BusinessService.html":{}}}],["this.userconfigmodel.create",{"_index":4306,"title":{},"body":{"injectables/UserConfigService.html":{}}}],["this.userconfigmodel.findone",{"_index":4307,"title":{},"body":{"injectables/UserConfigService.html":{}}}],["this.userconfigmodel.updateone",{"_index":4331,"title":{},"body":{"injectables/UserConfigService.html":{}}}],["this.userlogmodel",{"_index":4395,"title":{},"body":{"injectables/UserLogService.html":{}}}],["this.userlogmodel.create",{"_index":4389,"title":{},"body":{"injectables/UserLogService.html":{}}}],["this.userlogmodel.find().lean",{"_index":4391,"title":{},"body":{"injectables/UserLogService.html":{}}}],["this.userlogmodel.find(filters).lean",{"_index":4392,"title":{},"body":{"injectables/UserLogService.html":{}}}],["this.userlogmodel.findbyid(id).lean",{"_index":4393,"title":{},"body":{"injectables/UserLogService.html":{}}}],["this.userlogmodel.findbyidanddelete(id).lean",{"_index":4394,"title":{},"body":{"injectables/UserLogService.html":{}}}],["this.userlogservice.findbyfilters",{"_index":1837,"title":{},"body":{"injectables/ContentService.html":{}}}],["this.userlogservice.getregistersusers",{"_index":1696,"title":{},"body":{"injectables/ConfigurationAppService.html":{}}}],["this.userlogservice.getuserregisterweek(user",{"_index":1693,"title":{},"body":{"injectables/ConfigurationAppService.html":{}}}],["this.userlogservice.registerlogin(user._id",{"_index":4490,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel",{"_index":4511,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.create(createuserinput",{"_index":4508,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.deleteone",{"_index":4517,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.find",{"_index":4504,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.find(filters).populate('rol').lean",{"_index":4503,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.findbyid(id)).populate('rol",{"_index":4491,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.findone",{"_index":4488,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.findone(filters).lean",{"_index":4487,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersservice.create",{"_index":1191,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.findmany",{"_index":520,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["this.usersservice.findrolbyid(id",{"_index":1196,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.findrolbytype(rol",{"_index":1189,"title":{},"body":{"injectables/AuthService.html":{},"injectables/InvitationsService.html":{}}}],["this.usersservice.tryfindone",{"_index":1175,"title":{},"body":{"injectables/AuthService.html":{},"injectables/InvitationsService.html":{}}}],["this.usersservice.update",{"_index":3071,"title":{},"body":{"injectables/InvitationsService.html":{}}}],["this.zoomintegration",{"_index":2870,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["throw",{"_index":113,"title":{},"body":{"classes/AWSSESProvider.html":{},"injectables/AnnouncementsService.html":{},"injectables/AuthCodeService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AwsService.html":{},"injectables/BusinessService.html":{},"injectables/ConfigNotificationsService.html":{},"injectables/EmailsService.html":{},"injectables/FormSubscriptionService.html":{},"injectables/FormTagService.html":{},"injectables/FormsService.html":{},"guards/GqlAuthGuard.html":{},"injectables/HelpDeskService.html":{},"injectables/IntegrationsService.html":{},"injectables/InvitationsService.html":{},"injectables/NotificationsService.html":{},"injectables/RolService.html":{},"classes/SendGridProvider.html":{},"injectables/TableConfigService.html":{},"injectables/TableService.html":{},"injectables/TicketCategoriesService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["thumbnail",{"_index":651,"title":{},"body":{"classes/Announcement.html":{},"classes/ContactServiceLink.html":{},"classes/ContactServicesInput.html":{},"classes/CreatePhaseInput.html":{},"classes/CreateSiteInput.html":{},"classes/EntrepreneurRelationship-1.html":{},"classes/Phase.html":{},"classes/PhaseRelationship.html":{},"classes/Site.html":{},"classes/Startup.html":{},"classes/UpdateAnnouncementInput.html":{},"classes/UpdatePhaseInput.html":{},"classes/UpdateSiteInput.html":{}}}],["ticket",{"_index":2713,"title":{},"body":{"injectables/HelpDeskService.html":{},"injectables/TicketCategoriesService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["ticket.childs[0].answerbyid",{"_index":2779,"title":{},"body":{"injectables/HelpDeskService.html":{}}}],["ticket.title",{"_index":2769,"title":{},"body":{"injectables/HelpDeskService.html":{}}}],["ticketcategoriesmodule",{"_index":2696,"title":{"modules/TicketCategoriesModule.html":{}},"body":{"modules/HelpDeskModule.html":{},"modules/TicketCategoriesModule.html":{},"modules.html":{},"overview.html":{}}}],["ticketcategoriesservice",{"_index":3975,"title":{"injectables/TicketCategoriesService.html":{}},"body":{"modules/TicketCategoriesModule.html":{},"injectables/TicketCategoriesService.html":{},"overview.html":{}}}],["ticketcategory",{"_index":2025,"title":{"classes/TicketCategory.html":{}},"body":{"classes/CreateHelpDeskInput.html":{},"classes/HelpDeskTicket.html":{},"modules/TicketCategoriesModule.html":{},"injectables/TicketCategoriesService.html":{},"classes/TicketCategory.html":{},"classes/TicketChild.html":{},"miscellaneous/enumerations.html":{}}}],["ticketcategory.name",{"_index":3982,"title":{},"body":{"modules/TicketCategoriesModule.html":{}}}],["ticketcategory.support",{"_index":2795,"title":{},"body":{"classes/HelpDeskTicket.html":{},"classes/TicketChild.html":{}}}],["ticketcategorymodel",{"_index":3986,"title":{},"body":{"injectables/TicketCategoriesService.html":{}}}],["ticketcategoryschema",{"_index":3980,"title":{},"body":{"modules/TicketCategoriesModule.html":{},"classes/TicketCategory.html":{}}}],["ticketchild",{"_index":2786,"title":{"classes/TicketChild.html":{}},"body":{"classes/HelpDeskTicket.html":{},"classes/TicketChild.html":{},"classes/UpdateHelpDeskInput.html":{}}}],["ticketenum",{"_index":2683,"title":{},"body":{"classes/HelpDeskFilterInput.html":{},"injectables/HelpDeskService.html":{},"classes/HelpDeskTicket.html":{},"classes/TicketChild.html":{},"classes/UpdateHelpDeskInput.html":{},"miscellaneous/enumerations.html":{}}}],["ticketenum.open",{"_index":2737,"title":{},"body":{"injectables/HelpDeskService.html":{},"classes/HelpDeskTicket.html":{},"classes/TicketChild.html":{}}}],["tickets",{"_index":4732,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["ticketsmodel",{"_index":2710,"title":{},"body":{"injectables/HelpDeskService.html":{}}}],["timestamps",{"_index":242,"title":{},"body":{"classes/Acta.html":{},"classes/ActivitiesConfig.html":{},"classes/Announcement.html":{},"classes/Applicant.html":{},"classes/ApplicantState.html":{},"classes/Assign.html":{},"classes/Attachment.html":{},"classes/AuthCode.html":{},"classes/BusinessRelationship.html":{},"classes/ConfigEvaluation.html":{},"classes/ConfigurationApp.html":{},"classes/ContactServiceLink.html":{},"classes/Content.html":{},"classes/Download.html":{},"classes/Entrepreneur.html":{},"classes/EntrepreneurRelationship-1.html":{},"classes/Evaluation.html":{},"classes/Event.html":{},"classes/Expert.html":{},"classes/ExpertEventLink.html":{},"classes/Form.html":{},"classes/FormSubscription.html":{},"classes/FormTag.html":{},"classes/HelpDeskTicket.html":{},"interfaces/IAttachment.html":{},"classes/Integration.html":{},"classes/Invitation.html":{},"classes/Notification-1.html":{},"classes/ParticipantEventLink.html":{},"classes/ParticipationEvent.html":{},"classes/Phase.html":{},"classes/PhaseExpertRelationship.html":{},"classes/PhaseRelationship.html":{},"classes/Rating.html":{},"classes/Resource.html":{},"classes/ResourcesReply.html":{},"classes/Rol.html":{},"classes/Site.html":{},"classes/Stage.html":{},"classes/Startup.html":{},"classes/StartupLink.html":{},"classes/StartupRelationship.html":{},"classes/TeamCoachLink.html":{},"classes/TermsOfUse.html":{},"classes/TicketCategory.html":{},"classes/TicketChild.html":{},"classes/TypesEvent.html":{},"classes/User.html":{},"classes/UserLog.html":{},"classes/activities.html":{}}}],["timezone",{"_index":2960,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["title",{"_index":1507,"title":{},"body":{"classes/ConfigEvaluation.html":{},"classes/CreateConfigEvaluationInput.html":{},"classes/CreateHelpDeskInput.html":{},"classes/HelpDeskTicket.html":{},"classes/TicketChild.html":{},"classes/UpdateConfigEvaluationInput.html":{}}}],["to.'})@prop({required",{"_index":964,"title":{},"body":{"classes/Applicant.html":{},"classes/Phase.html":{}}}],["toaddresses",{"_index":124,"title":{},"body":{"classes/AWSSESProvider.html":{}}}],["todas",{"_index":4819,"title":{},"body":{"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["today",{"_index":1551,"title":{},"body":{"injectables/ConfigEvaluationsService.html":{},"injectables/UserLogService.html":{}}}],["todo",{"_index":1410,"title":{},"body":{"injectables/BusinessService.html":{}}}],["todos",{"_index":4832,"title":{},"body":{"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["token",{"_index":946,"title":{},"body":{"modules/AppModule.html":{},"classes/Applicant.html":{},"classes/ApplicantState.html":{},"classes/Attachment.html":{},"classes/AuthCode.html":{},"injectables/AuthCodeService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/EmailsRepository.html":{},"guards/GqlAuthGuard.html":{},"interfaces/IAttachment.html":{},"injectables/IntegrationsService.html":{},"miscellaneous/functions.html":{},"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["token.access_token",{"_index":2968,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["token.decorator.ts",{"_index":4949,"title":{},"body":{"miscellaneous/variables.html":{}}}],["token_type",{"_index":2891,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["tokenzoom",{"_index":2831,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["topic",{"_index":2962,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["topics_covered",{"_index":205,"title":{},"body":{"classes/Acta.html":{},"classes/CreateActaInput.html":{},"classes/UpdateActaInput.html":{}}}],["tosend",{"_index":3560,"title":{},"body":{"classes/SendGridProvider.html":{}}}],["tosend['attachments",{"_index":3577,"title":{},"body":{"classes/SendGridProvider.html":{}}}],["tostring('base64",{"_index":2884,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["totalrecords",{"_index":4993,"title":{},"body":{"miscellaneous/variables.html":{}}}],["totalrecords.count",{"_index":4997,"title":{},"body":{"miscellaneous/variables.html":{}}}],["touch",{"_index":4796,"title":{},"body":{"index.html":{}}}],["tracking_fields",{"_index":2963,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["transformer",{"_index":636,"title":{},"body":{"classes/AddTableJoinInput.html":{},"classes/AttachmentSubmit.html":{},"classes/LinkStartupsExpertsArgs.html":{},"classes/LinkWithTargetsByRequestArgs.html":{},"classes/TemplateInput.html":{},"classes/UpdateActivitiesConfigInput.html":{},"classes/UpdateApplicantStateInput.html":{},"classes/UpdateFormInput.html":{},"dependencies.html":{}}}],["transport",{"_index":165,"title":{},"body":{"classes/AWSSESProvider.html":{},"injectables/EmailsService.html":{},"classes/SendGridProvider.html":{}}}],["triggername",{"_index":2486,"title":{},"body":{"injectables/FormSubscriptionService.html":{}}}],["true",{"_index":224,"title":{},"body":{"classes/Acta.html":{},"injectables/ActaService.html":{},"classes/ActivitiesConfig.html":{},"injectables/ActivitiesConfigService.html":{},"classes/Announcement.html":{},"injectables/AnnouncementsService.html":{},"modules/AppModule.html":{},"classes/Applicant.html":{},"classes/ApplicantState.html":{},"classes/Assign.html":{},"classes/Attachment.html":{},"classes/AuthCode.html":{},"injectables/AwsService.html":{},"classes/Business.html":{},"classes/BusinessRelationship.html":{},"injectables/BusinessService.html":{},"classes/CloseFormSubscriptionArgs.html":{},"classes/ConfigEvaluation.html":{},"injectables/ConfigEvaluationsService.html":{},"classes/ConfigurationApp.html":{},"injectables/ConfigurationAppService.html":{},"classes/ContactServiceLink.html":{},"classes/ContactServicesInput.html":{},"classes/Content.html":{},"injectables/ContentService.html":{},"classes/CreateActaInput.html":{},"classes/CreateAnnouncementInput.html":{},"classes/CreateFormSubscriptionInput.html":{},"classes/CreatePhaseInput.html":{},"classes/CreateResourceInput.html":{},"classes/CreateSiteInput.html":{},"classes/CreateStageInput.html":{},"classes/CreateUserInput.html":{},"classes/Download.html":{},"classes/Entrepreneur.html":{},"classes/EntrepreneurRelationship.html":{},"classes/EntrepreneurRelationship-1.html":{},"classes/Evaluation.html":{},"classes/Event.html":{},"classes/Expert.html":{},"classes/ExpertEventLink.html":{},"classes/FindFormsArgs.html":{},"classes/FindInvitationArgs.html":{},"classes/FindUsersArgs.html":{},"classes/Form.html":{},"classes/FormSubscription.html":{},"injectables/FormSubscriptionService.html":{},"classes/FormTag.html":{},"injectables/FormTagService.html":{},"injectables/FormsService.html":{},"injectables/HelpDeskService.html":{},"classes/HelpDeskTicket.html":{},"interfaces/IAttachment.html":{},"classes/Integration.html":{},"injectables/IntegrationsService.html":{},"classes/Invitation.html":{},"injectables/InvitationsService.html":{},"classes/LinkStartupsExpertsArgs.html":{},"classes/Notification-1.html":{},"injectables/NotificationsService.html":{},"classes/ParticipantEventLink.html":{},"classes/ParticipationEvent.html":{},"injectables/ParticipationEventsService.html":{},"classes/Phase.html":{},"classes/PhaseExpertRelationship.html":{},"classes/PhaseRelationship.html":{},"classes/Rating.html":{},"classes/Resource.html":{},"classes/ResourcesReply.html":{},"injectables/ResourcesService.html":{},"classes/Rol.html":{},"injectables/RolService.html":{},"classes/SignUpInput.html":{},"classes/Site.html":{},"injectables/SitesService.html":{},"classes/Stage.html":{},"injectables/StagesService.html":{},"classes/Startup.html":{},"classes/StartupLink.html":{},"classes/StartupRelationship.html":{},"classes/Table.html":{},"classes/TableConfig.html":{},"injectables/TableConfigService.html":{},"injectables/TableService.html":{},"classes/TeamCoachLink.html":{},"classes/TermsOfUse.html":{},"injectables/TermsOfUseService.html":{},"injectables/TicketCategoriesService.html":{},"classes/TicketCategory.html":{},"classes/TicketChild.html":{},"classes/TypesEvent.html":{},"injectables/TypesEventsService.html":{},"classes/TypesNotification.html":{},"classes/UpdateActaInput.html":{},"classes/UpdateActivitiesConfigInput.html":{},"classes/UpdateAnnouncementInput.html":{},"classes/UpdateConfigEvaluationInput.html":{},"classes/UpdateConfigurationAppInput.html":{},"classes/UpdateContentInput.html":{},"classes/UpdateEventInput.html":{},"classes/UpdateExpertInput.html":{},"classes/UpdateFormInput.html":{},"classes/UpdateHelpDeskInput.html":{},"classes/UpdateNotificationInput.html":{},"classes/UpdateParticipationEventInput.html":{},"classes/UpdatePhaseInput.html":{},"classes/UpdateResourceInput.html":{},"classes/UpdateResourcesReplyInput.html":{},"classes/UpdateRolInput.html":{},"classes/UpdateSiteInput.html":{},"classes/UpdateStageInput.html":{},"classes/UpdateTableConfigInput.html":{},"classes/UpdateTermsOfUseInput.html":{},"classes/UpdateTypesEventInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"classes/UserConfig.html":{},"classes/UserLog.html":{},"injectables/UserLogService.html":{},"injectables/UsersService.html":{},"classes/activities.html":{},"miscellaneous/variables.html":{}}}],["true})@field(undefined",{"_index":2806,"title":{},"body":{"classes/Integration.html":{},"classes/Invitation.html":{},"classes/Phase.html":{},"classes/User.html":{}}}],["true})@isdate",{"_index":4105,"title":{},"body":{"classes/UpdateAnnouncementInput.html":{}}}],["true})@isenum(formcollections",{"_index":4176,"title":{},"body":{"classes/UpdateFormInput.html":{}}}],["true})@isenum(ticketenum)@isoptional",{"_index":4181,"title":{},"body":{"classes/UpdateHelpDeskInput.html":{}}}],["true})@isenum(validroles",{"_index":2168,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["true})@isnotempty",{"_index":4081,"title":{},"body":{"classes/UpdateActaInput.html":{}}}],["true})@isoptional",{"_index":1896,"title":{},"body":{"classes/CreateActaInput.html":{},"classes/CreateFormSubscriptionInput.html":{},"classes/CreatePhaseInput.html":{},"classes/CreateResourceInput.html":{},"classes/CreateSiteInput.html":{},"classes/CreateStageInput.html":{},"classes/UpdateActaInput.html":{},"classes/UpdateActivitiesConfigInput.html":{},"classes/UpdateConfigEvaluationInput.html":{},"classes/UpdateConfigurationAppInput.html":{},"classes/UpdateContentInput.html":{},"classes/UpdateEventInput.html":{},"classes/UpdateExpertInput.html":{},"classes/UpdateFormInput.html":{},"classes/UpdateHelpDeskInput.html":{},"classes/UpdateNotificationInput.html":{},"classes/UpdateParticipationEventInput.html":{},"classes/UpdatePhaseInput.html":{},"classes/UpdateResourceInput.html":{},"classes/UpdateResourcesReplyInput.html":{},"classes/UpdateRolInput.html":{},"classes/UpdateSiteInput.html":{},"classes/UpdateStageInput.html":{},"classes/UpdateTermsOfUseInput.html":{},"classes/UpdateTypesEventInput.html":{},"classes/UpdateUserInput.html":{}}}],["true})@isoptional()@isnotempty",{"_index":4225,"title":{},"body":{"classes/UpdateTableConfigInput.html":{}}}],["true})@isstring",{"_index":1919,"title":{},"body":{"classes/CreateAnnouncementInput.html":{},"classes/UpdateAnnouncementInput.html":{}}}],["true})@isstring()@isoptional",{"_index":1484,"title":{},"body":{"classes/CloseFormSubscriptionArgs.html":{}}}],["true})@prop",{"_index":661,"title":{},"body":{"classes/Announcement.html":{},"classes/Applicant.html":{},"classes/Business.html":{},"classes/ConfigEvaluation.html":{},"classes/Download.html":{},"classes/Entrepreneur.html":{},"classes/Expert.html":{},"classes/Form.html":{},"classes/FormTag.html":{},"classes/Notification-1.html":{},"classes/ParticipantEventLink.html":{},"classes/Startup.html":{},"classes/TableConfig.html":{},"classes/User.html":{}}}],["true})@prop({default",{"_index":714,"title":{},"body":{"classes/Announcement.html":{},"classes/Applicant.html":{},"classes/Entrepreneur.html":{},"classes/Expert.html":{},"classes/FormSubscription.html":{},"classes/Phase.html":{},"classes/Site.html":{},"classes/Stage.html":{},"classes/Startup.html":{},"classes/Table.html":{},"classes/User.html":{}}}],["true})@prop({description",{"_index":4257,"title":{},"body":{"classes/User.html":{}}}],["true})@prop({expires",{"_index":1049,"title":{},"body":{"classes/AuthCode.html":{}}}],["true})@prop({type",{"_index":967,"title":{},"body":{"classes/Applicant.html":{},"classes/FormSubscription.html":{},"classes/Integration.html":{},"classes/Invitation.html":{},"classes/TableConfig.html":{}}}],["true})@type(undefined",{"_index":4170,"title":{},"body":{"classes/UpdateFormInput.html":{}}}],["true})@type(undefined)@isoptional",{"_index":3136,"title":{},"body":{"classes/LinkStartupsExpertsArgs.html":{},"classes/UpdateActivitiesConfigInput.html":{}}}],["true})@validatenested({each",{"_index":4169,"title":{},"body":{"classes/UpdateFormInput.html":{}}}],["try",{"_index":121,"title":{},"body":{"classes/AWSSESProvider.html":{},"injectables/ActivitiesConfigService.html":{},"injectables/AuthService.html":{},"injectables/AwsService.html":{},"injectables/EmailsService.html":{},"injectables/HelpDeskService.html":{},"injectables/IntegrationsService.html":{},"injectables/InvitationsService.html":{},"injectables/NotificationsService.html":{},"classes/SendGridProvider.html":{},"injectables/TicketCategoriesService.html":{},"injectables/UsersService.html":{}}}],["tryfindone",{"_index":4448,"title":{},"body":{"injectables/UsersService.html":{}}}],["tryfindone(filters",{"_index":4473,"title":{},"body":{"injectables/UsersService.html":{}}}],["tryfindonebyemail",{"_index":3032,"title":{},"body":{"injectables/InvitationsService.html":{}}}],["tryfindonebyemail(email",{"_index":3051,"title":{},"body":{"injectables/InvitationsService.html":{}}}],["trying",{"_index":147,"title":{},"body":{"classes/AWSSESProvider.html":{},"injectables/EmailsService.html":{},"classes/SendGridProvider.html":{}}}],["tu",{"_index":2768,"title":{},"body":{"injectables/HelpDeskService.html":{}}}],["twitter",{"_index":4802,"title":{},"body":{"index.html":{}}}],["type",{"_index":30,"title":{},"body":{"classes/AWSSESProvider.html":{},"classes/AcceptInvitationDto.html":{},"classes/Acta.html":{},"injectables/ActaService.html":{},"classes/ActivitiesConfig.html":{},"injectables/ActivitiesConfigService.html":{},"classes/AddTableJoinInput.html":{},"classes/Announcement.html":{},"classes/AnnouncementApplicantArgs.html":{},"classes/AnnouncementApplicantsArgs.html":{},"injectables/AnnouncementsService.html":{},"modules/AppModule.html":{},"classes/Applicant.html":{},"classes/ApplicantArgs.html":{},"classes/ApplicantState.html":{},"classes/Assign.html":{},"classes/Attachment.html":{},"classes/AttachmentSubmit.html":{},"classes/AuthCode.html":{},"injectables/AuthCodeService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AwsService.html":{},"classes/Business.html":{},"classes/BusinessRelationship.html":{},"injectables/BusinessService.html":{},"classes/CloseFormSubscriptionArgs.html":{},"classes/ColumnGroup.html":{},"classes/ConfigEvaluation.html":{},"injectables/ConfigEvaluationsService.html":{},"injectables/ConfigNotificationsService.html":{},"classes/ConfigurationApp.html":{},"injectables/ConfigurationAppService.html":{},"classes/ContactArgs.html":{},"classes/ContactServiceLink.html":{},"classes/ContactServicesInput.html":{},"classes/Content.html":{},"injectables/ContentService.html":{},"classes/CreateActaInput.html":{},"classes/CreateActivitiesConfigInput.html":{},"classes/CreateAnnouncementInput.html":{},"classes/CreateConfigEvaluationInput.html":{},"classes/CreateConfigNotificationInput.html":{},"classes/CreateContentInput.html":{},"classes/CreateEventInput.html":{},"classes/CreateFormInput.html":{},"classes/CreateFormSubscriptionInput.html":{},"classes/CreateFormTagInput.html":{},"classes/CreateHelpDeskInput.html":{},"classes/CreateIntegrationInput.html":{},"classes/CreateInvitationArgs.html":{},"classes/CreateNotificationInput.html":{},"classes/CreateParticipationEventInput.html":{},"classes/CreatePhaseInput.html":{},"classes/CreateResourceInput.html":{},"classes/CreateResourcesReplyInput.html":{},"classes/CreateRolInput.html":{},"classes/CreateSiteInput.html":{},"classes/CreateStageInput.html":{},"classes/CreateTableConfigInput.html":{},"classes/CreateTableInput.html":{},"classes/CreateTypesEventInput.html":{},"classes/CreateUserInput.html":{},"classes/CreateUserLogInput.html":{},"classes/Download.html":{},"injectables/DownloadsService.html":{},"controllers/EmailsController.html":{},"interfaces/EmailsRepository.html":{},"injectables/EmailsService.html":{},"classes/Entrepreneur.html":{},"classes/EntrepreneurRelationship.html":{},"classes/EntrepreneurRelationship-1.html":{},"classes/EntrepreneurStartupArgs.html":{},"classes/Evaluation.html":{},"classes/Event.html":{},"classes/Expert.html":{},"classes/ExpertEventLink.html":{},"classes/FindFormsArgs.html":{},"classes/FindInvitationArgs.html":{},"classes/FindUsersArgs.html":{},"classes/Form.html":{},"classes/FormSubmission.html":{},"classes/FormSubmissionFiles.html":{},"classes/FormSubscription.html":{},"injectables/FormSubscriptionService.html":{},"classes/FormTag.html":{},"injectables/FormTagService.html":{},"injectables/FormsService.html":{},"classes/GetSubmittedFilesArgs.html":{},"guards/GqlAuthGuard.html":{},"classes/HelpDeskFilterInput.html":{},"injectables/HelpDeskService.html":{},"classes/HelpDeskTicket.html":{},"classes/Hours.html":{},"interfaces/IAttachment.html":{},"classes/Integration.html":{},"injectables/IntegrationsService.html":{},"classes/Invitation.html":{},"controllers/InvitationsController.html":{},"injectables/InvitationsService.html":{},"classes/LastContentOutput.html":{},"classes/LinkExpertsToPhaseArgs.html":{},"classes/LinkStartupToPhaseArgs.html":{},"classes/LinkStartupsExpertsArgs.html":{},"classes/LinkWithTargetsArgs.html":{},"classes/LinkWithTargetsByRequestArgs.html":{},"classes/Notification.html":{},"classes/Notification-1.html":{},"injectables/NotificationsService.html":{},"classes/OthersInput.html":{},"classes/ParticipantEventLink.html":{},"classes/ParticipationEvent.html":{},"injectables/ParticipationEventsService.html":{},"classes/Phase.html":{},"classes/PhaseExpertRelationship.html":{},"classes/PhaseRelationship.html":{},"classes/Rating.html":{},"classes/RemoveTableJoinInput.html":{},"classes/Resource.html":{},"classes/ResourcesReply.html":{},"injectables/ResourcesService.html":{},"classes/Rol.html":{},"injectables/RolService.html":{},"classes/SearchBatchInput.html":{},"classes/SelectApplicantsArgs.html":{},"classes/SendEmailInput.html":{},"classes/SendGridProvider.html":{},"classes/SignUpInput.html":{},"classes/Site.html":{},"injectables/SitesService.html":{},"classes/Stage.html":{},"injectables/StagesService.html":{},"classes/Startup.html":{},"classes/StartupLink.html":{},"classes/StartupRelationship.html":{},"controllers/StorageController.html":{},"classes/StorageService.html":{},"classes/SubmitAnnouncementDocInput.html":{},"classes/SubmitFileInput.html":{},"classes/SubmitFormSubscriptionArgs.html":{},"classes/Table.html":{},"classes/TableConfig.html":{},"injectables/TableConfigService.html":{},"classes/TableJoin.html":{},"injectables/TableService.html":{},"classes/TeamCoachLink.html":{},"classes/TemplateInput.html":{},"classes/TermsOfUse.html":{},"injectables/TermsOfUseService.html":{},"injectables/TicketCategoriesService.html":{},"classes/TicketCategory.html":{},"classes/TicketChild.html":{},"classes/TypesEvent.html":{},"injectables/TypesEventsService.html":{},"classes/TypesNotification.html":{},"injectables/TypesNotificationsService.html":{},"classes/UpdateActaInput.html":{},"classes/UpdateActivitiesConfigInput.html":{},"classes/UpdateAnnouncementInput.html":{},"classes/UpdateApplicantInput.html":{},"classes/UpdateApplicantStateInput.html":{},"classes/UpdateConfigEvaluationInput.html":{},"classes/UpdateConfigurationAppInput.html":{},"classes/UpdateContentInput.html":{},"classes/UpdateEventInput.html":{},"classes/UpdateExpertInput.html":{},"classes/UpdateFormInput.html":{},"classes/UpdateFormTagInput.html":{},"classes/UpdateHelpDeskInput.html":{},"classes/UpdateIntegrationInput.html":{},"classes/UpdateNotificationInput.html":{},"classes/UpdateParticipationEventInput.html":{},"classes/UpdatePhaseInput.html":{},"classes/UpdateResourceInput.html":{},"classes/UpdateResourcesReplyInput.html":{},"classes/UpdateRolInput.html":{},"classes/UpdateSiteInput.html":{},"classes/UpdateStageInput.html":{},"classes/UpdateTableConfigInput.html":{},"classes/UpdateTermsOfUseInput.html":{},"classes/UpdateTypesEventInput.html":{},"classes/UpdateUserConfigInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"classes/UserConfig.html":{},"injectables/UserConfigService.html":{},"classes/UserLog.html":{},"injectables/UserLogService.html":{},"injectables/UsersService.html":{},"classes/activities.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["type.'})@isenum(announcementtypes",{"_index":1927,"title":{},"body":{"classes/CreateAnnouncementInput.html":{}}}],["type.'})@prop({type",{"_index":717,"title":{},"body":{"classes/Announcement.html":{}}}],["type.enum.ts",{"_index":4633,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["typeapplicant",{"_index":3529,"title":{},"body":{"classes/SelectApplicantsArgs.html":{}}}],["typeeventmodel",{"_index":4038,"title":{},"body":{"injectables/TypesEventsService.html":{}}}],["typeid",{"_index":4320,"title":{},"body":{"injectables/UserConfigService.html":{}}}],["typeintegration",{"_index":2050,"title":{},"body":{"classes/CreateIntegrationInput.html":{},"classes/Integration.html":{},"injectables/IntegrationsService.html":{},"miscellaneous/enumerations.html":{}}}],["typeintegration.zoom",{"_index":2869,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["types",{"_index":317,"title":{},"body":{"injectables/ActaService.html":{},"injectables/BusinessService.html":{},"classes/ConfigurationApp.html":{},"injectables/ConfigurationAppService.html":{},"classes/Content.html":{},"injectables/ContentService.html":{},"classes/CreateResourceInput.html":{},"classes/CreateTypesEventInput.html":{},"injectables/IntegrationsService.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"classes/Resource.html":{},"classes/ResourcesReply.html":{},"injectables/RolService.html":{},"injectables/SitesService.html":{},"injectables/StagesService.html":{},"classes/TermsOfUse.html":{},"injectables/TermsOfUseService.html":{},"classes/TypesEvent.html":{},"modules/TypesEventsModule.html":{},"injectables/TypesEventsService.html":{},"modules/TypesNotificationsModule.html":{},"injectables/TypesNotificationsService.html":{},"classes/UpdateTypesEventInput.html":{},"injectables/UserLogService.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["types.enum",{"_index":724,"title":{},"body":{"classes/Announcement.html":{},"classes/CreateAnnouncementInput.html":{},"classes/CreateNotificationInput.html":{},"injectables/HelpDeskService.html":{},"classes/Notification.html":{},"classes/Notification-1.html":{},"injectables/NotificationsService.html":{},"injectables/UsersService.html":{}}}],["types.enum.ts",{"_index":4616,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["types.length",{"_index":1685,"title":{},"body":{"injectables/ConfigurationAppService.html":{},"injectables/StagesService.html":{},"injectables/TypesEventsService.html":{},"injectables/TypesNotificationsService.html":{}}}],["types.objectid",{"_index":1761,"title":{},"body":{"classes/Content.html":{}}}],["types.objectid('646f941ac2305c411d73f6c2",{"_index":5070,"title":{},"body":{"miscellaneous/variables.html":{}}}],["types.objectid('646f941ac2305c411d73f6c7",{"_index":5089,"title":{},"body":{"miscellaneous/variables.html":{}}}],["types.objectid('646f943cc2305c411d73f6d0",{"_index":5082,"title":{},"body":{"miscellaneous/variables.html":{}}}],["types.objectid('646f943cc2305c411d73f6d2",{"_index":5060,"title":{},"body":{"miscellaneous/variables.html":{}}}],["types.objectid('646f9538c2305c411d73f6f2",{"_index":5063,"title":{},"body":{"miscellaneous/variables.html":{}}}],["types.objectid('646f9538c2305c411d73f6fb",{"_index":5086,"title":{},"body":{"miscellaneous/variables.html":{}}}],["types.objectid('646f953cc2305c411d73f700",{"_index":5088,"title":{},"body":{"miscellaneous/variables.html":{}}}],["types.objectid('646f953cc2305c411d73f702",{"_index":5066,"title":{},"body":{"miscellaneous/variables.html":{}}}],["types.objectid('646f953dc2305c411d73f702",{"_index":5074,"title":{},"body":{"miscellaneous/variables.html":{}}}],["types.objectid('646f953dc2305c411d73f705",{"_index":5091,"title":{},"body":{"miscellaneous/variables.html":{}}}],["types.objectid('646f958cc2305c411d73f712",{"_index":5077,"title":{},"body":{"miscellaneous/variables.html":{}}}],["types.objectid('646f958cc2305c411d73f716",{"_index":5093,"title":{},"body":{"miscellaneous/variables.html":{}}}],["types.objectid('646f9598c2305c411d73f712",{"_index":5080,"title":{},"body":{"miscellaneous/variables.html":{}}}],["types.objectid('646f9598c2305c411d73f71f",{"_index":5095,"title":{},"body":{"miscellaneous/variables.html":{}}}],["types.objectid('646f95a2c2305c411d73f728",{"_index":5097,"title":{},"body":{"miscellaneous/variables.html":{}}}],["types.objectid('646f95e1c2305c411d73f737",{"_index":5099,"title":{},"body":{"miscellaneous/variables.html":{}}}],["types.objectid('646f95f2c2305c411d73f740",{"_index":5101,"title":{},"body":{"miscellaneous/variables.html":{}}}],["types.objectid(i",{"_index":324,"title":{},"body":{"injectables/ActaService.html":{}}}],["types.objectid(id",{"_index":1458,"title":{},"body":{"injectables/BusinessService.html":{}}}],["types.objectid(iduser",{"_index":4397,"title":{},"body":{"injectables/UserLogService.html":{}}}],["types.ts",{"_index":4630,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["types/auth",{"_index":4807,"title":{},"body":{"interfaces/item_permission.html":{}}}],["typescript",{"_index":4766,"title":{},"body":{"index.html":{}}}],["typesevent",{"_index":426,"title":{"classes/TypesEvent.html":{}},"body":{"injectables/ActivitiesConfigService.html":{},"classes/TypesEvent.html":{},"modules/TypesEventsModule.html":{},"injectables/TypesEventsService.html":{}}}],["typesevent.name",{"_index":4036,"title":{},"body":{"modules/TypesEventsModule.html":{}}}],["typeseventschema",{"_index":4028,"title":{},"body":{"classes/TypesEvent.html":{},"modules/TypesEventsModule.html":{}}}],["typeseventsmodule",{"_index":393,"title":{"modules/TypesEventsModule.html":{}},"body":{"modules/ActivitiesConfigModule.html":{},"modules/AppModule.html":{},"modules/TypesEventsModule.html":{},"modules.html":{},"overview.html":{}}}],["typeseventsresolver",{"_index":4034,"title":{},"body":{"modules/TypesEventsModule.html":{}}}],["typeseventsservice",{"_index":415,"title":{"injectables/TypesEventsService.html":{}},"body":{"injectables/ActivitiesConfigService.html":{},"modules/TypesEventsModule.html":{},"injectables/TypesEventsService.html":{},"overview.html":{}}}],["typesnotification",{"_index":4057,"title":{"classes/TypesNotification.html":{}},"body":{"classes/TypesNotification.html":{},"modules/TypesNotificationsModule.html":{},"injectables/TypesNotificationsService.html":{}}}],["typesnotification.name",{"_index":4069,"title":{},"body":{"modules/TypesNotificationsModule.html":{}}}],["typesnotificationmodel",{"_index":4072,"title":{},"body":{"injectables/TypesNotificationsService.html":{}}}],["typesnotificationschema",{"_index":4063,"title":{},"body":{"classes/TypesNotification.html":{},"modules/TypesNotificationsModule.html":{}}}],["typesnotificationsmodule",{"_index":836,"title":{"modules/TypesNotificationsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/NotificationsModule.html":{},"modules/TypesNotificationsModule.html":{},"modules.html":{},"overview.html":{}}}],["typesnotificationsresolver",{"_index":4068,"title":{},"body":{"modules/TypesNotificationsModule.html":{}}}],["typesnotificationsservice",{"_index":4067,"title":{"injectables/TypesNotificationsService.html":{}},"body":{"modules/TypesNotificationsModule.html":{},"injectables/TypesNotificationsService.html":{},"overview.html":{}}}],["uid",{"_index":1145,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserInput.html":{},"injectables/InvitationsService.html":{},"classes/UpdateUserConfigInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"classes/UserConfig.html":{},"injectables/UserConfigService.html":{},"injectables/UsersService.html":{}}}],["uidaccount",{"_index":3075,"title":{},"body":{"injectables/InvitationsService.html":{}}}],["uidlist",{"_index":4465,"title":{},"body":{"injectables/UsersService.html":{}}}],["uidlist.length",{"_index":4562,"title":{},"body":{"injectables/UsersService.html":{}}}],["ultimo",{"_index":1843,"title":{},"body":{"injectables/ContentService.html":{}}}],["un",{"_index":4522,"title":{},"body":{"injectables/UsersService.html":{},"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["una",{"_index":4917,"title":{},"body":{"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["unable",{"_index":3107,"title":{},"body":{"injectables/InvitationsService.html":{}}}],["unauthorizedexception",{"_index":1109,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"guards/GqlAuthGuard.html":{},"injectables/InvitationsService.html":{}}}],["unauthorizedexception('got",{"_index":1174,"title":{},"body":{"injectables/AuthService.html":{}}}],["unauthorizedexception('the",{"_index":3103,"title":{},"body":{"injectables/InvitationsService.html":{}}}],["unauthorizedexception('this",{"_index":3105,"title":{},"body":{"injectables/InvitationsService.html":{}}}],["unavailable",{"_index":729,"title":{},"body":{"classes/Announcement.html":{},"classes/CreateAnnouncementInput.html":{}}}],["unavailable'})@isdate",{"_index":1917,"title":{},"body":{"classes/CreateAnnouncementInput.html":{}}}],["unavailable.'})@prop({type",{"_index":671,"title":{},"body":{"classes/Announcement.html":{}}}],["undefined",{"_index":218,"title":{},"body":{"classes/Acta.html":{},"classes/ActivitiesConfig.html":{},"classes/Announcement.html":{},"modules/AppModule.html":{},"classes/Applicant.html":{},"classes/ApplicantState.html":{},"classes/Assign.html":{},"guards/AuthGuard.html":{},"classes/ConfigurationApp.html":{},"classes/Content.html":{},"classes/Entrepreneur.html":{},"classes/EntrepreneurRelationship-1.html":{},"classes/Event.html":{},"classes/Expert.html":{},"classes/ExpertEventLink.html":{},"classes/Form.html":{},"guards/GqlAuthGuard.html":{},"classes/HelpDeskTicket.html":{},"classes/Notification-1.html":{},"classes/ParticipantEventLink.html":{},"classes/ParticipationEvent.html":{},"classes/PhaseExpertRelationship.html":{},"classes/PhaseRelationship.html":{},"classes/Resource.html":{},"classes/ResourcesReply.html":{},"classes/Rol.html":{},"classes/SignUpInput.html":{},"classes/Site.html":{},"classes/Startup.html":{},"classes/StartupLink.html":{},"classes/StartupRelationship.html":{},"classes/Table.html":{},"classes/TableConfig.html":{},"classes/TableJoin.html":{},"classes/TeamCoachLink.html":{},"classes/TermsOfUse.html":{},"classes/TypesEvent.html":{},"classes/User.html":{},"classes/UserConfig.html":{},"classes/activities.html":{}}}],["undefined})@field(undefined",{"_index":1748,"title":{},"body":{"classes/Content.html":{},"classes/HelpDeskTicket.html":{},"classes/Invitation.html":{}}}],["undefined})@prop({default",{"_index":3713,"title":{},"body":{"classes/StartupRelationship.html":{}}}],["undefined})@prop({type",{"_index":4264,"title":{},"body":{"classes/User.html":{}}}],["unexpected",{"_index":145,"title":{},"body":{"classes/AWSSESProvider.html":{},"injectables/AuthCodeService.html":{},"injectables/EmailsService.html":{},"classes/SendGridProvider.html":{}}}],["unique",{"_index":656,"title":{},"body":{"classes/Announcement.html":{},"classes/Applicant.html":{},"classes/ApplicantState.html":{},"classes/Attachment.html":{},"classes/AttachmentSubmit.html":{},"classes/CreateFormInput.html":{},"classes/Form.html":{},"interfaces/IAttachment.html":{},"classes/TermsOfUse.html":{},"classes/TicketCategory.html":{},"classes/UpdateApplicantStateInput.html":{},"classes/User.html":{}}}],["unique.'})@isoptional",{"_index":1988,"title":{},"body":{"classes/CreateFormInput.html":{}}}],["uniquesusers",{"_index":4415,"title":{},"body":{"injectables/UserLogService.html":{}}}],["uniquesusers.add(iterator.metadata['user'].tostring",{"_index":4424,"title":{},"body":{"injectables/UserLogService.html":{}}}],["uniquesusers.has(iterator.metadata['user'].tostring",{"_index":4423,"title":{},"body":{"injectables/UserLogService.html":{}}}],["uniquesusers.size",{"_index":4427,"title":{},"body":{"injectables/UserLogService.html":{}}}],["unirse",{"_index":4542,"title":{},"body":{"injectables/UsersService.html":{}}}],["unit",{"_index":4779,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":53,"title":{},"body":{"classes/AWSSESProvider.html":{},"injectables/ActaService.html":{},"injectables/ActivitiesConfigService.html":{},"injectables/AnnouncementsService.html":{},"injectables/AuthService.html":{},"injectables/AwsService.html":{},"injectables/BusinessService.html":{},"injectables/ConfigEvaluationsService.html":{},"injectables/ConfigNotificationsService.html":{},"injectables/ConfigurationAppService.html":{},"injectables/ContentService.html":{},"injectables/EmailsService.html":{},"injectables/FormSubscriptionService.html":{},"injectables/FormTagService.html":{},"injectables/FormsService.html":{},"injectables/HelpDeskService.html":{},"injectables/IntegrationsService.html":{},"injectables/InvitationsService.html":{},"injectables/NotificationsService.html":{},"injectables/ParticipationEventsService.html":{},"injectables/ResourcesService.html":{},"injectables/RolService.html":{},"classes/SendGridProvider.html":{},"injectables/SitesService.html":{},"injectables/StagesService.html":{},"injectables/TableConfigService.html":{},"injectables/TableService.html":{},"injectables/TypesEventsService.html":{},"injectables/TypesNotificationsService.html":{},"injectables/UserConfigService.html":{},"injectables/UserLogService.html":{},"injectables/UsersService.html":{}}}],["unlicensed",{"_index":4945,"title":{},"body":{"properties.html":{}}}],["unnecesary",{"_index":5030,"title":{},"body":{"miscellaneous/variables.html":{}}}],["unpublish",{"_index":768,"title":{},"body":{"injectables/AnnouncementsService.html":{}}}],["unpublish(id",{"_index":784,"title":{},"body":{"injectables/AnnouncementsService.html":{}}}],["unpublishedannouncement",{"_index":807,"title":{},"body":{"injectables/AnnouncementsService.html":{}}}],["unwind",{"_index":4994,"title":{},"body":{"miscellaneous/variables.html":{}}}],["up",{"_index":993,"title":{},"body":{"classes/Applicant.html":{},"classes/ApplicantState.html":{},"classes/Attachment.html":{},"interfaces/IAttachment.html":{},"injectables/StagesService.html":{}}}],["up.input.ts",{"_index":3581,"title":{},"body":{"classes/SignUpInput.html":{}}}],["up.input.ts:10",{"_index":3582,"title":{},"body":{"classes/SignUpInput.html":{}}}],["up.input.ts:13",{"_index":3583,"title":{},"body":{"classes/SignUpInput.html":{}}}],["up.input.ts:16",{"_index":3585,"title":{},"body":{"classes/SignUpInput.html":{}}}],["update",{"_index":288,"title":{},"body":{"injectables/ActaService.html":{},"injectables/ActivitiesConfigService.html":{},"classes/Announcement.html":{},"injectables/AnnouncementsService.html":{},"classes/Applicant.html":{},"classes/ApplicantState.html":{},"classes/Attachment.html":{},"injectables/AuthService.html":{},"classes/Business.html":{},"classes/BusinessRelationship.html":{},"injectables/BusinessService.html":{},"classes/ConfigEvaluation.html":{},"injectables/ConfigEvaluationsService.html":{},"classes/ConfigurationApp.html":{},"injectables/ConfigurationAppService.html":{},"classes/ContactServiceLink.html":{},"injectables/ContentService.html":{},"classes/CreateSiteInput.html":{},"classes/Download.html":{},"classes/Entrepreneur.html":{},"classes/EntrepreneurRelationship.html":{},"classes/EntrepreneurRelationship-1.html":{},"classes/Evaluation.html":{},"classes/Expert.html":{},"classes/Form.html":{},"classes/FormSubscription.html":{},"injectables/FormSubscriptionService.html":{},"classes/FormTag.html":{},"injectables/FormTagService.html":{},"injectables/FormsService.html":{},"injectables/HelpDeskService.html":{},"interfaces/IAttachment.html":{},"classes/Integration.html":{},"injectables/IntegrationsService.html":{},"injectables/InvitationsService.html":{},"injectables/NotificationsService.html":{},"injectables/ParticipationEventsService.html":{},"classes/Phase.html":{},"classes/PhaseExpertRelationship.html":{},"classes/PhaseRelationship.html":{},"classes/ResourcesReply.html":{},"injectables/ResourcesService.html":{},"classes/Rol.html":{},"injectables/RolService.html":{},"classes/Site.html":{},"injectables/SitesService.html":{},"classes/Stage.html":{},"injectables/StagesService.html":{},"classes/Startup.html":{},"classes/StartupLink.html":{},"classes/StartupRelationship.html":{},"injectables/TableConfigService.html":{},"injectables/TermsOfUseService.html":{},"injectables/TicketCategoriesService.html":{},"injectables/TypesEventsService.html":{},"classes/User.html":{},"injectables/UserConfigService.html":{},"classes/UserLog.html":{},"injectables/UserLogService.html":{},"injectables/UsersService.html":{}}}],["update(filters",{"_index":4475,"title":{},"body":{"injectables/UsersService.html":{}}}],["update(id",{"_index":310,"title":{},"body":{"injectables/ActaService.html":{},"injectables/ActivitiesConfigService.html":{},"injectables/AnnouncementsService.html":{},"injectables/BusinessService.html":{},"injectables/ConfigEvaluationsService.html":{},"injectables/ConfigurationAppService.html":{},"injectables/ContentService.html":{},"injectables/FormTagService.html":{},"injectables/FormsService.html":{},"injectables/HelpDeskService.html":{},"injectables/NotificationsService.html":{},"injectables/ParticipationEventsService.html":{},"injectables/ResourcesService.html":{},"injectables/RolService.html":{},"injectables/SitesService.html":{},"injectables/StagesService.html":{},"injectables/TableConfigService.html":{},"injectables/TermsOfUseService.html":{},"injectables/TicketCategoriesService.html":{},"injectables/TypesEventsService.html":{}}}],["update(updateuserconfiginput",{"_index":4300,"title":{},"body":{"injectables/UserConfigService.html":{}}}],["updateactainput",{"_index":311,"title":{"classes/UpdateActaInput.html":{}},"body":{"injectables/ActaService.html":{},"classes/UpdateActaInput.html":{}}}],["updateactainput['_id",{"_index":327,"title":{},"body":{"injectables/ActaService.html":{}}}],["updateactivitiesconfiginput",{"_index":456,"title":{"classes/UpdateActivitiesConfigInput.html":{}},"body":{"injectables/ActivitiesConfigService.html":{},"classes/UpdateActivitiesConfigInput.html":{}}}],["updateactivitiesconfiginput['_id",{"_index":509,"title":{},"body":{"injectables/ActivitiesConfigService.html":{}}}],["updateannouncementinput",{"_index":786,"title":{"classes/UpdateAnnouncementInput.html":{}},"body":{"injectables/AnnouncementsService.html":{},"classes/UpdateAnnouncementInput.html":{}}}],["updateapplicantinput",{"_index":4111,"title":{"classes/UpdateApplicantInput.html":{}},"body":{"classes/UpdateApplicantInput.html":{}}}],["updateapplicantstateinput",{"_index":1039,"title":{"classes/UpdateApplicantStateInput.html":{}},"body":{"classes/AttachmentSubmit.html":{},"classes/UpdateApplicantStateInput.html":{}}}],["updatecategoryinput",{"_index":3993,"title":{},"body":{"injectables/TicketCategoriesService.html":{}}}],["updatecategoryinput['_id",{"_index":4006,"title":{},"body":{"injectables/TicketCategoriesService.html":{}}}],["updateconfigevaluationinput",{"_index":1553,"title":{"classes/UpdateConfigEvaluationInput.html":{}},"body":{"injectables/ConfigEvaluationsService.html":{},"classes/UpdateConfigEvaluationInput.html":{}}}],["updateconfigevaluationinput['_id",{"_index":1585,"title":{},"body":{"injectables/ConfigEvaluationsService.html":{}}}],["updateconfigurationappinput",{"_index":1678,"title":{"classes/UpdateConfigurationAppInput.html":{}},"body":{"injectables/ConfigurationAppService.html":{},"classes/UpdateConfigurationAppInput.html":{}}}],["updateconfigurationappinput['_id",{"_index":1689,"title":{},"body":{"injectables/ConfigurationAppService.html":{}}}],["updatecontentinput",{"_index":1814,"title":{"classes/UpdateContentInput.html":{}},"body":{"injectables/ContentService.html":{},"injectables/ResourcesService.html":{},"classes/UpdateContentInput.html":{}}}],["updatecontentinput['_id",{"_index":1878,"title":{},"body":{"injectables/ContentService.html":{},"injectables/ResourcesService.html":{}}}],["updated",{"_index":455,"title":{},"body":{"injectables/ActivitiesConfigService.html":{},"classes/Announcement.html":{},"injectables/AnnouncementsService.html":{},"classes/Applicant.html":{},"classes/ApplicantState.html":{},"classes/Attachment.html":{},"classes/Business.html":{},"classes/BusinessRelationship.html":{},"classes/ConfigEvaluation.html":{},"classes/Download.html":{},"classes/Entrepreneur.html":{},"classes/EntrepreneurRelationship.html":{},"classes/EntrepreneurRelationship-1.html":{},"classes/Expert.html":{},"classes/Form.html":{},"classes/FormTag.html":{},"interfaces/IAttachment.html":{},"classes/PhaseExpertRelationship.html":{},"classes/PhaseRelationship.html":{},"classes/Startup.html":{},"classes/StartupLink.html":{},"classes/StartupRelationship.html":{},"classes/User.html":{}}}],["updatedannouncement",{"_index":800,"title":{},"body":{"injectables/AnnouncementsService.html":{}}}],["updatedat",{"_index":206,"title":{},"body":{"classes/Acta.html":{},"classes/ActivitiesConfig.html":{},"classes/Announcement.html":{},"classes/Applicant.html":{},"classes/ApplicantState.html":{},"classes/Assign.html":{},"classes/Attachment.html":{},"classes/Business.html":{},"classes/BusinessRelationship.html":{},"classes/ConfigEvaluation.html":{},"classes/ConfigurationApp.html":{},"classes/ContactServiceLink.html":{},"classes/Content.html":{},"classes/Download.html":{},"classes/Entrepreneur.html":{},"classes/EntrepreneurRelationship.html":{},"classes/EntrepreneurRelationship-1.html":{},"classes/Evaluation.html":{},"classes/Event.html":{},"classes/Expert.html":{},"classes/ExpertEventLink.html":{},"classes/Form.html":{},"classes/FormSubscription.html":{},"classes/FormTag.html":{},"classes/HelpDeskTicket.html":{},"interfaces/IAttachment.html":{},"classes/Integration.html":{},"classes/Invitation.html":{},"classes/Notification-1.html":{},"classes/ParticipantEventLink.html":{},"classes/ParticipationEvent.html":{},"classes/Phase.html":{},"classes/PhaseExpertRelationship.html":{},"classes/PhaseRelationship.html":{},"classes/Resource.html":{},"classes/ResourcesReply.html":{},"classes/Rol.html":{},"classes/Site.html":{},"classes/Stage.html":{},"classes/Startup.html":{},"classes/StartupLink.html":{},"classes/StartupRelationship.html":{},"classes/TeamCoachLink.html":{},"classes/TermsOfUse.html":{},"classes/TicketCategory.html":{},"classes/TicketChild.html":{},"classes/TypesEvent.html":{},"classes/User.html":{},"classes/UserLog.html":{},"classes/activities.html":{}}}],["updatedby",{"_index":652,"title":{},"body":{"classes/Announcement.html":{},"injectables/AnnouncementsService.html":{},"classes/Applicant.html":{},"classes/ApplicantState.html":{},"classes/Attachment.html":{},"classes/Business.html":{},"classes/BusinessRelationship.html":{},"classes/ConfigEvaluation.html":{},"classes/Download.html":{},"classes/Entrepreneur.html":{},"classes/EntrepreneurRelationship.html":{},"classes/EntrepreneurRelationship-1.html":{},"classes/Expert.html":{},"classes/Form.html":{},"classes/FormTag.html":{},"injectables/FormsService.html":{},"interfaces/IAttachment.html":{},"classes/PhaseExpertRelationship.html":{},"classes/PhaseRelationship.html":{},"classes/Startup.html":{},"classes/StartupLink.html":{},"classes/StartupRelationship.html":{},"classes/User.html":{}}}],["updatedconfig",{"_index":4328,"title":{},"body":{"injectables/UserConfigService.html":{}}}],["updatedconfig._id",{"_index":4329,"title":{},"body":{"injectables/UserConfigService.html":{}}}],["updatedconfig.uid",{"_index":4330,"title":{},"body":{"injectables/UserConfigService.html":{}}}],["updatedcontent",{"_index":511,"title":{},"body":{"injectables/ActivitiesConfigService.html":{},"injectables/ContentService.html":{},"injectables/ResourcesService.html":{}}}],["updateddocument",{"_index":1407,"title":{},"body":{"injectables/BusinessService.html":{}}}],["updatedevent",{"_index":328,"title":{},"body":{"injectables/ActaService.html":{},"injectables/ConfigEvaluationsService.html":{},"injectables/ParticipationEventsService.html":{},"injectables/SitesService.html":{}}}],["updatedhelpdeskticket",{"_index":2760,"title":{},"body":{"injectables/HelpDeskService.html":{}}}],["updatednotification",{"_index":3256,"title":{},"body":{"injectables/NotificationsService.html":{},"injectables/TicketCategoriesService.html":{}}}],["updatedocument",{"_index":1329,"title":{},"body":{"injectables/BusinessService.html":{}}}],["updatedocument(id",{"_index":1374,"title":{},"body":{"injectables/BusinessService.html":{}}}],["updatedrol",{"_index":3514,"title":{},"body":{"injectables/RolService.html":{}}}],["updatedstage",{"_index":1690,"title":{},"body":{"injectables/ConfigurationAppService.html":{},"injectables/StagesService.html":{}}}],["updatedstage._id",{"_index":3688,"title":{},"body":{"injectables/StagesService.html":{}}}],["updatedtable",{"_index":3877,"title":{},"body":{"injectables/TableService.html":{}}}],["updatedtableconfig",{"_index":3815,"title":{},"body":{"injectables/TableConfigService.html":{}}}],["updatedtype",{"_index":330,"title":{},"body":{"injectables/ActaService.html":{},"injectables/ConfigEvaluationsService.html":{},"injectables/HelpDeskService.html":{},"injectables/NotificationsService.html":{},"injectables/SitesService.html":{},"injectables/TicketCategoriesService.html":{},"injectables/TypesEventsService.html":{}}}],["updateeventinput",{"_index":4144,"title":{"classes/UpdateEventInput.html":{}},"body":{"classes/UpdateEventInput.html":{}}}],["updateexpertinput",{"_index":4158,"title":{"classes/UpdateExpertInput.html":{}},"body":{"classes/UpdateExpertInput.html":{}}}],["updateforminput",{"_index":2639,"title":{"classes/UpdateFormInput.html":{}},"body":{"injectables/FormsService.html":{},"classes/UpdateFormInput.html":{}}}],["updateforminput['_id",{"_index":2654,"title":{},"body":{"injectables/FormsService.html":{}}}],["updateformtaginput",{"_index":2598,"title":{"classes/UpdateFormTagInput.html":{}},"body":{"injectables/FormTagService.html":{},"classes/UpdateFormTagInput.html":{}}}],["updateformtaginput['_id",{"_index":2606,"title":{},"body":{"injectables/FormTagService.html":{}}}],["updatehelpdeskinput",{"_index":2723,"title":{"classes/UpdateHelpDeskInput.html":{}},"body":{"injectables/HelpDeskService.html":{},"classes/UpdateHelpDeskInput.html":{}}}],["updatehelpdeskinput['_id",{"_index":2759,"title":{},"body":{"injectables/HelpDeskService.html":{}}}],["updateintegrationinput",{"_index":4184,"title":{"classes/UpdateIntegrationInput.html":{}},"body":{"classes/UpdateIntegrationInput.html":{}}}],["updatemany",{"_index":1449,"title":{},"body":{"injectables/BusinessService.html":{}}}],["updatenotificationinput",{"_index":3212,"title":{"classes/UpdateNotificationInput.html":{}},"body":{"injectables/NotificationsService.html":{},"classes/UpdateNotificationInput.html":{}}}],["updatenotificationinput['_id",{"_index":3255,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["updateorcreate",{"_index":2832,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["updateorcreate(data",{"_index":2845,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["updateparticipationeventinput",{"_index":3306,"title":{"classes/UpdateParticipationEventInput.html":{}},"body":{"injectables/ParticipationEventsService.html":{},"classes/UpdateParticipationEventInput.html":{}}}],["updateparticipationeventinput['_id",{"_index":3313,"title":{},"body":{"injectables/ParticipationEventsService.html":{}}}],["updatepassword",{"_index":1135,"title":{},"body":{"injectables/AuthService.html":{}}}],["updatepassword(uid",{"_index":1153,"title":{},"body":{"injectables/AuthService.html":{}}}],["updatephaseinput",{"_index":4195,"title":{"classes/UpdatePhaseInput.html":{}},"body":{"classes/UpdatePhaseInput.html":{}}}],["updatepromises",{"_index":4314,"title":{},"body":{"injectables/UserConfigService.html":{}}}],["updateresourceinput",{"_index":3454,"title":{"classes/UpdateResourceInput.html":{}},"body":{"injectables/ResourcesService.html":{},"classes/UpdateResourceInput.html":{}}}],["updateresourcesreplyinput",{"_index":4199,"title":{"classes/UpdateResourcesReplyInput.html":{}},"body":{"classes/UpdateResourcesReplyInput.html":{}}}],["updateresult",{"_index":1455,"title":{},"body":{"injectables/BusinessService.html":{},"injectables/ConfigNotificationsService.html":{},"injectables/TableConfigService.html":{}}}],["updateresult.matchedcount",{"_index":1632,"title":{},"body":{"injectables/ConfigNotificationsService.html":{}}}],["updateresult.upsertedid?.tostring",{"_index":1460,"title":{},"body":{"injectables/BusinessService.html":{}}}],["updateresultpayload",{"_index":1376,"title":{},"body":{"injectables/BusinessService.html":{}}}],["updaterolinput",{"_index":3501,"title":{"classes/UpdateRolInput.html":{}},"body":{"injectables/RolService.html":{},"classes/UpdateRolInput.html":{}}}],["updaterolinput['_id",{"_index":3513,"title":{},"body":{"injectables/RolService.html":{}}}],["updates",{"_index":4093,"title":{},"body":{"classes/UpdateActivitiesConfigInput.html":{}}}],["updatesiteinput",{"_index":1738,"title":{"classes/UpdateSiteInput.html":{}},"body":{"classes/ContactServicesInput.html":{},"injectables/SitesService.html":{},"classes/UpdateSiteInput.html":{}}}],["updatesiteinput['_id",{"_index":3623,"title":{},"body":{"injectables/SitesService.html":{}}}],["updatestageinput",{"_index":3669,"title":{"classes/UpdateStageInput.html":{}},"body":{"injectables/StagesService.html":{},"classes/UpdateStageInput.html":{}}}],["updatestageinput['_id",{"_index":3684,"title":{},"body":{"injectables/StagesService.html":{}}}],["updatestate",{"_index":4449,"title":{},"body":{"injectables/UsersService.html":{}}}],["updatestate(uid",{"_index":4478,"title":{},"body":{"injectables/UsersService.html":{}}}],["updatetableconfiginput",{"_index":4224,"title":{"classes/UpdateTableConfigInput.html":{}},"body":{"classes/UpdateTableConfigInput.html":{}}}],["updatetermsofuseinput",{"_index":3961,"title":{"classes/UpdateTermsOfUseInput.html":{}},"body":{"injectables/TermsOfUseService.html":{},"classes/UpdateTermsOfUseInput.html":{}}}],["updatetermsofuseinput['_id",{"_index":3970,"title":{},"body":{"injectables/TermsOfUseService.html":{}}}],["updatetypeeventinput",{"_index":4046,"title":{},"body":{"injectables/TypesEventsService.html":{}}}],["updatetypeeventinput['_id",{"_index":4055,"title":{},"body":{"injectables/TypesEventsService.html":{}}}],["updatetypeseventinput",{"_index":4047,"title":{"classes/UpdateTypesEventInput.html":{}},"body":{"injectables/TypesEventsService.html":{},"classes/UpdateTypesEventInput.html":{}}}],["updateuserconfiginput",{"_index":4239,"title":{"classes/UpdateUserConfigInput.html":{}},"body":{"classes/UpdateUserConfigInput.html":{},"injectables/UserConfigService.html":{}}}],["updateuserconfiginput._id",{"_index":4332,"title":{},"body":{"injectables/UserConfigService.html":{}}}],["updateuserconfiginput.notifications[key",{"_index":4317,"title":{},"body":{"injectables/UserConfigService.html":{}}}],["updateuserinput",{"_index":4243,"title":{"classes/UpdateUserInput.html":{}},"body":{"classes/UpdateUserInput.html":{}}}],["updating",{"_index":2765,"title":{},"body":{"injectables/HelpDeskService.html":{},"injectables/NotificationsService.html":{},"injectables/TicketCategoriesService.html":{}}}],["upload",{"_index":1225,"title":{},"body":{"injectables/AwsService.html":{},"injectables/FormSubscriptionService.html":{},"controllers/StorageController.html":{}}}],["uploadtempfile",{"_index":2202,"title":{},"body":{"injectables/DownloadsService.html":{}}}],["uploadtempfile(data",{"_index":2206,"title":{},"body":{"injectables/DownloadsService.html":{}}}],["uploadtemporaryfile",{"_index":1206,"title":{},"body":{"injectables/AwsService.html":{},"classes/StorageService.html":{}}}],["uploadtemporaryfile(key",{"_index":1222,"title":{},"body":{"injectables/AwsService.html":{},"classes/StorageService.html":{}}}],["upsert",{"_index":2867,"title":{},"body":{"injectables/IntegrationsService.html":{},"injectables/TermsOfUseService.html":{},"injectables/UserLogService.html":{}}}],["upsertedid",{"_index":1459,"title":{},"body":{"injectables/BusinessService.html":{}}}],["uri",{"_index":924,"title":{},"body":{"modules/AppModule.html":{}}}],["url",{"_index":1003,"title":{},"body":{"classes/Applicant.html":{},"classes/ApplicantState.html":{},"classes/Attachment.html":{},"classes/AttachmentSubmit.html":{},"injectables/AwsService.html":{},"injectables/BusinessService.html":{},"classes/CreateNotificationInput.html":{},"classes/Download.html":{},"injectables/DownloadsService.html":{},"injectables/FormSubscriptionService.html":{},"injectables/HelpDeskService.html":{},"interfaces/IAttachment.html":{},"injectables/IntegrationsService.html":{},"classes/Notification.html":{},"classes/Notification-1.html":{},"controllers/StorageController.html":{},"classes/SubmitFileInput.html":{},"classes/UpdateApplicantStateInput.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["urlencoded",{"_index":2880,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["urlinvitation",{"_index":2775,"title":{},"body":{"injectables/HelpDeskService.html":{},"injectables/UsersService.html":{}}}],["urlredirect",{"_index":171,"title":{},"body":{"classes/AWSSESProvider.html":{},"interfaces/EmailsRepository.html":{},"injectables/EmailsService.html":{},"classes/SendGridProvider.html":{}}}],["use",{"_index":2976,"title":{},"body":{"classes/Invitation.html":{},"classes/TermsOfUse.html":{},"injectables/TermsOfUseService.html":{},"miscellaneous/variables.html":{}}}],["use.entity",{"_index":3952,"title":{},"body":{"modules/TermsOfUseModule.html":{},"injectables/TermsOfUseService.html":{}}}],["use.entity.ts",{"_index":3933,"title":{},"body":{"classes/TermsOfUse.html":{}}}],["use.entity.ts:12",{"_index":3934,"title":{},"body":{"classes/TermsOfUse.html":{}}}],["use.entity.ts:16",{"_index":3938,"title":{},"body":{"classes/TermsOfUse.html":{}}}],["use.entity.ts:20",{"_index":3935,"title":{},"body":{"classes/TermsOfUse.html":{}}}],["use.entity.ts:24",{"_index":3937,"title":{},"body":{"classes/TermsOfUse.html":{}}}],["use.entity.ts:28",{"_index":3936,"title":{},"body":{"classes/TermsOfUse.html":{}}}],["use.entity.ts:32",{"_index":3939,"title":{},"body":{"classes/TermsOfUse.html":{}}}],["use.input",{"_index":3963,"title":{},"body":{"injectables/TermsOfUseService.html":{},"classes/UpdateTermsOfUseInput.html":{}}}],["use.input.ts",{"_index":4229,"title":{},"body":{"classes/UpdateTermsOfUseInput.html":{}}}],["use.input.ts:12",{"_index":4230,"title":{},"body":{"classes/UpdateTermsOfUseInput.html":{}}}],["use.input.ts:16",{"_index":4233,"title":{},"body":{"classes/UpdateTermsOfUseInput.html":{}}}],["use.input.ts:20",{"_index":4231,"title":{},"body":{"classes/UpdateTermsOfUseInput.html":{}}}],["use.input.ts:24",{"_index":4232,"title":{},"body":{"classes/UpdateTermsOfUseInput.html":{}}}],["use.module",{"_index":910,"title":{},"body":{"modules/AppModule.html":{}}}],["use.module.ts",{"_index":3947,"title":{},"body":{"modules/TermsOfUseModule.html":{}}}],["use.resolver",{"_index":3950,"title":{},"body":{"modules/TermsOfUseModule.html":{}}}],["use.service",{"_index":3948,"title":{},"body":{"modules/TermsOfUseModule.html":{}}}],["use.service.ts",{"_index":3954,"title":{},"body":{"injectables/TermsOfUseService.html":{}}}],["use.service.ts:21",{"_index":3958,"title":{},"body":{"injectables/TermsOfUseService.html":{}}}],["use.service.ts:28",{"_index":3960,"title":{},"body":{"injectables/TermsOfUseService.html":{}}}],["use.service.ts:37",{"_index":3962,"title":{},"body":{"injectables/TermsOfUseService.html":{}}}],["use.service.ts:8",{"_index":3956,"title":{},"body":{"injectables/TermsOfUseService.html":{}}}],["use/dto/update",{"_index":4228,"title":{},"body":{"classes/UpdateTermsOfUseInput.html":{}}}],["use/entities/terms",{"_index":3932,"title":{},"body":{"classes/TermsOfUse.html":{}}}],["use/terms",{"_index":909,"title":{},"body":{"modules/AppModule.html":{},"modules/TermsOfUseModule.html":{},"injectables/TermsOfUseService.html":{}}}],["use_pmi",{"_index":2942,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["useclass",{"_index":3735,"title":{},"body":{"modules/StorageModule.html":{}}}],["used",{"_index":713,"title":{},"body":{"classes/Announcement.html":{},"classes/Applicant.html":{},"classes/ApplicantState.html":{},"classes/Attachment.html":{},"classes/AttachmentSubmit.html":{},"injectables/BusinessService.html":{},"classes/ContactServiceLink.html":{},"classes/CreateFormInput.html":{},"classes/CreateTableInput.html":{},"interfaces/IAttachment.html":{},"classes/Phase.html":{},"classes/Site.html":{},"classes/Table.html":{},"classes/UpdateApplicantStateInput.html":{},"miscellaneous/variables.html":{}}}],["useexisting",{"_index":2263,"title":{},"body":{"modules/EmailsModule.html":{}}}],["usefactory",{"_index":923,"title":{},"body":{"modules/AppModule.html":{}}}],["useful",{"_index":2810,"title":{},"body":{"classes/Integration.html":{},"classes/Invitation.html":{}}}],["user",{"_index":438,"title":{"classes/User.html":{}},"body":{"injectables/ActivitiesConfigService.html":{},"classes/Announcement.html":{},"injectables/AnnouncementsService.html":{},"modules/AppModule.html":{},"classes/Applicant.html":{},"classes/ApplicantState.html":{},"classes/Attachment.html":{},"injectables/AuthCodeService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Business.html":{},"classes/BusinessRelationship.html":{},"injectables/BusinessService.html":{},"classes/ConfigEvaluation.html":{},"injectables/ConfigEvaluationsService.html":{},"injectables/ConfigNotificationsService.html":{},"injectables/ConfigurationAppService.html":{},"injectables/ContentService.html":{},"classes/CreateUserLogInput.html":{},"classes/Download.html":{},"classes/Entrepreneur.html":{},"classes/EntrepreneurRelationship.html":{},"classes/EntrepreneurRelationship-1.html":{},"classes/Event.html":{},"classes/Expert.html":{},"classes/ExpertEventLink.html":{},"classes/Form.html":{},"classes/FormTag.html":{},"injectables/FormsService.html":{},"guards/GqlAuthGuard.html":{},"injectables/HelpDeskService.html":{},"interfaces/IAttachment.html":{},"classes/Invitation.html":{},"injectables/InvitationsService.html":{},"classes/Notification-1.html":{},"injectables/NotificationsService.html":{},"classes/ParticipantEventLink.html":{},"classes/Phase.html":{},"classes/PhaseExpertRelationship.html":{},"classes/PhaseRelationship.html":{},"classes/Rating.html":{},"classes/ResourcesReply.html":{},"classes/Startup.html":{},"classes/StartupLink.html":{},"classes/StartupRelationship.html":{},"injectables/TableConfigService.html":{},"classes/TeamCoachLink.html":{},"classes/UpdateUserConfigInput.html":{},"classes/User.html":{},"modules/UserConfigModule.html":{},"injectables/UserConfigService.html":{},"modules/UserLogModule.html":{},"injectables/UserLogService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["user._id",{"_index":3072,"title":{},"body":{"injectables/InvitationsService.html":{},"injectables/NotificationsService.html":{},"injectables/UserLogService.html":{},"injectables/UsersService.html":{}}}],["user.decorator.ts",{"_index":4954,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user.email",{"_index":4325,"title":{},"body":{"injectables/UserConfigService.html":{}}}],["user.fullname",{"_index":5058,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user.input.ts",{"_index":2163,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/UpdateUserInput.html":{}}}],["user.input.ts:10",{"_index":2170,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["user.input.ts:11",{"_index":4245,"title":{},"body":{"classes/UpdateUserInput.html":{}}}],["user.input.ts:13",{"_index":2166,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["user.input.ts:15",{"_index":4249,"title":{},"body":{"classes/UpdateUserInput.html":{}}}],["user.input.ts:16",{"_index":2165,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["user.input.ts:19",{"_index":2167,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/UpdateUserInput.html":{}}}],["user.input.ts:23",{"_index":2169,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/UpdateUserInput.html":{}}}],["user.input.ts:27",{"_index":4247,"title":{},"body":{"classes/UpdateUserInput.html":{}}}],["user.input.ts:31",{"_index":4248,"title":{},"body":{"classes/UpdateUserInput.html":{}}}],["user.input.ts:35",{"_index":4246,"title":{},"body":{"classes/UpdateUserInput.html":{}}}],["user.isactive",{"_index":4513,"title":{},"body":{"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["user.name",{"_index":4440,"title":{},"body":{"modules/UsersModule.html":{}}}],["user.permissions",{"_index":4933,"title":{},"body":{"interfaces/item_permission.html":{}}}],["user.permissions.length",{"_index":4934,"title":{},"body":{"interfaces/item_permission.html":{}}}],["user.rol",{"_index":5050,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user.rol.tostring",{"_index":3069,"title":{},"body":{"injectables/InvitationsService.html":{}}}],["user.roldoc.permissions",{"_index":4935,"title":{},"body":{"interfaces/item_permission.html":{}}}],["user.roldoc.type",{"_index":1559,"title":{},"body":{"injectables/ConfigEvaluationsService.html":{},"injectables/ConfigurationAppService.html":{},"injectables/HelpDeskService.html":{}}}],["user.save",{"_index":4516,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.uid",{"_index":797,"title":{},"body":{"injectables/AnnouncementsService.html":{},"injectables/AuthService.html":{},"injectables/FormsService.html":{},"injectables/HelpDeskService.html":{},"injectables/InvitationsService.html":{}}}],["user.updatedby",{"_index":4515,"title":{},"body":{"injectables/UsersService.html":{}}}],["user?.passwordset",{"_index":3066,"title":{},"body":{"injectables/InvitationsService.html":{}}}],["user?.roldoc.type",{"_index":1829,"title":{},"body":{"injectables/ContentService.html":{}}}],["user['roldoc",{"_index":5047,"title":{},"body":{"miscellaneous/variables.html":{}}}],["userconfig",{"_index":4277,"title":{"classes/UserConfig.html":{}},"body":{"classes/UserConfig.html":{},"modules/UserConfigModule.html":{},"injectables/UserConfigService.html":{}}}],["userconfig.name",{"_index":4292,"title":{},"body":{"modules/UserConfigModule.html":{}}}],["userconfigmodel",{"_index":4295,"title":{},"body":{"injectables/UserConfigService.html":{}}}],["userconfigmodule",{"_index":837,"title":{"modules/UserConfigModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UserConfigModule.html":{},"modules.html":{},"overview.html":{}}}],["userconfigresolver",{"_index":4290,"title":{},"body":{"modules/UserConfigModule.html":{}}}],["userconfigschema",{"_index":4284,"title":{},"body":{"classes/UserConfig.html":{},"modules/UserConfigModule.html":{}}}],["userconfigservice",{"_index":4289,"title":{"injectables/UserConfigService.html":{}},"body":{"modules/UserConfigModule.html":{},"injectables/UserConfigService.html":{},"overview.html":{}}}],["userdoc",{"_index":3106,"title":{},"body":{"injectables/InvitationsService.html":{}}}],["userdoc.uid",{"_index":3111,"title":{},"body":{"injectables/InvitationsService.html":{}}}],["useremail",{"_index":1613,"title":{},"body":{"injectables/ConfigNotificationsService.html":{}}}],["userid",{"_index":3207,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["userlog",{"_index":4333,"title":{"classes/UserLog.html":{}},"body":{"classes/UserLog.html":{},"modules/UserLogModule.html":{},"injectables/UserLogService.html":{}}}],["userlog.name",{"_index":4350,"title":{},"body":{"modules/UserLogModule.html":{}}}],["userlogmodel",{"_index":4360,"title":{},"body":{"injectables/UserLogService.html":{}}}],["userlogmodule",{"_index":838,"title":{"modules/UserLogModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ConfigurationAppModule.html":{},"modules/ContentModule.html":{},"modules/PhasesModule.html":{},"modules/UserLogModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["userlogresolver",{"_index":4347,"title":{},"body":{"modules/UserLogModule.html":{}}}],["userlogschema",{"_index":4340,"title":{},"body":{"classes/UserLog.html":{},"modules/UserLogModule.html":{}}}],["userlogservice",{"_index":1670,"title":{"injectables/UserLogService.html":{}},"body":{"injectables/ConfigurationAppService.html":{},"injectables/ContentService.html":{},"modules/UserLogModule.html":{},"injectables/UserLogService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["usermodel",{"_index":4453,"title":{},"body":{"injectables/UsersService.html":{}}}],["usernotification",{"_index":2778,"title":{},"body":{"injectables/HelpDeskService.html":{},"injectables/UsersService.html":{}}}],["userrecord",{"_index":1177,"title":{},"body":{"injectables/AuthService.html":{}}}],["userrecord.displayname",{"_index":1181,"title":{},"body":{"injectables/AuthService.html":{}}}],["userrecord.email",{"_index":1182,"title":{},"body":{"injectables/AuthService.html":{}}}],["userrecord.uid",{"_index":1179,"title":{},"body":{"injectables/AuthService.html":{}}}],["users",{"_index":1046,"title":{},"body":{"classes/AuthCode.html":{},"injectables/NotificationsService.html":{},"classes/Rating.html":{},"classes/ResourcesReply.html":{},"classes/User.html":{},"classes/UserConfig.html":{},"classes/UserLog.html":{},"injectables/UserLogService.html":{},"injectables/UsersService.html":{}}}],["users.args",{"_index":4482,"title":{},"body":{"injectables/UsersService.html":{}}}],["users.args.ts",{"_index":2429,"title":{},"body":{"classes/FindUsersArgs.html":{}}}],["users.args.ts:12",{"_index":2432,"title":{},"body":{"classes/FindUsersArgs.html":{}}}],["users.args.ts:16",{"_index":2431,"title":{},"body":{"classes/FindUsersArgs.html":{}}}],["users.args.ts:20",{"_index":2430,"title":{},"body":{"classes/FindUsersArgs.html":{}}}],["users.resolver",{"_index":4437,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.service",{"_index":4435,"title":{},"body":{"modules/UsersModule.html":{}}}],["users/me/meetings",{"_index":2967,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["users/users.module",{"_index":852,"title":{},"body":{"modules/AppModule.html":{}}}],["userschema",{"_index":4275,"title":{},"body":{"classes/User.html":{},"modules/UsersModule.html":{}}}],["usersmodule",{"_index":389,"title":{"modules/UsersModule.html":{}},"body":{"modules/ActivitiesConfigModule.html":{},"modules/AnnouncementsModule.html":{},"modules/AppModule.html":{},"modules/ApplicantModule.html":{},"modules/AuthModule.html":{},"modules/BusinessModule.html":{},"modules/ConfigurationAppModule.html":{},"modules/DownloadsModule.html":{},"modules/EntrepreneurModule.html":{},"modules/EvaluationsModule.html":{},"modules/EventsModule.html":{},"modules/ExpertModule.html":{},"modules/FormsModule.html":{},"modules/InvitationsModule.html":{},"modules/PhasesModule.html":{},"modules/ResourcesRepliesModule.html":{},"modules/TableModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersresolver",{"_index":4436,"title":{},"body":{"modules/UsersModule.html":{}}}],["usersservice",{"_index":413,"title":{"injectables/UsersService.html":{}},"body":{"injectables/ActivitiesConfigService.html":{},"injectables/AuthService.html":{},"injectables/InvitationsService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["userupdates",{"_index":4476,"title":{},"body":{"injectables/UsersService.html":{}}}],["userupdates['_id",{"_index":4510,"title":{},"body":{"injectables/UsersService.html":{}}}],["using",{"_index":2989,"title":{},"body":{"classes/Invitation.html":{}}}],["usually",{"_index":5033,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usuario",{"_index":4523,"title":{},"body":{"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["util",{"_index":5036,"title":{},"body":{"miscellaneous/variables.html":{}}}],["utilities/table.utilities",{"_index":3861,"title":{},"body":{"injectables/TableService.html":{}}}],["utilizar",{"_index":3263,"title":{},"body":{"classes/OthersInput.html":{}}}],["uuid",{"_index":2212,"title":{},"body":{"injectables/DownloadsService.html":{},"injectables/InvitationsService.html":{},"injectables/UserConfigService.html":{},"dependencies.html":{}}}],["uuid.v4",{"_index":2217,"title":{},"body":{"injectables/DownloadsService.html":{},"injectables/InvitationsService.html":{}}}],["valid",{"_index":5059,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validate",{"_index":1158,"title":{},"body":{"injectables/AuthService.html":{},"injectables/InvitationsService.html":{}}}],["validatenested",{"_index":634,"title":{},"body":{"classes/AddTableJoinInput.html":{},"classes/AttachmentSubmit.html":{},"classes/LinkWithTargetsByRequestArgs.html":{},"classes/TemplateInput.html":{},"classes/UpdateApplicantStateInput.html":{},"classes/UpdateFormInput.html":{}}}],["validatenested()@isnotempty()@type",{"_index":3917,"title":{},"body":{"classes/TemplateInput.html":{}}}],["validatetoken",{"_index":1136,"title":{},"body":{"injectables/AuthService.html":{}}}],["validatetoken(idtoken",{"_index":1156,"title":{},"body":{"injectables/AuthService.html":{}}}],["validator",{"_index":191,"title":{},"body":{"classes/AcceptInvitationDto.html":{},"classes/AddTableJoinInput.html":{},"classes/AnnouncementApplicantArgs.html":{},"classes/AnnouncementApplicantsArgs.html":{},"classes/ApplicantArgs.html":{},"classes/AttachmentSubmit.html":{},"classes/CloseFormSubscriptionArgs.html":{},"classes/ContactArgs.html":{},"classes/ContactServicesInput.html":{},"classes/CreateActaInput.html":{},"classes/CreateActivitiesConfigInput.html":{},"classes/CreateAnnouncementInput.html":{},"classes/CreateConfigEvaluationInput.html":{},"classes/CreateContentInput.html":{},"classes/CreateEventInput.html":{},"classes/CreateFormInput.html":{},"classes/CreateFormSubscriptionInput.html":{},"classes/CreateFormTagInput.html":{},"classes/CreateHelpDeskInput.html":{},"classes/CreateIntegrationInput.html":{},"classes/CreateInvitationArgs.html":{},"classes/CreateNotificationInput.html":{},"classes/CreateParticipationEventInput.html":{},"classes/CreatePhaseInput.html":{},"classes/CreateResourceInput.html":{},"classes/CreateResourcesReplyInput.html":{},"classes/CreateRolInput.html":{},"classes/CreateSiteInput.html":{},"classes/CreateStageInput.html":{},"classes/CreateTableConfigInput.html":{},"classes/CreateTableInput.html":{},"classes/CreateTypesEventInput.html":{},"classes/CreateUserInput.html":{},"classes/CreateUserLogInput.html":{},"classes/EntrepreneurStartupArgs.html":{},"classes/FindFormsArgs.html":{},"classes/FindInvitationArgs.html":{},"classes/FindUsersArgs.html":{},"classes/GetSubmittedFilesArgs.html":{},"classes/HelpDeskFilterInput.html":{},"classes/LastContentOutput.html":{},"classes/LinkExpertsToPhaseArgs.html":{},"classes/LinkStartupToPhaseArgs.html":{},"classes/LinkStartupsExpertsArgs.html":{},"classes/LinkWithTargetsArgs.html":{},"classes/LinkWithTargetsByRequestArgs.html":{},"classes/OthersInput.html":{},"classes/RemoveTableJoinInput.html":{},"classes/SearchBatchInput.html":{},"classes/SelectApplicantsArgs.html":{},"classes/SendEmailInput.html":{},"classes/SubmitAnnouncementDocInput.html":{},"classes/SubmitFileInput.html":{},"classes/SubmitFormSubscriptionArgs.html":{},"classes/TableJoin.html":{},"classes/TemplateInput.html":{},"classes/UpdateActaInput.html":{},"classes/UpdateActivitiesConfigInput.html":{},"classes/UpdateAnnouncementInput.html":{},"classes/UpdateApplicantStateInput.html":{},"classes/UpdateConfigEvaluationInput.html":{},"classes/UpdateConfigurationAppInput.html":{},"classes/UpdateContentInput.html":{},"classes/UpdateEventInput.html":{},"classes/UpdateExpertInput.html":{},"classes/UpdateFormInput.html":{},"classes/UpdateFormTagInput.html":{},"classes/UpdateHelpDeskInput.html":{},"classes/UpdateNotificationInput.html":{},"classes/UpdateParticipationEventInput.html":{},"classes/UpdatePhaseInput.html":{},"classes/UpdateResourceInput.html":{},"classes/UpdateResourcesReplyInput.html":{},"classes/UpdateRolInput.html":{},"classes/UpdateSiteInput.html":{},"classes/UpdateStageInput.html":{},"classes/UpdateTableConfigInput.html":{},"classes/UpdateTermsOfUseInput.html":{},"classes/UpdateTypesEventInput.html":{},"classes/UpdateUserConfigInput.html":{},"classes/UpdateUserInput.html":{},"dependencies.html":{}}}],["validroles",{"_index":474,"title":{},"body":{"injectables/ActivitiesConfigService.html":{},"injectables/AuthService.html":{},"injectables/ConfigEvaluationsService.html":{},"injectables/ConfigurationAppService.html":{},"injectables/ContentService.html":{},"classes/CreateInvitationArgs.html":{},"classes/CreateUserInput.html":{},"classes/FindInvitationArgs.html":{},"classes/FindUsersArgs.html":{},"injectables/HelpDeskService.html":{},"classes/Invitation.html":{},"classes/SignUpInput.html":{},"classes/User.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["validroles.admin",{"_index":5115,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validroles.challenger",{"_index":5117,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validroles.expert",{"_index":1561,"title":{},"body":{"injectables/ConfigEvaluationsService.html":{},"injectables/ConfigurationAppService.html":{},"miscellaneous/variables.html":{}}}],["validroles.host",{"_index":5116,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validroles.superadmin",{"_index":5114,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validroles.teamcoach",{"_index":522,"title":{},"body":{"injectables/ActivitiesConfigService.html":{},"injectables/ConfigEvaluationsService.html":{},"miscellaneous/variables.html":{}}}],["validroles.user",{"_index":1692,"title":{},"body":{"injectables/ConfigurationAppService.html":{},"injectables/ContentService.html":{},"injectables/HelpDeskService.html":{},"classes/SignUpInput.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["valuaciones",{"_index":4915,"title":{},"body":{"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["value",{"_index":38,"title":{},"body":{"classes/AWSSESProvider.html":{},"injectables/ActivitiesConfigService.html":{},"injectables/AuthService.html":{},"classes/CreateFormInput.html":{},"injectables/FormSubscriptionService.html":{},"injectables/HelpDeskService.html":{},"injectables/IntegrationsService.html":{},"injectables/InvitationsService.html":{},"injectables/NotificationsService.html":{},"classes/SendEmailInput.html":{},"injectables/TicketCategoriesService.html":{},"injectables/UserLogService.html":{},"miscellaneous/enumerations.html":{},"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["value1",{"_index":2965,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["var",{"_index":3238,"title":{},"body":{"injectables/NotificationsService.html":{},"injectables/UserLogService.html":{}}}],["variables",{"_index":4946,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vea",{"_index":4818,"title":{},"body":{"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["vencer",{"_index":5072,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ver",{"_index":4814,"title":{},"body":{"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["verified",{"_index":119,"title":{},"body":{"classes/AWSSESProvider.html":{},"injectables/EmailsService.html":{},"classes/SendGridProvider.html":{}}}],["verifying",{"_index":1183,"title":{},"body":{"injectables/AuthService.html":{}}}],["version",{"_index":4943,"title":{},"body":{"properties.html":{}}}],["verticals",{"_index":1642,"title":{},"body":{"classes/ConfigurationApp.html":{},"classes/UpdateConfigurationAppInput.html":{}}}],["viernes",{"_index":4413,"title":{},"body":{"injectables/UserLogService.html":{}}}],["view_business",{"_index":4676,"title":{},"body":{"miscellaneous/enumerations.html":{},"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["view_entrepreneurs",{"_index":4672,"title":{},"body":{"miscellaneous/enumerations.html":{},"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["view_experts",{"_index":4669,"title":{},"body":{"miscellaneous/enumerations.html":{},"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["view_startups",{"_index":4665,"title":{},"body":{"miscellaneous/enumerations.html":{},"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["viewed",{"_index":1810,"title":{},"body":{"injectables/ContentService.html":{}}}],["virtualfields",{"_index":4969,"title":{},"body":{"miscellaneous/variables.html":{}}}],["visibilidad",{"_index":4852,"title":{},"body":{"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["waiting_room",{"_index":2943,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["want",{"_index":4279,"title":{},"body":{"classes/UserConfig.html":{}}}],["watch",{"_index":4774,"title":{},"body":{"index.html":{}}}],["watermark",{"_index":2944,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["website",{"_index":4800,"title":{},"body":{"index.html":{}}}],["websocket",{"_index":1343,"title":{},"body":{"injectables/BusinessService.html":{},"classes/FormSubscription.html":{}}}],["week",{"_index":4371,"title":{},"body":{"injectables/UserLogService.html":{},"miscellaneous/functions.html":{}}}],["weight",{"_index":5122,"title":{},"body":{"miscellaneous/variables.html":{}}}],["well",{"_index":344,"title":{},"body":{"classes/ActivitiesConfig.html":{},"classes/Assign.html":{},"classes/activities.html":{}}}],["whit",{"_index":4004,"title":{},"body":{"injectables/TicketCategoriesService.html":{}}}],["whiteboard",{"_index":2953,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["width",{"_index":1475,"title":{},"body":{"injectables/BusinessService.html":{}}}],["with.'})@isnotempty",{"_index":2148,"title":{},"body":{"classes/CreateTableConfigInput.html":{}}}],["without",{"_index":5056,"title":{},"body":{"miscellaneous/variables.html":{}}}],["workshop",{"_index":5096,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ws",{"_index":939,"title":{},"body":{"modules/AppModule.html":{}}}],["www",{"_index":2879,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["x4hy02w3quodskkofgb9jg",{"_index":2955,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["y",{"_index":4551,"title":{},"body":{"injectables/UsersService.html":{},"interfaces/item_permission.html":{},"miscellaneous/variables.html":{}}}],["yes",{"_index":1213,"title":{},"body":{"injectables/AwsService.html":{},"injectables/BusinessService.html":{},"injectables/ConfigEvaluationsService.html":{},"injectables/ContentService.html":{},"injectables/IntegrationsService.html":{},"injectables/InvitationsService.html":{},"classes/Notification.html":{},"classes/StorageService.html":{}}}],["you'd",{"_index":4793,"title":{},"body":{"index.html":{}}}],["yyyy",{"_index":4401,"title":{},"body":{"injectables/UserLogService.html":{}}}],["zoom",{"_index":265,"title":{},"body":{"modules/ActaModule.html":{},"modules/ActivitiesConfigModule.html":{},"modules/AnnouncementsModule.html":{},"modules/AppModule.html":{},"modules/ApplicantModule.html":{},"modules/AuthCodeModule.html":{},"modules/AuthModule.html":{},"modules/BusinessModule.html":{},"modules/ConfigEvaluationsModule.html":{},"modules/ConfigNotificationsModule.html":{},"modules/ConfigurationAppModule.html":{},"modules/ContentModule.html":{},"modules/DownloadsModule.html":{},"modules/EmailsModule.html":{},"modules/EntrepreneurModule.html":{},"modules/EvaluationsModule.html":{},"modules/EventsModule.html":{},"modules/ExpertModule.html":{},"modules/FormsModule.html":{},"modules/HelpDeskModule.html":{},"modules/IntegrationsModule.html":{},"injectables/IntegrationsService.html":{},"modules/InvitationsModule.html":{},"modules/LoggerModule.html":{},"modules/NotificationsModule.html":{},"modules/ParticipationEventsModule.html":{},"modules/PhasesModule.html":{},"modules/ResourcesModule.html":{},"modules/ResourcesRepliesModule.html":{},"modules/RolModule.html":{},"modules/SitesModule.html":{},"modules/StagesModule.html":{},"modules/StartupModule.html":{},"modules/StorageModule.html":{},"modules/TableModule.html":{},"modules/TermsOfUseModule.html":{},"modules/TicketCategoriesModule.html":{},"modules/TypesEventsModule.html":{},"modules/TypesNotificationsModule.html":{},"modules/UserConfigModule.html":{},"modules/UserLogModule.html":{},"modules/UsersModule.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["zoomapiresponse",{"_index":2859,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["zoomapp",{"_index":2902,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["zoomintegration",{"_index":2833,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["zoommeeting",{"_index":2834,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["zoommeeting(meetingname",{"_index":2848,"title":{},"body":{"injectables/IntegrationsService.html":{}}}],["zoommeetingrequest",{"_index":2861,"title":{},"body":{"injectables/IntegrationsService.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AWSSESProvider.html":{"url":"classes/AWSSESProvider.html","title":"class - AWSSESProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AWSSESProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/emails/provider/aws.service.ts\n        \n\n\n            \n                Description\n            \n            \n                aws provider for emails\n\n            \n\n\n            \n                Implements\n            \n            \n                            EmailsRepository\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                apiKey\n                            \n                            \n                                    Private\n                                client\n                            \n                            \n                                    Private\n                                    Readonly\n                                defaultVerifiedEmail\n                            \n                            \n                                    Private\n                                logger\n                            \n                            \n                                    Private\n                                    Readonly\n                                templatesId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                send\n                            \n                            \n                                    Async\n                                sendFromTemplate\n                            \n                            \n                                    Async\n                                sendIcs\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/emails/provider/aws.service.ts:31\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        apiKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/emails/provider/aws.service.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        client\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SESClient\n\n                    \n                \n                    \n                        \n                                Defined in src/emails/provider/aws.service.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        defaultVerifiedEmail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/emails/provider/aws.service.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(AWSSESProvider.name)\n                    \n                \n                    \n                        \n                                Defined in src/emails/provider/aws.service.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        templatesId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Record\n\n                    \n                \n                    \n                        \n                                Defined in src/emails/provider/aws.service.ts:26\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        send\n                        \n                    \n                \n            \n            \n                \n                        \n                    send(mail: SendEmailInput)\n                \n            \n\n\n                    \n                        \n                            Defined in src/emails/provider/aws.service.ts:54\n                        \n                    \n\n\n            \n                \n                        send one email\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                mail\n                                            \n                                                            SendEmailInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        sendFromTemplate\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendFromTemplate(templateInput: Template)\n                \n            \n\n\n                    \n                        \n                            Defined in src/emails/provider/aws.service.ts:96\n                        \n                    \n\n\n            \n                \n                        send one email by template\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                templateInput\n                                            \n                                                        Template\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        sendIcs\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendIcs(mail: literal type, event: Event, others: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/emails/provider/aws.service.ts:152\n                        \n                    \n\n\n            \n                \n                        send one email with ics\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                mail\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                event\n                                            \n                                                            Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                others\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { SendEmailInput } from '../dto/send-email.input';\nimport { EmailsRepository } from '../repository/email.repository';\nimport { Template } from '../templates/template';\nimport * as SendGrid from '@sendgrid/mail';\nimport * as SendGridClient from '@sendgrid/client';\nimport { AppLogger } from 'src/logger/app-logger';\nimport {\n  BadRequestException,\n  InternalServerErrorException,\n  MethodNotAllowedException,\n  Logger,\n} from '@nestjs/common';\nimport { EmailTemplates, templateNames } from '../enums/email-templates';\nimport {\n  SESClient,\n  SendEmailCommand,\n  SendBulkTemplatedEmailCommand,\n} from '@aws-sdk/client-ses';\nimport { TemplateData } from '../templates/data';\nimport { Event } from 'src/events/entities/event.entity';\n\n/**\n * aws provider for emails\n */\nexport class AWSSESProvider implements EmailsRepository {\n  private readonly templatesId: Record;\n  private readonly defaultVerifiedEmail: string;\n  private readonly apiKey: string;\n\n  private client: SESClient;\n  private logger = new Logger(AWSSESProvider.name);\n  constructor() {\n    // Set api key\n    // console.log(process.env.AWS_SES_REGION);\n    this.client = new SESClient({\n      apiVersion: '2010-12-01',\n      region: process.env.AWS_SES_REGION,\n      credentials: {\n        accessKeyId: process.env.AWS_SES_KEY,\n        secretAccessKey: process.env.AWS_SES_ACCESS,\n      },\n    });\n    // Set available templates\n    // this.templatesId = {\n    //   [EmailTemplates.invitation]: process.env.SEND_GRID_INVITATION_TEMPLATE_ID,\n    //   [EmailTemplates.notification]:\n    //     process.env.SEND_GRID_NOTIFICATION_TEMPLATE_ID,\n    // };\n  }\n\n  /**\n   * send one email\n   */\n  async send(mail: SendEmailInput) {\n    if (!this.client)\n      throw new MethodNotAllowedException('This service is not available');\n\n    if (!mail.from) {\n      if (!this.defaultVerifiedEmail) {\n        throw new BadRequestException(\n          'Must specify a verified email for the from field',\n        );\n      }\n      mail.from = this.defaultVerifiedEmail;\n    }\n    try {\n      const sendEmailCommand = new SendEmailCommand({\n        Destination: {\n          ToAddresses: [mail.to],\n        },\n        Message: {\n          Body: {\n            Html: { Data: mail.html },\n          },\n          Subject: {\n            Data: mail.subject,\n          },\n        },\n        Source: mail.from,\n      });\n      const resp = await this.client.send(sendEmailCommand);\n      this.logger.log(`Email successfully dispatched to ${mail.to}`);\n      return [resp, { state: 'successful' }];\n    } catch (ex) {\n      this.logger.error(ex);\n      throw new InternalServerErrorException(\n        'Got an unexpected exception while trying to send an email',\n        ex,\n      );\n    }\n  }\n\n  /**\n   * send one email by template\n   */\n  async sendFromTemplate(templateInput: Template) {\n    //console.log(templateInput);\n    const emailTemplate = new SendBulkTemplatedEmailCommand({\n      Source: templateInput.from,\n      Template: templateInput.template,\n      Destinations: templateInput.personalizations.map((i) => ({\n        Destination: {\n          ToAddresses: i.to.map((o) => o.email),\n        },\n        ReplacementTemplateData: JSON.stringify(i),\n      })),\n    });\n    try {\n      const resp = await this.client.send(emailTemplate);\n      this.logger.log(`Email successfully dispatched`);\n      return [resp, { state: 'successful' }];\n    } catch (ex) {\n      this.logger.error(ex);\n      throw new InternalServerErrorException(\n        'Got an unexpected exception while trying to send an email',\n        ex,\n      );\n    }\n  }\n  // const templateId = this.templatesId[templateInput.template];\n  // if (!templateId)\n  //   throw new MethodNotAllowedException(\n  //     `This template ${\n  //       templateNames[templateInput.template]\n  //     } is not available or configuration is missing`,\n  //   );\n  // if (!this.apiKey)\n  //   throw new MethodNotAllowedException('This service is not available');\n  // if (!templateInput.from) {\n  //   if (!this.defaultVerifiedEmail) {\n  //     throw new BadRequestException(\n  //       'Must specify a verified email for the from field',\n  //     );\n  //   }\n  // }\n  // try {\n  //   const transport = await SendGrid.send({\n  //     ...templateInput,\n  //     from: templateInput.from ?? this.defaultVerifiedEmail,\n  //     templateId: templateId,\n  //   });\n  //   this.logger.log(\n  //     `Email successfully dispatched with template ${templateInput.template}`,\n  //   );\n  //   return transport;\n  // } catch (ex) {\n\n  // }\n  /**\n   * send one email with ics\n   */\n  async sendIcs(\n    mail: {\n      to: string | string[];\n      subject: string;\n      text: string;\n      html: string;\n    },\n    event: Event,\n    others: {\n      nameOrganizer: string;\n      emailOrganizer: string;\n      urlRedirect: string;\n      country?: string;\n    },\n  ) {\n    return null;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AcceptInvitationDto.html":{"url":"classes/AcceptInvitationDto.html","title":"class - AcceptInvitationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AcceptInvitationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/invitations/dto/accept-invitation.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                graphql input scheme\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                code\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/invitations/dto/accept-invitation.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/invitations/dto/accept-invitation.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/invitations/dto/accept-invitation.dto.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, IsNotEmpty } from 'class-validator';\n/**\n * graphql input scheme\n */\nexport class AcceptInvitationDto {\n  @IsString()\n  @IsNotEmpty()\n  name: string;\n\n  @IsString()\n  @IsNotEmpty()\n  code: string;\n\n  @IsString()\n  @IsNotEmpty()\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Acta.html":{"url":"classes/Acta.html","title":"class - Acta","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Acta\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/events/acta/entities/acta.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                Acta for events\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                _id\n                            \n                            \n                                    \n                                    \n                                closed\n                            \n                            \n                                    \n                                    \n                                conclusions\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                    \n                                date\n                            \n                            \n                                    \n                                    \n                                event\n                            \n                            \n                                    \n                                    \n                                extra_options\n                            \n                            \n                                    \n                                    \n                                isDeleted\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                objective\n                            \n                            \n                                    \n                                    \n                                phase\n                            \n                            \n                                    \n                                    \n                                solution\n                            \n                            \n                                    \n                                    \n                                topics_covered\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/acta/entities/acta.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        closed\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/acta/entities/acta.entity.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        conclusions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/acta/entities/acta.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/acta/entities/acta.entity.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/acta/entities/acta.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        event\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({type: undefined, ref: 'Event'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/acta/entities/acta.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        extra_options\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/acta/entities/acta.entity.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/acta/entities/acta.entity.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/acta/entities/acta.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        objective\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/acta/entities/acta.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        phase\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({type: undefined, ref: 'Phase'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/acta/entities/acta.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        solution\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/acta/entities/acta.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        topics_covered\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/acta/entities/acta.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/acta/entities/acta.entity.ts:62\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ObjectType, Field, ID } from '@nestjs/graphql';\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { GraphQLJSONObject } from 'graphql-scalars';\nimport { SchemaTypes } from 'mongoose';\n/**\n * Acta for events\n */\n@Schema({ timestamps: true })\n@ObjectType()\nexport class Acta {\n  @Field(() => ID)\n  _id: string;\n\n  @Field(() => String)\n  @Prop({ required: true })\n  name: string;\n\n  @Field(() => Date)\n  @Prop({})\n  date: Date;\n\n  @Field(() => String)\n  @Prop({})\n  objective: string;\n\n  @Field(() => String)\n  @Prop({})\n  solution: string;\n\n  @Field(() => String)\n  @Prop({})\n  topics_covered: string;\n\n  @Field(() => String)\n  @Prop({})\n  conclusions: string;\n\n  @Field(() => String)\n  @Prop({ type: SchemaTypes.ObjectId, ref: 'Phase' })\n  phase: string;\n\n  @Field(() => String)\n  @Prop({ type: SchemaTypes.ObjectId, ref: 'Event' })\n  event: string;\n\n  @Field(() => GraphQLJSONObject)\n  @Prop({ type: SchemaTypes.Mixed })\n  extra_options: any;\n\n  @Field(() => Boolean)\n  @Prop({ default: false })\n  closed: boolean;\n\n  @Field(() => Boolean)\n  @Prop({ default: false })\n  isDeleted: boolean;\n\n  @Field(() => Date)\n  createdAt: Date;\n\n  @Field(() => Date)\n  updatedAt: Date;\n}\n/**\n * @ignore\n */\nexport const ActaSchema = SchemaFactory.createForClass(Acta);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ActaModule.html":{"url":"modules/ActaModule.html","title":"module - ActaModule","body":"\n                   \n\n\n\n\n    Modules\n    ActaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ActaModule\n\n\n\ncluster_ActaModule_imports\n\n\n\ncluster_ActaModule_exports\n\n\n\ncluster_ActaModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nActaModule\n\nActaModule\n\nActaModule -->\n\nAuthModule->ActaModule\n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nActaModule -->\n\nLoggerModule->ActaModule\n\n\n\n\n\nActaService \n\nActaService \n\nActaService  -->\n\nActaModule->ActaService \n\n\n\n\n\nActaService\n\nActaService\n\nActaModule -->\n\nActaService->ActaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/events/acta/acta.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ActaService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            LoggerModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ActaService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ActaService } from './acta.service';\nimport { ActaResolver } from './acta.resolver';\nimport { LoggerModule } from 'src/logger/logger.module';\nimport { AuthModule } from 'src/auth/auth.module';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Acta, ActaSchema } from './entities/acta.entity';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([{ name: Acta.name, schema: ActaSchema }]),\n    AuthModule,\n    LoggerModule,\n  ],\n  providers: [ActaResolver, ActaService],\n  exports: [ActaService],\n})\nexport class ActaModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ActaService.html":{"url":"injectables/ActaService.html","title":"injectable - ActaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ActaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/events/acta/acta.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findByEvent\n                            \n                            \n                                findByEventsList\n                            \n                            \n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actaModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/events/acta/acta.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actaModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createActaInput: CreateActaInput)\n                \n            \n\n\n                    \n                        \n                            Defined in src/events/acta/acta.service.ts:18\n                        \n                    \n\n\n            \n                \n                        create acta of a event\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createActaInput\n                                            \n                                                            CreateActaInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/events/acta/acta.service.ts:25\n                        \n                    \n\n\n            \n                \n                        find all actas\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findByEvent\n                        \n                    \n                \n            \n            \n                \nfindByEvent(event: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/events/acta/acta.service.ts:32\n                        \n                    \n\n\n            \n                \n                        find acta by event id\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findByEventsList\n                        \n                    \n                \n            \n            \n                \nfindByEventsList(events: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/events/acta/acta.service.ts:39\n                        \n                    \n\n\n            \n                \n                        find actas of event list\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                events\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/events/acta/acta.service.ts:51\n                        \n                    \n\n\n            \n                \n                        find acta by id\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/events/acta/acta.service.ts:69\n                        \n                    \n\n\n            \n                \n                        soft delete acta\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateActaInput: UpdateActaInput)\n                \n            \n\n\n                    \n                        \n                            Defined in src/events/acta/acta.service.ts:58\n                        \n                    \n\n\n            \n                \n                        update acta\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateActaInput\n                                            \n                                                            UpdateActaInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateActaInput } from './dto/create-acta.input';\nimport { UpdateActaInput } from './dto/update-acta.input';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model, Types } from 'mongoose';\nimport { Acta } from './entities/acta.entity';\n\n@Injectable()\nexport class ActaService {\n  constructor(\n    @InjectModel(Acta.name)\n    private readonly actaModel: Model,\n  ) {}\n\n  /**\n   * create acta of a event\n   */\n  create(createActaInput: CreateActaInput) {\n    return this.actaModel.create(createActaInput);\n  }\n\n  /**\n   * find all actas\n   */\n  findAll() {\n    return this.actaModel.find({});\n  }\n\n  /**\n   * find acta by event id\n   */\n  findByEvent(event: string) {\n    return this.actaModel.findOne({ event, isDeleted: false });\n  }\n\n  /**\n   * find actas of event list\n   */\n  findByEventsList(events: string[]) {\n    return this.actaModel\n      .find({\n        isDeleted: false,\n        event: { $in: events.map((i) => new Types.ObjectId(i)) },\n      })\n      .lean();\n  }\n\n  /**\n   * find acta by id\n   */\n  findOne(id: string) {\n    return this.actaModel.findById(id);\n  }\n\n  /**\n   * update acta\n   */\n  async update(id: string, updateActaInput: UpdateActaInput) {\n    delete updateActaInput['_id'];\n    const updatedEvent = await this.actaModel\n      .findOneAndUpdate({ _id: id }, { ...updateActaInput }, { new: true })\n      .lean();\n    return updatedEvent;\n  }\n\n  /**\n   * soft delete acta\n   */\n  async remove(id: string) {\n    const updatedType = await this.actaModel\n      .findOneAndUpdate({ _id: id }, { isDeleted: true }, { new: true })\n      .lean();\n    return updatedType;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ActivitiesConfig.html":{"url":"classes/ActivitiesConfig.html","title":"class - ActivitiesConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ActivitiesConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/activities-config/entities/activities-config.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                the configuration of activities are the documents that have the global limit of hours of a batch, its allocation of hours per activity as well as the allocations to experts, startups and teamcoaches.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                _id\n                            \n                            \n                                    \n                                    \n                                activities\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                    \n                                experts\n                            \n                            \n                                    \n                                    \n                                isDeleted\n                            \n                            \n                                    \n                                    \n                                limit\n                            \n                            \n                                    \n                                    \n                                phase\n                            \n                            \n                                    \n                                    \n                                startups\n                            \n                            \n                                    \n                                    \n                                teamCoaches\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/activities-config/entities/activities-config.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        activities\n                        \n                    \n                \n            \n                \n                    \n                        Type :         activities[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/activities-config/entities/activities-config.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/activities-config/entities/activities-config.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        experts\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Assign[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/activities-config/entities/activities-config.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({type: 'boolean', default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/activities-config/entities/activities-config.entity.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({type: 'number', default: 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/activities-config/entities/activities-config.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        phase\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({type: undefined, ref: 'Phase'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/activities-config/entities/activities-config.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        startups\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Assign[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/activities-config/entities/activities-config.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        teamCoaches\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Assign[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/activities-config/entities/activities-config.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/activities-config/entities/activities-config.entity.ts:41\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ObjectType, Field, ID, Int } from '@nestjs/graphql';\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { SchemaTypes } from 'mongoose';\n/**\n * the configuration of activities are the documents that have the global limit of hours of a batch, its allocation of hours per activity as well as the allocations to experts, startups and teamcoaches.\n */\n@Schema({ timestamps: true })\n@ObjectType()\nexport class ActivitiesConfig {\n  @Field(() => ID)\n  _id: string;\n\n  @Field(() => Int)\n  @Prop({ type: 'number', default: 0 })\n  limit: number;\n\n  @Field(() => String)\n  @Prop({ type: SchemaTypes.ObjectId, ref: 'Phase' })\n  phase: string;\n\n  @Field(() => [activities])\n  @Prop({ default: [] })\n  activities: activities[];\n\n  @Field(() => [Assign])\n  @Prop({ default: [] })\n  startups: Assign[];\n\n  @Field(() => [Assign])\n  @Prop({ default: [] })\n  experts: Assign[];\n\n  @Field(() => [Assign])\n  @Prop({ default: [] })\n  teamCoaches: Assign[];\n\n  @Field(() => Date)\n  createdAt: Date;\n\n  @Field(() => Date)\n  updatedAt: Date;\n\n  @Field(() => Boolean)\n  @Prop({ type: 'boolean', default: false })\n  isDeleted: boolean;\n}\n/**\n * assigned activity config\n */\n@Schema()\n@ObjectType()\nexport class activities implements IActivities {\n  @Field(() => String)\n  @Prop({ type: SchemaTypes.ObjectId })\n  id: string;\n\n  @Field(() => Int)\n  limit: number;\n}\n/**\n * assigned entity config\n */\n@Schema()\n@ObjectType()\nexport class Assign implements IAssign {\n  @Field(() => String)\n  @Prop({ type: SchemaTypes.ObjectId })\n  entityID: string;\n\n  @Field(() => Int)\n  limit: number;\n\n  @Field(() => String)\n  @Prop({ type: SchemaTypes.ObjectId })\n  activityID: string;\n}\n/**\n * @ignore\n */\nexport interface IActivities {\n  id: string;\n  limit: number;\n}\n/**\n * @ignore\n */\nexport interface IAssign {\n  entityID: string;\n  limit: number;\n  activityID: string;\n}\n/**\n * @ignore\n */\nexport const ActivitiesConfigSchema =\n  SchemaFactory.createForClass(ActivitiesConfig);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ActivitiesConfigModule.html":{"url":"modules/ActivitiesConfigModule.html","title":"module - ActivitiesConfigModule","body":"\n                   \n\n\n\n\n    Modules\n    ActivitiesConfigModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ActivitiesConfigModule\n\n\n\ncluster_ActivitiesConfigModule_imports\n\n\n\ncluster_ActivitiesConfigModule_exports\n\n\n\ncluster_ActivitiesConfigModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nActivitiesConfigModule\n\nActivitiesConfigModule\n\nActivitiesConfigModule -->\n\nAuthModule->ActivitiesConfigModule\n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nActivitiesConfigModule -->\n\nLoggerModule->ActivitiesConfigModule\n\n\n\n\n\nActivitiesConfigService \n\nActivitiesConfigService \n\nActivitiesConfigService  -->\n\nActivitiesConfigModule->ActivitiesConfigService \n\n\n\n\n\nActivitiesConfigService\n\nActivitiesConfigService\n\nActivitiesConfigModule -->\n\nActivitiesConfigService->ActivitiesConfigModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/activities-config/activities-config.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ActivitiesConfigService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            LoggerModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ActivitiesConfigService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module, forwardRef } from '@nestjs/common';\nimport { ActivitiesConfigService } from './activities-config.service';\nimport { ActivitiesConfigResolver } from './activities-config.resolver';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport {\n  ActivitiesConfig,\n  ActivitiesConfigSchema,\n} from './entities/activities-config.entity';\nimport { AuthModule } from 'src/auth/auth.module';\nimport { LoggerModule } from 'src/logger/logger.module';\nimport { ExpertModule } from 'src/expert/expert.module';\nimport { UsersModule } from 'src/users/users.module';\nimport { StartupModule } from 'src/startup/startup.module';\nimport { TypesEventsModule } from '../events/types-events/types-events.module';\nimport { EventsModule } from 'src/events/events.module';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      { name: ActivitiesConfig.name, schema: ActivitiesConfigSchema },\n    ]),\n    AuthModule,\n    LoggerModule,\n    forwardRef(() => ExpertModule),\n    forwardRef(() => StartupModule),\n    forwardRef(() => UsersModule),\n    forwardRef(() => EventsModule),\n    forwardRef(() => TypesEventsModule),\n  ],\n  providers: [ActivitiesConfigResolver, ActivitiesConfigService],\n  exports: [ActivitiesConfigService],\n})\nexport class ActivitiesConfigModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ActivitiesConfigService.html":{"url":"injectables/ActivitiesConfigService.html","title":"injectable - ActivitiesConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ActivitiesConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/activities-config/activities-config.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activitiesForTeamCoach\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                calcHours\n                            \n                            \n                                calcHoursExpert\n                            \n                            \n                                    Async\n                                calcHoursStartups\n                            \n                            \n                                calcHoursTeamCoach\n                            \n                            \n                                create\n                            \n                            \n                                    Async\n                                duplicate\n                            \n                            \n                                    Async\n                                findByPhase\n                            \n                            \n                                    Async\n                                findByPhaseAndStartup\n                            \n                            \n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(activitiesConfig: Model, expertsService: ExpertService, startupsService: StartupService, usersService: UsersService, eventsService: EventsService, typesEventsService: TypesEventsService)\n                    \n                \n                        \n                            \n                                Defined in src/activities-config/activities-config.service.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        activitiesConfig\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        expertsService\n                                                  \n                                                        \n                                                                        ExpertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        startupsService\n                                                  \n                                                        \n                                                                        StartupService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventsService\n                                                  \n                                                        \n                                                                        EventsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        typesEventsService\n                                                  \n                                                        \n                                                                        TypesEventsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        calcHours\n                        \n                    \n                \n            \n            \n                \n                        \n                    calcHours(config: ActivitiesConfig)\n                \n            \n\n\n                    \n                        \n                            Defined in src/activities-config/activities-config.service.ts:166\n                        \n                    \n\n\n            \n                \n                        the current configuration of hours assigned to startups, experts and team coaches\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                config\n                                            \n                                                            ActivitiesConfig\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                hours allocated in startups, experts, team coaches\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        calcHoursExpert\n                        \n                    \n                \n            \n            \n                \ncalcHoursExpert(config: ActivitiesConfig, listActivities: TypesEvent[], listExpert: Expert[], listStartups: Startup[], events: EventEntity[], actas: Acta[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/activities-config/activities-config.service.ts:274\n                        \n                    \n\n\n            \n                \n                        the current configuration of hours assigned to experts\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                config\n                                            \n                                                            ActivitiesConfig\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                listActivities\n                                            \n                                                        TypesEvent[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                listExpert\n                                            \n                                                            Expert[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                listStartups\n                                            \n                                                            Startup[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                events\n                                            \n                                                            EventEntity[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                actas\n                                            \n                                                            Acta[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         IConfigExpert[]\n\n                        \n                            \n                                hours allocated in experts\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        calcHoursStartups\n                        \n                    \n                \n            \n            \n                \n                        \n                    calcHoursStartups(config: ActivitiesConfig, listActivities: TypesEvent[], listStartups: Startup[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/activities-config/activities-config.service.ts:215\n                        \n                    \n\n\n            \n                \n                        the current configuration of hours assigned to startups\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                config\n                                            \n                                                            ActivitiesConfig\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                listActivities\n                                            \n                                                        TypesEvent[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                listStartups\n                                            \n                                                            Startup[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                hours allocated in startups\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        calcHoursTeamCoach\n                        \n                    \n                \n            \n            \n                \ncalcHoursTeamCoach(config: ActivitiesConfig, listActivities: TypesEvent[], listTeamCoaches: User[], listStartups: Startup[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/activities-config/activities-config.service.ts:342\n                        \n                    \n\n\n            \n                \n                        the current configuration of hours assigned to team coaches\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                config\n                                            \n                                                            ActivitiesConfig\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                listActivities\n                                            \n                                                        TypesEvent[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                listTeamCoaches\n                                            \n                                                            User[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                listStartups\n                                            \n                                                            Startup[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     IConfigTeamCoach[]\n\n                        \n                            \n                                hours allocated in team coaches\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createActivitiesConfigInput: CreateActivitiesConfigInput)\n                \n            \n\n\n                    \n                        \n                            Defined in src/activities-config/activities-config.service.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createActivitiesConfigInput\n                                            \n                                                            CreateActivitiesConfigInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                Create new activity config for batch\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        duplicate\n                        \n                    \n                \n            \n            \n                \n                        \n                    duplicate(id: string, newPhaseID: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/activities-config/activities-config.service.ts:156\n                        \n                    \n\n\n            \n                \n                        clone activity config by batch id and assign new batch\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                newPhaseID\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                activity config\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findByPhase\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByPhase(phase: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/activities-config/activities-config.service.ts:61\n                        \n                    \n\n\n            \n                \n                        search activity config by batch id\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                phase\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                activity config for batch\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findByPhaseAndStartup\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByPhaseAndStartup(phase: string, startup: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/activities-config/activities-config.service.ts:76\n                        \n                    \n\n\n            \n                \n                        search activity config by batch id and startup and find the hours allocated to that startup\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                phase\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                startup\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                hours allocated to that startup\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/activities-config/activities-config.service.ts:121\n                        \n                    \n\n\n            \n                \n                        search activity config by id\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                activity config\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/activities-config/activities-config.service.ts:145\n                        \n                    \n\n\n            \n                \n                        soft delete of activity config by batch id\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                activity config updated\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateActivitiesConfigInput: UpdateActivitiesConfigInput)\n                \n            \n\n\n                    \n                        \n                            Defined in src/activities-config/activities-config.service.ts:129\n                        \n                    \n\n\n            \n                \n                        update params of activity config by batch id\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateActivitiesConfigInput\n                                            \n                                                            UpdateActivitiesConfigInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                activity config updated\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        activitiesForTeamCoach\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['646f953cc2305c411d73f700']\n                    \n                \n                    \n                        \n                                Defined in src/activities-config/activities-config.service.ts:34\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {\n  Inject,\n  Injectable,\n  NotFoundException,\n  forwardRef,\n} from '@nestjs/common';\nimport { CreateActivitiesConfigInput } from './dto/create-activities-config.input';\nimport { UpdateActivitiesConfigInput } from './dto/update-activities-config.input';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { ActivitiesConfig } from './entities/activities-config.entity';\nimport { default_types_events } from 'src/events/types-events/model/type-events.default';\nimport { ExpertService } from 'src/expert/expert.service';\nimport { StartupService } from 'src/startup/startup.service';\nimport {\n  Assign_item,\n  IConfigExpert,\n  IConfigStartup,\n  IConfigTeamCoach,\n} from './model/assign-item';\nimport { UsersService } from 'src/users/users.service';\nimport { ValidRoles } from 'src/auth/enums/valid-roles.enum';\nimport { TypesEventsService } from 'src/events/types-events/types-events.service';\nimport { TypesEvent } from 'src/events/types-events/entities/types-event.entity';\nimport { Startup } from 'src/startup/entities/startup.entity';\nimport { Expert } from 'src/expert/entities/expert.entity';\nimport { User } from 'src/users/entities/user.entity';\nimport { EventsService } from 'src/events/events.service';\nimport { Acta } from 'src/events/acta/entities/acta.entity';\nimport { Event as EventEntity } from 'src/events/entities/event.entity';\n\n@Injectable()\nexport class ActivitiesConfigService {\n  activitiesForTeamCoach = ['646f953cc2305c411d73f700'];\n  constructor(\n    @InjectModel(ActivitiesConfig.name)\n    private readonly activitiesConfig: Model,\n    @Inject(forwardRef(() => ExpertService))\n    private readonly expertsService: ExpertService,\n    @Inject(forwardRef(() => StartupService))\n    private readonly startupsService: StartupService,\n    @Inject(forwardRef(() => UsersService))\n    private readonly usersService: UsersService,\n    @Inject(forwardRef(() => EventsService))\n    private readonly eventsService: EventsService,\n    @Inject(forwardRef(() => TypesEventsService))\n    private readonly typesEventsService: TypesEventsService,\n  ) {}\n\n  /**\n   * @returns Create new activity config for batch\n   */\n  create(createActivitiesConfigInput: CreateActivitiesConfigInput) {\n    return this.activitiesConfig.create(createActivitiesConfigInput);\n  }\n\n  /**\n   * search activity config by batch id\n   * @returns activity config for batch\n   */\n  async findByPhase(phase: string) {\n    let item = await this.activitiesConfig.findOne({ phase }).lean();\n    if (!item) {\n      item = await this.create({\n        limit: 0,\n        phase,\n      });\n    }\n    return item;\n  }\n\n  /**\n   * search activity config by batch id and startup and find the hours allocated to that startup\n   * @returns hours allocated to that startup\n   */\n  async findByPhaseAndStartup(phase: string, startup: string) {\n    let item = await this.activitiesConfig.findOne({ phase }).lean();\n    if (!item) {\n      item = await this.create({\n        limit: 0,\n        phase,\n      });\n    }\n\n    const hoursTarget = await this.calcHours(item);\n\n    const startupConfig = hoursTarget.hoursAssignStartups.filter(\n      (s) => s._id.toString() == startup.toString(),\n    );\n\n    if (startupConfig.length == 0) return { hours: {} };\n\n    let hoursConsumend: any = {};\n\n    try {\n      hoursConsumend = await this.eventsService.getConsumedHours(\n        startup,\n        phase,\n      );\n    } catch (error) {}\n\n    const ans = {};\n\n    Object.keys(startupConfig[0].hours).forEach((k) => {\n      ans[k] = {\n        target: startupConfig[0].hours[k],\n        value:\n          hoursConsumend.hours && hoursConsumend.hours[k]\n            ? hoursConsumend.hours && hoursConsumend.hours[k]\n            : 0,\n      };\n    });\n\n    return { hours: ans };\n  }\n\n  /**\n   * search activity config by id\n   * @returns activity config\n   */\n  findOne(id: string) {\n    return this.activitiesConfig.findById(id).lean();\n  }\n\n  /**\n   * update params of activity config by batch id\n   * @returns activity config updated\n   */\n  update(id: string, updateActivitiesConfigInput: UpdateActivitiesConfigInput) {\n    delete updateActivitiesConfigInput['_id'];\n    const updated = this.activitiesConfig\n      .findOneAndUpdate(\n        { _id: id },\n        { ...updateActivitiesConfigInput },\n        { new: true },\n      )\n      .lean();\n    return updated;\n  }\n\n  /**\n   * soft delete of activity config by batch id\n   * @returns activity config updated\n   */\n  async remove(id: string) {\n    const updatedContent = await this.activitiesConfig\n      .findOneAndUpdate({ _id: id }, { isDeleted: true }, { new: true })\n      .lean();\n    return updatedContent;\n  }\n\n  /**\n   * clone activity config by batch id and assign new batch\n   * @returns activity config\n   */\n  async duplicate(id: string, newPhaseID: string) {\n    const config = await this.findByPhase(id);\n    delete config['_id'];\n    return this.activitiesConfig.create({ ...config, phase: newPhaseID });\n  }\n\n  /**\n   * the current configuration of hours assigned to startups, experts and team coaches\n   * @returns hours allocated in startups, experts, team coaches\n   */\n  async calcHours(config: ActivitiesConfig): Promise {\n    const listStartups = await this.startupsService.findByPhase(\n      config.phase.toString(),\n    );\n    const listExperts = await this.expertsService.findByPhase(\n      config.phase.toString(),\n    );\n    const listTeamCoach = await this.usersService.findMany({\n      roles: [ValidRoles.teamCoach],\n      relationsAssign: { batches: config.phase.toString() },\n    });\n    const listActivities = await this.typesEventsService.findAll();\n    const hoursAssignStartups = await this.calcHoursStartups(\n      config,\n      listActivities,\n      listStartups,\n    );\n    const { events, actas } = await this.eventsService.getEventsAndActas(\n      config.phase,\n    );\n    const hoursAssignExperts = this.calcHoursExpert(\n      config,\n      listActivities,\n      listExperts,\n      listStartups,\n      events,\n      actas,\n    );\n    const hoursAssignTeamCoaches = this.calcHoursTeamCoach(\n      config,\n      listActivities,\n      listTeamCoach,\n      listStartups,\n    );\n    return {\n      hoursAssignStartups,\n      hoursAssignExperts,\n      hoursAssignTeamCoaches,\n    };\n  }\n\n  /**\n   * the current configuration of hours assigned to startups\n   * @returns hours allocated in startups\n   */\n  async calcHoursStartups(\n    config: ActivitiesConfig,\n    listActivities: TypesEvent[],\n    listStartups: Startup[],\n  ): Promise {\n    let hoursAssignStartups: { [key: string]: IConfigStartup } = {};\n    listStartups.forEach(\n      (i) => (hoursAssignStartups[i._id] = { ...i, hours: {} }),\n    );\n    for (const activity of listActivities) {\n      let hoursBagForActivity = config.activities.find(\n        (i) => i.id === activity._id.toString(),\n      );\n      if (!hoursBagForActivity) continue; // means that if the activity is not found it is deleted and we must avoid it.\n      let limitHoursIts = hoursBagForActivity.limit;\n      let numbOfStartupsWithoutAssign = 0;\n      let startupsWithoutConfig = {}; // it should be a dictionary to save us in the next steps having to do a find()\n      for (const startup of listStartups) {\n        const previousConfig = config.startups.find(\n          (i) =>\n            i.entityID === startup._id.toString() &&\n            i.activityID === activity._id.toString(),\n        );\n        if (previousConfig) {\n          limitHoursIts -= previousConfig.limit;\n          hoursAssignStartups[startup._id].hours[activity._id] =\n            previousConfig.limit;\n        } else {\n          numbOfStartupsWithoutAssign++;\n          startupsWithoutConfig[startup._id] = true;\n        }\n      }\n      let hoursEach = this.getHoursForOthers(\n        limitHoursIts,\n        Object.keys(startupsWithoutConfig).length,\n      );\n\n      for (const startupId of Object.keys(startupsWithoutConfig)) {\n        if (limitHoursIts === 0) hoursEach = 0;\n        limitHoursIts -= hoursEach;\n        hoursAssignStartups[startupId].hours[activity._id] = hoursEach;\n      }\n    }\n    return Object.values(hoursAssignStartups);\n  }\n\n  /**\n   * @ignore\n   */\n  getHoursForOthers(limit: number, pending: number) {\n    let hoursForOthersStartups = Math.round(limit / pending);\n    if (hoursForOthersStartups  (hoursAssignExpert[i._id] = { ...i, hours: {}, startups: [] }),\n    );\n    const listActivitiesExpert = listActivities.filter((i) => i.expertFocus);\n    // Assign activities to expert\n    for (const activity of listActivitiesExpert) {\n      if (activity.isDeleted) continue; // means that if the activity is not found it is deleted and we must avoid it.\n      const eventsActivity = events.filter(\n        (i) => !(i.type === activity._id.toString()),\n      );\n      for (const expert of listExpert) {\n        const previousConfig = config.experts.find(\n          (i) =>\n            i.entityID === expert._id.toString() &&\n            i.activityID === activity._id.toString(),\n        );\n        const eventsExpert = eventsActivity.filter((i) =>\n          i.experts.find((i) => i._id === expert._id.toString()),\n        );\n        const actasExpert = [];\n        for (const event of eventsExpert) {\n          const acta = actas.find(\n            (i) => i.event.toString() === event._id.toString(),\n          );\n          if (!acta) continue;\n          actasExpert.push(acta);\n        }\n        const { countHoursDone, countHoursDonated } =\n          this.eventsService.getExpertHours(actasExpert, expert._id.toString());\n        hoursAssignExpert[expert._id].hours[activity._id] = {\n          allocated: previousConfig ? previousConfig.limit : 0,\n          donated: countHoursDonated,\n          done: countHoursDone,\n        };\n      }\n    }\n\n    // Assign startups expert\n    for (const expert of listExpert) {\n      const profilePhase = expert.phases.find(\n        (i) => i._id.toString() === config.phase.toString(),\n      );\n      for (const startup of profilePhase.startUps) {\n        const docStartup = listStartups.find(\n          (i) => i._id.toString() === startup._id,\n        );\n        if (!docStartup) continue;\n        hoursAssignExpert[expert._id].startups.push({\n          ...docStartup,\n        });\n      }\n    }\n    return Object.values(hoursAssignExpert);\n  }\n\n  /**\n   * the current configuration of hours assigned to team coaches\n   * @returns hours allocated in team coaches\n   */\n  calcHoursTeamCoach(\n    config: ActivitiesConfig,\n    listActivities: TypesEvent[],\n    listTeamCoaches: User[],\n    listStartups: Startup[],\n  ): IConfigTeamCoach[] {\n    let hoursAssignTeamCoaches: { [key: string]: IConfigTeamCoach } = {};\n    listTeamCoaches.forEach(\n      (i) =>\n        (hoursAssignTeamCoaches[i._id] = {\n          _id: i._id.toString(),\n          item: {\n            nombre: i.fullName,\n          },\n          hours: {},\n          startups: [],\n        }),\n    );\n    const listActivitiesTeamCoach = listActivities.filter((i) =>\n      this.activitiesForTeamCoach.includes(i._id.toString()),\n    );\n\n    // Assign activities to expert\n    for (const activity of listActivitiesTeamCoach) {\n      if (activity.isDeleted) continue; // means that if the activity is not found it is deleted and we must avoid it.\n      for (const teamCoach of listTeamCoaches) {\n        const previousConfig = config.teamCoaches.find(\n          (i) =>\n            i.entityID === teamCoach._id.toString() &&\n            i.activityID === activity._id.toString(),\n        );\n        if (previousConfig) {\n          hoursAssignTeamCoaches[teamCoach._id].hours[activity._id] = {\n            allocated: previousConfig.limit,\n            done: 0,\n          };\n        } else {\n          hoursAssignTeamCoaches[teamCoach._id].hours[activity._id] = {\n            allocated: 0,\n            done: 0,\n          };\n        }\n      }\n    }\n    // Assign startups expert\n    for (const teamCoach of listTeamCoaches) {\n      for (const startup of teamCoach.relationsAssign.startups) {\n        const docStartup = listStartups.find(\n          (i) => i._id.toString() === startup._id,\n        );\n        if (!docStartup) continue;\n        hoursAssignTeamCoaches[teamCoach._id].startups.push({\n          ...docStartup,\n        });\n      }\n    }\n    return Object.values(hoursAssignTeamCoaches);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddTableJoinInput.html":{"url":"classes/AddTableJoinInput.html","title":"class - AddTableJoinInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddTableJoinInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/table/table/dto/add-table-join.input.ts\n        \n\n\n            \n                Description\n            \n            \n                graphql inputs\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                join\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Table id.'})@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/table/table/dto/add-table-join.input.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        join\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TableJoin\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Metadata related to new join.'})@ValidateNested()@Type(undefined)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/table/table/dto/add-table-join.input.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { InputType, Field } from '@nestjs/graphql';\nimport { IsNotEmpty, ValidateNested } from 'class-validator';\nimport { TableJoin } from '../entities/table-join';\nimport { Type } from 'class-transformer';\n/**\n * graphql inputs\n */\n@InputType()\nexport class AddTableJoinInput {\n  @Field(() => String, { description: 'Table id.' })\n  @IsNotEmpty()\n  id: string;\n\n  @Field(() => TableJoin, { description: 'Metadata related to new join.' })\n  @ValidateNested()\n  @Type(() => TableJoin)\n  @IsNotEmpty()\n  join: TableJoin;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Announcement.html":{"url":"classes/Announcement.html","title":"class - Announcement","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Announcement\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/announcements/entities/announcement.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                announcements\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                _id\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                emailMessage\n                            \n                            \n                                    \n                                    \n                                endAt\n                            \n                            \n                                    \n                                    \n                                exitText\n                            \n                            \n                                    \n                                    \n                                form\n                            \n                            \n                                    \n                                    \n                                landing\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                published\n                            \n                            \n                                    \n                                    \n                                redirectLink\n                            \n                            \n                                    \n                                    \n                                startAt\n                            \n                            \n                                    \n                                    \n                                target\n                            \n                            \n                                    \n                                    \n                                thumbnail\n                            \n                            \n                                    \n                                    \n                                type\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/announcements/entities/announcement.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Date of entity creation.'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/announcements/entities/announcement.entity.ts:117\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Unique Id of the user who created the entity'})@Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/announcements/entities/announcement.entity.ts:100\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'If set, The date the entity was deleted.', nullable: true})@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/announcements/entities/announcement.entity.ts:127\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'If set, Unique Id of the user that deleted the entity.', nullable: true})@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/announcements/entities/announcement.entity.ts:114\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Announcement description.'})@Prop({default: ''})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/announcements/entities/announcement.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        emailMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Message text to include in the email after a form submit.'})@Prop({default: ''})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/announcements/entities/announcement.entity.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        endAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'End date for the announcent to be unavailable.'})@Prop({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/announcements/entities/announcement.entity.ts:94\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        exitText\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Text shown after the announcement has been submitted.'})@Prop({default: 'Sus respuestas se han registrado con exito, gracias por participar en la convocatoria.'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/announcements/entities/announcement.entity.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Id of the form to render for submissions.', nullable: true})@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/announcements/entities/announcement.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        landing\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Landing page html'})@Prop({default: ''})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/announcements/entities/announcement.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Announcement name.'})@Prop({default: ''})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/announcements/entities/announcement.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        published\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Boolean flag that defines if the announcement has been published.'})@Prop({default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/announcements/entities/announcement.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        redirectLink\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Link for redirect after a form submit.'})@Prop({default: ''})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/announcements/entities/announcement.entity.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        startAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Start date for the announcement to be available.'})@Prop({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/announcements/entities/announcement.entity.ts:88\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        target\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AnnouncementTargets\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Announcement target entity.'})@Prop({type: String, enum: AnnouncementTargets, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/announcements/entities/announcement.entity.ts:82\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        thumbnail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Link to a small image to be used as thumbnail', nullable: true})@Prop({default: ''})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/announcements/entities/announcement.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AnnouncementTypes\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Announcement type.'})@Prop({type: String, enum: AnnouncementTypes})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/announcements/entities/announcement.entity.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Date of last entity update.'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/announcements/entities/announcement.entity.ts:120\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'If set, Unique Id of the user who last updated the entity.', nullable: true})@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/announcements/entities/announcement.entity.ts:107\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ObjectType, Field, ID } from '@nestjs/graphql';\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Form } from 'src/forms/form/entities/form.entity';\nimport { AnnouncementTypes } from '../enums/announcement-types.enum';\nimport { AnnouncementTargets } from '../enums/announcement-targets.enum';\n\n/**\n * announcements\n */\n@Schema({ timestamps: true })\n@ObjectType()\nexport class Announcement {\n  @Field(() => ID)\n  _id: string;\n\n  @Field(() => String, { description: 'Announcement name.' })\n  @Prop({ default: '' })\n  name: string;\n\n  @Field(() => Boolean, {\n    description:\n      'Boolean flag that defines if the announcement has been published.',\n  })\n  @Prop({ default: false })\n  published: boolean;\n\n  @Field(() => String, { description: 'Announcement description.' })\n  @Prop({ default: '' })\n  description: string;\n\n  @Field(() => String, {\n    description: 'Link to a small image to be used as thumbnail',\n    nullable: true,\n  })\n  @Prop({ default: '' })\n  thumbnail: string;\n\n  @Field(() => String, { description: 'Landing page html' })\n  @Prop({ default: '' })\n  landing: string;\n\n  @Field(() => Form, {\n    description: 'Id of the form to render for submissions.',\n    nullable: true,\n  })\n  @Prop()\n  form: string;\n\n  @Field(() => String, {\n    description: 'Message text to include in the email after a form submit.',\n  })\n  @Prop({ default: '' })\n  emailMessage: string;\n\n  @Field(() => String, {\n    description: 'Link for redirect after a form submit.',\n  })\n  @Prop({ default: '' })\n  redirectLink: string;\n\n  @Field(() => String, {\n    description: 'Text shown after the announcement has been submitted.',\n  })\n  @Prop({\n    default:\n      'Sus respuestas se han registrado con exito, gracias por participar en la convocatoria.',\n  })\n  exitText: string;\n\n  @Field(() => AnnouncementTypes, { description: 'Announcement type.' })\n  @Prop({ type: String, enum: AnnouncementTypes })\n  type: AnnouncementTypes;\n\n  @Field(() => AnnouncementTargets, {\n    description: 'Announcement target entity.',\n  })\n  @Prop({\n    type: String,\n    enum: AnnouncementTargets,\n    default: AnnouncementTargets.entrepreneurs,\n  })\n  target: AnnouncementTargets;\n\n  @Field(() => Date, {\n    description: 'Start date for the announcement to be available.',\n  })\n  @Prop({ type: Date })\n  startAt: Date;\n\n  @Field(() => Date, {\n    description: 'End date for the announcent to be unavailable.',\n  })\n  @Prop({ type: Date })\n  endAt: Date;\n\n  @Field(() => String, {\n    description: 'Unique Id of the user who created the entity',\n  })\n  @Prop({ required: true })\n  createdBy: string;\n\n  @Field(() => String, {\n    description: 'If set, Unique Id of the user who last updated the entity.',\n    nullable: true,\n  })\n  @Prop()\n  updatedBy: string;\n\n  @Field(() => String, {\n    description: 'If set, Unique Id of the user that deleted the entity.',\n    nullable: true,\n  })\n  @Prop()\n  deletedBy: string;\n\n  @Field(() => Date, { description: 'Date of entity creation.' })\n  createdAt: Date;\n\n  @Field(() => Date, { description: 'Date of last entity update.' })\n  updatedAt: Date;\n\n  @Field(() => Date, {\n    description: 'If set, The date the entity was deleted.',\n    nullable: true,\n  })\n  @Prop()\n  deletedAt: Date;\n}\n/**\n * @ignore\n */\nexport const AnnouncementSchema = SchemaFactory.createForClass(Announcement);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AnnouncementApplicantArgs.html":{"url":"classes/AnnouncementApplicantArgs.html","title":"class - AnnouncementApplicantArgs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AnnouncementApplicantArgs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/applicant/args/announcement-applicant.args.ts\n        \n\n\n            \n                Description\n            \n            \n                graphql args input\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                announcement\n                            \n                            \n                                    \n                                    \n                                participant\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        announcement\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/applicant/args/announcement-applicant.args.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        participant\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/applicant/args/announcement-applicant.args.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, ArgsType } from '@nestjs/graphql';\nimport { IsNotEmpty } from 'class-validator';\n/**\n * graphql args input\n */\n@ArgsType()\nexport class AnnouncementApplicantArgs {\n  @Field(() => String)\n  @IsNotEmpty()\n  announcement: string;\n\n  @Field(() => String)\n  @IsNotEmpty()\n  participant: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AnnouncementApplicantsArgs.html":{"url":"classes/AnnouncementApplicantsArgs.html","title":"class - AnnouncementApplicantsArgs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AnnouncementApplicantsArgs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/applicant/args/announcement-applicants.args.ts\n        \n\n\n            \n                Description\n            \n            \n                graphql args input\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                announcement\n                            \n                            \n                                    \n                                    \n                                state\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        announcement\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/applicant/args/announcement-applicants.args.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ApplicationStates\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsEnum(ApplicationStates)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/applicant/args/announcement-applicants.args.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, ArgsType } from '@nestjs/graphql';\nimport { IsEnum, IsNotEmpty } from 'class-validator';\nimport { ApplicationStates } from '../enums/application-states.enum';\n/**\n * graphql args input\n */\n@ArgsType()\nexport class AnnouncementApplicantsArgs {\n  @Field(() => String)\n  @IsNotEmpty()\n  announcement: string;\n\n  @Field(() => ApplicationStates)\n  @IsEnum(ApplicationStates)\n  state: ApplicationStates;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AnnouncementsModule.html":{"url":"modules/AnnouncementsModule.html","title":"module - AnnouncementsModule","body":"\n                   \n\n\n\n\n    Modules\n    AnnouncementsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AnnouncementsModule\n\n\n\ncluster_AnnouncementsModule_imports\n\n\n\ncluster_AnnouncementsModule_providers\n\n\n\n\nApplicantModule\n\nApplicantModule\n\n\n\nAnnouncementsModule\n\nAnnouncementsModule\n\nAnnouncementsModule -->\n\nApplicantModule->AnnouncementsModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAnnouncementsModule -->\n\nAuthModule->AnnouncementsModule\n\n\n\n\n\nFormsModule\n\nFormsModule\n\nAnnouncementsModule -->\n\nFormsModule->AnnouncementsModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAnnouncementsModule -->\n\nUsersModule->AnnouncementsModule\n\n\n\n\n\nAnnouncementsService\n\nAnnouncementsService\n\nAnnouncementsModule -->\n\nAnnouncementsService->AnnouncementsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/announcements/announcements.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AnnouncementsService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ApplicantModule\n                        \n                        \n                            AuthModule\n                        \n                        \n                            FormsModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { AuthModule } from 'src/auth/auth.module';\nimport { UsersModule } from 'src/users/users.module';\nimport { AnnouncementsService } from './announcements.service';\nimport { AnnouncementsResolver } from './announcements.resolver';\nimport { Announcement, AnnouncementSchema } from './entities/announcement.entity';\nimport { FormsModule } from 'src/forms/forms.module';\nimport { ApplicantModule } from 'src/applicant/applicant.module';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      { name: Announcement.name, schema: AnnouncementSchema },\n    ]),\n    AuthModule,\n    UsersModule,\n    FormsModule,\n    ApplicantModule,\n  ],\n  providers: [AnnouncementsResolver, AnnouncementsService]\n})\n\nexport class AnnouncementsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AnnouncementsService.html":{"url":"injectables/AnnouncementsService.html","title":"injectable - AnnouncementsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AnnouncementsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/announcements/announcements.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                clone\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                publish\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                unpublish\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(announcementModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/announcements/announcements.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        announcementModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        clone\n                        \n                    \n                \n            \n            \n                \n                        \n                    clone(id: string, user: AuthUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/announcements/announcements.service.ts:57\n                        \n                    \n\n\n            \n                \n                        clone announcement\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            AuthUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                announcement\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createAnnouncementInput: CreateAnnouncementInput, user: AuthUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/announcements/announcements.service.ts:42\n                        \n                    \n\n\n            \n                \n                        create announcement\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createAnnouncementInput\n                                            \n                                                            CreateAnnouncementInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            AuthUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                announcement\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/announcements/announcements.service.ts:20\n                        \n                    \n\n\n            \n                \n                        search all announcements\n\n\n                        \n                            Returns :         Promise\n\n                        \n                            \n                                announcements\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/announcements/announcements.service.ts:31\n                        \n                    \n\n\n            \n                \n                        search announcement by id\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                announcement\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        publish\n                        \n                    \n                \n            \n            \n                \n                        \n                    publish(id: string, user: AuthUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/announcements/announcements.service.ts:93\n                        \n                    \n\n\n            \n                \n                        change state of published announcement to true\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            AuthUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                announcement\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/announcements/announcements.service.ts:119\n                        \n                    \n\n\n            \n                \n                        soft delete announcement\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                announcement\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        unpublish\n                        \n                    \n                \n            \n            \n                \n                        \n                    unpublish(id: string, user: AuthUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/announcements/announcements.service.ts:106\n                        \n                    \n\n\n            \n                \n                        change state of published announcement to false\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            AuthUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                announcement\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateAnnouncementInput: Omit, user: AuthUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/announcements/announcements.service.ts:72\n                        \n                    \n\n\n            \n                \n                        update announcement\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateAnnouncementInput\n                                            \n                                                        Omit\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            AuthUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                announcement updated\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { CreateAnnouncementInput } from './dto/create-announcement.input';\nimport { UpdateAnnouncementInput } from './dto/update-announcement.input';\nimport { Announcement } from './entities/announcement.entity';\nimport { Model } from 'mongoose';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { AuthUser } from 'src/auth/types/auth-user';\n\n@Injectable()\nexport class AnnouncementsService {\n  constructor(\n    @InjectModel(Announcement.name)\n    private readonly announcementModel: Model,\n  ) {}\n\n  /**\n   * search all announcements\n   * @returns announcements\n   */\n  async findAll(): Promise {\n    const announcements = await this.announcementModel.find({\n      deletedAt: null,\n    });\n    return announcements;\n  }\n\n  /**\n   * search announcement by id\n   * @returns announcement\n   */\n  async findOne(id: string): Promise {\n    const announcement = await this.announcementModel.findOne({ _id: id });\n    if (!announcement)\n      throw new NotFoundException(`No announcement found with id ${id}`);\n    return announcement;\n  }\n\n  /**\n   * create announcement\n   * @returns announcement\n   */\n  async create(\n    createAnnouncementInput: CreateAnnouncementInput,\n    user: AuthUser,\n  ): Promise {\n    const createdAnnouncement = await this.announcementModel.create({\n      ...createAnnouncementInput,\n      createdBy: user.uid,\n    });\n    return createdAnnouncement;\n  }\n\n  /**\n   * clone announcement\n   * @returns announcement\n   */\n  async clone(id: string, user: AuthUser) {\n    const existingAnnouncement = await this.announcementModel.findById({\n      _id: id,\n    });\n    const createdAnnouncement = await this.announcementModel.create({\n      ...existingAnnouncement,\n      createdBy: user.uid,\n    });\n    return createdAnnouncement;\n  }\n\n  /**\n   * update announcement\n   * @returns announcement updated\n   */\n  async update(\n    id: string,\n    updateAnnouncementInput: Omit,\n    user: AuthUser,\n  ): Promise {\n    const updatedAnnouncement = await this.announcementModel\n      .findOneAndUpdate(\n        { _id: id },\n        { ...updateAnnouncementInput, updatedBy: user.uid },\n        { new: true },\n      )\n      .lean();\n    if (!updatedAnnouncement)\n      throw new NotFoundException(`The announcement by id ${id} doesn't exist`);\n    return updatedAnnouncement;\n  }\n\n  /**\n   * change state of published announcement to true\n   * @returns announcement\n   */\n  async publish(id: string, user: AuthUser) {\n    const publishedAnnouncement = await this.update(\n      id,\n      { published: true },\n      user,\n    );\n    return publishedAnnouncement;\n  }\n\n  /**\n   * change state of published announcement to false\n   * @returns announcement\n   */\n  async unpublish(id: string, user: AuthUser) {\n    const unpublishedAnnouncement = await this.update(\n      id,\n      { published: false },\n      user,\n    );\n    return unpublishedAnnouncement;\n  }\n\n  /**\n   * soft delete announcement\n   * @returns announcement\n   */\n  async remove(id: string) {\n    const deletedAnnouncement = await this.announcementModel.updateOne(\n      { _id: id },\n      { deletedAt: Date.now() },\n    );\n    return deletedAnnouncement;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nActivitiesConfigModule\n\nActivitiesConfigModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nActivitiesConfigModule->AppModule\n\n\n\n\n\nAnnouncementsModule\n\nAnnouncementsModule\n\nAppModule -->\n\nAnnouncementsModule->AppModule\n\n\n\n\n\nApplicantModule\n\nApplicantModule\n\nAppModule -->\n\nApplicantModule->AppModule\n\n\n\n\n\nAuthCodeModule\n\nAuthCodeModule\n\nAppModule -->\n\nAuthCodeModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nBusinessModule\n\nBusinessModule\n\nAppModule -->\n\nBusinessModule->AppModule\n\n\n\n\n\nConfigEvaluationsModule\n\nConfigEvaluationsModule\n\nAppModule -->\n\nConfigEvaluationsModule->AppModule\n\n\n\n\n\nConfigurationAppModule\n\nConfigurationAppModule\n\nAppModule -->\n\nConfigurationAppModule->AppModule\n\n\n\n\n\nContentModule\n\nContentModule\n\nAppModule -->\n\nContentModule->AppModule\n\n\n\n\n\nDownloadsModule\n\nDownloadsModule\n\nAppModule -->\n\nDownloadsModule->AppModule\n\n\n\n\n\nEmailsModule\n\nEmailsModule\n\nAppModule -->\n\nEmailsModule->AppModule\n\n\n\n\n\nEntrepreneurModule\n\nEntrepreneurModule\n\nAppModule -->\n\nEntrepreneurModule->AppModule\n\n\n\n\n\nEvaluationsModule\n\nEvaluationsModule\n\nAppModule -->\n\nEvaluationsModule->AppModule\n\n\n\n\n\nEventsModule\n\nEventsModule\n\nAppModule -->\n\nEventsModule->AppModule\n\n\n\n\n\nExpertModule\n\nExpertModule\n\nAppModule -->\n\nExpertModule->AppModule\n\n\n\n\n\nFormsModule\n\nFormsModule\n\nAppModule -->\n\nFormsModule->AppModule\n\n\n\n\n\nHelpDeskModule\n\nHelpDeskModule\n\nAppModule -->\n\nHelpDeskModule->AppModule\n\n\n\n\n\nIntegrationsModule\n\nIntegrationsModule\n\nAppModule -->\n\nIntegrationsModule->AppModule\n\n\n\n\n\nInvitationsModule\n\nInvitationsModule\n\nAppModule -->\n\nInvitationsModule->AppModule\n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nAppModule -->\n\nLoggerModule->AppModule\n\n\n\n\n\nNotificationsModule\n\nNotificationsModule\n\nAppModule -->\n\nNotificationsModule->AppModule\n\n\n\n\n\nPhasesModule\n\nPhasesModule\n\nAppModule -->\n\nPhasesModule->AppModule\n\n\n\n\n\nResourcesModule\n\nResourcesModule\n\nAppModule -->\n\nResourcesModule->AppModule\n\n\n\n\n\nResourcesRepliesModule\n\nResourcesRepliesModule\n\nAppModule -->\n\nResourcesRepliesModule->AppModule\n\n\n\n\n\nRolModule\n\nRolModule\n\nAppModule -->\n\nRolModule->AppModule\n\n\n\n\n\nSitesModule\n\nSitesModule\n\nAppModule -->\n\nSitesModule->AppModule\n\n\n\n\n\nStagesModule\n\nStagesModule\n\nAppModule -->\n\nStagesModule->AppModule\n\n\n\n\n\nStartupModule\n\nStartupModule\n\nAppModule -->\n\nStartupModule->AppModule\n\n\n\n\n\nStorageModule\n\nStorageModule\n\nAppModule -->\n\nStorageModule->AppModule\n\n\n\n\n\nTableModule\n\nTableModule\n\nAppModule -->\n\nTableModule->AppModule\n\n\n\n\n\nTermsOfUseModule\n\nTermsOfUseModule\n\nAppModule -->\n\nTermsOfUseModule->AppModule\n\n\n\n\n\nTypesEventsModule\n\nTypesEventsModule\n\nAppModule -->\n\nTypesEventsModule->AppModule\n\n\n\n\n\nTypesNotificationsModule\n\nTypesNotificationsModule\n\nAppModule -->\n\nTypesNotificationsModule->AppModule\n\n\n\n\n\nUserConfigModule\n\nUserConfigModule\n\nAppModule -->\n\nUserConfigModule->AppModule\n\n\n\n\n\nUserLogModule\n\nUserLogModule\n\nAppModule -->\n\nUserLogModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            ActivitiesConfigModule\n                        \n                        \n                            AnnouncementsModule\n                        \n                        \n                            ApplicantModule\n                        \n                        \n                            AuthCodeModule\n                        \n                        \n                            AuthModule\n                        \n                        \n                            BusinessModule\n                        \n                        \n                            ConfigEvaluationsModule\n                        \n                        \n                            ConfigurationAppModule\n                        \n                        \n                            ContentModule\n                        \n                        \n                            DownloadsModule\n                        \n                        \n                            EmailsModule\n                        \n                        \n                            EntrepreneurModule\n                        \n                        \n                            EvaluationsModule\n                        \n                        \n                            EventsModule\n                        \n                        \n                            ExpertModule\n                        \n                        \n                            FormsModule\n                        \n                        \n                            HelpDeskModule\n                        \n                        \n                            IntegrationsModule\n                        \n                        \n                            InvitationsModule\n                        \n                        \n                            LoggerModule\n                        \n                        \n                            NotificationsModule\n                        \n                        \n                            PhasesModule\n                        \n                        \n                            ResourcesModule\n                        \n                        \n                            ResourcesRepliesModule\n                        \n                        \n                            RolModule\n                        \n                        \n                            SitesModule\n                        \n                        \n                            StagesModule\n                        \n                        \n                            StartupModule\n                        \n                        \n                            StorageModule\n                        \n                        \n                            TableModule\n                        \n                        \n                            TermsOfUseModule\n                        \n                        \n                            TypesEventsModule\n                        \n                        \n                            TypesNotificationsModule\n                        \n                        \n                            UserConfigModule\n                        \n                        \n                            UserLogModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { ApolloDriver, ApolloDriverConfig } from '@nestjs/apollo';\nimport { Module } from '@nestjs/common';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { GraphQLModule } from '@nestjs/graphql';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport {\n  AppConfiguration,\n  EnvConfiguration,\n  AppEnvironments,\n} from '../config/app.config';\nimport { join } from 'path';\nimport { UsersModule } from './users/users.module';\nimport { AuthModule } from './auth/auth.module';\nimport { ApolloServerPluginLandingPageLocalDefault } from '@apollo/server/plugin/landingPage/default';\nimport { EmailsModule } from './emails/emails.module';\nimport { InvitationsModule } from './invitations/invitations.module';\nimport { LoggerModule } from './logger/logger.module';\nimport { AuthService } from './auth/auth.service';\nimport { PhasesModule } from './phases/phases.module';\nimport { StagesModule } from './stages/stages.module';\nimport { StorageModule } from './storage/storage.module';\nimport { ContentModule } from './content/content.module';\nimport { FormsModule } from './forms/forms.module';\nimport { AuthCodeModule } from './auth-code/auth-code.module';\nimport { EntrepreneurModule } from './entrepreneur/entrepreneur.module';\nimport { StartupModule } from './startup/startup.module';\nimport { InvestorModule } from './investor/investor.module';\nimport { ExpertModule } from './expert/expert.module';\nimport { ResourcesModule } from './resources/resources.module';\nimport { AnnouncementsModule } from './announcements/announcements.module';\nimport { ActivitiesConfigModule } from './activities-config/activities-config.module';\nimport { TypesEventsModule } from './events/types-events/types-events.module';\nimport { ApplicantModule } from './applicant/applicant.module';\nimport { TableModule } from './table/table.module';\nimport { BusinessModule } from './business/business.module';\nimport { EventsModule } from './events/events.module';\nimport { SitesModule } from './sites/sites.module';\nimport { RolModule } from './rol/rol.module';\nimport { DownloadsModule } from './downloads/downloads.module';\nimport { EvaluationsModule } from './evaluations/evaluations.module';\nimport { ConfigEvaluationsModule } from './evaluations/config-evaluations/config-evaluations.module';\nimport { CalendarModule } from './calendar/calendar.module';\nimport GraphQLJSON from 'graphql-type-json';\nimport { ResourcesRepliesModule } from './resources/resources-replies/resources-replies.module';\nimport { UserLogModule } from './user-log/user-log.module';\nimport { NotificationsModule } from './notifications/notifications.module';\nimport { HelpDeskModule } from './help-desk/help-desk.module';\nimport { ConfigurationAppModule } from './configuration-app/configuration-app.module';\nimport { EventEmitterModule } from '@nestjs/event-emitter';\nimport { RatingModule } from './rating/rating.module';\nimport { IntegrationsModule } from './integrations/integrations.module';\nimport { TermsOfUseModule } from './terms-of-use/terms-of-use.module';\nimport { UserConfigModule } from './user-config/user-config.module';\nimport { TypesNotificationsModule } from './notifications/types-notifications/types-notifications.module';\nimport { ScheduleModule } from '@nestjs/schedule';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      envFilePath: process.env.NODE_ENV\n        ? `${process.cwd()}/env/${process.env.NODE_ENV}.env`\n        : undefined,\n      isGlobal: true,\n      load: [EnvConfiguration],\n    }),\n    MongooseModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: async (configService: ConfigService) => {\n        return {\n          uri: configService.get('mongoDb'),\n        };\n      },\n    }),\n    GraphQLModule.forRootAsync({\n      imports: [ConfigModule, AuthModule],\n      inject: [ConfigService, AuthService],\n      driver: ApolloDriver,\n      useFactory: async (\n        configService: ConfigService,\n        authService: AuthService,\n      ) => {\n        const enableDebug =\n          configService.get('environment') === AppEnvironments.Development;\n        const plugins = [];\n        if (enableDebug) {\n          plugins.push(ApolloServerPluginLandingPageLocalDefault());\n        }\n        return {\n          resolvers: { JSON: GraphQLJSON },\n          cors: {\n            credentials: true,\n            origin: '*',\n          },\n          debug: enableDebug,\n          playground: false,\n          subscriptions: {\n            'graphql-ws': {\n              path: '/subscriptions',\n            },\n          },\n          autoSchemaFile: join(process.cwd(), 'src/schema.gql'),\n          sortSchema: true,\n          plugins,\n          // context: async ({ req }) => {\n          //   const token = req.headers.authorization.replace('Bearer ', '');\n          //   await authService.validateToken(token);\n          // },\n        };\n      },\n    }),\n    ScheduleModule.forRoot(),\n    UsersModule,\n    AuthModule,\n    EmailsModule,\n    InvitationsModule,\n    LoggerModule,\n    PhasesModule,\n    StagesModule,\n    StorageModule,\n    ContentModule,\n    FormsModule,\n    AuthCodeModule,\n    EntrepreneurModule,\n    StartupModule,\n    InvestorModule,\n    ExpertModule,\n    ResourcesModule,\n    ResourcesRepliesModule,\n    TypesEventsModule,\n    AnnouncementsModule,\n    ActivitiesConfigModule,\n    ApplicantModule,\n    TableModule,\n    BusinessModule,\n    EventsModule,\n    SitesModule,\n    RolModule,\n    DownloadsModule,\n    EvaluationsModule,\n    ConfigEvaluationsModule,\n    CalendarModule,\n    UserLogModule,\n    NotificationsModule,\n    TypesNotificationsModule,\n    HelpDeskModule,\n    ConfigurationAppModule,\n    EventEmitterModule.forRoot(),\n    RatingModule,\n    IntegrationsModule,\n    TermsOfUseModule,\n    UserConfigModule,\n  ],\n  controllers: [],\n  providers: [],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Applicant.html":{"url":"classes/Applicant.html","title":"class - Applicant","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Applicant\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/applicant/entities/applicant.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                when someone participates in a call for proposals this type of document is generated\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                _id\n                            \n                            \n                                    \n                                    \n                                announcement\n                            \n                            \n                                    \n                                    \n                                batch\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                documents\n                            \n                            \n                                    \n                                    Optional\n                                documentsFields\n                            \n                            \n                                    \n                                    \n                                item\n                            \n                            \n                                    \n                                    \n                                participant\n                            \n                            \n                                    \n                                    Optional\n                                state\n                            \n                            \n                                    \n                                    \n                                states\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/applicant/entities/applicant.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        announcement\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Id of the announcement this document is associated to.'})@Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/applicant/entities/applicant.entity.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        batch\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Batch assign if participant is selected', nullable: true})@Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/applicant/entities/applicant.entity.ts:100\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Date of entity creation.'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/applicant/entities/applicant.entity.ts:90\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'If set, The date the entity was deleted.', nullable: true})@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/applicant/entities/applicant.entity.ts:80\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        documents\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormFileSubmission[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Submitted files from announcement form.', nullable: true})@Prop({default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/applicant/entities/applicant.entity.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        documentsFields\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/applicant/entities/applicant.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        item\n                        \n                    \n                \n            \n                \n                    \n                        Type :     JSON\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Set of additional dynamic properties.'})@Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/applicant/entities/applicant.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        participant\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Unique identifier for non-anonymous submissions.', nullable: true})@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/applicant/entities/applicant.entity.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ApplicantState\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/applicant/entities/applicant.entity.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        states\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicantState[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Id of the announcement this document is associated to.'})@Prop({required: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/applicant/entities/applicant.entity.ts:73\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Date of last entity update.'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/applicant/entities/applicant.entity.ts:93\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'If set, Details from user who last updated the entity.', nullable: true})@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/applicant/entities/applicant.entity.ts:87\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ObjectType, Field, ID } from '@nestjs/graphql';\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport GraphQLJSON from 'graphql-type-json';\nimport { User } from 'src/users/entities/user.entity';\nimport { ApplicationStates } from '../enums/application-states.enum';\nimport { FormFileSubmission } from 'src/forms/factories/form-file-submission';\n\n/**\n * is the follow-up of an applicant to the announcement, with the documents and their status.\n */\n@ObjectType()\nexport class ApplicantState {\n  @Field(() => String)\n  @Prop({ default: '' })\n  notes: string;\n\n  @Field(() => [Attachment])\n  @Prop({ default: [] })\n  documents: Attachment[];\n\n  @Field(() => ApplicationStates)\n  @Prop({ required: true, enum: ApplicationStates })\n  type: ApplicationStates;\n}\n/**\n * when someone participates in a call for proposals this type of document is generated\n */\n@Schema({ timestamps: true })\n@ObjectType()\nexport class Applicant {\n  @Field(() => ID)\n  _id: string;\n\n  @Field(() => GraphQLJSON, {\n    description: 'Set of additional dynamic properties.',\n  })\n  @Prop({ type: Object })\n  item: JSON;\n\n  @Field(() => GraphQLJSON, { nullable: true })\n  documentsFields?: Record;\n\n  @Field(() => [FormFileSubmission], {\n    description: 'Submitted files from announcement form.',\n    nullable: true,\n  })\n  @Prop({ default: [] })\n  documents?: FormFileSubmission[];\n\n  @Field(() => String, {\n    description: 'Id of the announcement this document is associated to.',\n  })\n  @Prop({ required: true })\n  announcement: string;\n\n  @Field(() => String, {\n    description: 'Unique identifier for non-anonymous submissions.',\n    nullable: true,\n  })\n  @Prop()\n  participant: string;\n\n  @Field(() => ApplicantState, { nullable: true })\n  state?: ApplicantState;\n\n  @Field(() => [ApplicantState], {\n    description: 'Id of the announcement this document is associated to.',\n  })\n  @Prop({\n    required: true,\n    default: [{ notes: '', documents: [], type: ApplicationStates.enrolled }],\n  })\n  states: ApplicantState[];\n\n  @Field(() => Date, {\n    description: 'If set, The date the entity was deleted.',\n    nullable: true,\n  })\n  @Prop()\n  deletedAt: Date;\n\n  @Field(() => User, {\n    description: 'If set, Details from user who last updated the entity.',\n    nullable: true,\n  })\n  @Prop()\n  updatedBy: string;\n\n  @Field(() => Date, { description: 'Date of entity creation.' })\n  createdAt: Date;\n\n  @Field(() => Date, { description: 'Date of last entity update.' })\n  updatedAt: Date;\n\n  @Field(() => GraphQLJSON, {\n    description: 'Batch assign if participant is selected',\n    nullable: true,\n  })\n  @Prop({ type: Object })\n  batch: Record;\n}\n/**\n * @ignore\n */\nexport const ApplicantSchema = SchemaFactory.createForClass(Applicant);\n/**\n * extract token from header\n */\n@ObjectType()\nexport class Attachment implements IAttachment {\n  @Field(() => String, { description: 'Name of the attachment file.' })\n  @Prop({ default: '' })\n  name: string;\n\n  @Field(() => String, { description: 'Url for the attachment file.' })\n  @Prop({ default: '' })\n  url: string;\n\n  @Field(() => String, { description: 'Unique key used for the file.' })\n  @Prop({ default: '' })\n  key: string;\n}\n/**\n * extract token from header\n */\nexport interface IAttachment {\n  name: string;\n  url: string;\n  key: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ApplicantArgs.html":{"url":"classes/ApplicantArgs.html","title":"class - ApplicantArgs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApplicantArgs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/applicant/args/applicant.args.ts\n        \n\n\n            \n                Description\n            \n            \n                graphql args input\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                state\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/applicant/args/applicant.args.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ApplicationStates\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsEnum(ApplicationStates)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/applicant/args/applicant.args.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, ArgsType } from '@nestjs/graphql';\nimport { IsEnum, IsNotEmpty } from 'class-validator';\nimport { ApplicationStates } from '../enums/application-states.enum';\n/**\n * graphql args input\n */\n@ArgsType()\nexport class ApplicantArgs {\n  @Field(() => String)\n  @IsNotEmpty()\n  id: string;\n\n  @Field(() => ApplicationStates)\n  @IsEnum(ApplicationStates)\n  state: ApplicationStates;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ApplicantModule.html":{"url":"modules/ApplicantModule.html","title":"module - ApplicantModule","body":"\n                   \n\n\n\n\n    Modules\n    ApplicantModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ApplicantModule\n\n\n\ncluster_ApplicantModule_imports\n\n\n\ncluster_ApplicantModule_exports\n\n\n\ncluster_ApplicantModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nApplicantModule\n\nApplicantModule\n\nApplicantModule -->\n\nAuthModule->ApplicantModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nApplicantModule -->\n\nUsersModule->ApplicantModule\n\n\n\n\n\nApplicantService \n\nApplicantService \n\nApplicantService  -->\n\nApplicantModule->ApplicantService \n\n\n\n\n\nApplicantService\n\nApplicantService\n\nApplicantModule -->\n\nApplicantService->ApplicantModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/applicant/applicant.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ApplicantService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ApplicantService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module, forwardRef } from '@nestjs/common';\nimport { ApplicantService } from './applicant.service';\nimport { ApplicantResolver } from './applicant.resolver';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { AuthModule } from 'src/auth/auth.module';\nimport { UsersModule } from 'src/users/users.module';\nimport { Applicant, ApplicantSchema } from './entities/applicant.entity';\nimport { ExpertModule } from 'src/expert/expert.module';\nimport { StartupModule } from 'src/startup/startup.module';\nimport { InvitationsModule } from 'src/invitations/invitations.module';\nimport { EntrepreneurModule } from 'src/entrepreneur/entrepreneur.module';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      { name: Applicant.name, schema: ApplicantSchema },\n    ]),\n    AuthModule,\n    UsersModule,\n    forwardRef(() => ExpertModule),\n    forwardRef(() => StartupModule),\n    forwardRef(() => EntrepreneurModule),\n    forwardRef(() => InvitationsModule),\n  ],\n  providers: [ApplicantResolver, ApplicantService],\n  exports: [ApplicantService],\n})\nexport class ApplicantModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ApplicantState.html":{"url":"classes/ApplicantState.html","title":"class - ApplicantState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApplicantState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/applicant/entities/applicant.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                is the follow-up of an applicant to the announcement, with the documents and their status.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                documents\n                            \n                            \n                                    \n                                    \n                                notes\n                            \n                            \n                                    \n                                    \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        documents\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Attachment[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/applicant/entities/applicant.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        notes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({default: ''})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/applicant/entities/applicant.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ApplicationStates\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({required: true, enum: ApplicationStates})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/applicant/entities/applicant.entity.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ObjectType, Field, ID } from '@nestjs/graphql';\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport GraphQLJSON from 'graphql-type-json';\nimport { User } from 'src/users/entities/user.entity';\nimport { ApplicationStates } from '../enums/application-states.enum';\nimport { FormFileSubmission } from 'src/forms/factories/form-file-submission';\n\n/**\n * is the follow-up of an applicant to the announcement, with the documents and their status.\n */\n@ObjectType()\nexport class ApplicantState {\n  @Field(() => String)\n  @Prop({ default: '' })\n  notes: string;\n\n  @Field(() => [Attachment])\n  @Prop({ default: [] })\n  documents: Attachment[];\n\n  @Field(() => ApplicationStates)\n  @Prop({ required: true, enum: ApplicationStates })\n  type: ApplicationStates;\n}\n/**\n * when someone participates in a call for proposals this type of document is generated\n */\n@Schema({ timestamps: true })\n@ObjectType()\nexport class Applicant {\n  @Field(() => ID)\n  _id: string;\n\n  @Field(() => GraphQLJSON, {\n    description: 'Set of additional dynamic properties.',\n  })\n  @Prop({ type: Object })\n  item: JSON;\n\n  @Field(() => GraphQLJSON, { nullable: true })\n  documentsFields?: Record;\n\n  @Field(() => [FormFileSubmission], {\n    description: 'Submitted files from announcement form.',\n    nullable: true,\n  })\n  @Prop({ default: [] })\n  documents?: FormFileSubmission[];\n\n  @Field(() => String, {\n    description: 'Id of the announcement this document is associated to.',\n  })\n  @Prop({ required: true })\n  announcement: string;\n\n  @Field(() => String, {\n    description: 'Unique identifier for non-anonymous submissions.',\n    nullable: true,\n  })\n  @Prop()\n  participant: string;\n\n  @Field(() => ApplicantState, { nullable: true })\n  state?: ApplicantState;\n\n  @Field(() => [ApplicantState], {\n    description: 'Id of the announcement this document is associated to.',\n  })\n  @Prop({\n    required: true,\n    default: [{ notes: '', documents: [], type: ApplicationStates.enrolled }],\n  })\n  states: ApplicantState[];\n\n  @Field(() => Date, {\n    description: 'If set, The date the entity was deleted.',\n    nullable: true,\n  })\n  @Prop()\n  deletedAt: Date;\n\n  @Field(() => User, {\n    description: 'If set, Details from user who last updated the entity.',\n    nullable: true,\n  })\n  @Prop()\n  updatedBy: string;\n\n  @Field(() => Date, { description: 'Date of entity creation.' })\n  createdAt: Date;\n\n  @Field(() => Date, { description: 'Date of last entity update.' })\n  updatedAt: Date;\n\n  @Field(() => GraphQLJSON, {\n    description: 'Batch assign if participant is selected',\n    nullable: true,\n  })\n  @Prop({ type: Object })\n  batch: Record;\n}\n/**\n * @ignore\n */\nexport const ApplicantSchema = SchemaFactory.createForClass(Applicant);\n/**\n * extract token from header\n */\n@ObjectType()\nexport class Attachment implements IAttachment {\n  @Field(() => String, { description: 'Name of the attachment file.' })\n  @Prop({ default: '' })\n  name: string;\n\n  @Field(() => String, { description: 'Url for the attachment file.' })\n  @Prop({ default: '' })\n  url: string;\n\n  @Field(() => String, { description: 'Unique key used for the file.' })\n  @Prop({ default: '' })\n  key: string;\n}\n/**\n * extract token from header\n */\nexport interface IAttachment {\n  name: string;\n  url: string;\n  key: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Assign.html":{"url":"classes/Assign.html","title":"class - Assign","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Assign\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/activities-config/entities/activities-config.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                assigned entity config\n\n            \n\n\n            \n                Implements\n            \n            \n                            IAssign\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                activityID\n                            \n                            \n                                    \n                                    \n                                entityID\n                            \n                            \n                                    \n                                limit\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        activityID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/activities-config/entities/activities-config.entity.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        entityID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/activities-config/entities/activities-config.entity.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/activities-config/entities/activities-config.entity.ts:71\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ObjectType, Field, ID, Int } from '@nestjs/graphql';\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { SchemaTypes } from 'mongoose';\n/**\n * the configuration of activities are the documents that have the global limit of hours of a batch, its allocation of hours per activity as well as the allocations to experts, startups and teamcoaches.\n */\n@Schema({ timestamps: true })\n@ObjectType()\nexport class ActivitiesConfig {\n  @Field(() => ID)\n  _id: string;\n\n  @Field(() => Int)\n  @Prop({ type: 'number', default: 0 })\n  limit: number;\n\n  @Field(() => String)\n  @Prop({ type: SchemaTypes.ObjectId, ref: 'Phase' })\n  phase: string;\n\n  @Field(() => [activities])\n  @Prop({ default: [] })\n  activities: activities[];\n\n  @Field(() => [Assign])\n  @Prop({ default: [] })\n  startups: Assign[];\n\n  @Field(() => [Assign])\n  @Prop({ default: [] })\n  experts: Assign[];\n\n  @Field(() => [Assign])\n  @Prop({ default: [] })\n  teamCoaches: Assign[];\n\n  @Field(() => Date)\n  createdAt: Date;\n\n  @Field(() => Date)\n  updatedAt: Date;\n\n  @Field(() => Boolean)\n  @Prop({ type: 'boolean', default: false })\n  isDeleted: boolean;\n}\n/**\n * assigned activity config\n */\n@Schema()\n@ObjectType()\nexport class activities implements IActivities {\n  @Field(() => String)\n  @Prop({ type: SchemaTypes.ObjectId })\n  id: string;\n\n  @Field(() => Int)\n  limit: number;\n}\n/**\n * assigned entity config\n */\n@Schema()\n@ObjectType()\nexport class Assign implements IAssign {\n  @Field(() => String)\n  @Prop({ type: SchemaTypes.ObjectId })\n  entityID: string;\n\n  @Field(() => Int)\n  limit: number;\n\n  @Field(() => String)\n  @Prop({ type: SchemaTypes.ObjectId })\n  activityID: string;\n}\n/**\n * @ignore\n */\nexport interface IActivities {\n  id: string;\n  limit: number;\n}\n/**\n * @ignore\n */\nexport interface IAssign {\n  entityID: string;\n  limit: number;\n  activityID: string;\n}\n/**\n * @ignore\n */\nexport const ActivitiesConfigSchema =\n  SchemaFactory.createForClass(ActivitiesConfig);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Attachment.html":{"url":"classes/Attachment.html","title":"class - Attachment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Attachment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/applicant/entities/applicant.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                extract token from header\n\n            \n\n\n            \n                Implements\n            \n            \n                            IAttachment\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                key\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        key\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Unique key used for the file.'})@Prop({default: ''})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/applicant/entities/applicant.entity.ts:121\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Name of the attachment file.'})@Prop({default: ''})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/applicant/entities/applicant.entity.ts:113\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Url for the attachment file.'})@Prop({default: ''})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/applicant/entities/applicant.entity.ts:117\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ObjectType, Field, ID } from '@nestjs/graphql';\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport GraphQLJSON from 'graphql-type-json';\nimport { User } from 'src/users/entities/user.entity';\nimport { ApplicationStates } from '../enums/application-states.enum';\nimport { FormFileSubmission } from 'src/forms/factories/form-file-submission';\n\n/**\n * is the follow-up of an applicant to the announcement, with the documents and their status.\n */\n@ObjectType()\nexport class ApplicantState {\n  @Field(() => String)\n  @Prop({ default: '' })\n  notes: string;\n\n  @Field(() => [Attachment])\n  @Prop({ default: [] })\n  documents: Attachment[];\n\n  @Field(() => ApplicationStates)\n  @Prop({ required: true, enum: ApplicationStates })\n  type: ApplicationStates;\n}\n/**\n * when someone participates in a call for proposals this type of document is generated\n */\n@Schema({ timestamps: true })\n@ObjectType()\nexport class Applicant {\n  @Field(() => ID)\n  _id: string;\n\n  @Field(() => GraphQLJSON, {\n    description: 'Set of additional dynamic properties.',\n  })\n  @Prop({ type: Object })\n  item: JSON;\n\n  @Field(() => GraphQLJSON, { nullable: true })\n  documentsFields?: Record;\n\n  @Field(() => [FormFileSubmission], {\n    description: 'Submitted files from announcement form.',\n    nullable: true,\n  })\n  @Prop({ default: [] })\n  documents?: FormFileSubmission[];\n\n  @Field(() => String, {\n    description: 'Id of the announcement this document is associated to.',\n  })\n  @Prop({ required: true })\n  announcement: string;\n\n  @Field(() => String, {\n    description: 'Unique identifier for non-anonymous submissions.',\n    nullable: true,\n  })\n  @Prop()\n  participant: string;\n\n  @Field(() => ApplicantState, { nullable: true })\n  state?: ApplicantState;\n\n  @Field(() => [ApplicantState], {\n    description: 'Id of the announcement this document is associated to.',\n  })\n  @Prop({\n    required: true,\n    default: [{ notes: '', documents: [], type: ApplicationStates.enrolled }],\n  })\n  states: ApplicantState[];\n\n  @Field(() => Date, {\n    description: 'If set, The date the entity was deleted.',\n    nullable: true,\n  })\n  @Prop()\n  deletedAt: Date;\n\n  @Field(() => User, {\n    description: 'If set, Details from user who last updated the entity.',\n    nullable: true,\n  })\n  @Prop()\n  updatedBy: string;\n\n  @Field(() => Date, { description: 'Date of entity creation.' })\n  createdAt: Date;\n\n  @Field(() => Date, { description: 'Date of last entity update.' })\n  updatedAt: Date;\n\n  @Field(() => GraphQLJSON, {\n    description: 'Batch assign if participant is selected',\n    nullable: true,\n  })\n  @Prop({ type: Object })\n  batch: Record;\n}\n/**\n * @ignore\n */\nexport const ApplicantSchema = SchemaFactory.createForClass(Applicant);\n/**\n * extract token from header\n */\n@ObjectType()\nexport class Attachment implements IAttachment {\n  @Field(() => String, { description: 'Name of the attachment file.' })\n  @Prop({ default: '' })\n  name: string;\n\n  @Field(() => String, { description: 'Url for the attachment file.' })\n  @Prop({ default: '' })\n  url: string;\n\n  @Field(() => String, { description: 'Unique key used for the file.' })\n  @Prop({ default: '' })\n  key: string;\n}\n/**\n * extract token from header\n */\nexport interface IAttachment {\n  name: string;\n  url: string;\n  key: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AttachmentSubmit.html":{"url":"classes/AttachmentSubmit.html","title":"class - AttachmentSubmit","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AttachmentSubmit\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/applicant/dto/update-applicant-state.input.ts\n        \n\n\n            \n                Description\n            \n            \n                graphql input scheme\n\n            \n\n\n            \n                Implements\n            \n            \n                            IAttachment\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                key\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        key\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Unique key used for the file.'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/applicant/dto/update-applicant-state.input.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Name of the attachment file.'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/applicant/dto/update-applicant-state.input.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Url for the attachment file.'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/applicant/dto/update-applicant-state.input.ts:48\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { InputType, Field } from '@nestjs/graphql';\nimport {\n  IsArray,\n  IsEnum,\n  IsNotEmpty,\n  IsString,\n  ValidateNested,\n} from 'class-validator';\nimport { ApplicationStates } from '../enums/application-states.enum';\nimport { IAttachment } from '../entities/applicant.entity';\nimport { Type } from 'class-transformer';\n\n/**\n * graphql input scheme\n */\n@InputType()\nexport class UpdateApplicantStateInput {\n  @Field(() => String)\n  @IsString()\n  id: string;\n\n  @Field(() => String)\n  @IsString()\n  notes: string;\n\n  @Field(() => [AttachmentSubmit])\n  @ValidateNested()\n  @IsArray()\n  @Type(() => AttachmentSubmit)\n  documents: AttachmentSubmit[];\n\n  @Field(() => ApplicationStates)\n  @IsEnum(ApplicationStates)\n  type: ApplicationStates;\n}\n\n/**\n * graphql input scheme\n */\n@InputType()\nclass AttachmentSubmit implements IAttachment {\n  @Field(() => String, { description: 'Name of the attachment file.' })\n  @IsString()\n  name: string;\n\n  @Field(() => String, { description: 'Url for the attachment file.' })\n  @IsString()\n  url: string;\n\n  @Field(() => String, { description: 'Unique key used for the file.' })\n  @IsString()\n  key: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthCode.html":{"url":"classes/AuthCode.html","title":"class - AuthCode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthCode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth-code/entities/auth-code.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                Authorization code management for users\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                _id\n                            \n                            \n                                    \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                    \n                                permissions\n                            \n                            \n                                    \n                                    \n                                token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth-code/entities/auth-code.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@Prop({expires: 60})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth-code/entities/auth-code.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth-code/entities/auth-code.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth-code/entities/auth-code.entity.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ObjectType, Field, ID } from '@nestjs/graphql';\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\n/**\n * Authorization code management for users\n */\n@Schema({ timestamps: { createdAt: true } })\n@ObjectType()\nexport class AuthCode {\n  @Field(() => ID)\n  _id: string;\n\n  @Field(() => String)\n  @Prop({ required: true })\n  token: string;\n\n  @Field(() => [String])\n  @Prop({ required: true })\n  permissions: string[];\n\n  @Field(() => Date, { nullable: true })\n  @Prop({ expires: 60 })\n  createdAt: Date;\n}\n/**\n * @ignore\n */\nexport const AuthCodeSchema = SchemaFactory.createForClass(AuthCode);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthCodeModule.html":{"url":"modules/AuthCodeModule.html","title":"module - AuthCodeModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthCodeModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthCodeModule\n\n\n\ncluster_AuthCodeModule_imports\n\n\n\ncluster_AuthCodeModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAuthCodeModule\n\nAuthCodeModule\n\nAuthCodeModule -->\n\nAuthModule->AuthCodeModule\n\n\n\n\n\nAuthCodeService\n\nAuthCodeService\n\nAuthCodeModule -->\n\nAuthCodeService->AuthCodeModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth-code/auth-code.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthCodeService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthCodeService } from './auth-code.service';\nimport { AuthCodeResolver } from './auth-code.resolver';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { AuthCode, AuthCodeSchema } from './entities/auth-code.entity';\nimport { AuthModule } from 'src/auth/auth.module';\n\n@Module({\n  imports: [\n    AuthModule,\n    MongooseModule.forFeature([{ name: AuthCode.name, schema: AuthCodeSchema }])\n  ],\n  providers: [AuthCodeResolver, AuthCodeService]\n})\nexport class AuthCodeModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthCodeService.html":{"url":"injectables/AuthCodeService.html","title":"injectable - AuthCodeService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthCodeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth-code/auth-code.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authCodeModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/auth-code/auth-code.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authCodeModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(_user: AuthUser, jwt: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth-code/auth-code.service.ts:20\n                        \n                    \n\n\n            \n                \n                        token jwt for account\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _user\n                                            \n                                                            AuthUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                jwt\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth-code/auth-code.service.ts:35\n                        \n                    \n\n\n            \n                \n                        find auth code for account by id\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  NotFoundException,\n  InternalServerErrorException,\n} from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { AuthUser } from 'src/auth/types/auth-user';\nimport { AuthCode } from './entities/auth-code.entity';\nimport { Model } from 'mongoose';\nimport { getPermissionList } from 'src/auth/enums/permissions.enum';\n@Injectable()\nexport class AuthCodeService {\n  constructor(\n    @InjectModel(AuthCode.name) private readonly authCodeModel: Model,\n  ) {}\n\n  /**\n   * token jwt for account\n   */\n  async create(_user: AuthUser, jwt: string): Promise {\n    const createdCode = await this.authCodeModel.create({\n      token: jwt,\n      permissions: getPermissionList(_user),\n    });\n    if (!createdCode)\n      throw new InternalServerErrorException(\n        'Failed due to unexpected exception',\n      );\n    return createdCode;\n  }\n\n  /**\n   * find auth code for account by id\n   */\n  async findOne(id: string): Promise {\n    const code = await this.authCodeModel.findById(id).lean();\n    if (!code) throw new NotFoundException('The code has expired');\n    return code;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/auth/guards/jwt-auth.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    main function to protect many request by user logged\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                            \n                                    Private\n                                extractTokenFromHeader\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/guards/jwt-auth.guard.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/guards/jwt-auth.guard.ts:18\n                        \n                    \n\n\n            \n                \n                        get user account by token in header\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        extractTokenFromHeader\n                        \n                    \n                \n            \n            \n                \n                        \n                    extractTokenFromHeader(request: Request)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/guards/jwt-auth.guard.ts:33\n                        \n                    \n\n\n            \n                \n                        extract token from header\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | undefined\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  Injectable,\n  CanActivate,\n  ExecutionContext,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { AuthService } from '../auth.service';\n/**\n * main function to protect many request by user logged\n */\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  constructor(private readonly authService: AuthService) {}\n\n  /**\n   * get user account by token in header\n   */\n  async canActivate(context: ExecutionContext): Promise {\n    const request = context.switchToHttp().getRequest();\n    const token = this.extractTokenFromHeader(request);\n    if (!token) throw new UnauthorizedException();\n    const user = await this.authService.exchangeToken(token);\n    if (!user) throw new UnauthorizedException();\n    const rol = await this.authService.getRol(user.rol);\n    request.user = user;\n    request.token = token;\n    request.rol = rol;\n    return request;\n  }\n  /**\n   * extract token from header\n   */\n  private extractTokenFromHeader(request: Request): string | undefined {\n    const [type, token] = request.headers['authorization']?.split(' ') ?? [];\n    return type === 'Bearer' ? token : undefined;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_imports\n\n\n\n\nLoggerModule\n\nLoggerModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nLoggerModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            LoggerModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module, forwardRef } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { AuthController } from './auth.controller';\nimport { UsersModule } from 'src/users/users.module';\nimport { LoggerModule } from 'src/logger/logger.module';\n\n@Module({\n  imports: [forwardRef(() => UsersModule), LoggerModule],\n  controllers: [AuthController],\n  providers: [AuthService],\n  exports: [AuthService],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                defaultUserPassword\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createAccountWithDefaultPassword\n                            \n                            \n                                    Async\n                                deleteUser\n                            \n                            \n                                    Async\n                                exchangeToken\n                            \n                            \n                                    Async\n                                getRol\n                            \n                            \n                                    Async\n                                updatePassword\n                            \n                            \n                                    Async\n                                validateToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService, logger: AppLogger)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    AppLogger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createAccountWithDefaultPassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    createAccountWithDefaultPassword(email: string, rol: ValidRoles)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:68\n                        \n                    \n\n\n            \n                \n                        create default account with generic password\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                rol\n                                            \n                                                            ValidRoles\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteUser(uid: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:96\n                        \n                    \n\n\n            \n                \n                        delete account in firebase by uid\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                uid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        exchangeToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    exchangeToken(idToken: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:42\n                        \n                    \n\n\n            \n                \n                        get account user by login token firebase\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                idToken\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getRol\n                        \n                    \n                \n            \n            \n                \n                        \n                    getRol(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:103\n                        \n                    \n\n\n            \n                \n                        find the app rol of an account\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updatePassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    updatePassword(uid: string, newPassword: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:87\n                        \n                    \n\n\n            \n                \n                        update account password in firebase\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                uid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                newPassword\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validateToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateToken(idToken: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:27\n                        \n                    \n\n\n            \n                \n                        validate login token in firebase\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                idToken\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        defaultUserPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'oM4X74g11zhH4I7iorH8en91D9VlcTBI'\n                    \n                \n                    \n                        \n                                Defined in src/auth/auth.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import * as admin from 'firebase-admin';\nimport * as serviceAccount from 'config/firebase/config.json';\nimport { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { User } from 'src/users/entities/user.entity';\nimport { UsersService } from 'src/users/users.service';\nimport { AuthUser } from 'src/auth/types/auth-user';\nimport { AppLogger } from 'src/logger/app-logger';\nimport { ValidRoles } from './enums/valid-roles.enum';\n@Injectable()\nexport class AuthService {\n  private readonly defaultUserPassword: string =\n    'oM4X74g11zhH4I7iorH8en91D9VlcTBI';\n\n  constructor(\n    private readonly usersService: UsersService,\n    private readonly logger: AppLogger,\n  ) {\n    logger.setContext(AuthService.name);\n    admin.initializeApp({\n      credential: admin.credential.cert(serviceAccount as admin.ServiceAccount),\n    });\n  }\n\n  /**\n   * validate login token in firebase\n   */\n  async validateToken(idToken: string) {\n    try {\n      const decodedToken = await admin.auth().verifyIdToken(idToken);\n      return decodedToken;\n    } catch (ex) {\n      this.logger.error(\n        `Got an invalid or expired token ${idToken} with exception: ${ex}`,\n      );\n      throw new UnauthorizedException('Got an expired or invalid token');\n    }\n  }\n\n  /**\n   * get account user by login token firebase\n   */\n  async exchangeToken(idToken: string): Promise {\n    try {\n      const decodedToken = await admin.auth().verifyIdToken(idToken);\n      const user = await this.usersService.tryFindOne({\n        uid: decodedToken.uid,\n      });\n      if (user) return user;\n      const userRecord = await admin.auth().getUser(decodedToken.uid);\n      let authUser: AuthUser = {\n        uid: userRecord.uid,\n        fullName: userRecord.displayName,\n        email: userRecord.email,\n      };\n      return authUser;\n    } catch (error) {\n      this.logger.error(\n        `Error while verifying Firebase ID token: ${idToken}`,\n        error,\n      );\n      throw new Error('Failed to authorize request');\n    }\n  }\n\n  /**\n   * create default account with generic password\n   */\n  async createAccountWithDefaultPassword(email: string, rol: ValidRoles) {\n    const user = await admin.auth().createUser({\n      email: email,\n      password: this.defaultUserPassword,\n    });\n    const rolDoc = await this.usersService.findRolByType(rol);\n    const createdUser = await this.usersService.create({\n      uid: user.uid,\n      fullName: '',\n      email: email,\n      rol: rolDoc._id,\n      passwordSet: null,\n    });\n    return createdUser;\n  }\n\n  /**\n   * update account password in firebase\n   */\n  async updatePassword(uid: string, newPassword: string) {\n    return await admin.auth().updateUser(uid, {\n      password: newPassword,\n    });\n  }\n\n  /**\n   * delete account in firebase by uid\n   */\n  async deleteUser(uid: string) {\n    return await admin.auth().deleteUser(uid);\n  }\n\n  /**\n   * find the app rol of an account\n   */\n  async getRol(id: string) {\n    return this.usersService.findRolByID(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AwsService.html":{"url":"injectables/AwsService.html","title":"injectable - AwsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AwsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/storage/aws/aws.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                config\n                            \n                            \n                                    Private\n                                    Readonly\n                                defaultBucketName\n                            \n                            \n                                    Private\n                                    Readonly\n                                publicConfig\n                            \n                            \n                                    Private\n                                    Readonly\n                                S3Uri\n                            \n                            \n                                    Private\n                                    Readonly\n                                tempBucketName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createPresignedUrl\n                            \n                            \n                                    Private\n                                getFileLocation\n                            \n                            \n                                    Async\n                                getPresignedUrl\n                            \n                            \n                                    Async\n                                uploadTemporaryFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/storage/aws/aws.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createPresignedUrl\n                        \n                    \n                \n            \n            \n                \n                        \n                    createPresignedUrl(key: string, publicFile?: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/storage/aws/aws.service.ts:57\n                        \n                    \n\n\n            \n                \n                        create url to download file\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                publicFile\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getFileLocation\n                        \n                    \n                \n            \n            \n                \n                        \n                    getFileLocation(bucketName: string, fileKey: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/storage/aws/aws.service.ts:48\n                        \n                    \n\n\n            \n                \n                        get rute of file location\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                bucketName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                fileKey\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getPresignedUrl\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPresignedUrl(key: string, publicFile?: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/storage/aws/aws.service.ts:77\n                        \n                    \n\n\n            \n                \n                        get url to download file\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                publicFile\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        uploadTemporaryFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    uploadTemporaryFile(key: string, data: Buffer)\n                \n            \n\n\n                    \n                        \n                            Defined in src/storage/aws/aws.service.ts:97\n                        \n                    \n\n\n            \n                \n                        upload file\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                        Buffer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :     S3ClientConfig\n\n                    \n                \n                    \n                        \n                                Defined in src/storage/aws/aws.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        defaultBucketName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/storage/aws/aws.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        publicConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     S3ClientConfig\n\n                    \n                \n                    \n                        \n                                Defined in src/storage/aws/aws.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        S3Uri\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/storage/aws/aws.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        tempBucketName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/storage/aws/aws.service.ts:19\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, InternalServerErrorException } from '@nestjs/common';\nimport {\n  PutObjectCommand,\n  GetObjectCommand,\n  S3Client,\n  S3ClientConfig,\n} from '@aws-sdk/client-s3';\nimport { getSignedUrl } from '@aws-sdk/s3-request-presigner';\nimport { StorageService } from '../models/storage-service';\nimport { AppConfiguration } from 'config/app.config';\nimport { ConfigService } from '@nestjs/config';\n\n@Injectable()\nexport class AwsService implements StorageService {\n  private readonly config: S3ClientConfig;\n  private readonly S3Uri: string;\n  private readonly publicConfig: S3ClientConfig;\n  private readonly defaultBucketName: string;\n  private readonly tempBucketName: string;\n\n  constructor(private readonly configService: ConfigService) {\n    const region = this.configService.get('awsS3Region');\n    this.defaultBucketName = this.configService.get('awsS3BucketName');\n    this.tempBucketName = this.configService.get('awsS3TempBucketName');\n    this.S3Uri = this.configService.get('awsS3Uri');\n    this.config = {\n      region,\n      endpoint: this.S3Uri,\n      forcePathStyle: true,\n      credentials: {\n        accessKeyId: this.configService.get('awsS3Key'),\n        secretAccessKey: this.configService.get('awsS3Access'),\n      },\n    };\n    this.publicConfig = {\n      region,\n      endpoint: this.configService.get('awsS3PublicUri'),\n      forcePathStyle: true,\n      credentials: {\n        accessKeyId: this.configService.get('awsS3Key'),\n        secretAccessKey: this.configService.get('awsS3Access'),\n      },\n    };\n  }\n  /**\n   * get rute of file location\n   */\n  private getFileLocation(bucketName: string, fileKey: string): string {\n    return `${this.configService.get(\n      'awsS3PublicUri',\n    )}/${bucketName}/${fileKey}`;\n  }\n\n  /**\n   * create url to download file\n   */\n  async createPresignedUrl(key: string, publicFile?: boolean): Promise {\n    const client = new S3Client(publicFile ? this.publicConfig : this.config);\n    const config = {\n      Bucket: this.defaultBucketName,\n      Key: key,\n    };\n    const command = new PutObjectCommand(config);\n    try {\n      return await getSignedUrl(client, command, { expiresIn: 60 * 3 });\n    } catch (error) {\n      console.error(error);\n      throw new InternalServerErrorException(\n        'Failed to create presigned Url for PUT request',\n      );\n    }\n  }\n\n  /**\n   * get url to download file\n   */\n  async getPresignedUrl(key: string, publicFile?: boolean) {\n    const client = new S3Client(publicFile ? this.publicConfig : this.config);\n    const config = {\n      Bucket: this.defaultBucketName,\n      Key: key,\n    };\n    const command = new GetObjectCommand(config);\n    try {\n      return await getSignedUrl(client, command, { expiresIn: 60 * 60 * 24 });\n    } catch (error) {\n      console.error(error);\n      throw new InternalServerErrorException(\n        'Failed to create presigned Url for GET request',\n      );\n    }\n  }\n\n  /**\n   * upload file\n   */\n  async uploadTemporaryFile(key: string, data: Buffer) {\n    const client = new S3Client(this.publicConfig);\n    const command = new PutObjectCommand({\n      Bucket: 'files',\n      Key: key,\n      Body: data,\n    });\n    try {\n      const result = await client.send(command);\n      return this.getFileLocation('files', key);\n    } catch (error) {\n      console.error(error);\n      throw new InternalServerErrorException(\n        'Failed to create presigned Url for PUT request',\n      );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Business.html":{"url":"classes/Business.html","title":"class - Business","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Business\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/business/entities/business.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                Business doc of entrepreneurs\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                _id\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                    \n                                entrepreneurs\n                            \n                            \n                                    \n                                    \n                                item\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/business/entities/business.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Date of entity creation.'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/business/entities/business.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'If set, The date the entity was deleted.', nullable: true})@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/business/entities/business.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        entrepreneurs\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EntrepreneurRelationship[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'List of entrepreneurs linked to the business.'})@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/business/entities/business.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        item\n                        \n                    \n                \n            \n                \n                    \n                        Type :     JSON\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Additional dynamic entity properties.'})@Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/business/entities/business.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Date of last entity update.'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/business/entities/business.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'If set, Details from user who last updated the entity.', nullable: true})@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/business/entities/business.entity.ts:38\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ObjectType, Field, ID } from '@nestjs/graphql';\nimport { Prop, SchemaFactory, Schema } from '@nestjs/mongoose';\nimport GraphQLJSON from 'graphql-type-json';\nimport { User } from 'src/users/entities/user.entity';\n/**\n * Business doc of entrepreneurs\n */\n@Schema()\n@ObjectType()\nexport class Business {\n  @Field(() => ID)\n  _id: string;\n\n  @Field(() => GraphQLJSON, {\n    description: 'Additional dynamic entity properties.',\n  })\n  @Prop({ type: Object })\n  item: JSON;\n\n  @Field(() => GraphQLJSON, {\n    description: 'List of entrepreneurs linked to the business.',\n  })\n  @Prop()\n  entrepreneurs: EntrepreneurRelationship[];\n\n  @Field(() => Date, {\n    description: 'If set, The date the entity was deleted.',\n    nullable: true,\n  })\n  @Prop()\n  deletedAt: Date;\n\n  @Field(() => User, {\n    description: 'If set, Details from user who last updated the entity.',\n    nullable: true,\n  })\n  @Prop()\n  updatedBy: string;\n\n  @Field(() => Date, { description: 'Date of entity creation.' })\n  createdAt: Date;\n\n  @Field(() => Date, { description: 'Date of last entity update.' })\n  updatedAt: Date;\n}\n/**\n * @ignore\n */\nexport const BusinessSchema = SchemaFactory.createForClass(Business);\n/**\n * Relationship between business doc and entrepreneurs doc\n */\n@Schema()\n@ObjectType()\nexport class EntrepreneurRelationship {\n  @Field(() => String)\n  @Prop()\n  _id: string;\n\n  @Field(() => GraphQLJSON)\n  @Prop({ type: Object })\n  item: JSON;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BusinessModule.html":{"url":"modules/BusinessModule.html","title":"module - BusinessModule","body":"\n                   \n\n\n\n\n    Modules\n    BusinessModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_BusinessModule\n\n\n\ncluster_BusinessModule_providers\n\n\n\ncluster_BusinessModule_exports\n\n\n\ncluster_BusinessModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nBusinessModule\n\nBusinessModule\n\nBusinessModule -->\n\nAuthModule->BusinessModule\n\n\n\n\n\nDownloadsModule\n\nDownloadsModule\n\nBusinessModule -->\n\nDownloadsModule->BusinessModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nBusinessModule -->\n\nUsersModule->BusinessModule\n\n\n\n\n\nBusinessService \n\nBusinessService \n\nBusinessService  -->\n\nBusinessModule->BusinessService \n\n\n\n\n\nBusinessService\n\nBusinessService\n\nBusinessModule -->\n\nBusinessService->BusinessModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/business/business.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            BusinessService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            DownloadsModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            BusinessService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module, forwardRef } from '@nestjs/common';\nimport { BusinessService } from './business.service';\nimport { BusinessResolver } from './business.resolver';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { AuthModule } from 'src/auth/auth.module';\nimport { UsersModule } from 'src/users/users.module';\nimport { Business, BusinessSchema } from './entities/business.entity';\nimport { EntrepreneurModule } from 'src/entrepreneur/entrepreneur.module';\nimport { DownloadsModule } from 'src/downloads/downloads.module';\nimport { TableModule } from 'src/table/table.module';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([{ name: Business.name, schema: BusinessSchema }]),\n    AuthModule,\n    UsersModule,\n    forwardRef(() => EntrepreneurModule),\n    DownloadsModule,\n    forwardRef(() => TableModule),\n  ],\n  providers: [BusinessResolver, BusinessService],\n  exports: [BusinessService],\n})\nexport class BusinessModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BusinessRelationship.html":{"url":"classes/BusinessRelationship.html","title":"class - BusinessRelationship","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BusinessRelationship\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/entrepreneur/entities/entrepreneur.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                Relationship between entrepreneur and business\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                _id\n                            \n                            \n                                    \n                                    \n                                item\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entrepreneur/entities/entrepreneur.entity.ts:88\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        item\n                        \n                    \n                \n            \n                \n                    \n                        Type :     JSON\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entrepreneur/entities/entrepreneur.entity.ts:92\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ObjectType, Field, ID } from '@nestjs/graphql';\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { User } from 'src/users/entities/user.entity';\nimport GraphQLJSON from 'graphql-type-json';\nimport { PhaseRelationship } from 'src/startup/entities/startup.entity';\n/**\n * Entrepreneur docs\n */\n@Schema({ timestamps: true })\n@ObjectType()\nexport class Entrepreneur {\n  @Field(() => ID)\n  _id: string;\n\n  @Field(() => [StartupRelationship])\n  @Prop({ default: [] })\n  startups: StartupRelationship[];\n\n  @Field(() => [BusinessRelationship])\n  @Prop({ default: [] })\n  businesses: BusinessRelationship[];\n\n  @Field(() => User, { nullable: true })\n  @Prop({ default: '' })\n  accountId: string;\n\n  @Field(() => GraphQLJSON)\n  @Prop({ type: Object })\n  item: JSON;\n\n  @Field(() => Date, {\n    description: 'If set, The date the entity was deleted.',\n    nullable: true,\n  })\n  @Prop()\n  deletedAt: Date;\n\n  @Field(() => User, {\n    description: 'If set, Details from user who last updated the entity.',\n    nullable: true,\n  })\n  @Prop()\n  updatedBy: string;\n\n  @Field(() => Date, { description: 'Date of entity creation.' })\n  createdAt: Date;\n\n  @Field(() => Date, { description: 'Date of last entity update.' })\n  updatedAt: Date;\n\n  @Field(() => Boolean, { nullable: true })\n  isProspect: boolean;\n}\n/**\n * @ignore\n */\nexport const EntrepreneurSchema = SchemaFactory.createForClass(Entrepreneur);\n/**\n * Relationship between entrepreneur and startup\n */\n@Schema()\n@ObjectType()\nexport class StartupRelationship {\n  @Field(() => String)\n  @Prop()\n  _id: string;\n\n  @Field(() => GraphQLJSON)\n  @Prop({ type: Object })\n  item: JSON;\n\n  @Field(() => [PhaseRelationship], { defaultValue: [] })\n  @Prop({ default: [] })\n  phases: PhaseRelationship[];\n\n  @Field(() => String)\n  @Prop()\n  state: string;\n}\n/**\n * Relationship between entrepreneur and business\n */\n@Schema()\n@ObjectType()\nexport class BusinessRelationship {\n  @Field(() => String)\n  @Prop()\n  _id: string;\n\n  @Field(() => GraphQLJSON)\n  @Prop({ type: Object })\n  item: JSON;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BusinessService.html":{"url":"injectables/BusinessService.html","title":"injectable - BusinessService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BusinessService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/business/business.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                createDocument\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                downloadByRequest\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findMany\n                            \n                            \n                                    Async\n                                findManyIdsByRequest\n                            \n                            \n                                    Async\n                                findManyPage\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                getDocument\n                            \n                            \n                                    Async\n                                linkBusinessesAndEntrepreneurs\n                            \n                            \n                                    Async\n                                linkWithEntrepreneurs\n                            \n                            \n                                    Async\n                                linkWithEntrepreneursByRequest\n                            \n                            \n                                    Async\n                                update\n                            \n                            \n                                    Async\n                                updateDocument\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(businessModel: Model, entrepreneurService: EntrepreneurService, tableConfigService: TableConfigService, downloadService: DownloadsService)\n                    \n                \n                        \n                            \n                                Defined in src/business/business.service.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        businessModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        entrepreneurService\n                                                  \n                                                        \n                                                                        EntrepreneurService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tableConfigService\n                                                  \n                                                        \n                                                                        TableConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        downloadService\n                                                  \n                                                        \n                                                                        DownloadsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(data: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/business/business.service.ts:145\n                        \n                    \n\n\n            \n                \n                        create doc business\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createDocument\n                        \n                    \n                \n            \n            \n                \n                        \n                    createDocument(submission: any, context?: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/business/business.service.ts:46\n                        \n                    \n\n\n            \n                \n                        create doc business, is only intended to be used by websocket.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                submission\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                context\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(ids: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/business/business.service.ts:226\n                        \n                    \n\n\n            \n                \n                        soft delete of many business\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ids\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        downloadByRequest\n                        \n                    \n                \n            \n            \n                \n                        \n                    downloadByRequest(undefined: DownloadRequestArgs, user: AuthUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/business/business.service.ts:240\n                        \n                    \n\n\n            \n                \n                        download table of business\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            DownloadRequestArgs\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            AuthUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/business/business.service.ts:76\n                        \n                    \n\n\n            \n                \n                        find all doc business.\n\n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findMany\n                        \n                    \n                \n            \n            \n                \n                        \n                    findMany(ids: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/business/business.service.ts:84\n                        \n                    \n\n\n            \n                \n                        find many doc business by id\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ids\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findManyIdsByRequest\n                        \n                    \n                \n            \n            \n                \n                        \n                    findManyIdsByRequest(request: PageRequest)\n                \n            \n\n\n                    \n                        \n                            Defined in src/business/business.service.ts:117\n                        \n                    \n\n\n            \n                \n                        find doc business paginated by filters\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        PageRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findManyPage\n                        \n                    \n                \n            \n            \n                \n                        \n                    findManyPage(request: PageRequest, user: AuthUser, outputProjection?: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/business/business.service.ts:94\n                        \n                    \n\n\n            \n                \n                        find doc business paginated\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        PageRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            AuthUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                outputProjection\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/business/business.service.ts:135\n                        \n                    \n\n\n            \n                \n                        find doc business by id\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getDocument\n                        \n                    \n                \n            \n            \n                \n                        \n                    getDocument(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/business/business.service.ts:38\n                        \n                    \n\n\n            \n                \n                        find doc business, is only intended to be used by websocket.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        linkBusinessesAndEntrepreneurs\n                        \n                    \n                \n            \n            \n                \n                        \n                    linkBusinessesAndEntrepreneurs(ids: string[], entrepreneurs: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/business/business.service.ts:161\n                        \n                    \n\n\n            \n                \n                        link list of business to entrepreneurs\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ids\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entrepreneurs\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        linkWithEntrepreneurs\n                        \n                    \n                \n            \n            \n                \n                        \n                    linkWithEntrepreneurs(ids: string[], entrepreneurRelationships: EntrepreneurRelationship[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/business/business.service.ts:199\n                        \n                    \n\n\n            \n                \n                        only link list of entrepreneurs in business only by property\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ids\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entrepreneurRelationships\n                                            \n                                                        EntrepreneurRelationship[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        linkWithEntrepreneursByRequest\n                        \n                    \n                \n            \n            \n                \n                        \n                    linkWithEntrepreneursByRequest(undefined: LinkWithTargetsByRequestArgs)\n                \n            \n\n\n                    \n                        \n                            Defined in src/business/business.service.ts:215\n                        \n                    \n\n\n            \n                \n                        search business request table and link entrepreneurs to that business\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            LinkWithTargetsByRequestArgs\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, data: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/business/business.service.ts:153\n                        \n                    \n\n\n            \n                \n                        update doc business\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateDocument\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateDocument(id: string, submission: any, context: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/business/business.service.ts:68\n                        \n                    \n\n\n            \n                \n                        update doc business, is only intended to be used by websocket.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                submission\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                context\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Inject,\n  Injectable,\n  InternalServerErrorException,\n  NotFoundException,\n  forwardRef,\n} from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model, Types } from 'mongoose';\nimport { UpdateResultPayload } from 'src/shared/models/update-result';\nimport { Business, EntrepreneurRelationship } from './entities/business.entity';\nimport { EntrepreneurService } from '../entrepreneur/entrepreneur.service';\nimport { PageRequest } from 'src/shared/models/page-request';\nimport { AggregateBuildOptions } from 'src/shared/models/aggregate-build-options';\nimport { PaginatedResult } from 'src/shared/models/paginated-result';\nimport { requestUtilities } from 'src/shared/utilities/request.utilities';\nimport { LinkWithTargetsByRequestArgs } from 'src/shared/args/link-with-targets-by-request.args';\nimport { AuthUser } from 'src/auth/types/auth-user';\nimport { DownloadRequestArgs } from 'src/shared/models/download-request.args';\nimport { DownloadResult } from 'src/shared/models/download-result';\nimport { excelUtilities } from 'src/shared/utilities/excel.utilities';\nimport { TableConfigService } from 'src/table/table-config/table-config.service';\nimport { DownloadsService } from 'src/downloads/downloads.service';\n\n@Injectable()\nexport class BusinessService {\n  constructor(\n    @InjectModel(Business.name) private readonly businessModel: Model,\n    @Inject(forwardRef(() => EntrepreneurService))\n    private readonly entrepreneurService: EntrepreneurService,\n    private readonly tableConfigService: TableConfigService,\n    private readonly downloadService: DownloadsService,\n  ) {}\n\n  /**\n   * find doc business, is only intended to be used by websocket.\n   */\n  async getDocument(id: string) {\n    const document = await this.findOne(id);\n    return document;\n  }\n\n  /**\n   * create doc business, is only intended to be used by websocket.\n   */\n  async createDocument(submission: any, context?: any) {\n    const data = {\n      item: submission,\n    };\n    const createdDocument = await this.create(data);\n    if (context && context.entrepreneur) {\n      const entrepreneur = context.entrepreneur;\n      const linkResult = await this.linkBusinessesAndEntrepreneurs(\n        [createdDocument._id],\n        [entrepreneur],\n      );\n      if (!linkResult.acknowledged)\n        throw new InternalServerErrorException(\n          'Failed to link entrepreneur with business',\n        );\n    }\n    return createdDocument;\n  }\n\n  /**\n   * update doc business, is only intended to be used by websocket.\n   */\n  async updateDocument(id: string, submission: any, context: any) {\n    const updatedDocument = await this.update(id, { item: submission });\n    return updatedDocument;\n  }\n\n  /**\n   * find all doc business.\n   */\n  async findAll(): Promise {\n    const businesses = await this.businessModel.find({ deletedAt: null });\n    return businesses;\n  }\n\n  /**\n   * find many doc business by id\n   */\n  async findMany(ids: string[]): Promise {\n    const businesses = await this.businessModel.find({\n      _id: { $in: ids },\n    });\n    return businesses;\n  }\n\n  /**\n   * find doc business paginated\n   */\n  async findManyPage(\n    request: PageRequest,\n    user: AuthUser,\n    outputProjection?: any,\n  ): Promise> {\n    // TODO Implement filtering by user if required\n    const options = new AggregateBuildOptions();\n    if (outputProjection) {\n      options.outputProjection = outputProjection;\n    }\n    const aggregationPipeline = requestUtilities.buildAggregationFromRequest(\n      request,\n      options,\n    );\n    const documents = await this.businessModel\n      .aggregate(aggregationPipeline)\n      .collation({ locale: 'en_US', strength: 2 });\n    return documents[0];\n  }\n\n  /**\n   * find doc business paginated by filters\n   */\n  async findManyIdsByRequest(request: PageRequest): Promise {\n    // TODO Implement filtering by user if required\n    const options = new AggregateBuildOptions();\n    options.paginated = false;\n    options.outputProjection = { $project: { _id: 1 } };\n    const aggregationPipeline = requestUtilities.buildAggregationFromRequest(\n      request,\n      options,\n    );\n    const documents = await this.businessModel\n      .aggregate(aggregationPipeline)\n      .collation({ locale: 'en_US', strength: 2 });\n    return documents.map((doc) => doc._id);\n  }\n\n  /**\n   * find doc business by id\n   */\n  async findOne(id: string): Promise {\n    const business = await this.businessModel.findById(id);\n    if (!business)\n      throw new NotFoundException(`Couldn't find business with id ${id}`);\n    return business;\n  }\n\n  /**\n   * create doc business\n   */\n  async create(data: Partial): Promise {\n    const createdBusiness = await this.businessModel.create(data);\n    return createdBusiness;\n  }\n\n  /**\n   * update doc business\n   */\n  async update(id: string, data: Partial): Promise {\n    await this.businessModel.updateOne({ _id: id }, data, { new: true }).lean();\n    return this.findOne(id);\n  }\n\n  /**\n   * link list of business to entrepreneurs\n   */\n  async linkBusinessesAndEntrepreneurs(\n    ids: string[],\n    entrepreneurs: string[],\n  ): Promise {\n    // Find businesses by ids\n    const businesses = await this.findMany(ids);\n\n    // Link entrepreneurs to businesses by given relationships\n    const businessesToLink = businesses.map((document) => {\n      return { _id: document._id, item: document.item };\n    });\n    const entrepreneurUpdateResult =\n      await this.entrepreneurService.linkWithBusinesses(\n        entrepreneurs,\n        businessesToLink,\n      );\n\n    if (!entrepreneurUpdateResult.acknowledged)\n      throw new InternalServerErrorException(\n        'Failed to create link between businesses and entrepreneurs',\n      );\n\n    // Find entrepreneurs\n    const entrepreneurDocuments =\n      await this.entrepreneurService.findMany(entrepreneurs);\n    const entrepreneurRelationships = entrepreneurDocuments.map((document) => {\n      return { _id: document._id, item: document.item };\n    });\n    const businessUpdateResult = await this.linkWithEntrepreneurs(\n      ids,\n      entrepreneurRelationships,\n    );\n    return businessUpdateResult;\n  }\n\n  /**\n   * only link list of entrepreneurs in business only by property\n   */\n  async linkWithEntrepreneurs(\n    ids: string[],\n    entrepreneurRelationships: EntrepreneurRelationship[],\n  ): Promise {\n    return this.businessModel\n      .updateMany(\n        { _id: { $in: ids } },\n        { $addToSet: { entrepreneurs: { $each: entrepreneurRelationships } } },\n        { new: true },\n      )\n      .lean();\n  }\n\n  /**\n   * search business request table and link entrepreneurs to that business\n   */\n  async linkWithEntrepreneursByRequest({\n    request,\n    targetIds,\n  }: LinkWithTargetsByRequestArgs) {\n    const businesses = await this.findManyIdsByRequest(request);\n    return await this.linkBusinessesAndEntrepreneurs(businesses, targetIds);\n  }\n\n  /**\n   * soft delete of many business\n   */\n  async delete(ids: string[]): Promise {\n    const updateResult = await this.businessModel.updateMany(\n      { _id: { $in: ids.map((id) => new Types.ObjectId(id)) } },\n      { deletedAt: Date.now() },\n    );\n    return {\n      ...updateResult,\n      upsertedId: updateResult.upsertedId?.toString(),\n    };\n  }\n\n  /**\n   * download table of business\n   */\n  async downloadByRequest(\n    { request, configId, format }: DownloadRequestArgs,\n    user: AuthUser,\n  ): Promise {\n    const config = await this.tableConfigService.findOne(configId);\n    const tableColumns = config.columns;\n    const outputProjection =\n      requestUtilities.getProjectionFromConfigTable(tableColumns);\n    const pageResult = await this.findManyPage(request, user, outputProjection);\n    const rows = excelUtilities.parseDocumentsToRows(\n      pageResult.documents,\n      tableColumns,\n    );\n    const columns = tableColumns.map((col) => {\n      return { header: col.label, width: col.label.length + 3 };\n    });\n    const data = (await excelUtilities.buildWorkbookBuffer(\n      columns,\n      rows,\n      format,\n    )) as Buffer;\n    const fileUrl = await this.downloadService.uploadTempFile(data, format);\n    return { url: fileUrl };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CloseFormSubscriptionArgs.html":{"url":"classes/CloseFormSubscriptionArgs.html","title":"class - CloseFormSubscriptionArgs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CloseFormSubscriptionArgs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/forms/form-subscription/args/close-form-subscription.args.ts\n        \n\n\n            \n                Description\n            \n            \n                graphql args input\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                doc\n                            \n                            \n                                    \n                                    \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        doc\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/forms/form-subscription/args/close-form-subscription.args.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/forms/form-subscription/args/close-form-subscription.args.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, ArgsType } from '@nestjs/graphql';\nimport { IsNotEmpty, IsOptional, IsString } from 'class-validator';\n/**\n * graphql args input\n */\n@ArgsType()\nexport class CloseFormSubscriptionArgs {\n  @Field(() => String)\n  @IsNotEmpty()\n  id: string;\n\n  @Field(() => String, { nullable: true })\n  @IsString()\n  @IsOptional()\n  doc?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ColumnGroup.html":{"url":"classes/ColumnGroup.html","title":"class - ColumnGroup","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ColumnGroup\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/table/table/entities/column-group.ts\n        \n\n\n            \n                Description\n            \n            \n                columns of tables\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                columns\n                            \n                            \n                                    \n                                key\n                            \n                            \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        columns\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TableColumn[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Configurable columns.'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/table/table/entities/column-group.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        key\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/table/table/entities/column-group.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/table/table/entities/column-group.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, ObjectType } from '@nestjs/graphql';\nimport GraphQLJSON from 'graphql-type-json';\nimport { TableColumn } from 'src/shared/models/table-column';\n/**\n * columns of tables\n */\n@ObjectType()\nexport class ColumnGroup {\n  @Field()\n  name: string;\n\n  @Field()\n  key: string;\n\n  @Field(() => GraphQLJSON, { description: 'Configurable columns.' })\n  columns: TableColumn[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConfigEvaluation.html":{"url":"classes/ConfigEvaluation.html","title":"class - ConfigEvaluation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConfigEvaluation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/evaluations/config-evaluations/entities/config-evaluation.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                Config of evaluations in app, date, etc\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                _id\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                endAt\n                            \n                            \n                                    \n                                    \n                                evaluated\n                            \n                            \n                                    \n                                    \n                                form\n                            \n                            \n                                    \n                                    \n                                isDeleted\n                            \n                            \n                                    \n                                    \n                                phase\n                            \n                            \n                                    \n                                    \n                                reviewer\n                            \n                            \n                                    \n                                    \n                                startAt\n                            \n                            \n                                    \n                                    \n                                title\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/evaluations/config-evaluations/entities/config-evaluation.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Date of entity creation.'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/evaluations/config-evaluations/entities/config-evaluation.entity.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/evaluations/config-evaluations/entities/config-evaluation.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        endAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/evaluations/config-evaluations/entities/config-evaluation.entity.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        evaluated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/evaluations/config-evaluations/entities/config-evaluation.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/evaluations/config-evaluations/entities/config-evaluation.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/evaluations/config-evaluations/entities/config-evaluation.entity.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        phase\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/evaluations/config-evaluations/entities/config-evaluation.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        reviewer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/evaluations/config-evaluations/entities/config-evaluation.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        startAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/evaluations/config-evaluations/entities/config-evaluation.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/evaluations/config-evaluations/entities/config-evaluation.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Date of last entity update.'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/evaluations/config-evaluations/entities/config-evaluation.entity.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'If set, Details from user who last updated the entity.', nullable: true})@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/evaluations/config-evaluations/entities/config-evaluation.entity.ts:52\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ObjectType, Field, ID } from '@nestjs/graphql';\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { User } from 'src/users/entities/user.entity';\n/**\n * Config of evaluations in app, date, etc\n */\n@Schema({ timestamps: true })\n@ObjectType()\nexport class ConfigEvaluation {\n  @Field(() => ID)\n  _id: string;\n\n  @Field(() => String)\n  @Prop()\n  title: string;\n\n  @Field(() => String, {\n    nullable: true,\n  })\n  @Prop()\n  description: string;\n\n  @Field(() => String)\n  @Prop()\n  evaluated: string;\n\n  @Field(() => String)\n  @Prop()\n  reviewer: string;\n\n  @Field(() => String)\n  @Prop()\n  form: string;\n\n  @Field(() => String)\n  @Prop()\n  phase: string;\n\n  @Field(() => Date)\n  @Prop({ required: true })\n  startAt: Date;\n\n  @Field(() => Date)\n  @Prop({ required: true })\n  endAt: Date;\n\n  @Field(() => User, {\n    description: 'If set, Details from user who last updated the entity.',\n    nullable: true,\n  })\n  @Prop()\n  updatedBy: string;\n\n  @Field(() => Date, { description: 'Date of entity creation.' })\n  createdAt: Date;\n\n  @Field(() => Date, { description: 'Date of last entity update.' })\n  updatedAt: Date;\n\n  @Field(() => Boolean)\n  @Prop({ default: false })\n  isDeleted: boolean;\n}\n/**\n * @ignore\n */\nexport const ConfigEvaluationSchema =\n  SchemaFactory.createForClass(ConfigEvaluation);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ConfigEvaluationsModule.html":{"url":"modules/ConfigEvaluationsModule.html","title":"module - ConfigEvaluationsModule","body":"\n                   \n\n\n\n\n    Modules\n    ConfigEvaluationsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ConfigEvaluationsModule\n\n\n\ncluster_ConfigEvaluationsModule_imports\n\n\n\ncluster_ConfigEvaluationsModule_exports\n\n\n\ncluster_ConfigEvaluationsModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nConfigEvaluationsModule\n\nConfigEvaluationsModule\n\nConfigEvaluationsModule -->\n\nAuthModule->ConfigEvaluationsModule\n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nConfigEvaluationsModule -->\n\nLoggerModule->ConfigEvaluationsModule\n\n\n\n\n\nConfigEvaluationsService \n\nConfigEvaluationsService \n\nConfigEvaluationsService  -->\n\nConfigEvaluationsModule->ConfigEvaluationsService \n\n\n\n\n\nConfigEvaluationsService\n\nConfigEvaluationsService\n\nConfigEvaluationsModule -->\n\nConfigEvaluationsService->ConfigEvaluationsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/evaluations/config-evaluations/config-evaluations.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ConfigEvaluationsService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            LoggerModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ConfigEvaluationsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigEvaluationsService } from './config-evaluations.service';\nimport { ConfigEvaluationsResolver } from './config-evaluations.resolver';\nimport { LoggerModule } from 'src/logger/logger.module';\nimport { AuthModule } from 'src/auth/auth.module';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport {\n  ConfigEvaluation,\n  ConfigEvaluationSchema,\n} from './entities/config-evaluation.entity';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      { name: ConfigEvaluation.name, schema: ConfigEvaluationSchema },\n    ]),\n    AuthModule,\n    LoggerModule,\n  ],\n  providers: [ConfigEvaluationsResolver, ConfigEvaluationsService],\n  exports: [ConfigEvaluationsService],\n})\nexport class ConfigEvaluationsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConfigEvaluationsService.html":{"url":"injectables/ConfigEvaluationsService.html","title":"injectable - ConfigEvaluationsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ConfigEvaluationsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/evaluations/config-evaluations/config-evaluations.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findByPhase\n                            \n                            \n                                findOne\n                            \n                            \n                                findToday\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configEvaluationModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/evaluations/config-evaluations/config-evaluations.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configEvaluationModel\n                                                  \n                                                        \n                                                                    Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createConfigEvaluationInput: CreateConfigEvaluationInput)\n                \n            \n\n\n                    \n                        \n                            Defined in src/evaluations/config-evaluations/config-evaluations.service.ts:20\n                        \n                    \n\n\n            \n                \n                        create config evaluation\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createConfigEvaluationInput\n                                            \n                                                            CreateConfigEvaluationInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll(user?: AuthUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/evaluations/config-evaluations/config-evaluations.service.ts:27\n                        \n                    \n\n\n            \n                \n                        find all config evaluation by user\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            AuthUser\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findByPhase\n                        \n                    \n                \n            \n            \n                \nfindByPhase(phase: string, user: AuthUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/evaluations/config-evaluations/config-evaluations.service.ts:45\n                        \n                    \n\n\n            \n                \n                        config evaluation by batch id\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                phase\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            AuthUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/evaluations/config-evaluations/config-evaluations.service.ts:52\n                        \n                    \n\n\n            \n                \n                        find config evaluation by id\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findToday\n                        \n                    \n                \n            \n            \n                \nfindToday(rol: ValidRoles)\n                \n            \n\n\n                    \n                        \n                            Defined in src/evaluations/config-evaluations/config-evaluations.service.ts:59\n                        \n                    \n\n\n            \n                \n                        find evaluations that need to be done today\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                rol\n                                            \n                                                            ValidRoles\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/evaluations/config-evaluations/config-evaluations.service.ts:99\n                        \n                    \n\n\n            \n                \n                        soft delete config evaluation by id\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateConfigEvaluationInput: UpdateConfigEvaluationInput)\n                \n            \n\n\n                    \n                        \n                            Defined in src/evaluations/config-evaluations/config-evaluations.service.ts:81\n                        \n                    \n\n\n            \n                \n                        update config evaluation by id\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateConfigEvaluationInput\n                                            \n                                                            UpdateConfigEvaluationInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateConfigEvaluationInput } from './dto/create-config-evaluation.input';\nimport { UpdateConfigEvaluationInput } from './dto/update-config-evaluation.input';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { ConfigEvaluation } from './entities/config-evaluation.entity';\nimport { Model } from 'mongoose';\nimport { AuthUser } from 'src/auth/types/auth-user';\nimport { ValidRoles } from 'src/auth/enums/valid-roles.enum';\n\n@Injectable()\nexport class ConfigEvaluationsService {\n  constructor(\n    @InjectModel(ConfigEvaluation.name)\n    private readonly configEvaluationModel: Model,\n  ) {}\n\n  /**\n   * create config evaluation\n   */\n  create(createConfigEvaluationInput: CreateConfigEvaluationInput) {\n    return this.configEvaluationModel.create(createConfigEvaluationInput);\n  }\n\n  /**\n   * find all config evaluation by user\n   */\n  findAll(user?: AuthUser) {\n    switch (user.rolDoc.type) {\n      case ValidRoles.expert:\n        return this.configEvaluationModel\n          .find({ reviewer: ValidRoles.expert })\n          .lean();\n      case ValidRoles.teamCoach:\n        return this.configEvaluationModel\n          .find({ reviewer: ValidRoles.teamCoach })\n          .lean();\n      default:\n        return this.configEvaluationModel.find().lean();\n    }\n  }\n\n  /**\n   * config evaluation by batch id\n   */\n  findByPhase(phase: string, user: AuthUser) {\n    return this.configEvaluationModel.find({ phase }).lean();\n  }\n\n  /**\n   * find config evaluation by id\n   */\n  findOne(id: string) {\n    return this.configEvaluationModel.findById(id).lean();\n  }\n\n  /**\n   * find evaluations that need to be done today\n   */\n  findToday(rol: ValidRoles) {\n    // let infoSemana = this.obtenerInfoSemana();\n    let today = new Date();\n    // Configura las fechas para el rango del día específico\n    const begin = new Date(today);\n    begin.setHours(0, 0, 0, 0);\n    const end = new Date(today);\n    end.setHours(23, 59, 59, 999);\n    return this.configEvaluationModel\n      .find({\n        reviewer: rol,\n        startAt: {\n          $gte: begin,\n          $lt: end,\n        },\n      })\n      .lean();\n  }\n\n  /**\n   * update config evaluation by id\n   */\n  async update(\n    id: string,\n    updateConfigEvaluationInput: UpdateConfigEvaluationInput,\n  ) {\n    delete updateConfigEvaluationInput['_id'];\n    const updatedEvent = await this.configEvaluationModel\n      .findOneAndUpdate(\n        { _id: id },\n        { ...updateConfigEvaluationInput },\n        { new: true },\n      )\n      .lean();\n    return updatedEvent;\n  }\n\n  /**\n   * soft delete config evaluation by id\n   */\n  async remove(id: string) {\n    const updatedType = await this.configEvaluationModel\n      .findOneAndUpdate({ _id: id }, { isDeleted: true }, { new: true })\n      .lean();\n    return updatedType;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ConfigNotificationsModule.html":{"url":"modules/ConfigNotificationsModule.html","title":"module - ConfigNotificationsModule","body":"\n                   \n\n\n\n\n    Modules\n    ConfigNotificationsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ConfigNotificationsModule\n\n\n\ncluster_ConfigNotificationsModule_exports\n\n\n\ncluster_ConfigNotificationsModule_providers\n\n\n\n\nConfigNotificationsService \n\nConfigNotificationsService \n\n\n\nConfigNotificationsModule\n\nConfigNotificationsModule\n\nConfigNotificationsService  -->\n\nConfigNotificationsModule->ConfigNotificationsService \n\n\n\n\n\nConfigNotificationsService\n\nConfigNotificationsService\n\nConfigNotificationsModule -->\n\nConfigNotificationsService->ConfigNotificationsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/notifications/config-notifications/config-notifications.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ConfigNotificationsService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ConfigNotificationsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigNotificationsService } from './config-notifications.service';\nimport { ConfigNotificationsResolver } from './config-notifications.resolver';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { ConfigNotification, ConfigNotificationSchema } from './entities/config-notification.entity';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      { name: ConfigNotification.name, schema: ConfigNotificationSchema },\n    ]),\n  ],\n  providers: [ConfigNotificationsResolver, ConfigNotificationsService],\n  exports: [ConfigNotificationsService]\n})\nexport class ConfigNotificationsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConfigNotificationsService.html":{"url":"injectables/ConfigNotificationsService.html","title":"injectable - ConfigNotificationsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ConfigNotificationsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/notifications/config-notifications/config-notifications.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                excludeUserForType\n                            \n                            \n                                    Async\n                                findByType\n                            \n                            \n                                    Async\n                                removeExcludedUserForType\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configNotificationModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/notifications/config-notifications/config-notifications.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configNotificationModel\n                                                  \n                                                        \n                                                                    Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createConfigNotificationInput: CreateConfigNotificationInput)\n                \n            \n\n\n                    \n                        \n                            Defined in src/notifications/config-notifications/config-notifications.service.ts:17\n                        \n                    \n\n\n            \n                \n                        create an config notification for user\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createConfigNotificationInput\n                                            \n                                                            CreateConfigNotificationInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        excludeUserForType\n                        \n                    \n                \n            \n            \n                \n                        \n                    excludeUserForType(type: string, userEmail: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/notifications/config-notifications/config-notifications.service.ts:45\n                        \n                    \n\n\n            \n                \n                        exclude a user for a specific type of notification\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                type\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userEmail\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findByType\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByType(type: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/notifications/config-notifications/config-notifications.service.ts:27\n                        \n                    \n\n\n            \n                \n                        find config notification by type\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                type\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        removeExcludedUserForType\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeExcludedUserForType(type: string, userEmail: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/notifications/config-notifications/config-notifications.service.ts:57\n                        \n                    \n\n\n            \n                \n                        remove exclude a user for a specific type of notification\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                type\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userEmail\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, InternalServerErrorException } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { CreateConfigNotificationInput } from './dto/create-config-notification.input';\nimport { ConfigNotification } from './entities/config-notification.entity';\n\n@Injectable()\nexport class ConfigNotificationsService {\n  constructor(\n    @InjectModel(ConfigNotification.name)\n    private readonly configNotificationModel: Model,\n  ) {}\n\n  /**\n   * create an config notification for user\n   */\n  async create(createConfigNotificationInput: CreateConfigNotificationInput) {\n    const config = new ConfigNotification();\n    config.type = createConfigNotificationInput.type;\n    config.excluded = createConfigNotificationInput.excluded;\n    return this.configNotificationModel.create(config);\n  }\n\n  /**\n   * find config notification by type\n   */\n  async findByType(type: string): Promise {\n    const configByType: ConfigNotification = await this.configNotificationModel\n      .findOne({ type: type })\n      .lean();\n    if (!configByType) {\n      const created = await this.create({ type, excluded: [] });\n      if (!created)\n        throw new InternalServerErrorException(\n          `Failed to create notification config for type ${type}`,\n        );\n      return created;\n    }\n    return configByType;\n  }\n\n  /**\n   * exclude a user for a specific type of notification\n   */\n  async excludeUserForType(type: string, userEmail: string) {\n    const updateResult = await this.configNotificationModel.updateOne(\n      { type },\n      { $addToSet: { excluded: userEmail } },\n    );\n    if (updateResult.matchedCount == 0)\n      await this.create({ type, excluded: [userEmail] });\n  }\n\n  /**\n   * remove exclude a user for a specific type of notification\n   */\n  async removeExcludedUserForType(type: string, userEmail: string) {\n    const updateResult = await this.configNotificationModel.updateOne(\n      { type },\n      { $pull: { excluded: userEmail } },\n    );\n    if (updateResult.matchedCount == 0)\n      await this.create({ type, excluded: [] });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConfigurationApp.html":{"url":"classes/ConfigurationApp.html","title":"class - ConfigurationApp","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConfigurationApp\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/configuration-app/entities/configuration-app.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                Main configuration of app\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                _id\n                            \n                            \n                                    \n                                    \n                                benefactors\n                            \n                            \n                                    \n                                    \n                                contentOfInterest\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                    \n                                dashboard\n                            \n                            \n                                    \n                                    \n                                services\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                    \n                                verticals\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/configuration-app/entities/configuration-app.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        benefactors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/configuration-app/entities/configuration-app.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        contentOfInterest\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/configuration-app/entities/configuration-app.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Creation date of the entity.'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/configuration-app/entities/configuration-app.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        dashboard\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/configuration-app/entities/configuration-app.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        services\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/configuration-app/entities/configuration-app.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Update date of the entity.'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/configuration-app/entities/configuration-app.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        verticals\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/configuration-app/entities/configuration-app.entity.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ObjectType, Field, ID } from '@nestjs/graphql';\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { SchemaTypes, Types, Document } from 'mongoose';\nimport { GraphQLJSONObject } from 'graphql-scalars';\n/**\n * Main configuration of app\n */\n@Schema({ timestamps: true })\n@ObjectType()\nexport class ConfigurationApp {\n  @Field(() => ID)\n  _id: string;\n\n  @Field(() => String)\n  @Prop({ required: true })\n  dashboard: string;\n\n  @Field(() => [GraphQLJSONObject])\n  @Prop({ type: [{ type: SchemaTypes.Mixed }] })\n  verticals: Record[];\n\n  @Field(() => [GraphQLJSONObject])\n  @Prop({ type: [{ type: SchemaTypes.Mixed }] })\n  services: Record[];\n\n  @Field(() => [GraphQLJSONObject])\n  @Prop({ type: [{ type: SchemaTypes.Mixed }] })\n  benefactors: Record[];\n\n  @Field(() => [GraphQLJSONObject])\n  @Prop({ type: [{ type: SchemaTypes.Mixed }] })\n  contentOfInterest: Record[];\n\n  @Field(() => Date, { description: 'Creation date of the entity.' })\n  createdAt: Date;\n\n  @Field(() => Date, { description: 'Update date of the entity.' })\n  updatedAt: Date;\n}\n/**\n * @ignore\n */\nexport const ConfigurationAppSchema =\n  SchemaFactory.createForClass(ConfigurationApp);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ConfigurationAppModule.html":{"url":"modules/ConfigurationAppModule.html","title":"module - ConfigurationAppModule","body":"\n                   \n\n\n\n\n    Modules\n    ConfigurationAppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ConfigurationAppModule\n\n\n\ncluster_ConfigurationAppModule_imports\n\n\n\ncluster_ConfigurationAppModule_exports\n\n\n\ncluster_ConfigurationAppModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nConfigurationAppModule\n\nConfigurationAppModule\n\nConfigurationAppModule -->\n\nAuthModule->ConfigurationAppModule\n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nConfigurationAppModule -->\n\nLoggerModule->ConfigurationAppModule\n\n\n\n\n\nConfigurationAppService \n\nConfigurationAppService \n\nConfigurationAppService  -->\n\nConfigurationAppModule->ConfigurationAppService \n\n\n\n\n\nConfigurationAppService\n\nConfigurationAppService\n\nConfigurationAppModule -->\n\nConfigurationAppService->ConfigurationAppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/configuration-app/configuration-app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ConfigurationAppService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            LoggerModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ConfigurationAppService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module, forwardRef } from '@nestjs/common';\nimport { ConfigurationAppService } from './configuration-app.service';\nimport { ConfigurationAppResolver } from './configuration-app.resolver';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { AuthModule } from 'src/auth/auth.module';\nimport { LoggerModule } from 'src/logger/logger.module';\nimport {\n  ConfigurationApp,\n  ConfigurationAppSchema,\n} from './entities/configuration-app.entity';\nimport { UserLogModule } from 'src/user-log/user-log.module';\nimport { UsersModule } from 'src/users/users.module';\nimport { EventsModule } from 'src/events/events.module';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      { name: ConfigurationApp.name, schema: ConfigurationAppSchema },\n    ]),\n    AuthModule,\n    LoggerModule,\n    forwardRef(() => UserLogModule),\n    forwardRef(() => UsersModule),\n    forwardRef(() => EventsModule),\n  ],\n  providers: [ConfigurationAppResolver, ConfigurationAppService],\n  exports: [ConfigurationAppService],\n})\nexport class ConfigurationAppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConfigurationAppService.html":{"url":"injectables/ConfigurationAppService.html","title":"injectable - ConfigurationAppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ConfigurationAppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/configuration-app/configuration-app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                find\n                            \n                            \n                                    Async\n                                initGraph\n                            \n                            \n                                    Async\n                                onModuleInit\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configurationApp: Model, userLogService: UserLogService, eventsService: EventsService)\n                    \n                \n                        \n                            \n                                Defined in src/configuration-app/configuration-app.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configurationApp\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userLogService\n                                                  \n                                                        \n                                                                        UserLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventsService\n                                                  \n                                                        \n                                                                        EventsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find()\n                \n            \n\n\n                    \n                        \n                            Defined in src/configuration-app/configuration-app.service.ts:35\n                        \n                    \n\n\n            \n                \n                        find the app configuration\n\n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        initGraph\n                        \n                    \n                \n            \n            \n                \n                        \n                    initGraph(user: AuthUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/configuration-app/configuration-app.service.ts:60\n                        \n                    \n\n\n            \n                \n                        search data graphs for dashboard\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            AuthUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/configuration-app/configuration-app.service.ts:25\n                        \n                    \n\n\n            \n                \n                        initializes the app configuration\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateConfigurationAppInput: UpdateConfigurationAppInput)\n                \n            \n\n\n                    \n                        \n                            Defined in src/configuration-app/configuration-app.service.ts:42\n                        \n                    \n\n\n            \n                \n                        update the app configuration\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateConfigurationAppInput\n                                            \n                                                            UpdateConfigurationAppInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject, forwardRef } from '@nestjs/common';\nimport { UpdateConfigurationAppInput } from './dto/update-configuration-app.input';\nimport { Model } from 'mongoose';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { ConfigurationApp } from './entities/configuration-app.entity';\nimport { UserLogService } from 'src/user-log/user-log.service';\nimport { AuthUser } from '../auth/types/auth-user';\nimport { ValidRoles } from 'src/auth/enums/valid-roles.enum';\nimport { EventsService } from 'src/events/events.service';\n\n@Injectable()\nexport class ConfigurationAppService {\n  constructor(\n    @InjectModel(ConfigurationApp.name)\n    private readonly configurationApp: Model,\n    @Inject(forwardRef(() => UserLogService))\n    private readonly userLogService: UserLogService,\n    @Inject(forwardRef(() => EventsService))\n    private readonly eventsService: EventsService,\n  ) {}\n\n  /**\n   * initializes the app configuration\n   */\n  async onModuleInit() {\n    let types = await this.configurationApp.find({});\n    if (types.length === 0) {\n      await this.configurationApp.create({ dashboard: 'Dashboard here!' });\n    }\n  }\n\n  /**\n   * find the app configuration\n   */\n  async find() {\n    return (await this.configurationApp.find())[0];\n  }\n\n  /**\n   * update the app configuration\n   */\n  async update(\n    id: string,\n    updateConfigurationAppInput: UpdateConfigurationAppInput,\n  ) {\n    delete updateConfigurationAppInput['_id'];\n    const updatedStage = await this.configurationApp\n      .findOneAndUpdate(\n        { _id: id },\n        { ...updateConfigurationAppInput },\n        { new: true },\n      )\n      .lean();\n    return updatedStage;\n  }\n\n  /**\n   * search data graphs for dashboard\n   */\n  async initGraph(user: AuthUser) {\n    let ans = {};\n    switch (user.rolDoc.type) {\n      case ValidRoles.user:\n        ans = { ...(await this.userLogService.getUserRegisterWeek(user)) };\n        break;\n      case ValidRoles.expert:\n        ans = { ...(await this.eventsService.registersExpert(user)) };\n        break;\n      default:\n        ans = { ...(await this.userLogService.getRegistersUsers()) };\n        break;\n    }\n    return ans;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ContactArgs.html":{"url":"classes/ContactArgs.html","title":"class - ContactArgs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ContactArgs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/startup/args/contact-startup.args.ts\n        \n\n\n            \n                Description\n            \n            \n                graphql args input\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                body\n                            \n                            \n                                    \n                                    \n                                from\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                startupID\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                startupName\n                            \n                            \n                                    \n                                    \n                                    \n                                subject\n                            \n                            \n                                    \n                                    \n                                    \n                                to\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        body\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()@Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/startup/args/contact-startup.args.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        from\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/startup/args/contact-startup.args.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        startupID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/startup/args/contact-startup.args.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        startupName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/startup/args/contact-startup.args.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        subject\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()@Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/startup/args/contact-startup.args.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        to\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()@Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/startup/args/contact-startup.args.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ArgsType, Field } from '@nestjs/graphql';\nimport { IsNotEmpty, IsOptional, IsString } from 'class-validator';\n/**\n * graphql args input\n */\n@ArgsType()\nexport class ContactArgs {\n  @IsNotEmpty()\n  @IsString()\n  @Field(() => String)\n  body: string;\n\n  @IsNotEmpty()\n  @IsString()\n  @Field(() => String)\n  subject: string;\n\n  @IsNotEmpty()\n  @IsString()\n  @Field(() => String)\n  to: string;\n\n  @IsNotEmpty()\n  @Field(() => String)\n  from: string;\n\n  @IsOptional()\n  @Field(() => String)\n  startupName?: string;\n\n  @IsOptional()\n  @Field(() => String)\n  startupID?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ContactServiceLink.html":{"url":"classes/ContactServiceLink.html","title":"class - ContactServiceLink","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ContactServiceLink\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/sites/entities/site.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                contact relationship\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                contact\n                            \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                others\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        contact\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sites/entities/site.entity.ts:121\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sites/entities/site.entity.ts:117\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sites/entities/site.entity.ts:109\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        others\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sites/entities/site.entity.ts:113\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ObjectType, Field, ID } from '@nestjs/graphql';\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\n/**\n * sites in dashboard\n */\n@Schema({ timestamps: true })\n@ObjectType()\nexport class Site {\n  @Field(() => ID)\n  _id: string;\n\n  @Field(() => String)\n  @Prop({ required: true })\n  name: string;\n\n  @Field(() => String, {\n    description: 'Link to a small image to be used as thumbnail.',\n    nullable: true,\n  })\n  @Prop({ default: '' })\n  thumbnail: string;\n\n  @Field(() => String, {\n    nullable: true,\n  })\n  @Prop({ default: '' })\n  description: string;\n\n  @Field(() => String, {\n    nullable: true,\n  })\n  @Prop({ default: '' })\n  directedTo: string;\n\n  @Field(() => String, {\n    nullable: true,\n  })\n  @Prop({ default: '' })\n  methodology: string;\n\n  @Field(() => [String], {\n    nullable: true,\n  })\n  @Prop({ default: [] })\n  factors: string[];\n\n  @Field(() => String, {\n    nullable: true,\n  })\n  @Prop({ default: '' })\n  results: string;\n\n  // @Field(() => GraphQLJSONObject)\n  // @Prop({ type: SchemaTypes.Mixed, required: true })\n  // coords: any;\n\n  // @Field(() => [ServicesSiteLink])\n  // @Prop({ default: [] })\n  // services: ServicesSiteLink[];\n\n  @Field(() => [ContactServiceLink])\n  @Prop({ default: [] })\n  contacts: ContactServiceLink[];\n\n  @Field(() => Boolean)\n  @Prop({ default: false })\n  isDeleted: boolean;\n\n  @Field(() => Date, { description: 'Creation date of the entity.' })\n  createdAt: Date;\n\n  @Field(() => Date, { description: 'Update date of the entity.' })\n  updatedAt: Date;\n}\n/**\n * @ignore\n */\n@Schema()\n@ObjectType()\nexport class ServicesSiteLink {\n  @Field(() => String)\n  @Prop()\n  name: string;\n\n  @Field(() => String)\n  @Prop()\n  description: string;\n\n  @Field(() => String)\n  @Prop()\n  email: string;\n\n  @Field(() => String)\n  @Prop()\n  contact: string;\n\n  // @Field(() => GraphQLJSONObject)\n  // @Prop({ type: SchemaTypes.Mixed, required: true })\n  // coords: any;\n}\n/**\n * contact relationship\n */\n@Schema()\n@ObjectType()\nexport class ContactServiceLink {\n  @Field(() => String)\n  @Prop()\n  name: string;\n\n  @Field(() => String)\n  @Prop()\n  others: string;\n\n  @Field(() => String)\n  @Prop()\n  email: string;\n\n  @Field(() => String)\n  @Prop()\n  contact: string;\n\n  // @Field(() => GraphQLJSONObject)\n  // @Prop({ type: SchemaTypes.Mixed, required: true })\n  // coords: any;\n}\n/**\n * @ignore\n */\nexport const SiteSchema = SchemaFactory.createForClass(Site);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ContactServicesInput.html":{"url":"classes/ContactServicesInput.html","title":"class - ContactServicesInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ContactServicesInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/sites/dto/update-site.input.ts\n        \n\n\n            \n                Description\n            \n            \n                service contact person\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                contact\n                            \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                others\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        contact\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sites/dto/update-site.input.ts:97\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sites/dto/update-site.input.ts:93\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sites/dto/update-site.input.ts:89\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        others\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sites/dto/update-site.input.ts:101\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CreateSiteInput } from './create-site.input';\nimport { InputType, Field, Int, PartialType, ID } from '@nestjs/graphql';\nimport { IsNotEmpty, IsOptional } from 'class-validator';\nimport { GraphQLJSONObject } from 'graphql-scalars';\n/**\n * graphql inputs\n */\n@InputType()\nexport class UpdateSiteInput {\n  @Field(() => ID)\n  @IsNotEmpty()\n  _id: string;\n\n  @Field(() => String)\n  @IsOptional()\n  name: string;\n\n  @Field(() => String)\n  @IsOptional()\n  thumbnail: string;\n\n  @Field(() => String)\n  @IsOptional()\n  description: string;\n\n  @Field(() => String)\n  @IsOptional()\n  directedTo: string;\n\n  @Field(() => String)\n  @IsOptional()\n  methodology: string;\n\n  @Field(() => [String])\n  @IsOptional()\n  factors: string[];\n\n  @Field(() => String)\n  @IsOptional()\n  results: string;\n\n  @Field(() => [ContactServicesInput], { nullable: true })\n  @IsOptional()\n  contacts?: ContactServicesInput[];\n\n  // @Field(() => GraphQLJSONObject)\n  // @IsOptional()\n  // coords: Record;\n\n  // @Field(() => [ServicesSiteInput], { nullable: true })\n  // @IsOptional()\n  // services?: ServicesSiteInput[];\n\n  @Field(() => Boolean, { nullable: true })\n  @IsOptional()\n  isDeleted?: boolean;\n}\n/**\n * @ignore\n */\n@InputType()\nexport class ServicesSiteInput {\n  @Field(() => String)\n  @IsNotEmpty()\n  name: string;\n\n  @Field(() => String)\n  description: string;\n\n  @Field(() => String)\n  @IsNotEmpty()\n  email: string;\n\n  @Field(() => String)\n  @IsNotEmpty()\n  contact: string;\n\n  @Field(() => GraphQLJSONObject)\n  @IsNotEmpty()\n  coords: Record;\n}\n/**\n * service contact person\n */\n@InputType()\nexport class ContactServicesInput {\n  @Field(() => String)\n  @IsNotEmpty()\n  name: string;\n\n  @Field(() => String)\n  @IsNotEmpty()\n  email: string;\n\n  @Field(() => String)\n  @IsNotEmpty()\n  contact: string;\n\n  @Field(() => String)\n  @IsNotEmpty()\n  others: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Content.html":{"url":"classes/Content.html","title":"class - Content","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Content\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/content/entities/content.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                Sprints and content of a batch or phase\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                _id\n                            \n                            \n                                    \n                                    \n                                childs\n                            \n                            \n                                    \n                                    \n                                content\n                            \n                            \n                                    \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                    \n                                extra_options\n                            \n                            \n                                    \n                                    \n                                hide\n                            \n                            \n                                    \n                                    \n                                isDeleted\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                phase\n                            \n                            \n                                    \n                                    \n                                resources\n                            \n                            \n                                    \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/content/entities/content.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        childs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Content[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined})@Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/content/entities/content.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({default: ''})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/content/entities/content.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/content/entities/content.entity.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        extra_options\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/content/entities/content.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        hide\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({type: 'boolean', default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/content/entities/content.entity.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({type: 'boolean', default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/content/entities/content.entity.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/content/entities/content.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        phase\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({type: undefined, ref: 'Phase'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/content/entities/content.entity.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        resources\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Resource[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined})@Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/content/entities/content.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/content/entities/content.entity.ts:62\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ObjectType, Field, ID } from '@nestjs/graphql';\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { SchemaTypes, Types, Document } from 'mongoose';\nimport { GraphQLJSONObject } from 'graphql-scalars';\nimport { Resource } from 'src/resources/entities/resource.entity';\n/**\n * Sprints and content of a batch or phase\n */\n@Schema({ timestamps: true })\n@ObjectType()\nexport class Content {\n  @Field(() => ID)\n  _id: string;\n\n  @Prop({ type: [{ type: Types.ObjectId, ref: 'Resource' }] })\n  @Field(() => [Resource])\n  resources: Resource[];\n\n  @Prop({ type: [{ type: Types.ObjectId, ref: 'Content' }] })\n  @Field(() => [Content])\n  childs: Content[];\n\n  // @Prop([\n  //   {\n  //     participantId: { type: SchemaTypes.ObjectId },\n  //     attendedBy: { type: SchemaTypes.ObjectId, ref: 'Empresario' },\n  //     date: { type: Date },\n  //   },\n  // ])\n  // attendance: {\n  //   participantId: string;\n  //   attendedBy: string;\n  //   date: Date;\n  // }[];\n\n  @Field(() => String)\n  @Prop({ required: true })\n  name: string;\n\n  @Field(() => String)\n  @Prop({ default: '' })\n  content: string;\n\n  @Field(() => GraphQLJSONObject)\n  @Prop({ type: SchemaTypes.Mixed })\n  extra_options: any;\n\n  @Field(() => Boolean)\n  @Prop({ type: 'boolean', default: false })\n  hide: boolean;\n\n  @Field(() => String)\n  @Prop({ type: SchemaTypes.ObjectId, ref: 'Phase' })\n  phase: string;\n\n  @Field(() => Date)\n  @Prop({ type: Date })\n  createdAt: Date;\n\n  @Field(() => Date)\n  @Prop({ type: Date })\n  updatedAt: Date;\n\n  @Field(() => Boolean)\n  @Prop({ type: 'boolean', default: false })\n  isDeleted: boolean;\n}\n/**\n * @ignore\n */\nexport const ContentSchema = SchemaFactory.createForClass(Content);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ContentModule.html":{"url":"modules/ContentModule.html","title":"module - ContentModule","body":"\n                   \n\n\n\n\n    Modules\n    ContentModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ContentModule\n\n\n\ncluster_ContentModule_exports\n\n\n\ncluster_ContentModule_imports\n\n\n\ncluster_ContentModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nContentModule\n\nContentModule\n\nContentModule -->\n\nAuthModule->ContentModule\n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nContentModule -->\n\nLoggerModule->ContentModule\n\n\n\n\n\nContentService \n\nContentService \n\nContentService  -->\n\nContentModule->ContentService \n\n\n\n\n\nContentService\n\nContentService\n\nContentModule -->\n\nContentService->ContentModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/content/content.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ContentService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            LoggerModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ContentService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module, forwardRef } from '@nestjs/common';\nimport { ContentService } from './content.service';\nimport { ContentResolver } from './content.resolver';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Content, ContentSchema } from './entities/content.entity';\nimport { AuthModule } from 'src/auth/auth.module';\nimport { LoggerModule } from 'src/logger/logger.module';\nimport { UserLogModule } from 'src/user-log/user-log.module';\nimport { ResourcesRepliesModule } from 'src/resources/resources-replies/resources-replies.module';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([{ name: Content.name, schema: ContentSchema }]),\n    AuthModule,\n    LoggerModule,\n    forwardRef(() => UserLogModule),\n    forwardRef(() => ResourcesRepliesModule),\n  ],\n  providers: [ContentResolver, ContentService],\n  exports: [ContentService],\n})\nexport class ContentModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ContentService.html":{"url":"injectables/ContentService.html","title":"injectable - ContentService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ContentService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/content/content.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addResource\n                            \n                            \n                                checkStateDisplayUser\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                createMany\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                findById\n                            \n                            \n                                    Async\n                                findLastContent\n                            \n                            \n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(contentModel: Model, userLogService: UserLogService, resourcesRepliesService: ResourcesRepliesService)\n                    \n                \n                        \n                            \n                                Defined in src/content/content.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        contentModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userLogService\n                                                  \n                                                        \n                                                                        UserLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        resourcesRepliesService\n                                                  \n                                                        \n                                                                        ResourcesRepliesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addResource\n                        \n                    \n                \n            \n            \n                \n                        \n                    addResource(contentID: string, id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/content/content.service.ts:183\n                        \n                    \n\n\n            \n                \n                        add resource id to sprint or content\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                contentID\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkStateDisplayUser\n                        \n                    \n                \n            \n            \n                \ncheckStateDisplayUser(sprints: Content[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/content/content.service.ts:199\n                        \n                    \n\n\n            \n                \n                        find sprint or content that can only be seen\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                sprints\n                                            \n                                                            Content[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     {}\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createContentInput: CreateContentInput)\n                \n            \n\n\n                    \n                        \n                            Defined in src/content/content.service.ts:26\n                        \n                    \n\n\n            \n                \n                        create content or sprint for a phase or batch\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createContentInput\n                                            \n                                                            CreateContentInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createMany\n                        \n                    \n                \n            \n            \n                \ncreateMany(content: Content[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/content/content.service.ts:192\n                        \n                    \n\n\n            \n                \n                        create many sprint or content\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                content\n                                            \n                                                            Content[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(phase: string, user?: AuthUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/content/content.service.ts:42\n                        \n                    \n\n\n            \n                \n                        find all sprints and content and resources for a phase or batch\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                phase\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            AuthUser\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findById\n                        \n                    \n                \n            \n            \n                \nfindById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/content/content.service.ts:67\n                        \n                    \n\n\n            \n                \n                        find content or sprint by id\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findLastContent\n                        \n                    \n                \n            \n            \n                \n                        \n                    findLastContent(batchId: string, startupId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/content/content.service.ts:84\n                        \n                    \n\n\n            \n                \n                        find the latest content viewed by a startup\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                batchId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                startupId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/content/content.service.ts:74\n                        \n                    \n\n\n            \n                \n                        find content or sprint by id and return content with resources\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/content/content.service.ts:171\n                        \n                    \n\n\n            \n                \n                        soft delete of a sprint or content\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateContentInput: UpdateContentInput)\n                \n            \n\n\n                    \n                        \n                            Defined in src/content/content.service.ts:158\n                        \n                    \n\n\n            \n                \n                        find sprint or content\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateContentInput\n                                            \n                                                            UpdateContentInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, forwardRef } from '@nestjs/common';\nimport { CreateContentInput } from './dto/create-content.input';\nimport { UpdateContentInput } from './dto/update-content.input';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Content } from './entities/content.entity';\nimport { Model } from 'mongoose';\nimport { AuthUser } from '../auth/types/auth-user';\nimport { ValidRoles } from 'src/auth/enums/valid-roles.enum';\nimport { UserLogService } from 'src/user-log/user-log.service';\nimport { ResourcesRepliesService } from 'src/resources/resources-replies/resources-replies.service';\nimport { ResourceReplyState } from '../resources/resources-replies/models/resorce-reply-states';\nimport { ResourceType } from 'src/resources/enums/resources-types';\n@Injectable()\nexport class ContentService {\n  constructor(\n    @InjectModel(Content.name) private readonly contentModel: Model,\n    @Inject(forwardRef(() => UserLogService))\n    private readonly userLogService: UserLogService,\n    @Inject(forwardRef(() => ResourcesRepliesService))\n    private readonly resourcesRepliesService: ResourcesRepliesService,\n  ) {}\n\n  /**\n   * create content or sprint for a phase or batch\n   */\n  async create(createContentInput: CreateContentInput) {\n    if (createContentInput.extra_options?.parent) {\n      const newContent = await this.contentModel.create(createContentInput);\n      await this.contentModel.findByIdAndUpdate(\n        createContentInput.extra_options?.parent,\n        { $addToSet: { childs: newContent._id } },\n      );\n      return newContent;\n    } else {\n      return this.contentModel.create(createContentInput);\n    }\n  }\n\n  /**\n   * find all sprints and content and resources for a phase or batch\n   */\n  async findAll(phase: string, user?: AuthUser): Promise {\n    if (user?.rolDoc.type === ValidRoles.user) {\n      let sprints = await this.contentModel\n        .find({\n          phase,\n          'extra_options.sprint': true,\n          isDeleted: false,\n          hide: false,\n        })\n        .populate({ path: 'childs', populate: 'resources' })\n        .populate('resources')\n        .lean();\n      return this.checkStateDisplayUser(sprints);\n    } else {\n      return this.contentModel\n        .find({ phase, 'extra_options.sprint': true, isDeleted: false })\n        .populate({ path: 'childs', populate: 'resources' })\n        .populate('resources')\n        .lean();\n    }\n  }\n\n  /**\n   * find content or sprint by id\n   */\n  findById(id: string) {\n    return this.contentModel.findById(id).lean();\n  }\n\n  /**\n   * find content or sprint by id and return content with resources\n   */\n  findOne(id: string) {\n    return this.contentModel\n      .findById(id)\n      .populate({ path: 'childs', populate: 'resources' })\n      .populate('resources');\n  }\n\n  /**\n   * find the latest content viewed by a startup\n   */\n  async findLastContent(batchId: string, startupId: string) {\n    const logsBatch = await this.userLogService.findByFilters({\n      'metadata.batch': batchId,\n      'metadata.startup': startupId,\n    });\n\n    const contents = await this.contentModel\n      .find({ phase: batchId, 'extra_options.sprint': true, isDeleted: false })\n      .populate({ path: 'childs', populate: 'resources' })\n      .populate('resources')\n      .lean();\n    let lastContent = null;\n    // Busca del ultimo contenido sin completar\n    for (const sprint of contents) {\n      if (lastContent) continue;\n      for (const content of sprint.childs) {\n        if (lastContent) continue;\n        if (\n          logsBatch.find(\n            (i) =>\n              i.metadata['content'] === content._id.toString() &&\n              i.metadata['sprint'] === sprint._id.toString(),\n          )\n        )\n          continue;\n        lastContent = content;\n        break;\n      }\n    }\n    if (!lastContent) {\n      const lastSprint = contents[contents.length - 1];\n      lastContent = lastSprint.childs[lastSprint.childs.length - 1];\n    }\n    // Conteo de contenidos\n    let numberOfContent = 0;\n    for (const sprint of contents) {\n      for (const content of sprint.childs) {\n        ++numberOfContent;\n      }\n    }\n\n    // Conteo de tareas pendientes\n    const logsResources =\n      await this.resourcesRepliesService.findByStartupWithoutPopulate(\n        startupId,\n        batchId,\n      );\n    let numberOfResourcesPending = 0;\n    for (const content of contents) {\n      for (const resource of content.resources) {\n        if (resource.hide || resource.isDeleted) continue;\n        const completed = logsResources.find(\n          (i) => i.resource.toString() === resource._id.toString(),\n        );\n        if (\n          !completed ||\n          resource.type === ResourceType.downloadable ||\n          completed.state !== ResourceReplyState.Aprobado\n        )\n          continue;\n        numberOfResourcesPending++;\n      }\n    }\n    return {\n      lastContent,\n      contentCompleted: logsBatch.length,\n      numberOfContent,\n      numberOfResourcesPending,\n    };\n  }\n\n  /**\n   * find sprint or content\n   */\n  async update(id: string, updateContentInput: UpdateContentInput) {\n    delete updateContentInput['_id'];\n    const updatedContent = await this.contentModel\n      .findOneAndUpdate({ _id: id }, { ...updateContentInput }, { new: true })\n      .populate({ path: 'childs', populate: 'resources' })\n      .populate('resources')\n      .lean();\n    return updatedContent;\n  }\n\n  /**\n   * soft delete of a sprint or content\n   */\n  async remove(id: string) {\n    const updatedContent = await this.contentModel\n      .findOneAndUpdate({ _id: id }, { isDeleted: true }, { new: true })\n      .populate({ path: 'childs', populate: 'resources' })\n      .populate('resources')\n      .lean();\n    return updatedContent;\n  }\n\n  /**\n   * add resource id to sprint or content\n   */\n  async addResource(contentID: string, id: string) {\n    return await this.contentModel.findByIdAndUpdate(contentID, {\n      $addToSet: { resources: id },\n    });\n  }\n\n  /**\n   * create many sprint or content\n   */\n  createMany(content: Content[]) {\n    return this.contentModel.insertMany(content);\n  }\n\n  /**\n   * find sprint or content that can only be seen\n   */\n  checkStateDisplayUser(sprints: Content[]) {\n    let sprintsFiltered = [];\n    for (const sprint of sprints) {\n      const childsSprint = [];\n      for (const child of sprint.childs) {\n        if (child.isDeleted || child.hide) continue;\n        const resourcesChild = child.resources.filter(\n          (i) => !i.isDeleted && !i.hide,\n        );\n        childsSprint.push({ ...child, resources: resourcesChild });\n      }\n      const resourcesSprint = sprint.resources.filter(\n        (i) => !i.isDeleted && !i.hide,\n      );\n      sprintsFiltered.push({\n        ...sprint,\n        childs: childsSprint,\n        resources: resourcesSprint,\n      });\n    }\n    return sprintsFiltered;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateActaInput.html":{"url":"classes/CreateActaInput.html","title":"class - CreateActaInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateActaInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/events/acta/dto/create-acta.input.ts\n        \n\n\n            \n                Description\n            \n            \n                graphql input scheme\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                closed\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                conclusions\n                            \n                            \n                                    \n                                    \n                                date\n                            \n                            \n                                    \n                                    \n                                event\n                            \n                            \n                                    \n                                    \n                                extra_options\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                objective\n                            \n                            \n                                    \n                                    \n                                phase\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                solution\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                topics_covered\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        closed\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/acta/dto/create-acta.input.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        conclusions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/acta/dto/create-acta.input.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/acta/dto/create-acta.input.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        event\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/acta/dto/create-acta.input.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        extra_options\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/acta/dto/create-acta.input.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/acta/dto/create-acta.input.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        objective\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/acta/dto/create-acta.input.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        phase\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/acta/dto/create-acta.input.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        solution\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/acta/dto/create-acta.input.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        topics_covered\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/acta/dto/create-acta.input.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { InputType, Int, Field } from '@nestjs/graphql';\nimport { IsNotEmpty, IsOptional } from 'class-validator';\nimport { GraphQLJSONObject } from 'graphql-scalars';\n/**\n * graphql input scheme\n */\n@InputType()\nexport class CreateActaInput {\n  @Field(() => String)\n  @IsNotEmpty()\n  name: string;\n\n  @Field(() => String)\n  @IsOptional()\n  objective?: string;\n\n  @Field(() => String)\n  @IsOptional()\n  solution?: string;\n\n  @Field(() => Date)\n  @IsNotEmpty()\n  date: Date;\n\n  @Field(() => String)\n  @IsOptional()\n  topics_covered?: string;\n\n  @Field(() => String)\n  @IsOptional()\n  conclusions?: string;\n\n  @Field(() => String)\n  @IsNotEmpty()\n  phase: string;\n\n  @Field(() => String)\n  @IsNotEmpty()\n  event: string;\n\n  @Field(() => GraphQLJSONObject)\n  @IsOptional()\n  extra_options: Record;\n\n  @Field(() => Boolean, { nullable: true })\n  @IsOptional()\n  closed?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateActivitiesConfigInput.html":{"url":"classes/CreateActivitiesConfigInput.html","title":"class - CreateActivitiesConfigInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateActivitiesConfigInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/activities-config/dto/create-activities-config.input.ts\n        \n\n\n            \n                Description\n            \n            \n                graphql input scheme\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                limit\n                            \n                            \n                                    \n                                    \n                                phase\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/activities-config/dto/create-activities-config.input.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        phase\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/activities-config/dto/create-activities-config.input.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { InputType, Field, Int } from '@nestjs/graphql';\nimport { IsNotEmpty, IsOptional } from 'class-validator';\n\n/**\n * graphql input scheme\n * @param {int} phase  batchId of activity config\n * @param {string} limit  global hours limit\n */\n@InputType()\nexport class CreateActivitiesConfigInput {\n  @Field(() => Int)\n  @IsNotEmpty()\n  limit: number;\n\n  @Field(() => String)\n  @IsNotEmpty()\n  phase: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateAnnouncementInput.html":{"url":"classes/CreateAnnouncementInput.html","title":"class - CreateAnnouncementInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateAnnouncementInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/announcements/dto/create-announcement.input.ts\n        \n\n\n            \n                Description\n            \n            \n                graphql input scheme\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                endAt\n                            \n                            \n                                    \n                                    \n                                form\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                startAt\n                            \n                            \n                                    \n                                    \n                                target\n                            \n                            \n                                    \n                                    \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Announcement description.'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/announcements/dto/create-announcement.input.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        endAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'End date for the announcent to be unavailable'})@IsDate()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/announcements/dto/create-announcement.input.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Id of the form to render for submissions.', nullable: true})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/announcements/dto/create-announcement.input.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Announcement name.'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/announcements/dto/create-announcement.input.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        startAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Start date for the announcement to be available.'})@IsDate()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/announcements/dto/create-announcement.input.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        target\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AnnouncementTargets\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Announcement target entity.'})@IsEnum(AnnouncementTargets)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/announcements/dto/create-announcement.input.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AnnouncementTypes\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Announcement type.'})@IsEnum(AnnouncementTypes)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/announcements/dto/create-announcement.input.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { InputType, Field } from '@nestjs/graphql';\nimport { IsDate, IsEnum, IsString } from 'class-validator';\nimport { AnnouncementTypes } from '../enums/announcement-types.enum';\nimport { AnnouncementTargets } from '../enums/announcement-targets.enum';\n\n/**\n * graphql input scheme\n */\n@InputType()\nexport class CreateAnnouncementInput {\n  @Field(() => String, { description: 'Announcement name.' })\n  @IsString()\n  name: string;\n\n  @Field(() => String, { description: 'Announcement description.' })\n  @IsString()\n  description: string;\n\n  @Field(() => String, {\n    description: 'Id of the form to render for submissions.',\n    nullable: true,\n  })\n  @IsString()\n  form: string;\n\n  @Field(() => AnnouncementTypes, { description: 'Announcement type.' })\n  @IsEnum(AnnouncementTypes)\n  type: AnnouncementTypes;\n\n  @Field(() => AnnouncementTargets, {\n    description: 'Announcement target entity.',\n  })\n  @IsEnum(AnnouncementTargets)\n  target: AnnouncementTargets;\n\n  @Field(() => Date, {\n    description: 'Start date for the announcement to be available.',\n  })\n  @IsDate()\n  startAt: Date;\n\n  @Field(() => Date, {\n    description: 'End date for the announcent to be unavailable',\n  })\n  @IsDate()\n  endAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateConfigEvaluationInput.html":{"url":"classes/CreateConfigEvaluationInput.html","title":"class - CreateConfigEvaluationInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateConfigEvaluationInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/evaluations/config-evaluations/dto/create-config-evaluation.input.ts\n        \n\n\n            \n                Description\n            \n            \n                graphql input scheme\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                endAt\n                            \n                            \n                                    \n                                    \n                                evaluated\n                            \n                            \n                                    \n                                    \n                                form\n                            \n                            \n                                    \n                                    \n                                phase\n                            \n                            \n                                    \n                                    \n                                reviewer\n                            \n                            \n                                    \n                                    \n                                startAt\n                            \n                            \n                                    \n                                    \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/evaluations/config-evaluations/dto/create-config-evaluation.input.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        endAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/evaluations/config-evaluations/dto/create-config-evaluation.input.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        evaluated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/evaluations/config-evaluations/dto/create-config-evaluation.input.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/evaluations/config-evaluations/dto/create-config-evaluation.input.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        phase\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/evaluations/config-evaluations/dto/create-config-evaluation.input.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        reviewer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/evaluations/config-evaluations/dto/create-config-evaluation.input.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        startAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/evaluations/config-evaluations/dto/create-config-evaluation.input.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/evaluations/config-evaluations/dto/create-config-evaluation.input.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { InputType, Int, Field } from '@nestjs/graphql';\nimport { IsNotEmpty, IsOptional } from 'class-validator';\n/**\n * graphql input scheme\n */\n@InputType()\nexport class CreateConfigEvaluationInput {\n  @Field(() => String)\n  @IsNotEmpty()\n  title: string;\n\n  @Field(() => String)\n  @IsOptional()\n  description: string;\n\n  @Field(() => String)\n  @IsNotEmpty()\n  reviewer: string;\n\n  @Field(() => String)\n  @IsNotEmpty()\n  evaluated: string;\n\n  @Field(() => String)\n  @IsNotEmpty()\n  form: string;\n\n  @Field(() => String)\n  @IsNotEmpty()\n  phase: string;\n\n  @Field(() => Date)\n  @IsNotEmpty()\n  startAt: Date;\n\n  @Field(() => Date)\n  @IsNotEmpty()\n  endAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateConfigNotificationInput.html":{"url":"classes/CreateConfigNotificationInput.html","title":"class - CreateConfigNotificationInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateConfigNotificationInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/notifications/config-notifications/dto/create-config-notification.input.ts\n        \n\n\n            \n                Description\n            \n            \n                graphql input scheme\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                excluded\n                            \n                            \n                                    \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        excluded\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/notifications/config-notifications/dto/create-config-notification.input.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/notifications/config-notifications/dto/create-config-notification.input.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { InputType, Int, Field } from '@nestjs/graphql';\n/**\n * graphql input scheme\n */\n@InputType()\nexport class CreateConfigNotificationInput {\n  @Field(() => String)\n  type: string;\n\n  @Field(() => [String])\n  excluded: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateContentInput.html":{"url":"classes/CreateContentInput.html","title":"class - CreateContentInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateContentInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/content/dto/create-content.input.ts\n        \n\n\n            \n                Description\n            \n            \n                graphql input scheme\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                content\n                            \n                            \n                                    \n                                    \n                                extra_options\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                phase\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {defaultValue: ''})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/content/dto/create-content.input.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        extra_options\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/content/dto/create-content.input.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/content/dto/create-content.input.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        phase\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/content/dto/create-content.input.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { InputType, Field } from '@nestjs/graphql';\nimport { IsNotEmpty, IsOptional } from 'class-validator';\nimport { GraphQLJSONObject } from 'graphql-scalars';\n/**\n * graphql input scheme\n */\n@InputType()\nexport class CreateContentInput {\n  @Field(() => String)\n  @IsNotEmpty()\n  name: string;\n\n  @Field(() => String, { defaultValue: '' })\n  @IsOptional()\n  content: string;\n\n  @Field(() => GraphQLJSONObject)\n  @IsOptional()\n  extra_options: Record;\n\n  @Field(() => String)\n  @IsNotEmpty()\n  phase: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateEventInput.html":{"url":"classes/CreateEventInput.html","title":"class - CreateEventInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateEventInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/events/dto/create-event.input.ts\n        \n\n\n            \n                Description\n            \n            \n                graphql input scheme\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                attendanceType\n                            \n                            \n                                    \n                                    \n                                batch\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                description\n                            \n                            \n                                    \n                                    \n                                endAt\n                            \n                            \n                                    \n                                    \n                                experts\n                            \n                            \n                                    \n                                    \n                                extra_options\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                participants\n                            \n                            \n                                    \n                                    \n                                startAt\n                            \n                            \n                                    \n                                    \n                                teamCoaches\n                            \n                            \n                                    \n                                    \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        attendanceType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/create-event.input.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        batch\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/create-event.input.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/create-event.input.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        endAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/create-event.input.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        experts\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ExpertEventSubmit[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/create-event.input.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        extra_options\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/create-event.input.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/create-event.input.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        participants\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ParticipantEventSubmit[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/create-event.input.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        startAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/create-event.input.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        teamCoaches\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TeamCoachSubmit[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/create-event.input.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/create-event.input.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { InputType, Int, Field } from '@nestjs/graphql';\nimport { IsNotEmpty, IsOptional } from 'class-validator';\nimport { GraphQLJSONObject } from 'graphql-scalars';\n/**\n * graphql input scheme\n */\n@InputType()\nexport class CreateEventInput {\n  @Field(() => String)\n  @IsNotEmpty()\n  name: string;\n\n  @Field(() => String)\n  @IsNotEmpty()\n  type: string;\n\n  @Field(() => String)\n  @IsNotEmpty()\n  attendanceType: string;\n\n  @Field(() => String)\n  @IsOptional()\n  description?: string;\n\n  @Field(() => Date)\n  @IsNotEmpty()\n  startAt: Date;\n\n  @Field(() => Date)\n  @IsNotEmpty()\n  endAt: Date;\n\n  @Field(() => GraphQLJSONObject)\n  @IsOptional()\n  extra_options: Record;\n\n  @Field(() => String)\n  @IsNotEmpty()\n  batch: string;\n\n  @Field(() => [ExpertEventSubmit])\n  @IsOptional()\n  experts: ExpertEventSubmit[];\n\n  @Field(() => [TeamCoachSubmit])\n  @IsOptional()\n  teamCoaches: TeamCoachSubmit[];\n\n  @Field(() => [ParticipantEventSubmit])\n  @IsOptional()\n  participants: ParticipantEventSubmit[];\n}\n/**\n * @ignore\n */\n@InputType()\nexport class TeamCoachSubmit {\n  @Field(() => String)\n  @IsNotEmpty()\n  _id: string;\n\n  @Field(() => String)\n  @IsNotEmpty()\n  name: string;\n\n  @Field(() => String)\n  email: string;\n}\n/**\n * @ignore\n */\n@InputType()\nexport class ExpertEventSubmit {\n  @Field(() => String)\n  @IsNotEmpty()\n  _id: string;\n\n  @Field(() => String)\n  @IsNotEmpty()\n  name: string;\n\n  @Field(() => String)\n  email: string;\n}\n/**\n * @ignore\n */\n@InputType()\nexport class ParticipantEventSubmit {\n  @Field(() => String)\n  @IsNotEmpty()\n  _id: string;\n\n  @Field(() => String)\n  @IsNotEmpty()\n  name: string;\n\n  @Field(() => String)\n  email: string;\n\n  @Field(() => String)\n  startupEntrepreneur: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateFormInput.html":{"url":"classes/CreateFormInput.html","title":"class - CreateFormInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateFormInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/forms/form/dto/create-form.input.ts\n        \n\n\n            \n                Description\n            \n            \n                graphql input\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                documents\n                            \n                            \n                                    \n                                    \n                                formJson\n                            \n                            \n                                    \n                                    \n                                keys\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                tags\n                            \n                            \n                                    \n                                    \n                                target\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Form description, this value is not shown with the form fields when rendered.'})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/forms/form/dto/create-form.input.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        documents\n                        \n                    \n                \n            \n                \n                    \n                        Type :     JSON[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Document input fields'})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/forms/form/dto/create-form.input.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        formJson\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Serialized form json used to dynamically build the form fields.'})@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/forms/form/dto/create-form.input.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        keys\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'List of form field keys used to identify the form submissions as unique.'})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/forms/form/dto/create-form.input.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Name used to identify the form, this value is not shown with the form fields when rendered.'})@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/forms/form/dto/create-form.input.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        tags\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'List of tags assigned to the form'})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/forms/form/dto/create-form.input.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        target\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormCollections\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Target table/collection for this form, determines where the submissions will be stored in the database.'})@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/forms/form/dto/create-form.input.ts:36\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { InputType, Field } from '@nestjs/graphql';\nimport { IsNotEmpty, IsOptional } from 'class-validator';\nimport { FormCollections } from '../enums/form-collections';\nimport GraphQLJSON from 'graphql-type-json';\n/**\n * graphql input\n */\n@InputType()\nexport class CreateFormInput {\n  @Field(() => String, {\n    description:\n      'Name used to identify the form, this value is not shown with the form fields when rendered.',\n  })\n  @IsNotEmpty()\n  name: string;\n\n  @Field(() => String, {\n    description:\n      'Form description, this value is not shown with the form fields when rendered.',\n  })\n  @IsOptional()\n  description: string;\n\n  @Field(() => String, {\n    description:\n      'Serialized form json used to dynamically build the form fields.',\n  })\n  @IsNotEmpty()\n  formJson: string;\n\n  @Field(() => String, {\n    description:\n      'Target table/collection for this form, determines where the submissions will be stored in the database.',\n  })\n  @IsNotEmpty()\n  target: FormCollections;\n\n  @Field(() => [GraphQLJSON], { description: 'Document input fields' })\n  @IsOptional()\n  documents: JSON[];\n\n  @Field(() => [String], {\n    description:\n      'List of form field keys used to identify the form submissions as unique.',\n  })\n  @IsOptional()\n  keys: string[];\n\n  @Field(() => [String], { description: 'List of tags assigned to the form' })\n  @IsOptional()\n  tags: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateFormSubscriptionInput.html":{"url":"classes/CreateFormSubscriptionInput.html","title":"class - CreateFormSubscriptionInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateFormSubscriptionInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/forms/form-subscription/dto/create-form-subscription.input.ts\n        \n\n\n            \n                Description\n            \n            \n                graphql input\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                data\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                doc\n                            \n                            \n                                    \n                                    \n                                form\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                reason\n                            \n                            \n                                    \n                                    Optional\n                                target\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     JSON\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/forms/form-subscription/dto/create-form-subscription.input.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        doc\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/forms/form-subscription/dto/create-form-subscription.input.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/forms/form-subscription/dto/create-form-subscription.input.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        reason\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/forms/form-subscription/dto/create-form-subscription.input.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        target\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormCollections\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/forms/form-subscription/dto/create-form-subscription.input.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { InputType, Field } from '@nestjs/graphql';\nimport { IsEmpty, IsNotEmpty, IsOptional } from 'class-validator';\nimport GraphQLJSON from 'graphql-type-json';\nimport { FormCollections } from 'src/forms/form/enums/form-collections';\n/**\n * graphql input\n */\n@InputType()\nexport class CreateFormSubscriptionInput {\n  @Field(() => String, { nullable: true })\n  @IsOptional()\n  doc?: string;\n\n  @Field(() => String)\n  @IsNotEmpty()\n  form: string;\n\n  @Field(() => GraphQLJSON, { nullable: true })\n  @IsOptional()\n  data?: JSON;\n\n  @Field(() => String, { nullable: true })\n  @IsOptional()\n  reason?: string;\n\n  @IsEmpty()\n  target?: FormCollections;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateFormTagInput.html":{"url":"classes/CreateFormTagInput.html","title":"class - CreateFormTagInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateFormTagInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/forms/form-tag/dto/create-form-tag.input.ts\n        \n\n\n            \n                Description\n            \n            \n                graphql inputs\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/forms/form-tag/dto/create-form-tag.input.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { InputType, Field } from '@nestjs/graphql';\nimport { IsNotEmpty } from 'class-validator';\n/**\n * graphql inputs\n */\n@InputType()\nexport class CreateFormTagInput {\n  @Field(() => String)\n  @IsNotEmpty()\n  name: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateHelpDeskInput.html":{"url":"classes/CreateHelpDeskInput.html","title":"class - CreateHelpDeskInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateHelpDeskInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/help-desk/dto/create-help-desk.input.ts\n        \n\n\n            \n                Description\n            \n            \n                graphql input scheme\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                category\n                            \n                            \n                                    \n                                    \n                                newChild\n                            \n                            \n                                    \n                                    \n                                    \n                                startupId\n                            \n                            \n                                    \n                                    \n                                    \n                                startupName\n                            \n                            \n                                    \n                                    \n                                    \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TicketCategory\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsEnum(TicketCategory)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/help-desk/dto/create-help-desk.input.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        newChild\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsObject()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/help-desk/dto/create-help-desk.input.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        startupId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsString()@MinLength(5)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/help-desk/dto/create-help-desk.input.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        startupName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsString()@MinLength(2)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/help-desk/dto/create-help-desk.input.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsString()@MinLength(2)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/help-desk/dto/create-help-desk.input.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { InputType, Int, Field } from '@nestjs/graphql';\nimport { IsEnum, IsObject, IsString, MinLength } from 'class-validator';\nimport GraphQLJSON from 'graphql-type-json';\nimport { TicketCategory } from '../enum/ticket-category.enum';\nimport { IFileUpload } from 'src/shared/models/file';\n/**\n * graphql input scheme\n */\n@InputType()\nexport class CreateHelpDeskInput {\n  @Field(() => String)\n  @IsString()\n  @MinLength(2)\n  title: string;\n\n  @Field(() => GraphQLJSON)\n  @IsObject()\n  newChild: {\n    body: string;\n    attachment: IFileUpload[];\n    isResponse: boolean;\n    answerBy: string;\n    answerById: string;\n  };\n\n  @Field(() => String)\n  @IsString()\n  @MinLength(5)\n  startupId: string;\n\n  @Field(() => String)\n  @IsString()\n  @MinLength(2)\n  startupName: string;\n\n  @Field(() => String)\n  @IsEnum(TicketCategory)\n  category: TicketCategory;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateIntegrationInput.html":{"url":"classes/CreateIntegrationInput.html","title":"class - CreateIntegrationInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateIntegrationInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/integrations/dto/create-integration.input.ts\n        \n\n\n            \n                Description\n            \n            \n                graphql input scheme\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                code\n                            \n                            \n                                    \n                                    \n                                metadata\n                            \n                            \n                                    \n                                    \n                                    \n                                typeIntegration\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/integrations/dto/create-integration.input.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        metadata\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/integrations/dto/create-integration.input.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        typeIntegration\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TypeIntegration\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEnum(TypeIntegration)@IsNotEmpty()@Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/integrations/dto/create-integration.input.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { InputType, Field, Int } from '@nestjs/graphql';\nimport { IsEnum, IsNotEmpty, IsOptional, IsString } from 'class-validator';\nimport { TypeIntegration } from '../enum/types.enum';\nimport GraphQLJSON from 'graphql-type-json';\n/**\n * graphql input scheme\n */\n@InputType()\nexport class CreateIntegrationInput {\n  @IsString()\n  @IsNotEmpty()\n  @Field(() => String)\n  code: string;\n\n  @IsEnum(TypeIntegration)\n  @IsNotEmpty()\n  @Field(() => String)\n  typeIntegration: TypeIntegration;\n\n  @Field(() => GraphQLJSON)\n  @IsOptional()\n  metadata: Record;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateInvitationArgs.html":{"url":"classes/CreateInvitationArgs.html","title":"class - CreateInvitationArgs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateInvitationArgs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/invitations/args/create-invitation.args.ts\n        \n\n\n            \n                Description\n            \n            \n                graphql input args\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                rol\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsEmail()@IsNotEmpty()@Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/invitations/args/create-invitation.args.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        rol\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ValidRoles\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEnum(ValidRoles)@IsNotEmpty()@Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/invitations/args/create-invitation.args.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, ArgsType } from '@nestjs/graphql';\nimport { IsString, IsEmail, IsEnum, IsNotEmpty } from 'class-validator';\nimport { ValidRoles } from 'src/auth/enums/valid-roles.enum';\n/**\n * graphql input args\n */\n@ArgsType()\nexport class CreateInvitationArgs {\n  @IsString()\n  @IsEmail()\n  @IsNotEmpty()\n  @Field(() => String)\n  email: string;\n\n  @IsEnum(ValidRoles)\n  @IsNotEmpty()\n  @Field(() => ValidRoles)\n  rol: ValidRoles;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateNotificationInput.html":{"url":"classes/CreateNotificationInput.html","title":"class - CreateNotificationInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateNotificationInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/notifications/dto/create-notification.input.ts\n        \n\n\n            \n                Description\n            \n            \n                graphql input scheme\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                state\n                            \n                            \n                                    \n                                    \n                                    \n                                target\n                            \n                            \n                                    \n                                    \n                                text\n                            \n                            \n                                    \n                                    \n                                type\n                            \n                            \n                                    \n                                    \n                                    \n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NotificationStates\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/notifications/dto/create-notification.input.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        target\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/notifications/dto/create-notification.input.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        text\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/notifications/dto/create-notification.input.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NotificationTypes\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/notifications/dto/create-notification.input.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/notifications/dto/create-notification.input.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { InputType, Int, Field } from '@nestjs/graphql';\nimport { IsNotEmpty, IsOptional, IsString } from 'class-validator';\nimport { NotificationStates } from '../enum/notification-states.enum';\nimport { NotificationTypes } from '../enum/notification-types.enum';\n/**\n * graphql input scheme\n */\n@InputType()\nexport class CreateNotificationInput {\n  @Field(() => String)\n  @IsString()\n  text: string;\n\n  @Field(() => String)\n  @IsString()\n  @IsOptional()\n  url: string;\n\n  @Field(() => String)\n  @IsString()\n  @IsNotEmpty()\n  target: string;\n\n  @IsString()\n  @IsNotEmpty()\n  state: NotificationStates;\n\n  @IsString()\n  @IsNotEmpty()\n  type: NotificationTypes;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateParticipationEventInput.html":{"url":"classes/CreateParticipationEventInput.html","title":"class - CreateParticipationEventInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateParticipationEventInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/events/participation-events/dto/create-participation-event.input.ts\n        \n\n\n            \n                Description\n            \n            \n                graphql input scheme\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                event\n                            \n                            \n                                    \n                                    \n                                metadata\n                            \n                            \n                                    \n                                    \n                                participant\n                            \n                            \n                                    \n                                    \n                                startup\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        event\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/participation-events/dto/create-participation-event.input.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        metadata\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/participation-events/dto/create-participation-event.input.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        participant\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/participation-events/dto/create-participation-event.input.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        startup\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/participation-events/dto/create-participation-event.input.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { InputType, Int, Field } from '@nestjs/graphql';\nimport { IsNotEmpty, IsOptional } from 'class-validator';\nimport { GraphQLJSONObject } from 'graphql-scalars';\n/**\n * graphql input scheme\n */\n@InputType()\nexport class CreateParticipationEventInput {\n  @Field(() => String)\n  @IsNotEmpty()\n  participant: string;\n\n  @Field(() => String)\n  @IsNotEmpty()\n  startup: string;\n\n  @Field(() => String)\n  @IsNotEmpty()\n  event: string;\n\n  @Field(() => GraphQLJSONObject)\n  @IsOptional()\n  metadata: Record;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePhaseInput.html":{"url":"classes/CreatePhaseInput.html","title":"class - CreatePhaseInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePhaseInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/phases/dto/create-phase.input.ts\n        \n\n\n            \n                Description\n            \n            \n                graphql input scheme\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                basePhase\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                childrenOf\n                            \n                            \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                endAt\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                index\n                            \n                            \n                                    \n                                    \n                                landing\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                stage\n                            \n                            \n                                    \n                                    \n                                startAt\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                thumbnail\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        basePhase\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/phases/dto/create-phase.input.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        childrenOf\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/phases/dto/create-phase.input.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {defaultValue: ''})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/phases/dto/create-phase.input.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        endAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/phases/dto/create-phase.input.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        index\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/phases/dto/create-phase.input.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        landing\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {defaultValue: ''})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/phases/dto/create-phase.input.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/phases/dto/create-phase.input.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        stage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/phases/dto/create-phase.input.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        startAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/phases/dto/create-phase.input.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        thumbnail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/phases/dto/create-phase.input.ts:30\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { InputType, Field, Int } from '@nestjs/graphql';\nimport { IsNotEmpty, IsOptional } from 'class-validator';\n/**\n * graphql input scheme\n */\n@InputType()\nexport class CreatePhaseInput {\n  @Field(() => String, { nullable: true })\n  @IsOptional()\n  childrenOf?: string;\n\n  @Field(() => String)\n  @IsNotEmpty()\n  stage: string;\n\n  @Field(() => String)\n  @IsNotEmpty()\n  name: string;\n\n  @Field(() => String, { defaultValue: '' })\n  @IsOptional()\n  description: string;\n\n  @Field(() => String, { defaultValue: '' })\n  @IsOptional()\n  landing: string;\n\n  @Field(() => String, { nullable: true })\n  @IsOptional()\n  thumbnail?: string;\n\n  @Field(() => Boolean)\n  @IsNotEmpty()\n  basePhase: boolean;\n\n  @Field(() => Date)\n  @IsNotEmpty()\n  startAt: Date;\n\n  @Field(() => Date)\n  @IsNotEmpty()\n  endAt: Date;\n\n  @Field(() => Int, { nullable: true })\n  @IsOptional()\n  index?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateResourceInput.html":{"url":"classes/CreateResourceInput.html","title":"class - CreateResourceInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateResourceInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resources/dto/create-resource.input.ts\n        \n\n\n            \n                Description\n            \n            \n                graphql input scheme\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                content\n                            \n                            \n                                    \n                                    \n                                extra_options\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                hide\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                phase\n                            \n                            \n                                    \n                                    \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resources/dto/create-resource.input.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        extra_options\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resources/dto/create-resource.input.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        hide\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resources/dto/create-resource.input.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resources/dto/create-resource.input.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        phase\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resources/dto/create-resource.input.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ResourceType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resources/dto/create-resource.input.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { InputType, Field } from '@nestjs/graphql';\nimport { IsNotEmpty, IsOptional } from 'class-validator';\nimport { GraphQLJSONObject } from 'graphql-scalars';\nimport { ResourceType } from '../enums/resources-types';\n/**\n * graphql input scheme\n */\n@InputType()\nexport class CreateResourceInput {\n  @Field(() => String)\n  @IsNotEmpty()\n  name: string;\n\n  @Field(() => GraphQLJSONObject)\n  @IsOptional()\n  extra_options: Record;\n\n  @Field(() => String)\n  @IsNotEmpty()\n  phase: string;\n\n  @Field(() => String)\n  @IsNotEmpty()\n  content: string;\n\n  @Field(() => ResourceType)\n  @IsNotEmpty()\n  type: ResourceType;\n\n  @Field(() => Boolean, { nullable: true })\n  @IsOptional()\n  hide?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateResourcesReplyInput.html":{"url":"classes/CreateResourcesReplyInput.html","title":"class - CreateResourcesReplyInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateResourcesReplyInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resources/resources-replies/dto/create-resources-reply.input.ts\n        \n\n\n            \n                Description\n            \n            \n                graphql input scheme\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                item\n                            \n                            \n                                    \n                                    \n                                phase\n                            \n                            \n                                    \n                                    \n                                resource\n                            \n                            \n                                    \n                                    \n                                sprint\n                            \n                            \n                                    \n                                    \n                                startup\n                            \n                            \n                                    \n                                    \n                                state\n                            \n                            \n                                    \n                                    \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        item\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resources/resources-replies/dto/create-resources-reply.input.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        phase\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resources/resources-replies/dto/create-resources-reply.input.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        resource\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resources/resources-replies/dto/create-resources-reply.input.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        sprint\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resources/resources-replies/dto/create-resources-reply.input.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        startup\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resources/resources-replies/dto/create-resources-reply.input.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resources/resources-replies/dto/create-resources-reply.input.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resources/resources-replies/dto/create-resources-reply.input.ts:31\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { InputType, Int, Field } from '@nestjs/graphql';\nimport { IsNotEmpty, IsOptional } from 'class-validator';\nimport { GraphQLJSONObject } from 'graphql-scalars';\n/**\n * graphql input scheme\n */\n@InputType()\nexport class CreateResourcesReplyInput {\n  @Field(() => GraphQLJSONObject)\n  @IsOptional()\n  item: Record;\n\n  @Field(() => String)\n  @IsNotEmpty()\n  phase: string;\n\n  @Field(() => String)\n  @IsNotEmpty()\n  startup: string;\n\n  @Field(() => String)\n  @IsNotEmpty()\n  resource: string;\n\n  @Field(() => String)\n  @IsNotEmpty()\n  sprint: string;\n\n  @Field(() => String)\n  @IsNotEmpty()\n  type: string;\n\n  @Field(() => String)\n  @IsNotEmpty()\n  state: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateRolInput.html":{"url":"classes/CreateRolInput.html","title":"class - CreateRolInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateRolInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rol/dto/create-rol.input.ts\n        \n\n\n            \n                Description\n            \n            \n                graphql input scheme\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                rol\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        rol\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/rol/dto/create-rol.input.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { InputType, Field } from '@nestjs/graphql';\nimport { IsNotEmpty, IsOptional } from 'class-validator';\n/**\n * graphql input scheme\n */\n@InputType()\nexport class CreateRolInput {\n  @Field(() => String)\n  @IsNotEmpty()\n  rol: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateSiteInput.html":{"url":"classes/CreateSiteInput.html","title":"class - CreateSiteInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateSiteInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/sites/dto/create-site.input.ts\n        \n\n\n            \n                Description\n            \n            \n                graphql inputs\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                contacts\n                            \n                            \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                directedTo\n                            \n                            \n                                    \n                                    \n                                factors\n                            \n                            \n                                    \n                                    \n                                methodology\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                results\n                            \n                            \n                                    \n                                    \n                                thumbnail\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        contacts\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ContactServicesInput[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sites/dto/create-site.input.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sites/dto/create-site.input.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        directedTo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sites/dto/create-site.input.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        factors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sites/dto/create-site.input.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        methodology\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sites/dto/create-site.input.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sites/dto/create-site.input.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        results\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sites/dto/create-site.input.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        thumbnail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sites/dto/create-site.input.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { InputType, Int, Field } from '@nestjs/graphql';\nimport { IsNotEmpty, IsOptional } from 'class-validator';\nimport { GraphQLJSONObject } from 'graphql-scalars';\nimport { ContactServicesInput } from './update-site.input';\n/**\n * graphql inputs\n */\n@InputType()\nexport class CreateSiteInput {\n  @Field(() => String)\n  @IsNotEmpty()\n  name: string;\n\n  @Field(() => String, { nullable: true })\n  @IsOptional()\n  thumbnail: string;\n\n  @Field(() => String)\n  @IsOptional()\n  description: string;\n\n  @Field(() => String)\n  @IsOptional()\n  directedTo: string;\n\n  @Field(() => String)\n  @IsOptional()\n  methodology: string;\n\n  @Field(() => [String])\n  @IsOptional()\n  factors: string[];\n\n  @Field(() => String)\n  @IsOptional()\n  results: string;\n\n  @Field(() => [ContactServicesInput], { nullable: true })\n  @IsOptional()\n  contacts: ContactServicesInput[];\n\n  // @Field(() => GraphQLJSONObject)\n  // @IsOptional()\n  // coords: Record;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateStageInput.html":{"url":"classes/CreateStageInput.html","title":"class - CreateStageInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateStageInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stages/dto/create-stage.input.ts\n        \n\n\n            \n                Description\n            \n            \n                graphql inputs\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                color\n                            \n                            \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                icon\n                            \n                            \n                                    \n                                    \n                                index\n                            \n                            \n                                    \n                                    \n                                label\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        color\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/stages/dto/create-stage.input.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/stages/dto/create-stage.input.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        icon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/stages/dto/create-stage.input.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        index\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/stages/dto/create-stage.input.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        label\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/stages/dto/create-stage.input.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/stages/dto/create-stage.input.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { InputType, Field, Int } from '@nestjs/graphql';\nimport { IsNotEmpty, IsOptional } from 'class-validator';\n/**\n * graphql inputs\n */\n@InputType()\nexport class CreateStageInput {\n  @Field(() => Int)\n  @IsNotEmpty()\n  index: number;\n\n  @Field(() => String)\n  @IsNotEmpty()\n  name: string;\n\n  @Field(() => String, { nullable: true })\n  @IsOptional()\n  description: string;\n\n  @Field(() => String)\n  @IsNotEmpty()\n  label: string;\n\n  @Field(() => String)\n  @IsNotEmpty()\n  color: string;\n\n  @Field(() => String)\n  @IsNotEmpty()\n  icon: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateTableConfigInput.html":{"url":"classes/CreateTableConfigInput.html","title":"class - CreateTableConfigInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTableConfigInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/table/table-config/dto/create-table-config.input.ts\n        \n\n\n            \n                Description\n            \n            \n                graphql inputs\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                table\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Name of the table configuration.'})@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/table/table-config/dto/create-table-config.input.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        table\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Id of the table the configuration is associated with.'})@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/table/table-config/dto/create-table-config.input.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { InputType, Field } from '@nestjs/graphql';\nimport { IsNotEmpty } from 'class-validator';\n/**\n * graphql inputs\n */\n@InputType()\nexport class CreateTableConfigInput {\n  @Field(() => String, {\n    description: 'Id of the table the configuration is associated with.',\n  })\n  @IsNotEmpty()\n  table: string;\n\n  @Field(() => String, { description: 'Name of the table configuration.' })\n  @IsNotEmpty()\n  name: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateTableInput.html":{"url":"classes/CreateTableInput.html","title":"class - CreateTableInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTableInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/table/table/dto/create-table.input.ts\n        \n\n\n            \n                Description\n            \n            \n                graphql inputs\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                form\n                            \n                            \n                                    \n                                    \n                                locator\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Form used by the table.'})@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/table/table/dto/create-table.input.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        locator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'String key used to identify the table by its location.'})@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/table/table/dto/create-table.input.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { InputType, Field } from '@nestjs/graphql';\nimport { IsNotEmpty } from 'class-validator';\n/**\n * graphql inputs\n */\n@InputType()\nexport class CreateTableInput {\n  @Field(() => String, {\n    description: 'String key used to identify the table by its location.',\n  })\n  @IsNotEmpty()\n  locator: string;\n\n  @Field(() => String, { description: 'Form used by the table.' })\n  @IsNotEmpty()\n  form: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateTypesEventInput.html":{"url":"classes/CreateTypesEventInput.html","title":"class - CreateTypesEventInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTypesEventInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/events/types-events/dto/create-types-event.input.ts\n        \n\n\n            \n                Description\n            \n            \n                graphql input scheme\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                expertFocus\n                            \n                            \n                                    \n                                    \n                                extra_options\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        expertFocus\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/types-events/dto/create-types-event.input.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        extra_options\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/types-events/dto/create-types-event.input.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/types-events/dto/create-types-event.input.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { InputType, Int, Field } from '@nestjs/graphql';\nimport { IsNotEmpty, IsOptional } from 'class-validator';\nimport { GraphQLJSONObject } from 'graphql-scalars';\n/**\n * graphql input scheme\n */\n@InputType()\nexport class CreateTypesEventInput {\n  @Field(() => String)\n  @IsNotEmpty()\n  name: string;\n\n  @Field(() => GraphQLJSONObject)\n  @IsOptional()\n  extra_options: Record;\n\n  @Field(() => Boolean, { nullable: false })\n  @IsOptional()\n  expertFocus?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserInput.html":{"url":"classes/CreateUserInput.html","title":"class - CreateUserInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.input.ts\n        \n\n\n            \n                Description\n            \n            \n                graphql inputs\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                fullName\n                            \n                            \n                                    \n                                    Optional\n                                profileImageUrl\n                            \n                            \n                                    \n                                    \n                                roles\n                            \n                            \n                                    \n                                uid\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.input.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        fullName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.input.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        profileImageUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.input.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ValidRoles[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsEnum(ValidRoles, {each: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.input.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        uid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.input.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { InputType, Field } from '@nestjs/graphql';\nimport { IsEnum } from 'class-validator';\nimport { ValidRoles } from 'src/auth/enums/valid-roles.enum';\n/**\n * graphql inputs\n */\n@InputType()\nexport class CreateUserInput {\n  @Field(() => String, { nullable: true })\n  uid: string;\n\n  @Field(() => String, { nullable: true })\n  fullName: string;\n\n  @Field(() => String, { nullable: true })\n  email: string;\n\n  @Field(() => String, { nullable: true })\n  profileImageUrl?: string;\n\n  @Field(() => [ValidRoles], { nullable: true })\n  @IsEnum(ValidRoles, { each: true })\n  roles: ValidRoles[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserLogInput.html":{"url":"classes/CreateUserLogInput.html","title":"class - CreateUserLogInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserLogInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user-log/dto/create-user-log.input.ts\n        \n\n\n            \n                Description\n            \n            \n                graphql inputs\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                metadata\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        metadata\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user-log/dto/create-user-log.input.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { InputType, Int, Field } from '@nestjs/graphql';\nimport { IsNotEmpty, IsOptional } from 'class-validator';\nimport { GraphQLJSONObject } from 'graphql-scalars';\n/**\n * graphql inputs\n */\n@InputType()\nexport class CreateUserLogInput {\n  @Field(() => GraphQLJSONObject)\n  @IsOptional()\n  metadata: Record;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Download.html":{"url":"classes/Download.html","title":"class - Download","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Download\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/downloads/entities/download.ts\n        \n\n\n            \n                Description\n            \n            \n                Downloads of table in app\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                _id\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                    \n                                updatedBy\n                            \n                            \n                                    \n                                    \n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/downloads/entities/download.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Date of entity creation.'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/downloads/entities/download.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'If set, The date the entity was deleted. A deleted file should not exists in its storage', nullable: true})@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/downloads/entities/download.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Original name of stored file.'})@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/downloads/entities/download.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Date of last entity update.'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/downloads/entities/download.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'If set, Details from user who last updated the entity.', nullable: true})@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/downloads/entities/download.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Url of stored file.'})@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/downloads/entities/download.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ObjectType, Field, ID } from '@nestjs/graphql';\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { User } from 'src/users/entities/user.entity';\n/**\n * Downloads of table in app\n */\n@Schema({ timestamps: true })\n@ObjectType()\nexport class Download {\n  @Field(() => ID)\n  _id: string;\n\n  @Field(() => String, { description: 'Original name of stored file.' })\n  @Prop()\n  name: string;\n\n  @Field(() => String, { description: 'Url of stored file.' })\n  @Prop()\n  url: string;\n\n  @Field(() => Date, {\n    description:\n      'If set, The date the entity was deleted. A deleted file should not exists in its storage',\n    nullable: true,\n  })\n  @Prop()\n  deletedAt: Date;\n\n  @Field(() => User, {\n    description: 'If set, Details from user who last updated the entity.',\n    nullable: true,\n  })\n  @Prop()\n  updatedBy: string;\n\n  @Field(() => Date, { description: 'Date of entity creation.' })\n  createdAt: Date;\n\n  @Field(() => Date, { description: 'Date of last entity update.' })\n  updatedAt: Date;\n}\n/**\n * @ignore\n */\nexport const DownloadSchema = SchemaFactory.createForClass(Download);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DownloadsModule.html":{"url":"modules/DownloadsModule.html","title":"module - DownloadsModule","body":"\n                   \n\n\n\n\n    Modules\n    DownloadsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DownloadsModule\n\n\n\ncluster_DownloadsModule_imports\n\n\n\ncluster_DownloadsModule_exports\n\n\n\ncluster_DownloadsModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nDownloadsModule\n\nDownloadsModule\n\nDownloadsModule -->\n\nAuthModule->DownloadsModule\n\n\n\n\n\nStorageModule\n\nStorageModule\n\nDownloadsModule -->\n\nStorageModule->DownloadsModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nDownloadsModule -->\n\nUsersModule->DownloadsModule\n\n\n\n\n\nDownloadsService \n\nDownloadsService \n\nDownloadsService  -->\n\nDownloadsModule->DownloadsService \n\n\n\n\n\nDownloadsService\n\nDownloadsService\n\nDownloadsModule -->\n\nDownloadsService->DownloadsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/downloads/downloads.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            DownloadsService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            StorageModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DownloadsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { DownloadsService } from './downloads.service';\nimport { DownloadsController } from './downloads.controller';\nimport { Download, DownloadSchema } from './entities/download';\nimport { AuthModule } from 'src/auth/auth.module';\nimport { UsersModule } from 'src/users/users.module';\nimport { StorageModule } from 'src/storage/storage.module';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([{ name: Download.name, schema: DownloadSchema }]),\n    AuthModule,\n    UsersModule,\n    StorageModule,\n  ],\n  controllers: [DownloadsController],\n  providers: [DownloadsService],\n  exports: [DownloadsService],\n})\nexport class DownloadsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DownloadsService.html":{"url":"injectables/DownloadsService.html","title":"injectable - DownloadsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DownloadsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/downloads/downloads.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                uploadTempFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(downloadModel: Model, storageService: StorageService)\n                    \n                \n                        \n                            \n                                Defined in src/downloads/downloads.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        downloadModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        storageService\n                                                  \n                                                        \n                                                                        StorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        uploadTempFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    uploadTempFile(data: Buffer, extension: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/downloads/downloads.service.ts:20\n                        \n                    \n\n\n            \n                \n                        prepare data to download file of a table in app\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        Buffer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                extension\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { Download } from './entities/download';\nimport { Buffer } from 'exceljs';\nimport { StorageService } from 'src/storage/models/storage-service';\nimport * as uuid from 'uuid';\nimport { Readable } from 'node:stream';\n\n@Injectable()\nexport class DownloadsService {\n  constructor(\n    @InjectModel(Download.name) private readonly downloadModel: Model,\n    private readonly storageService: StorageService,\n  ) {}\n\n  /**\n   * prepare data to download file of a table in app\n   */\n  async uploadTempFile(data: Buffer, extension: string): Promise {\n    const fileId = uuid.v4();\n    const fileName = `${fileId}.${extension}`;\n    // const readable = new Readable();\n    // readable._read = () => {} // _read is required but you can noop it\n    // readable.push(data);\n    // readable.push(null);\n    const fileUrl = await this.storageService.uploadTemporaryFile(\n      fileName,\n      data as any,\n    );\n    const downloadData = {\n      name: fileName,\n      url: fileUrl,\n    };\n    const createdDownload = await this.downloadModel.create(downloadData);\n    return createdDownload.url;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/EmailsController.html":{"url":"controllers/EmailsController.html","title":"controller - EmailsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  EmailsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/emails/emails.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                emails\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                sendEmail\n                            \n                            \n                                    \n                                sendEmailTemplate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        sendEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendEmail(createEmailDto: SendEmailInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/emails/emails.controller.ts:12\n                        \n                    \n\n\n            \n                \n                        send email http endpoint\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createEmailDto\n                                            \n                                                            SendEmailInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        sendEmailTemplate\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendEmailTemplate(createEmailDto: TemplateInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/template')\n                \n            \n\n                    \n                        \n                            Defined in src/emails/emails.controller.ts:20\n                        \n                    \n\n\n            \n                \n                        send email template http endpoint\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createEmailDto\n                                            \n                                                            TemplateInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Post, Body } from '@nestjs/common';\nimport { EmailsService } from './emails.service';\nimport { SendEmailInput } from './dto/send-email.input';\nimport { TemplateInput } from './dto/template.input';\n@Controller('emails')\nexport class EmailsController {\n  constructor(private readonly emailsService: EmailsService) {}\n  /**\n   * send email http endpoint\n   */\n  @Post()\n  sendEmail(@Body() createEmailDto: SendEmailInput) {\n    return this.emailsService.send(createEmailDto);\n  }\n\n  /**\n   * send email template http endpoint\n   */\n  @Post('/template')\n  sendEmailTemplate(@Body() createEmailDto: TemplateInput) {\n    return this.emailsService.sendFromTemplate(createEmailDto.data);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EmailsModule.html":{"url":"modules/EmailsModule.html","title":"module - EmailsModule","body":"\n                   \n\n\n\n\n    Modules\n    EmailsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_EmailsModule\n\n\n\ncluster_EmailsModule_imports\n\n\n\ncluster_EmailsModule_providers\n\n\n\ncluster_EmailsModule_exports\n\n\n\n\nLoggerModule\n\nLoggerModule\n\n\n\nEmailsModule\n\nEmailsModule\n\nEmailsModule -->\n\nLoggerModule->EmailsModule\n\n\n\n\n\nEmailsService \n\nEmailsService \n\nEmailsService  -->\n\nEmailsModule->EmailsService \n\n\n\n\n\nEmailsService\n\nEmailsService\n\nEmailsModule -->\n\nEmailsService->EmailsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/emails/emails.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            EmailsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            EmailsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            LoggerModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            EmailsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { EmailsService } from './emails.service';\nimport { EmailsController } from './emails.controller';\nimport { LoggerModule } from 'src/logger/logger.module';\nimport { SendGridProvider } from './provider/sendgrid.service';\nimport { AWSSESProvider } from './provider/aws.service';\n('./provider/aws.service');\nimport { EMAIL_TOKEN } from './repository/email.repository';\n\n@Module({\n  imports: [LoggerModule],\n  controllers: [EmailsController],\n  providers: [\n    EmailsService,\n    SendGridProvider,\n    AWSSESProvider,\n    { provide: EMAIL_TOKEN, useExisting: SendGridProvider },\n  ],\n  exports: [EmailsService],\n})\nexport class EmailsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EmailsRepository.html":{"url":"interfaces/EmailsRepository.html","title":"interface - EmailsRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  EmailsRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/emails/repository/email.repository.ts\n        \n\n\n            \n                Description\n            \n            \n                email repository\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            send\n                                        \n                                \n                                \n                                        \n                                            sendFromTemplate\n                                        \n                                \n                                \n                                        \n                                            sendIcs\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        send\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        send:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sendFromTemplate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sendFromTemplate:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sendIcs\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sendIcs:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Event } from 'src/events/entities/event.entity';\nimport { SendEmailInput } from '../dto/send-email.input';\nimport { Template } from '../templates/template';\n\n/**\n * email repository\n */\nexport interface EmailsRepository {\n  send: (mail: SendEmailInput) => Promise;\n  sendFromTemplate: (templateInput: Template) => Promise;\n  sendIcs: (\n    mail: {\n      to: string | string[];\n      subject: string;\n      text: string;\n      html: string;\n    },\n    event: Event,\n    others: {\n      nameOrganizer: string;\n      emailOrganizer: string;\n      urlRedirect: string;\n      country?: string;\n    },\n  ) => Promise;\n}\n/**\n * @ignore\n */\nexport const EMAIL_TOKEN = 'emails-token';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EmailsService.html":{"url":"injectables/EmailsService.html","title":"injectable - EmailsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  EmailsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/emails/emails.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                send\n                            \n                            \n                                    Async\n                                sendFromTemplate\n                            \n                            \n                                    Async\n                                sendIcs\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(emailService: EmailsRepository, logger: AppLogger)\n                    \n                \n                        \n                            \n                                Defined in src/emails/emails.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        emailService\n                                                  \n                                                        \n                                                                        EmailsRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    AppLogger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        send\n                        \n                    \n                \n            \n            \n                \n                        \n                    send(mail: SendEmailInput)\n                \n            \n\n\n                    \n                        \n                            Defined in src/emails/emails.service.ts:30\n                        \n                    \n\n\n            \n                \n                        send one email\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                mail\n                                            \n                                                            SendEmailInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        sendFromTemplate\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendFromTemplate(templateInput: Template)\n                \n            \n\n\n                    \n                        \n                            Defined in src/emails/emails.service.ts:37\n                        \n                    \n\n\n            \n                \n                        send one email by template\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                templateInput\n                                            \n                                                        Template\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        sendIcs\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendIcs(mail: literal type, event: Event, others: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/emails/emails.service.ts:44\n                        \n                    \n\n\n            \n                \n                        send one email with ics file\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                mail\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                event\n                                            \n                                                            Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                others\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { SendEmailInput } from './dto/send-email.input';\nimport { AppLogger } from 'src/logger/app-logger';\nimport { Template } from './templates/template';\nimport { EMAIL_TOKEN, EmailsRepository } from './repository/email.repository';\nimport { EmailTemplates, templateNames } from './enums/email-templates';\nimport {\n  Inject,\n  BadRequestException,\n  Injectable,\n  InternalServerErrorException,\n  MethodNotAllowedException,\n} from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { AppConfiguration } from 'config/app.config';\nimport * as SendGrid from '@sendgrid/mail';\nimport * as SendGridClient from '@sendgrid/client';\nimport { Event } from 'src/events/entities/event.entity';\n@Injectable()\nexport class EmailsService {\n  constructor(\n    @Inject(EMAIL_TOKEN) private readonly emailService: EmailsRepository,\n    private readonly logger: AppLogger,\n  ) {\n    this.logger.setContext(EmailsService.name);\n  }\n\n  /**\n   * send one email\n   */\n  async send(mail: SendEmailInput) {\n    return this.emailService.send(mail);\n  }\n\n  /**\n   * send one email by template\n   */\n  async sendFromTemplate(templateInput: Template) {\n    return this.emailService.sendFromTemplate(templateInput);\n  }\n\n  /**\n   * send one email with ics file\n   */\n  async sendIcs(\n    mail: {\n      to: string | string[];\n      subject: string;\n      text: string;\n      html: string;\n    },\n    event: Event,\n    others: {\n      nameOrganizer: string;\n      emailOrganizer: string;\n      urlRedirect: string;\n      country?: string;\n    },\n  ) {\n    return this.emailService.sendIcs(mail, event, others);\n  }\n  // private readonly templatesId: Record;\n  // private readonly defaultVerifiedEmail: string;\n  // private readonly apiKey: string;\n  // constructor(\n  //   private readonly configService: ConfigService,\n  //   private readonly logger: AppLogger,\n  // ) {\n  //   this.logger.setContext(EmailsService.name);\n  //   // Set api key\n  //   this.apiKey = this.configService.get('sendGridKey');\n  //   if (this.apiKey) {\n  //     SendGrid.setApiKey(this.apiKey);\n  //     SendGridClient.setApiKey(this.apiKey);\n  //   }\n  //   // Set available templates\n  //   this.templatesId = {\n  //     [EmailTemplates.invitation]: configService.get(\n  //       'sendGridInvitationTemplateId',\n  //     ),\n  //     [EmailTemplates.notification]: configService.get(\n  //       'sendGridNotificationTemplateId',\n  //     ),\n  //   };\n  //   this.defaultVerifiedEmail = this.configService.get(\n  //     'sendGridDefaultVerifiedEmail',\n  //   );\n  // }\n\n  // async send(mail: SendEmailInput) {\n  //   if (!this.apiKey)\n  //     throw new MethodNotAllowedException('This service is not available');\n\n  //   if (!mail.from) {\n  //     if (!this.defaultVerifiedEmail) {\n  //       throw new BadRequestException(\n  //         'Must specify a verified email for the from field',\n  //       );\n  //     }\n  //     mail.from = this.defaultVerifiedEmail;\n  //   }\n  //   try {\n  //     const transport = await SendGrid.send(mail);\n  //     this.logger.log(`Email successfully dispatched to ${mail.to}`);\n  //     return transport;\n  //   } catch (ex) {\n  //     this.logger.error(ex);\n  //     throw new InternalServerErrorException(\n  //       'Got an unexpected exception while trying to send an email',\n  //       ex,\n  //     );\n  //   }\n  // }\n\n  // async sendFromTemplate(templateInput: Template) {\n  //   const templateId = this.templatesId[templateInput.template];\n  //   if (!templateId)\n  //     throw new MethodNotAllowedException(\n  //       `This template ${\n  //         templateNames[templateInput.template]\n  //       } is not available or configuration is missing`,\n  //     );\n  //   if (!this.apiKey)\n  //     throw new MethodNotAllowedException('This service is not available');\n  //   if (!templateInput.from) {\n  //     if (!this.defaultVerifiedEmail) {\n  //       throw new BadRequestException(\n  //         'Must specify a verified email for the from field',\n  //       );\n  //     }\n  //   }\n  //   try {\n  //     const transport = await SendGrid.send({\n  //       ...templateInput,\n  //       from: templateInput.from ?? this.defaultVerifiedEmail,\n  //       templateId: templateId,\n  //     });\n  //     this.logger.log(\n  //       `Email successfully dispatched with template ${templateInput.template}`,\n  //     );\n  //     return transport;\n  //   } catch (ex) {\n  //     this.logger.error(ex);\n  //     throw new InternalServerErrorException(\n  //       'Got an unexpected exception while trying to send an email',\n  //       ex,\n  //     );\n  //   }\n  // }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Entrepreneur.html":{"url":"classes/Entrepreneur.html","title":"class - Entrepreneur","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Entrepreneur\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/entrepreneur/entities/entrepreneur.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                Entrepreneur docs\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                _id\n                            \n                            \n                                    \n                                    \n                                accountId\n                            \n                            \n                                    \n                                    \n                                businesses\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                isProspect\n                            \n                            \n                                    \n                                    \n                                item\n                            \n                            \n                                    \n                                    \n                                startups\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entrepreneur/entities/entrepreneur.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        accountId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@Prop({default: ''})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entrepreneur/entities/entrepreneur.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        businesses\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BusinessRelationship[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entrepreneur/entities/entrepreneur.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Date of entity creation.'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entrepreneur/entities/entrepreneur.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'If set, The date the entity was deleted.', nullable: true})@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entrepreneur/entities/entrepreneur.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isProspect\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entrepreneur/entities/entrepreneur.entity.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        item\n                        \n                    \n                \n            \n                \n                    \n                        Type :     JSON\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entrepreneur/entities/entrepreneur.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        startups\n                        \n                    \n                \n            \n                \n                    \n                        Type :     StartupRelationship[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entrepreneur/entities/entrepreneur.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Date of last entity update.'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entrepreneur/entities/entrepreneur.entity.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'If set, Details from user who last updated the entity.', nullable: true})@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entrepreneur/entities/entrepreneur.entity.ts:43\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ObjectType, Field, ID } from '@nestjs/graphql';\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { User } from 'src/users/entities/user.entity';\nimport GraphQLJSON from 'graphql-type-json';\nimport { PhaseRelationship } from 'src/startup/entities/startup.entity';\n/**\n * Entrepreneur docs\n */\n@Schema({ timestamps: true })\n@ObjectType()\nexport class Entrepreneur {\n  @Field(() => ID)\n  _id: string;\n\n  @Field(() => [StartupRelationship])\n  @Prop({ default: [] })\n  startups: StartupRelationship[];\n\n  @Field(() => [BusinessRelationship])\n  @Prop({ default: [] })\n  businesses: BusinessRelationship[];\n\n  @Field(() => User, { nullable: true })\n  @Prop({ default: '' })\n  accountId: string;\n\n  @Field(() => GraphQLJSON)\n  @Prop({ type: Object })\n  item: JSON;\n\n  @Field(() => Date, {\n    description: 'If set, The date the entity was deleted.',\n    nullable: true,\n  })\n  @Prop()\n  deletedAt: Date;\n\n  @Field(() => User, {\n    description: 'If set, Details from user who last updated the entity.',\n    nullable: true,\n  })\n  @Prop()\n  updatedBy: string;\n\n  @Field(() => Date, { description: 'Date of entity creation.' })\n  createdAt: Date;\n\n  @Field(() => Date, { description: 'Date of last entity update.' })\n  updatedAt: Date;\n\n  @Field(() => Boolean, { nullable: true })\n  isProspect: boolean;\n}\n/**\n * @ignore\n */\nexport const EntrepreneurSchema = SchemaFactory.createForClass(Entrepreneur);\n/**\n * Relationship between entrepreneur and startup\n */\n@Schema()\n@ObjectType()\nexport class StartupRelationship {\n  @Field(() => String)\n  @Prop()\n  _id: string;\n\n  @Field(() => GraphQLJSON)\n  @Prop({ type: Object })\n  item: JSON;\n\n  @Field(() => [PhaseRelationship], { defaultValue: [] })\n  @Prop({ default: [] })\n  phases: PhaseRelationship[];\n\n  @Field(() => String)\n  @Prop()\n  state: string;\n}\n/**\n * Relationship between entrepreneur and business\n */\n@Schema()\n@ObjectType()\nexport class BusinessRelationship {\n  @Field(() => String)\n  @Prop()\n  _id: string;\n\n  @Field(() => GraphQLJSON)\n  @Prop({ type: Object })\n  item: JSON;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EntrepreneurModule.html":{"url":"modules/EntrepreneurModule.html","title":"module - EntrepreneurModule","body":"\n                   \n\n\n\n\n    Modules\n    EntrepreneurModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_EntrepreneurModule\n\n\n\ncluster_EntrepreneurModule_imports\n\n\n\ncluster_EntrepreneurModule_providers\n\n\n\ncluster_EntrepreneurModule_exports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nEntrepreneurModule\n\nEntrepreneurModule\n\nEntrepreneurModule -->\n\nAuthModule->EntrepreneurModule\n\n\n\n\n\nDownloadsModule\n\nDownloadsModule\n\nEntrepreneurModule -->\n\nDownloadsModule->EntrepreneurModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nEntrepreneurModule -->\n\nUsersModule->EntrepreneurModule\n\n\n\n\n\nEntrepreneurService \n\nEntrepreneurService \n\nEntrepreneurService  -->\n\nEntrepreneurModule->EntrepreneurService \n\n\n\n\n\nEntrepreneurService\n\nEntrepreneurService\n\nEntrepreneurModule -->\n\nEntrepreneurService->EntrepreneurModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/entrepreneur/entrepreneur.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            EntrepreneurService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            DownloadsModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            EntrepreneurService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module, forwardRef } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { EntrepreneurService } from './entrepreneur.service';\nimport { EntrepreneurResolver } from './entrepreneur.resolver';\nimport { UsersModule } from 'src/users/users.module';\nimport { AuthModule } from 'src/auth/auth.module';\nimport {\n  Entrepreneur,\n  EntrepreneurSchema,\n} from './entities/entrepreneur.entity';\nimport { BusinessModule } from 'src/business/business.module';\nimport { StartupModule } from 'src/startup/startup.module';\nimport { ExpertModule } from 'src/expert/expert.module';\nimport { DownloadsModule } from 'src/downloads/downloads.module';\nimport { TableModule } from 'src/table/table.module';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      { name: Entrepreneur.name, schema: EntrepreneurSchema },\n    ]),\n    AuthModule,\n    UsersModule,\n    forwardRef(() => BusinessModule),\n    forwardRef(() => StartupModule),\n    forwardRef(() => ExpertModule),\n    DownloadsModule,\n    forwardRef(() => TableModule),\n  ],\n  providers: [EntrepreneurResolver, EntrepreneurService],\n  exports: [EntrepreneurService],\n})\nexport class EntrepreneurModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EntrepreneurRelationship.html":{"url":"classes/EntrepreneurRelationship.html","title":"class - EntrepreneurRelationship","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EntrepreneurRelationship\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/business/entities/business.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                Relationship between business doc and entrepreneurs doc\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                _id\n                            \n                            \n                                    \n                                    \n                                item\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/business/entities/business.entity.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        item\n                        \n                    \n                \n            \n                \n                    \n                        Type :     JSON\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/business/entities/business.entity.ts:62\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ObjectType, Field, ID } from '@nestjs/graphql';\nimport { Prop, SchemaFactory, Schema } from '@nestjs/mongoose';\nimport GraphQLJSON from 'graphql-type-json';\nimport { User } from 'src/users/entities/user.entity';\n/**\n * Business doc of entrepreneurs\n */\n@Schema()\n@ObjectType()\nexport class Business {\n  @Field(() => ID)\n  _id: string;\n\n  @Field(() => GraphQLJSON, {\n    description: 'Additional dynamic entity properties.',\n  })\n  @Prop({ type: Object })\n  item: JSON;\n\n  @Field(() => GraphQLJSON, {\n    description: 'List of entrepreneurs linked to the business.',\n  })\n  @Prop()\n  entrepreneurs: EntrepreneurRelationship[];\n\n  @Field(() => Date, {\n    description: 'If set, The date the entity was deleted.',\n    nullable: true,\n  })\n  @Prop()\n  deletedAt: Date;\n\n  @Field(() => User, {\n    description: 'If set, Details from user who last updated the entity.',\n    nullable: true,\n  })\n  @Prop()\n  updatedBy: string;\n\n  @Field(() => Date, { description: 'Date of entity creation.' })\n  createdAt: Date;\n\n  @Field(() => Date, { description: 'Date of last entity update.' })\n  updatedAt: Date;\n}\n/**\n * @ignore\n */\nexport const BusinessSchema = SchemaFactory.createForClass(Business);\n/**\n * Relationship between business doc and entrepreneurs doc\n */\n@Schema()\n@ObjectType()\nexport class EntrepreneurRelationship {\n  @Field(() => String)\n  @Prop()\n  _id: string;\n\n  @Field(() => GraphQLJSON)\n  @Prop({ type: Object })\n  item: JSON;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EntrepreneurRelationship-1.html":{"url":"classes/EntrepreneurRelationship-1.html","title":"class - EntrepreneurRelationship-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EntrepreneurRelationship\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/startup/entities/startup.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                relationship with entrepreneurs\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                _id\n                            \n                            \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                item\n                            \n                            \n                                    \n                                    \n                                rol\n                            \n                            \n                                    \n                                    \n                                state\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({type: undefined, ref: 'Entrepreneur'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/startup/entities/startup.entity.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/startup/entities/startup.entity.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        item\n                        \n                    \n                \n            \n                \n                    \n                        Type :     JSON\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/startup/entities/startup.entity.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        rol\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/startup/entities/startup.entity.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/startup/entities/startup.entity.ts:78\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ObjectType, Field, ID } from '@nestjs/graphql';\nimport { Schema, Prop, SchemaFactory } from '@nestjs/mongoose';\nimport GraphQLJSON from 'graphql-type-json';\nimport { SchemaTypes } from 'mongoose';\nimport { User } from 'src/users/entities/user.entity';\n/**\n * startup docs\n */\n@Schema({ timestamps: true })\n@ObjectType()\nexport class Startup {\n  @Field(() => ID)\n  _id: string;\n\n  @Field(() => [PhaseRelationship])\n  @Prop({ default: [] })\n  phases: PhaseRelationship[];\n\n  @Field(() => [EntrepreneurRelationship])\n  @Prop({ default: [] })\n  entrepreneurs: EntrepreneurRelationship[];\n\n  @Field(() => GraphQLJSON)\n  @Prop({ type: Object })\n  item: JSON;\n\n  @Field(() => Date, {\n    description: 'If set, The date the entity was deleted.',\n    nullable: true,\n  })\n  @Prop()\n  deletedAt: Date;\n\n  @Field(() => User, {\n    description: 'If set, Details from user who last updated the entity.',\n    nullable: true,\n  })\n  @Prop()\n  updatedBy: string;\n\n  @Field(() => Date, { description: 'Date of entity creation.' })\n  createdAt: Date;\n\n  @Field(() => Date, { description: 'Date of last entity update.' })\n  updatedAt: Date;\n\n  @Field(() => Boolean, { nullable: true })\n  isProspect: boolean;\n\n  @Field(() => String, { nullable: true })\n  @Prop({ default: '' })\n  thumbnail: string;\n}\n/**\n * relationship with entrepreneurs\n */\n@Schema()\n@ObjectType()\nexport class EntrepreneurRelationship {\n  @Field(() => String)\n  @Prop({ type: SchemaTypes.ObjectId, ref: 'Entrepreneur' })\n  _id: string;\n\n  @Field(() => GraphQLJSON)\n  @Prop({ type: Object })\n  item: JSON;\n\n  @Field(() => String)\n  @Prop()\n  rol: string;\n\n  @Field(() => String)\n  @Prop()\n  description: string;\n\n  @Field(() => String)\n  @Prop()\n  state: string;\n}\n/**\n * relationship with phases\n */\n@Schema()\n@ObjectType()\nexport class PhaseRelationship {\n  @Field(() => String)\n  @Prop({ type: SchemaTypes.ObjectId, ref: 'Phase' })\n  _id: string;\n\n  @Field(() => String)\n  @Prop()\n  name: string;\n\n  @Field(() => String)\n  @Prop()\n  state: string;\n}\n/**\n * @ignore\n */\nexport const StartupSchema = SchemaFactory.createForClass(Startup);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EntrepreneurStartupArgs.html":{"url":"classes/EntrepreneurStartupArgs.html","title":"class - EntrepreneurStartupArgs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EntrepreneurStartupArgs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/args/entrepreneur-startup-data.ts\n        \n\n\n            \n                Description\n            \n            \n                graphql args input\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                _id\n                            \n                            \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                rol\n                            \n                            \n                                    \n                                    \n                                startup\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/args/entrepreneur-startup-data.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/args/entrepreneur-startup-data.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        rol\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/args/entrepreneur-startup-data.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        startup\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/args/entrepreneur-startup-data.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, ArgsType } from '@nestjs/graphql';\nimport { IsArray, IsNotEmpty } from 'class-validator';\n/**\n * graphql args input\n */\n@ArgsType()\nexport class EntrepreneurStartupArgs {\n  @Field(() => String)\n  @IsNotEmpty()\n  startup: string;\n\n  @Field(() => String)\n  @IsNotEmpty()\n  _id: string;\n\n  @Field(() => String)\n  @IsNotEmpty()\n  rol: string;\n\n  @Field(() => String)\n  @IsNotEmpty()\n  description: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Evaluation.html":{"url":"classes/Evaluation.html","title":"class - Evaluation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Evaluation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/evaluations/entities/evaluation.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                Evaluations done\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                _id\n                            \n                            \n                                    \n                                    \n                                config\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                    \n                                evaluated\n                            \n                            \n                                    \n                                    \n                                form\n                            \n                            \n                                    \n                                    \n                                isDeleted\n                            \n                            \n                                    \n                                    \n                                item\n                            \n                            \n                                    \n                                    \n                                reviewer\n                            \n                            \n                                    \n                                    \n                                state\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/evaluations/entities/evaluation.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/evaluations/entities/evaluation.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Date of entity creation.'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/evaluations/entities/evaluation.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        evaluated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/evaluations/entities/evaluation.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/evaluations/entities/evaluation.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/evaluations/entities/evaluation.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        item\n                        \n                    \n                \n            \n                \n                    \n                        Type :     JSON\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Set of additional dynamic properties.'})@Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/evaluations/entities/evaluation.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        reviewer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/evaluations/entities/evaluation.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({default: 'evaluado'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/evaluations/entities/evaluation.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Date of last entity update.'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/evaluations/entities/evaluation.entity.ts:43\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ObjectType, Field, ID } from '@nestjs/graphql';\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport GraphQLJSON from 'graphql-type-json';\n/**\n * Evaluations done\n */\n@Schema({ timestamps: true })\n@ObjectType()\nexport class Evaluation {\n  @Field(() => ID)\n  _id: string;\n\n  @Field(() => GraphQLJSON, {\n    description: 'Set of additional dynamic properties.',\n  })\n  @Prop({ type: Object })\n  item: JSON;\n\n  @Field(() => String)\n  @Prop()\n  evaluated: string;\n\n  @Field(() => String)\n  @Prop()\n  reviewer: string;\n\n  @Field(() => String)\n  @Prop()\n  form: string;\n\n  @Field(() => String)\n  @Prop()\n  config: string;\n\n  @Field(() => String)\n  @Prop({ default: 'evaluado' })\n  state: string;\n\n  @Field(() => Date, { description: 'Date of entity creation.' })\n  createdAt: Date;\n\n  @Field(() => Date, { description: 'Date of last entity update.' })\n  updatedAt: Date;\n\n  @Field(() => Boolean)\n  @Prop({ default: false })\n  isDeleted: boolean;\n}\n/**\n * @ignore\n */\nexport const EvaluationSchema = SchemaFactory.createForClass(Evaluation);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EvaluationsModule.html":{"url":"modules/EvaluationsModule.html","title":"module - EvaluationsModule","body":"\n                   \n\n\n\n\n    Modules\n    EvaluationsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_EvaluationsModule\n\n\n\ncluster_EvaluationsModule_providers\n\n\n\ncluster_EvaluationsModule_imports\n\n\n\ncluster_EvaluationsModule_exports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nEvaluationsModule\n\nEvaluationsModule\n\nEvaluationsModule -->\n\nAuthModule->EvaluationsModule\n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nEvaluationsModule -->\n\nLoggerModule->EvaluationsModule\n\n\n\n\n\nEvaluationsService \n\nEvaluationsService \n\nEvaluationsService  -->\n\nEvaluationsModule->EvaluationsService \n\n\n\n\n\nEvaluationsService\n\nEvaluationsService\n\nEvaluationsModule -->\n\nEvaluationsService->EvaluationsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/evaluations/evaluations.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            EvaluationsService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            LoggerModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            EvaluationsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module, forwardRef } from '@nestjs/common';\nimport { EvaluationsService } from './evaluations.service';\nimport { EvaluationsResolver } from './evaluations.resolver';\n\nimport { ConfigEvaluationsModule } from './config-evaluations/config-evaluations.module';\nimport { AuthModule } from 'src/auth/auth.module';\nimport { LoggerModule } from 'src/logger/logger.module';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Evaluation, EvaluationSchema } from './entities/evaluation.entity';\nimport { UsersModule } from 'src/users/users.module';\nimport { ExpertModule } from 'src/expert/expert.module';\nimport { StartupModule } from 'src/startup/startup.module';\nimport { ConfigNotificationsModule } from 'src/notifications/config-notifications/config-notifications.module';\nimport { NotificationsModule } from 'src/notifications/notifications.module';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      { name: Evaluation.name, schema: EvaluationSchema },\n    ]),\n    AuthModule,\n    LoggerModule,\n    forwardRef(() => ConfigEvaluationsModule),\n    forwardRef(() => UsersModule),\n    forwardRef(() => ExpertModule),\n    forwardRef(() => StartupModule),\n    forwardRef(() => ConfigNotificationsModule),\n    forwardRef(() => NotificationsModule),\n  ],\n  providers: [EvaluationsResolver, EvaluationsService],\n  exports: [EvaluationsService],\n})\nexport class EvaluationsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Event.html":{"url":"classes/Event.html","title":"class - Event","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Event\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/events/entities/event.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                Events docs\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                _id\n                            \n                            \n                                    \n                                    \n                                attendanceType\n                            \n                            \n                                    \n                                    \n                                batch\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                endAt\n                            \n                            \n                                    \n                                    \n                                experts\n                            \n                            \n                                    \n                                    \n                                extra_options\n                            \n                            \n                                    \n                                    \n                                isCanceled\n                            \n                            \n                                    \n                                    \n                                isDeleted\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                participants\n                            \n                            \n                                    \n                                    \n                                startAt\n                            \n                            \n                                    \n                                    \n                                teamCoaches\n                            \n                            \n                                    \n                                    \n                                type\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/entities/event.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        attendanceType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/entities/event.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        batch\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({type: undefined, ref: 'Phase'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/entities/event.entity.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/entities/event.entity.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/entities/event.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        endAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/entities/event.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        experts\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ExpertEventLink[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/entities/event.entity.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        extra_options\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/entities/event.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        isCanceled\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/entities/event.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/entities/event.entity.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/entities/event.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        participants\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ParticipantEventLink[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/entities/event.entity.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        startAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/entities/event.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        teamCoaches\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TeamCoachLink[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/entities/event.entity.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/entities/event.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/entities/event.entity.ts:54\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ObjectType, Field, ID } from '@nestjs/graphql';\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { GraphQLJSONObject } from 'graphql-scalars';\nimport { SchemaTypes } from 'mongoose';\n/**\n * Events docs\n */\n@Schema({ timestamps: true })\n@ObjectType()\nexport class Event {\n  @Field(() => ID)\n  _id: string;\n\n  @Field(() => String)\n  @Prop({ required: true })\n  name: string;\n\n  @Field(() => String)\n  @Prop({ required: true })\n  type: string;\n\n  @Field(() => String)\n  @Prop({ required: true })\n  attendanceType: string;\n\n  @Field(() => String)\n  @Prop({})\n  description: string;\n\n  @Field(() => GraphQLJSONObject)\n  @Prop({ type: SchemaTypes.Mixed })\n  extra_options: any;\n\n  @Field(() => Date)\n  @Prop({ required: true })\n  startAt: Date;\n\n  @Field(() => Date)\n  @Prop({ required: true })\n  endAt: Date;\n\n  @Field(() => Boolean)\n  @Prop({ default: false })\n  isCanceled: boolean;\n\n  @Field(() => Boolean)\n  @Prop({ default: false })\n  isDeleted: boolean;\n\n  @Field(() => Date)\n  createdAt: Date;\n\n  @Field(() => Date)\n  updatedAt: Date;\n\n  @Field(() => String)\n  @Prop({ type: SchemaTypes.ObjectId, ref: 'Phase' })\n  batch: string;\n\n  @Field(() => [ExpertEventLink])\n  @Prop({ default: [] })\n  experts: ExpertEventLink[];\n\n  @Field(() => [TeamCoachLink])\n  @Prop({ default: [] })\n  teamCoaches: TeamCoachLink[];\n\n  @Field(() => [ParticipantEventLink])\n  @Prop({ default: [] })\n  participants: ParticipantEventLink[];\n}\n/**\n * team coach link\n */\n@Schema()\n@ObjectType()\nexport class TeamCoachLink implements IEntityEvent {\n  @Field(() => String)\n  @Prop({ type: SchemaTypes.ObjectId, ref: 'User' })\n  _id: string;\n\n  @Field(() => String)\n  @Prop()\n  name: string;\n\n  @Field(() => String)\n  @Prop()\n  email: string;\n}\n/**\n * expert link\n */\n@Schema()\n@ObjectType()\nexport class ExpertEventLink implements IEntityEvent {\n  @Field(() => String)\n  @Prop({ type: SchemaTypes.ObjectId, ref: 'Expert' })\n  _id: string;\n\n  @Field(() => String)\n  @Prop()\n  name: string;\n\n  @Field(() => String)\n  @Prop()\n  email: string;\n}\n\n/**\n * participant link\n */\n@Schema()\n@ObjectType()\nexport class ParticipantEventLink implements IEntityEvent {\n  @Field(() => String)\n  @Prop({ type: SchemaTypes.ObjectId, ref: 'Entrepreneur' })\n  _id: string;\n\n  @Field(() => String)\n  @Prop()\n  name: string;\n\n  @Field(() => String)\n  @Prop()\n  email: string;\n\n  @Field(() => String, { nullable: true })\n  @Prop()\n  startupEntrepreneur: string;\n}\n/**\n * @ignore\n */\nexport interface IEntityEvent {\n  _id: string;\n  name: string;\n  email: string;\n}\n/**\n * @ignore\n */\nexport const EventSchema = SchemaFactory.createForClass(Event);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EventsModule.html":{"url":"modules/EventsModule.html","title":"module - EventsModule","body":"\n                   \n\n\n\n\n    Modules\n    EventsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_EventsModule\n\n\n\ncluster_EventsModule_imports\n\n\n\ncluster_EventsModule_exports\n\n\n\ncluster_EventsModule_providers\n\n\n\n\nActaModule\n\nActaModule\n\n\n\nEventsModule\n\nEventsModule\n\nEventsModule -->\n\nActaModule->EventsModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nEventsModule -->\n\nAuthModule->EventsModule\n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nEventsModule -->\n\nLoggerModule->EventsModule\n\n\n\n\n\nParticipationEventsModule\n\nParticipationEventsModule\n\nEventsModule -->\n\nParticipationEventsModule->EventsModule\n\n\n\n\n\nEventsService \n\nEventsService \n\nEventsService  -->\n\nEventsModule->EventsService \n\n\n\n\n\nEventsService\n\nEventsService\n\nEventsModule -->\n\nEventsService->EventsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/events/events.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            EventsService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ActaModule\n                        \n                        \n                            AuthModule\n                        \n                        \n                            LoggerModule\n                        \n                        \n                            ParticipationEventsModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            EventsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module, forwardRef } from '@nestjs/common';\nimport { EventsService } from './events.service';\nimport { EventsResolver } from './events.resolver';\nimport { LoggerModule } from 'src/logger/logger.module';\nimport { AuthModule } from 'src/auth/auth.module';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Event as EventEntity, EventSchema } from './entities/event.entity';\nimport { ActaModule } from './acta/acta.module';\nimport { ExpertModule } from 'src/expert/expert.module';\nimport { StartupModule } from 'src/startup/startup.module';\nimport { UsersModule } from 'src/users/users.module';\nimport { EntrepreneurModule } from 'src/entrepreneur/entrepreneur.module';\nimport { PhasesModule } from 'src/phases/phases.module';\nimport { ParticipationEventsModule } from './participation-events/participation-events.module';\nimport { IntegrationsModule } from 'src/integrations/integrations.module';\nimport { EmailsModule } from 'src/emails/emails.module';\nimport { ConfigNotificationsModule } from 'src/notifications/config-notifications/config-notifications.module';\nimport { NotificationsModule } from 'src/notifications/notifications.module';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      { name: EventEntity.name, schema: EventSchema },\n    ]),\n    AuthModule,\n    LoggerModule,\n    ActaModule,\n    ParticipationEventsModule,\n    forwardRef(() => ExpertModule),\n    forwardRef(() => StartupModule),\n    forwardRef(() => EntrepreneurModule),\n    forwardRef(() => PhasesModule),\n    forwardRef(() => IntegrationsModule),\n    forwardRef(() => EmailsModule),\n    forwardRef(() => ConfigNotificationsModule),\n    forwardRef(() => NotificationsModule),\n    forwardRef(() => UsersModule),\n  ],\n  providers: [EventsResolver, EventsService],\n  exports: [EventsService],\n})\nexport class EventsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Expert.html":{"url":"classes/Expert.html","title":"class - Expert","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Expert\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/expert/entities/expert.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                Expert docs\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                _id\n                            \n                            \n                                    \n                                    \n                                accountId\n                            \n                            \n                                    \n                                    \n                                calendlyLink\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                isProspect\n                            \n                            \n                                    \n                                    \n                                item\n                            \n                            \n                                    \n                                    \n                                phases\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/expert/entities/expert.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        accountId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@Prop({default: ''})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/expert/entities/expert.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        calendlyLink\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@Prop({default: ''})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/expert/entities/expert.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Date of entity creation.'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/expert/entities/expert.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'If set, The date the entity was deleted.', nullable: true})@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/expert/entities/expert.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isProspect\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/expert/entities/expert.entity.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        item\n                        \n                    \n                \n            \n                \n                    \n                        Type :     JSON\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/expert/entities/expert.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        phases\n                        \n                    \n                \n            \n                \n                    \n                        Type :     PhaseExpertRelationship[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/expert/entities/expert.entity.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Date of last entity update.'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/expert/entities/expert.entity.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'If set, Details from user who last updated the entity.', nullable: true})@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/expert/entities/expert.entity.ts:39\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ObjectType, Field, ID } from '@nestjs/graphql';\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport GraphQLJSON from 'graphql-type-json';\nimport { SchemaTypes } from 'mongoose';\nimport { User } from 'src/users/entities/user.entity';\n/**\n * Expert docs\n */\n@Schema({ timestamps: true })\n@ObjectType()\nexport class Expert {\n  @Field(() => ID)\n  _id: string;\n\n  @Field(() => User, { nullable: true })\n  @Prop({ default: '' })\n  accountId: string;\n\n  @Field(() => String, { nullable: true })\n  @Prop({ default: '' })\n  calendlyLink: string;\n\n  @Field(() => GraphQLJSON)\n  @Prop({ type: Object })\n  item: JSON;\n\n  @Field(() => Date, {\n    description: 'If set, The date the entity was deleted.',\n    nullable: true,\n  })\n  @Prop()\n  deletedAt: Date;\n\n  @Field(() => User, {\n    description: 'If set, Details from user who last updated the entity.',\n    nullable: true,\n  })\n  @Prop()\n  updatedBy: string;\n\n  @Field(() => [PhaseExpertRelationship])\n  @Prop({ default: [] })\n  phases: PhaseExpertRelationship[];\n\n  @Field(() => Date, { description: 'Date of entity creation.' })\n  createdAt: Date;\n\n  @Field(() => Date, { description: 'Date of last entity update.' })\n  updatedAt: Date;\n\n  @Field(() => Boolean)\n  isProspect: boolean;\n}\n/**\n * relationship with phase\n */\n@Schema()\n@ObjectType()\nexport class PhaseExpertRelationship {\n  @Field(() => String)\n  @Prop({ type: SchemaTypes.ObjectId, ref: 'Phase' })\n  _id: string;\n\n  @Field(() => String)\n  @Prop()\n  name: string;\n\n  @Field(() => [StartupLink])\n  @Prop({ default: [] })\n  startUps: StartupLink[];\n}\n/**\n * relationship with startup\n */\n@Schema()\n@ObjectType()\nexport class StartupLink {\n  @Field(() => String)\n  @Prop({ type: SchemaTypes.ObjectId, ref: 'Startup' })\n  _id: string;\n\n  @Field(() => String)\n  @Prop()\n  name: string;\n}\n/**\n * @ignore\n */\nexport const ExpertSchema = SchemaFactory.createForClass(Expert);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ExpertEventLink.html":{"url":"classes/ExpertEventLink.html","title":"class - ExpertEventLink","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ExpertEventLink\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/events/entities/event.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                expert link\n\n            \n\n\n            \n                Implements\n            \n            \n                            IEntityEvent\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                _id\n                            \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({type: undefined, ref: 'Expert'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/entities/event.entity.ts:98\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/entities/event.entity.ts:106\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/entities/event.entity.ts:102\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ObjectType, Field, ID } from '@nestjs/graphql';\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { GraphQLJSONObject } from 'graphql-scalars';\nimport { SchemaTypes } from 'mongoose';\n/**\n * Events docs\n */\n@Schema({ timestamps: true })\n@ObjectType()\nexport class Event {\n  @Field(() => ID)\n  _id: string;\n\n  @Field(() => String)\n  @Prop({ required: true })\n  name: string;\n\n  @Field(() => String)\n  @Prop({ required: true })\n  type: string;\n\n  @Field(() => String)\n  @Prop({ required: true })\n  attendanceType: string;\n\n  @Field(() => String)\n  @Prop({})\n  description: string;\n\n  @Field(() => GraphQLJSONObject)\n  @Prop({ type: SchemaTypes.Mixed })\n  extra_options: any;\n\n  @Field(() => Date)\n  @Prop({ required: true })\n  startAt: Date;\n\n  @Field(() => Date)\n  @Prop({ required: true })\n  endAt: Date;\n\n  @Field(() => Boolean)\n  @Prop({ default: false })\n  isCanceled: boolean;\n\n  @Field(() => Boolean)\n  @Prop({ default: false })\n  isDeleted: boolean;\n\n  @Field(() => Date)\n  createdAt: Date;\n\n  @Field(() => Date)\n  updatedAt: Date;\n\n  @Field(() => String)\n  @Prop({ type: SchemaTypes.ObjectId, ref: 'Phase' })\n  batch: string;\n\n  @Field(() => [ExpertEventLink])\n  @Prop({ default: [] })\n  experts: ExpertEventLink[];\n\n  @Field(() => [TeamCoachLink])\n  @Prop({ default: [] })\n  teamCoaches: TeamCoachLink[];\n\n  @Field(() => [ParticipantEventLink])\n  @Prop({ default: [] })\n  participants: ParticipantEventLink[];\n}\n/**\n * team coach link\n */\n@Schema()\n@ObjectType()\nexport class TeamCoachLink implements IEntityEvent {\n  @Field(() => String)\n  @Prop({ type: SchemaTypes.ObjectId, ref: 'User' })\n  _id: string;\n\n  @Field(() => String)\n  @Prop()\n  name: string;\n\n  @Field(() => String)\n  @Prop()\n  email: string;\n}\n/**\n * expert link\n */\n@Schema()\n@ObjectType()\nexport class ExpertEventLink implements IEntityEvent {\n  @Field(() => String)\n  @Prop({ type: SchemaTypes.ObjectId, ref: 'Expert' })\n  _id: string;\n\n  @Field(() => String)\n  @Prop()\n  name: string;\n\n  @Field(() => String)\n  @Prop()\n  email: string;\n}\n\n/**\n * participant link\n */\n@Schema()\n@ObjectType()\nexport class ParticipantEventLink implements IEntityEvent {\n  @Field(() => String)\n  @Prop({ type: SchemaTypes.ObjectId, ref: 'Entrepreneur' })\n  _id: string;\n\n  @Field(() => String)\n  @Prop()\n  name: string;\n\n  @Field(() => String)\n  @Prop()\n  email: string;\n\n  @Field(() => String, { nullable: true })\n  @Prop()\n  startupEntrepreneur: string;\n}\n/**\n * @ignore\n */\nexport interface IEntityEvent {\n  _id: string;\n  name: string;\n  email: string;\n}\n/**\n * @ignore\n */\nexport const EventSchema = SchemaFactory.createForClass(Event);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ExpertModule.html":{"url":"modules/ExpertModule.html","title":"module - ExpertModule","body":"\n                   \n\n\n\n\n    Modules\n    ExpertModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ExpertModule\n\n\n\ncluster_ExpertModule_exports\n\n\n\ncluster_ExpertModule_imports\n\n\n\ncluster_ExpertModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nExpertModule\n\nExpertModule\n\nExpertModule -->\n\nAuthModule->ExpertModule\n\n\n\n\n\nDownloadsModule\n\nDownloadsModule\n\nExpertModule -->\n\nDownloadsModule->ExpertModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nExpertModule -->\n\nUsersModule->ExpertModule\n\n\n\nExpertModule -->\n\nUsersModule->ExpertModule\n\n\n\n\n\nExpertService \n\nExpertService \n\nExpertService  -->\n\nExpertModule->ExpertService \n\n\n\n\n\nExpertService\n\nExpertService\n\nExpertModule -->\n\nExpertService->ExpertModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/expert/expert.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ExpertService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            DownloadsModule\n                        \n                        \n                            UsersModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ExpertService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module, forwardRef } from '@nestjs/common';\nimport { ExpertService } from './expert.service';\nimport { ExpertResolver } from './expert.resolver';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { AuthModule } from 'src/auth/auth.module';\nimport { UsersModule } from 'src/users/users.module';\nimport { Expert, ExpertSchema } from './entities/expert.entity';\nimport { DownloadsModule } from 'src/downloads/downloads.module';\nimport { TableModule } from 'src/table/table.module';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([{ name: Expert.name, schema: ExpertSchema }]),\n    AuthModule,\n    UsersModule,\n    DownloadsModule,\n    UsersModule,\n    forwardRef(() => TableModule),\n  ],\n  providers: [ExpertResolver, ExpertService],\n  exports: [ExpertService],\n})\nexport class ExpertModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FindFormsArgs.html":{"url":"classes/FindFormsArgs.html","title":"class - FindFormsArgs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FindFormsArgs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/forms/form/args/find-forms.args.ts\n        \n\n\n            \n                Description\n            \n            \n                graphql args input\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                target\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        target\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormCollections\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@Field(undefined, {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/forms/form/args/find-forms.args.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ArgsType, Field } from '@nestjs/graphql';\nimport { IsOptional } from 'class-validator';\nimport { FormCollections } from '../enums/form-collections';\n/**\n * graphql args input\n */\n@ArgsType()\nexport class FindFormsArgs {\n  @IsOptional()\n  @Field(() => FormCollections, { nullable: true })\n  target?: FormCollections;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FindInvitationArgs.html":{"url":"classes/FindInvitationArgs.html","title":"class - FindInvitationArgs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FindInvitationArgs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/invitations/args/find-invitation.args.ts\n        \n\n\n            \n                Description\n            \n            \n                graphql input args\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                limit\n                            \n                            \n                                    \n                                    \n                                skip\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@Field(undefined, {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/invitations/args/find-invitation.args.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        skip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@Field(undefined, {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/invitations/args/find-invitation.args.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ArgsType, Field, Int } from '@nestjs/graphql';\nimport { IsOptional } from 'class-validator';\nimport { ValidRoles } from 'src/auth/enums/valid-roles.enum';\n/**\n * graphql input args\n */\n@ArgsType()\nexport class FindInvitationArgs {\n  @IsOptional()\n  @Field(() => Int, { nullable: true })\n  skip: number;\n\n  @IsOptional()\n  @Field(() => Int, { nullable: true })\n  limit: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FindUsersArgs.html":{"url":"classes/FindUsersArgs.html","title":"class - FindUsersArgs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FindUsersArgs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/args/find-users.args.ts\n        \n\n\n            \n                Description\n            \n            \n                graphql args inputs\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                relationsAssign\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                roles\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                search\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        relationsAssign\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@Field(undefined, {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/args/find-users.args.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ValidRoles[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@Field(undefined, {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/args/find-users.args.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        search\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@Field(undefined, {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/args/find-users.args.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ArgsType, Field } from '@nestjs/graphql';\nimport { IsOptional } from 'class-validator';\nimport { ValidRoles } from 'src/auth/enums/valid-roles.enum';\nimport { GraphQLJSONObject } from 'graphql-scalars';\n/**\n * graphql args inputs\n */\n@ArgsType()\nexport class FindUsersArgs {\n  @IsOptional()\n  @Field(() => String, { nullable: true })\n  search?: string;\n\n  @IsOptional()\n  @Field(() => [ValidRoles], { nullable: true })\n  roles?: ValidRoles[];\n\n  @IsOptional()\n  @Field(() => GraphQLJSONObject, { nullable: true })\n  relationsAssign: Record;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Form.html":{"url":"classes/Form.html","title":"class - Form","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Form\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/forms/form/entities/form.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                forms config\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                _id\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                documents\n                            \n                            \n                                    \n                                    \n                                formJson\n                            \n                            \n                                    \n                                    \n                                keys\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                tags\n                            \n                            \n                                    \n                                    \n                                target\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/forms/form/entities/form.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Date of entity creation.'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/forms/form/entities/form.entity.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Unique Id of the user who created the entity'})@Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/forms/form/entities/form.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'If set, The date the entity was deleted.', nullable: true})@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/forms/form/entities/form.entity.ts:73\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'If set, Unique Id of the user that deleted the entity.', nullable: true})@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/forms/form/entities/form.entity.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({default: ''})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/forms/form/entities/form.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        documents\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormDocument[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/forms/form/entities/form.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        formJson\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/forms/form/entities/form.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        keys\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/forms/form/entities/form.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({default: ''})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/forms/form/entities/form.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        tags\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/forms/form/entities/form.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        target\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormCollections\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({enum: FormCollections, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/forms/form/entities/form.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Date of last entity update.'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/forms/form/entities/form.entity.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'If set, Unique Id of the user who last updated the entity.', nullable: true})@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/forms/form/entities/form.entity.ts:53\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ObjectType, Field, ID } from '@nestjs/graphql';\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { FormCollections } from '../enums/form-collections';\nimport { FormTag } from 'src/forms/form-tag/entities/form-tag.entity';\n/**\n * forms config\n */\n@Schema({ timestamps: true })\n@ObjectType()\nexport class Form {\n  @Field(() => ID)\n  _id: string;\n\n  @Field(() => String)\n  @Prop({ default: '' })\n  name: string;\n\n  @Field(() => String)\n  @Prop({ default: '' })\n  description: string;\n\n  @Field(() => String)\n  @Prop({ required: true })\n  formJson: string;\n\n  @Field(() => String)\n  @Prop({ enum: FormCollections, required: true })\n  target: FormCollections;\n\n  @Field(() => [FormDocument])\n  @Prop({ default: [] })\n  documents: FormDocument[];\n\n  @Field(() => [String])\n  @Prop({ default: [] })\n  keys: string[];\n\n  @Field(() => [FormTag])\n  @Prop({ default: [] })\n  tags: string[];\n\n  @Field(() => String, {\n    description: 'Unique Id of the user who created the entity',\n  })\n  @Prop({ required: true })\n  createdBy: string;\n\n  @Field(() => String, {\n    description: 'If set, Unique Id of the user who last updated the entity.',\n    nullable: true,\n  })\n  @Prop()\n  updatedBy: string;\n\n  @Field(() => String, {\n    description: 'If set, Unique Id of the user that deleted the entity.',\n    nullable: true,\n  })\n  @Prop()\n  deletedBy: string;\n\n  @Field(() => Date, { description: 'Date of entity creation.' })\n  createdAt: Date;\n\n  @Field(() => Date, { description: 'Date of last entity update.' })\n  updatedAt: Date;\n\n  @Field(() => Date, {\n    description: 'If set, The date the entity was deleted.',\n    nullable: true,\n  })\n  @Prop()\n  deletedAt: Date;\n}\n/**\n * @ignore\n */\n@Schema()\n@ObjectType()\nexport class FormDocument implements IFormDocument {\n  @Field(() => String)\n  @Prop({ default: '' })\n  name: string;\n\n  @Field(() => String)\n  @Prop({ default: '' })\n  observation: string;\n\n  @Field(() => Boolean)\n  @Prop({ default: true })\n  optional: boolean;\n\n  @Field(() => String)\n  @Prop()\n  key: string;\n}\n/**\n * @ignore\n */\nexport interface IFormDocument {\n  name: string;\n  observation: string;\n  optional: boolean;\n  key: string;\n}\n/**\n * @ignore\n */\nexport const FormSchema = SchemaFactory.createForClass(Form);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FormSubmission.html":{"url":"classes/FormSubmission.html","title":"class - FormSubmission","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FormSubmission\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/forms/form/entities/form-submission.ts\n        \n\n\n            \n                Description\n            \n            \n                graphql args input of form submission\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                _id\n                            \n                            \n                                    \n                                submission\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/forms/form/entities/form-submission.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        submission\n                        \n                    \n                \n            \n                \n                    \n                        Type :     JSON\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/forms/form/entities/form-submission.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, ObjectType } from '@nestjs/graphql';\nimport GraphQLJSON from 'graphql-type-json';\n/**\n * graphql args input of form submission\n */\n@ObjectType()\nexport class FormSubmission {\n  @Field(() => String)\n  _id: string;\n\n  @Field(() => GraphQLJSON)\n  submission: JSON;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FormSubmissionFiles.html":{"url":"classes/FormSubmissionFiles.html","title":"class - FormSubmissionFiles","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FormSubmissionFiles\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/forms/form/entities/form-submission-files.ts\n        \n\n\n            \n                Description\n            \n            \n                graphql args input of documents in a form submission\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                documents\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        documents\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormFileSubmission[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/forms/form/entities/form-submission-files.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, ObjectType } from '@nestjs/graphql';\nimport GraphQLJSON from 'graphql-type-json';\nimport { FormFileSubmission } from 'src/forms/factories/form-file-submission';\n/**\n * graphql args input of documents in a form submission\n */\n@ObjectType()\nexport class FormSubmissionFiles {\n  @Field(() => [GraphQLJSON])\n  documents: FormFileSubmission[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FormSubscription.html":{"url":"classes/FormSubscription.html","title":"class - FormSubscription","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FormSubscription\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/forms/form-subscription/entities/form-subscription.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                form websocket opened\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                _id\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                data\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                doc\n                            \n                            \n                                    \n                                    \n                                form\n                            \n                            \n                                    \n                                    \n                                opened\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                reason\n                            \n                            \n                                    \n                                submission\n                            \n                            \n                                    \n                                    \n                                target\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/forms/form-subscription/entities/form-subscription.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Date of entity creation.'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/forms/form-subscription/entities/form-subscription.entity.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     JSON\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/forms/form-subscription/entities/form-subscription.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        doc\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@Prop({default: ''})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/forms/form-subscription/entities/form-subscription.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/forms/form-subscription/entities/form-subscription.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        opened\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({default: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/forms/form-subscription/entities/form-subscription.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        reason\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@Prop({default: ''})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/forms/form-subscription/entities/form-subscription.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        submission\n                        \n                    \n                \n            \n                \n                    \n                        Type :     JSON\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/forms/form-subscription/entities/form-subscription.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        target\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormCollections\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({enum: FormCollections})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/forms/form-subscription/entities/form-subscription.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Date of last entity update.'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/forms/form-subscription/entities/form-subscription.entity.ts:46\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ObjectType, Field, ID } from '@nestjs/graphql';\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport GraphQLJSON from 'graphql-type-json';\nimport { Form } from 'src/forms/form/entities/form.entity';\nimport { FormCollections } from 'src/forms/form/enums/form-collections';\n/**\n * form websocket opened\n */\n@Schema({ timestamps: true })\n@ObjectType()\nexport class FormSubscription {\n  @Field(() => ID)\n  _id: string;\n\n  @Field(() => String, { nullable: true })\n  @Prop({ default: '' })\n  doc?: string;\n\n  @Field(() => GraphQLJSON, { nullable: true })\n  submission: JSON;\n\n  @Field(() => Form)\n  @Prop({ required: true })\n  form: string;\n\n  @Field(() => Boolean)\n  @Prop({ default: true })\n  opened: boolean;\n\n  @Field(() => GraphQLJSON, { nullable: true })\n  @Prop({ type: Object })\n  data?: JSON;\n\n  @Field(() => String, { nullable: true })\n  @Prop({ default: '' })\n  reason?: string;\n\n  @Field(() => FormCollections)\n  @Prop({ enum: FormCollections })\n  target: FormCollections;\n\n  @Field(() => Date, { description: 'Date of entity creation.' })\n  createdAt: Date;\n\n  @Field(() => Date, { description: 'Date of last entity update.' })\n  updatedAt: Date;\n}\n/**\n * @ignore\n */\nexport const FormSubscriptionSchema =\n  SchemaFactory.createForClass(FormSubscription);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FormSubscriptionService.html":{"url":"injectables/FormSubscriptionService.html","title":"injectable - FormSubscriptionService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FormSubscriptionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/forms/form-subscription/form-subscription.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                triggerName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                close\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                getSubmittedDocument\n                            \n                            \n                                    Async\n                                getSubmittedFiles\n                            \n                            \n                                    Private\n                                    Async\n                                handleDocumentSubmit\n                            \n                            \n                                    Async\n                                submit\n                            \n                            \n                                    Async\n                                submitFile\n                            \n                            \n                                subscribe\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(formSubscriptionModel: Model, formsService: FormsService, documentServiceProvider: FormDocumentServiceProvider)\n                    \n                \n                        \n                            \n                                Defined in src/forms/form-subscription/form-subscription.service.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formSubscriptionModel\n                                                  \n                                                        \n                                                                    Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formsService\n                                                  \n                                                        \n                                                                        FormsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        documentServiceProvider\n                                                  \n                                                        \n                                                                        FormDocumentServiceProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        close\n                        \n                    \n                \n            \n            \n                \n                        \n                    close(undefined: CloseFormSubscriptionArgs)\n                \n            \n\n\n                    \n                        \n                            Defined in src/forms/form-subscription/form-subscription.service.ts:112\n                        \n                    \n\n\n            \n                \n                        close subscription opened\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            CloseFormSubscriptionArgs\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createFormSubscriptionInput: CreateFormSubscriptionInput)\n                \n            \n\n\n                    \n                        \n                            Defined in src/forms/form-subscription/form-subscription.service.ts:54\n                        \n                    \n\n\n            \n                \n                        create form subscription\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createFormSubscriptionInput\n                                            \n                                                            CreateFormSubscriptionInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/forms/form-subscription/form-subscription.service.ts:44\n                        \n                    \n\n\n            \n                \n                        find form subscription\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getSubmittedDocument\n                        \n                    \n                \n            \n            \n                \n                        \n                    getSubmittedDocument(id: string, target: FormCollections)\n                \n            \n\n\n                    \n                        \n                            Defined in src/forms/form-subscription/form-subscription.service.ts:151\n                        \n                    \n\n\n            \n                \n                        get document specified in property inside subscription\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                target\n                                            \n                                                            FormCollections\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getSubmittedFiles\n                        \n                    \n                \n            \n            \n                \n                        \n                    getSubmittedFiles(id: string, target: FormCollections)\n                \n            \n\n\n                    \n                        \n                            Defined in src/forms/form-subscription/form-subscription.service.ts:179\n                        \n                    \n\n\n            \n                \n                        get submited file\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                target\n                                            \n                                                            FormCollections\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        handleDocumentSubmit\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleDocumentSubmit(undefined: FormSubscription, data: any, context: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/forms/form-subscription/form-subscription.service.ts:133\n                        \n                    \n\n\n            \n                \n                        handle document sended by subscription\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            FormSubscription\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                context\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        submit\n                        \n                    \n                \n            \n            \n                \n                        \n                    submit(undefined: SubmitFormSubscriptionArgs)\n                \n            \n\n\n                    \n                        \n                            Defined in src/forms/form-subscription/form-subscription.service.ts:82\n                        \n                    \n\n\n            \n                \n                        submit document in subscription\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            SubmitFormSubscriptionArgs\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        submitFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    submitFile(undefined: SubmitFileInput)\n                \n            \n\n\n                    \n                        \n                            Defined in src/forms/form-subscription/form-subscription.service.ts:163\n                        \n                    \n\n\n            \n                \n                        submit file in subscription\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            SubmitFileInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subscribe\n                        \n                    \n                \n            \n            \n                \nsubscribe()\n                \n            \n\n\n                    \n                        \n                            Defined in src/forms/form-subscription/form-subscription.service.ts:73\n                        \n                    \n\n\n            \n                \n                        subscribe channel pubsub\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                            Readonly\n                        triggerName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'formSubscription'\n                    \n                \n                    \n                        \n                                Defined in src/forms/form-subscription/form-subscription.service.ts:31\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  NotFoundException,\n  MethodNotAllowedException,\n  Inject,\n  InternalServerErrorException,\n} from '@nestjs/common';\nimport { CreateFormSubscriptionInput } from './dto/create-form-subscription.input';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { FormSubscription } from './entities/form-subscription.entity';\nimport { Model } from 'mongoose';\nimport { PubSub } from 'graphql-subscriptions';\nimport { SubmitFormSubscriptionArgs } from './args/submit-form-subscription.args';\nimport { FormCollections } from '../form/enums/form-collections';\nimport { FormsService } from '../form/forms.service';\nimport {\n  FORM_DOCUMENT_SERVICE_PROVIDER,\n  FormDocumentServiceProvider,\n} from '../factories/form-document-service-provider';\nimport { CloseFormSubscriptionArgs } from './args/close-form-subscription.args';\nimport { SubmitFileInput } from './inputs/submit-file.input';\nimport { FormSubmissionFiles } from '../form/entities/form-submission-files';\nimport { pubSubInstance } from 'src/shared/sockets/socket-instance';\n/**\n * @ignore\n */\nconst pubSub = pubSubInstance;\n\n@Injectable()\nexport class FormSubscriptionService {\n  private static readonly triggerName: string = 'formSubscription';\n\n  constructor(\n    @InjectModel(FormSubscription.name)\n    private readonly formSubscriptionModel: Model,\n    private readonly formsService: FormsService,\n    @Inject(FORM_DOCUMENT_SERVICE_PROVIDER)\n    private readonly documentServiceProvider: FormDocumentServiceProvider,\n  ) {}\n\n  /**\n   * find form subscription\n   */\n  async findOne(id: string) {\n    const subscription = await this.formSubscriptionModel.findById(id).lean();\n    if (!subscription)\n      throw new NotFoundException(`No subscription found with id ${id}`);\n    return subscription;\n  }\n\n  /**\n   * create form subscription\n   */\n  async create(createFormSubscriptionInput: CreateFormSubscriptionInput) {\n    const subscriptionForm = await this.formsService.findOne(\n      createFormSubscriptionInput.form,\n    );\n    const data = {\n      ...createFormSubscriptionInput,\n      target: subscriptionForm.target,\n    };\n    const createdFormSubscription =\n      await this.formSubscriptionModel.create(data);\n    pubSub.publish(FormSubscriptionService.triggerName, {\n      listenFormSubscription: createdFormSubscription,\n    });\n    return createdFormSubscription;\n  }\n\n  /**\n   * subscribe channel pubsub\n   */\n  subscribe() {\n    return pubSub.asyncIterator([\n      FormSubscriptionService.triggerName,\n    ]);\n  }\n\n  /**\n   * submit document in subscription\n   */\n  async submit({ id, data }: SubmitFormSubscriptionArgs) {\n    const subscription = await this.findOne(id);\n    if (subscription.opened === false)\n      throw new MethodNotAllowedException(\n        `Subscription ${id} is already closed`,\n      );\n    // Get the subscription context data\n    const context = subscription.data;\n    // If the doc id exists then we have to update it\n    const document = await this.handleDocumentSubmit(\n      subscription,\n      data,\n      context,\n    );\n    const closedSubscription = await this.formSubscriptionModel\n      .findByIdAndUpdate(\n        id,\n        { opened: false, doc: document._id },\n        { new: true },\n      )\n      .lean();\n    pubSub.publish(FormSubscriptionService.triggerName, {\n      listenFormSubscription: closedSubscription,\n    });\n    return closedSubscription;\n  }\n\n  /**\n   * close subscription opened\n   */\n  async close({\n    id,\n    doc,\n  }: CloseFormSubscriptionArgs): Promise {\n    const subscription = await this.findOne(id);\n    if (subscription.opened === false)\n      throw new MethodNotAllowedException(\n        `Subscription ${id} is already closed`,\n      );\n    const closedSubscription = await this.formSubscriptionModel\n      .findByIdAndUpdate(id, { opened: false, doc }, { new: true })\n      .lean();\n    pubSub.publish(FormSubscriptionService.triggerName, {\n      listenFormSubscription: closedSubscription,\n    });\n    return closedSubscription;\n  }\n\n  /**\n   * handle document sended by subscription\n   */\n  private async handleDocumentSubmit(\n    { target, doc }: FormSubscription,\n    data: any,\n    context: any,\n  ) {\n    const documentService = this.documentServiceProvider(target);\n    let document;\n    if (doc) {\n      document = await documentService.updateDocument(doc, data, context);\n    } else {\n      document = await documentService.createDocument(data, context);\n    }\n    return document;\n  }\n\n  /**\n   * get document specified in property inside subscription\n   */\n  async getSubmittedDocument(\n    id: string,\n    target: FormCollections,\n  ): Promise {\n    const documentService = this.documentServiceProvider(target);\n    const document = await documentService.getDocument(id);\n    return document.item;\n  }\n\n  /**\n   * submit file in subscription\n   */\n  async submitFile({ doc, fileKey, fileUrl, form }: SubmitFileInput) {\n    const targetForm = await this.formsService.findOne(form);\n    const documentService = this.documentServiceProvider(targetForm.target);\n    const document = { key: fileKey, url: fileUrl };\n    if (!documentService.uploadFile) {\n      throw new InternalServerErrorException(\n        \"Can't upload files to the current form submission.\",\n      );\n    }\n    const docFiles = await documentService.uploadFile(doc, document);\n    return { documents: docFiles };\n  }\n\n  /**\n   * get submited file\n   */\n  async getSubmittedFiles(\n    id: string,\n    target: FormCollections,\n  ): Promise {\n    const documentService = this.documentServiceProvider(target);\n    const document = await documentService.getDocument(id);\n    return { documents: document?.documents };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FormTag.html":{"url":"classes/FormTag.html","title":"class - FormTag","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FormTag\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/forms/form-tag/entities/form-tag.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                form tags dynamic\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                _id\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/forms/form-tag/entities/form-tag.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Date of entity creation.'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/forms/form-tag/entities/form-tag.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'If set, The date the entity was deleted.', nullable: true})@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/forms/form-tag/entities/form-tag.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/forms/form-tag/entities/form-tag.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Date of last entity update.'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/forms/form-tag/entities/form-tag.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'If set, Details from user who last updated the entity.', nullable: true})@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/forms/form-tag/entities/form-tag.entity.ts:35\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ObjectType, Field, ID } from '@nestjs/graphql';\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { User } from 'src/users/entities/user.entity';\n/**\n * form tags dynamic\n */\n@Schema({ timestamps: true })\n@ObjectType()\nexport class FormTag {\n  @Field(() => ID)\n  _id: string;\n\n  @Field(() => String)\n  @Prop()\n  name: string;\n\n  @Field(() => Date, {\n    description: 'If set, The date the entity was deleted.',\n    nullable: true,\n  })\n  @Prop()\n  deletedAt: Date;\n\n  @Field(() => Date, { description: 'Date of entity creation.' })\n  createdAt: Date;\n\n  @Field(() => Date, { description: 'Date of last entity update.' })\n  updatedAt: Date;\n\n  @Field(() => User, {\n    description: 'If set, Details from user who last updated the entity.',\n    nullable: true,\n  })\n  @Prop()\n  updatedBy: string;\n}\n/**\n * @ignore\n */\nexport const FormTagSchema = SchemaFactory.createForClass(FormTag);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FormTagService.html":{"url":"injectables/FormTagService.html","title":"injectable - FormTagService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FormTagService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/forms/form-tag/form-tag.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findMany\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(formTagModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/forms/form-tag/form-tag.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formTagModel\n                                                  \n                                                        \n                                                                    Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createFormTagInput: CreateFormTagInput)\n                \n            \n\n\n                    \n                        \n                            Defined in src/forms/form-tag/form-tag.service.ts:16\n                        \n                    \n\n\n            \n                \n                        create form tag\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createFormTagInput\n                                            \n                                                            CreateFormTagInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/forms/form-tag/form-tag.service.ts:60\n                        \n                    \n\n\n            \n                \n                        soft delete form tag\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/forms/form-tag/form-tag.service.ts:24\n                        \n                    \n\n\n            \n                \n                        find all form tags\n\n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findMany\n                        \n                    \n                \n            \n            \n                \n                        \n                    findMany(ids: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/forms/form-tag/form-tag.service.ts:32\n                        \n                    \n\n\n            \n                \n                        find list of form tags\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ids\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/forms/form-tag/form-tag.service.ts:40\n                        \n                    \n\n\n            \n                \n                        find form tag by id\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateFormTagInput: UpdateFormTagInput)\n                \n            \n\n\n                    \n                        \n                            Defined in src/forms/form-tag/form-tag.service.ts:49\n                        \n                    \n\n\n            \n                \n                        update form tag\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateFormTagInput\n                                            \n                                                            UpdateFormTagInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { CreateFormTagInput } from './dto/create-form-tag.input';\nimport { UpdateFormTagInput } from './dto/update-form-tag.input';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { FormTag } from './entities/form-tag.entity';\nimport { Model } from 'mongoose';\n\n@Injectable()\nexport class FormTagService {\n  constructor(\n    @InjectModel(FormTag.name) private readonly formTagModel: Model,\n  ) {}\n  /**\n   * create form tag\n   */\n  async create(createFormTagInput: CreateFormTagInput) {\n    const createdFormTag = await this.formTagModel.create(createFormTagInput);\n    return createdFormTag;\n  }\n\n  /**\n   * find all form tags\n   */\n  async findAll() {\n    const tags = await this.formTagModel.find({ deletedAt: null }).lean();\n    return tags;\n  }\n\n  /**\n   * find list of form tags\n   */\n  async findMany(ids: string[]) {\n    const tags = await this.formTagModel.find({ _id: { $in: ids } }).lean();\n    return tags;\n  }\n\n  /**\n   * find form tag by id\n   */\n  async findOne(id: string) {\n    const tag = await this.formTagModel.findById(id).lean();\n    if (!tag) throw new NotFoundException(`No tag found with id ${id}`);\n    return tag;\n  }\n\n  /**\n   * update form tag\n   */\n  async update(id: string, updateFormTagInput: UpdateFormTagInput) {\n    delete updateFormTagInput['_id'];\n    const formTag = await this.formTagModel\n      .findByIdAndUpdate(id, { ...updateFormTagInput }, { new: true })\n      .lean();\n    return formTag;\n  }\n\n  /**\n   * soft delete form tag\n   */\n  async delete(id: string) {\n    const deletedForm = await this.formTagModel\n      .findByIdAndUpdate(id, { deletedAt: Date.now() }, { new: true })\n      .lean();\n    return deletedForm;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FormsModule.html":{"url":"modules/FormsModule.html","title":"module - FormsModule","body":"\n                   \n\n\n\n\n    Modules\n    FormsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FormsModule\n\n\n\ncluster_FormsModule_providers\n\n\n\ncluster_FormsModule_imports\n\n\n\ncluster_FormsModule_exports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nFormsModule\n\nFormsModule\n\nFormsModule -->\n\nAuthModule->FormsModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nFormsModule -->\n\nUsersModule->FormsModule\n\n\n\n\n\nformDocumentServiceImports\n\nformDocumentServiceImports\n\nFormsModule -->\n\nformDocumentServiceImports->FormsModule\n\n\n\n\n\nFormsService \n\nFormsService \n\nFormsService  -->\n\nFormsModule->FormsService \n\n\n\n\n\nFormSubscriptionService\n\nFormSubscriptionService\n\nFormsModule -->\n\nFormSubscriptionService->FormsModule\n\n\n\n\n\nFormTagService\n\nFormTagService\n\nFormsModule -->\n\nFormTagService->FormsModule\n\n\n\n\n\nFormsService\n\nFormsService\n\nFormsModule -->\n\nFormsService->FormsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/forms/forms.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FormSubscriptionService\n                        \n                        \n                            FormTagService\n                        \n                        \n                            FormsService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            UsersModule\n                        \n                        \n                            formDocumentServiceImports\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FormsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Form, FormSchema } from './form/entities/form.entity';\nimport { FormsResolver } from './form/forms.resolver';\nimport { FormTagResolver } from './form-tag/form-tag.resolver';\nimport { FormsService } from './form/forms.service';\nimport { FormTagService } from './form-tag/form-tag.service';\nimport { FormTag, FormTagSchema } from './form-tag/entities/form-tag.entity';\nimport { FormSubscriptionResolver } from './form-subscription/form-subscription.resolver';\nimport { FormSubscriptionService } from './form-subscription/form-subscription.service';\nimport { UsersModule } from 'src/users/users.module';\nimport { FormSubscription, FormSubscriptionSchema } from './form-subscription/entities/form-subscription.entity';\nimport { AuthModule } from 'src/auth/auth.module';\nimport { formDocumentServiceImports, formDocumentServiceProviders } from './factories/form-document-service-provider';\n\n@Module({\n  imports: [\n    AuthModule,\n    MongooseModule.forFeature([\n      { name: Form.name, schema: FormSchema },\n      { name: FormTag.name, schema: FormTagSchema },\n      { name: FormSubscription.name, schema: FormSubscriptionSchema },\n    ]),\n    UsersModule,\n    ...formDocumentServiceImports,\n  ],\n  providers: [\n    FormsResolver,\n    FormTagResolver,\n    FormsService,\n    FormTagService,\n    FormSubscriptionResolver,\n    FormSubscriptionService,\n    ...formDocumentServiceProviders\n  ],\n  exports: [\n    FormsService,\n  ],\n})\nexport class FormsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FormsService.html":{"url":"injectables/FormsService.html","title":"injectable - FormsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FormsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/forms/form/forms.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                clone\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findMany\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(formModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/forms/form/forms.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        clone\n                        \n                    \n                \n            \n            \n                \n                        \n                    clone(id: string, user: AuthUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/forms/form/forms.service.ts:49\n                        \n                    \n\n\n            \n                \n                        clone form config\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            AuthUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createFormInput: CreateFormInput, user: AuthUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/forms/form/forms.service.ts:38\n                        \n                    \n\n\n            \n                \n                        create form config\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createFormInput\n                                            \n                                                            CreateFormInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            AuthUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: string, user: AuthUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/forms/form/forms.service.ts:85\n                        \n                    \n\n\n            \n                \n                        soft delete form config\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            AuthUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findMany\n                        \n                    \n                \n            \n            \n                \n                        \n                    findMany(filters: FindFormsArgs)\n                \n            \n\n\n                    \n                        \n                            Defined in src/forms/form/forms.service.ts:19\n                        \n                    \n\n\n            \n                \n                        find many forms config by filters\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filters\n                                            \n                                                            FindFormsArgs\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/forms/form/forms.service.ts:29\n                        \n                    \n\n\n            \n                \n                        find form config by id\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateFormInput: Partial, user: AuthUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/forms/form/forms.service.ts:63\n                        \n                    \n\n\n            \n                \n                        update form config\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateFormInput\n                                            \n                                                        Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            AuthUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { Form } from './entities/form.entity';\nimport { CreateFormInput } from './dto/create-form.input';\nimport { UpdateFormInput } from './dto/update-form.input';\nimport { FindFormsArgs } from './args/find-forms.args';\nimport { AuthUser } from 'src/auth/types/auth-user';\n\n@Injectable()\nexport class FormsService {\n  constructor(\n    @InjectModel(Form.name) private readonly formModel: Model,\n  ) {}\n\n  /**\n   * find many forms config by filters\n   */\n  async findMany(filters: FindFormsArgs) {\n    return this.formModel.find({\n      ...filters,\n      deletedAt: null,\n    });\n  }\n\n  /**\n   * find form config by id\n   */\n  async findOne(id: string): Promise {\n    const form = await this.formModel.findById(id).lean();\n    if (!form) throw new NotFoundException(`Couldn't find form with id ${id}`);\n    return form;\n  }\n\n  /**\n   * create form config\n   */\n  async create(createFormInput: CreateFormInput, user: AuthUser) {\n    const createdForm = await this.formModel.create({\n      ...createFormInput,\n      createdBy: user.uid,\n    });\n    return createdForm;\n  }\n\n  /**\n   * clone form config\n   */\n  async clone(id: string, user: AuthUser) {\n    const formToClone = await this.findOne(id);\n    const { _id, ...data } = formToClone;\n    const clonedForm = await this.formModel.create({\n      ...data,\n      name: `Clon ${data.name}`,\n      createdBy: user.uid,\n    });\n    return clonedForm;\n  }\n\n  /**\n   * update form config\n   */\n  async update(\n    id: string,\n    updateFormInput: Partial,\n    user: AuthUser,\n  ) {\n    delete updateFormInput['_id'];\n    const form = await this.formModel\n      .findByIdAndUpdate(\n        id,\n        {\n          ...updateFormInput,\n          updatedBy: user.uid,\n        },\n        { new: true },\n      )\n      .lean();\n    return form;\n  }\n\n  /**\n   * soft delete form config\n   */\n  async delete(id: string, user: AuthUser) {\n    const deletedForm = await this.update(\n      id,\n      { deletedAt: new Date(), deletedBy: user.uid },\n      user,\n    );\n    return deletedForm;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetSubmittedFilesArgs.html":{"url":"classes/GetSubmittedFilesArgs.html","title":"class - GetSubmittedFilesArgs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetSubmittedFilesArgs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/forms/form-subscription/args/get-submitted-files.args.ts\n        \n\n\n            \n                Description\n            \n            \n                graphql args input\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                doc\n                            \n                            \n                                    \n                                    \n                                target\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        doc\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/forms/form-subscription/args/get-submitted-files.args.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        target\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormCollections\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/forms/form-subscription/args/get-submitted-files.args.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, ArgsType } from '@nestjs/graphql';\nimport { IsNotEmpty, IsOptional, IsString } from 'class-validator';\nimport { FormCollections } from 'src/forms/form/enums/form-collections';\n/**\n * graphql args input\n */\n@ArgsType()\nexport class GetSubmittedFilesArgs {\n  @Field(() => String)\n  @IsString()\n  doc: string;\n\n  @Field(() => FormCollections)\n  @IsString()\n  target: FormCollections;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/GqlAuthGuard.html":{"url":"guards/GqlAuthGuard.html","title":"guard - GqlAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    GqlAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/auth/guards/jwt-gql-auth.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    main function to protect many request by user logged\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                            \n                                    Private\n                                extractTokenFromHeader\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/guards/jwt-gql-auth.guard.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/guards/jwt-gql-auth.guard.ts:18\n                        \n                    \n\n\n            \n                \n                        get user account by token in header\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        extractTokenFromHeader\n                        \n                    \n                \n            \n            \n                \n                        \n                    extractTokenFromHeader(request: Request)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/guards/jwt-gql-auth.guard.ts:34\n                        \n                    \n\n\n            \n                \n                        extract token from header\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | undefined\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  Injectable,\n  CanActivate,\n  ExecutionContext,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { GqlExecutionContext } from '@nestjs/graphql';\nimport { AuthService } from '../auth.service';\n/**\n * main function to protect many request by user logged\n */\n@Injectable()\nexport class GqlAuthGuard implements CanActivate {\n  constructor(private readonly authService: AuthService) {}\n  /**\n   * get user account by token in header\n   */\n  async canActivate(context: ExecutionContext): Promise {\n    const ctx = GqlExecutionContext.create(context);\n    const request = ctx.getContext().req;\n    const token = this.extractTokenFromHeader(request);\n    if (!token) throw new UnauthorizedException();\n    const user = await this.authService.exchangeToken(token);\n    if (!user) throw new UnauthorizedException();\n    const rol = await this.authService.getRol(user.rol);\n    request.user = user;\n    request.token = token;\n    request.rol = rol;\n    return request;\n  }\n  /**\n   * extract token from header\n   */\n  private extractTokenFromHeader(request: Request): string | undefined {\n    const [type, token] = request.headers['authorization']?.split(' ') ?? [];\n    return type === 'Bearer' ? token : undefined;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HelpDeskFilterInput.html":{"url":"classes/HelpDeskFilterInput.html","title":"class - HelpDeskFilterInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HelpDeskFilterInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/help-desk/dto/help-desk-filter.input.ts\n        \n\n\n            \n                Description\n            \n            \n                graphql input scheme\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                page\n                            \n                            \n                                    \n                                    \n                                    \n                                perPage\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                startupId\n                            \n                            \n                                    \n                                    \n                                    \n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsInt()@Min(1)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/help-desk/dto/help-desk-filter.input.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        perPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsInt()@Min(1)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/help-desk/dto/help-desk-filter.input.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        startupId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsString()@MinLength(2)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/help-desk/dto/help-desk-filter.input.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsEnum(TicketEnum)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/help-desk/dto/help-desk-filter.input.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { InputType, Int, Field } from '@nestjs/graphql';\nimport {\n  IsEnum,\n  IsInt,\n  IsObject,\n  IsOptional,\n  IsString,\n  Min,\n  MinLength,\n} from 'class-validator';\nimport GraphQLJSON from 'graphql-type-json';\nimport { TicketEnum } from '../enum/ticket-status.enum';\n/**\n * graphql input scheme\n */\n@InputType()\nexport class HelpDeskFilterInput {\n  @Field(() => String)\n  @IsEnum(TicketEnum)\n  @IsOptional()\n  status: string;\n\n  @Field(() => String)\n  @IsString()\n  @MinLength(2)\n  @IsOptional()\n  startupId: string;\n\n  @IsOptional()\n  @IsInt()\n  @Min(1)\n  page: number;\n\n  @IsOptional()\n  @IsInt()\n  @Min(1)\n  perPage: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HelpDeskModule.html":{"url":"modules/HelpDeskModule.html","title":"module - HelpDeskModule","body":"\n                   \n\n\n\n\n    Modules\n    HelpDeskModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HelpDeskModule\n\n\n\ncluster_HelpDeskModule_exports\n\n\n\ncluster_HelpDeskModule_providers\n\n\n\ncluster_HelpDeskModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nHelpDeskModule\n\nHelpDeskModule\n\nHelpDeskModule -->\n\nAuthModule->HelpDeskModule\n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nHelpDeskModule -->\n\nLoggerModule->HelpDeskModule\n\n\n\n\n\nHelpDeskService \n\nHelpDeskService \n\nHelpDeskService  -->\n\nHelpDeskModule->HelpDeskService \n\n\n\n\n\nHelpDeskService\n\nHelpDeskService\n\nHelpDeskModule -->\n\nHelpDeskService->HelpDeskModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/help-desk/help-desk.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            HelpDeskService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            LoggerModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            HelpDeskService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module, forwardRef } from '@nestjs/common';\nimport { HelpDeskService } from './help-desk.service';\nimport { HelpDeskResolver } from './help-desk.resolver';\nimport { TicketCategoriesModule } from './categories/categories.module';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport {\n  HelpDeskTicket,\n  HelpDeskTicketSchema,\n} from './entities/help-desk.entity';\nimport { AuthModule } from 'src/auth/auth.module';\nimport { LoggerModule } from 'src/logger/logger.module';\nimport { StartupModule } from 'src/startup/startup.module';\nimport { EntrepreneurModule } from 'src/entrepreneur/entrepreneur.module';\nimport { NotificationsModule } from 'src/notifications/notifications.module';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      { name: HelpDeskTicket.name, schema: HelpDeskTicketSchema },\n    ]),\n    AuthModule,\n    LoggerModule,\n    forwardRef(() => StartupModule),\n    forwardRef(() => EntrepreneurModule),\n    forwardRef(() => NotificationsModule),\n  ],\n  providers: [HelpDeskResolver, HelpDeskService],\n  exports: [HelpDeskService],\n})\nexport class HelpDeskModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HelpDeskService.html":{"url":"injectables/HelpDeskService.html","title":"injectable - HelpDeskService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HelpDeskService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/help-desk/help-desk.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                buildNotification\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                    Async\n                                findByFilters\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(ticketsModel: Model, entrepreneurService: EntrepreneurService, startupService: StartupService, notificationsService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in src/help-desk/help-desk.service.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ticketsModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        entrepreneurService\n                                                  \n                                                        \n                                                                        EntrepreneurService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        startupService\n                                                  \n                                                        \n                                                                        StartupService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationsService\n                                                  \n                                                        \n                                                                        NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        buildNotification\n                        \n                    \n                \n            \n            \n                \nbuildNotification(ticket: HelpDeskTicket)\n                \n            \n\n\n                    \n                        \n                            Defined in src/help-desk/help-desk.service.ts:153\n                        \n                    \n\n\n            \n                \n                        build and instance of a notification post in help desk\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ticket\n                                            \n                                                            HelpDeskTicket\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { text: string; date: any; target: string; state: any; type: any; isDeleted: boolean; url: string; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createHelpDeskInput: CreateHelpDeskInput)\n                \n            \n\n\n                    \n                        \n                            Defined in src/help-desk/help-desk.service.ts:41\n                        \n                    \n\n\n            \n                \n                        create a post in help desk\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createHelpDeskInput\n                                            \n                                                            CreateHelpDeskInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll(filter: HelpDeskFilterInput)\n                \n            \n\n\n                    \n                        \n                            Defined in src/help-desk/help-desk.service.ts:58\n                        \n                    \n\n\n            \n                \n                        find all post in help desk\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                            HelpDeskFilterInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findByFilters\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByFilters(user: AuthUser, filters: JSON)\n                \n            \n\n\n                    \n                        \n                            Defined in src/help-desk/help-desk.service.ts:76\n                        \n                    \n\n\n            \n                \n                        find post in help desk with filters\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            AuthUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                filters\n                                            \n                                                        JSON\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/help-desk/help-desk.service.ts:100\n                        \n                    \n\n\n            \n                \n                        find a post in help desk by id\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/help-desk/help-desk.service.ts:139\n                        \n                    \n\n\n            \n                \n                        soft delete a post in help desk\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateHelpDeskInput: UpdateHelpDeskInput)\n                \n            \n\n\n                    \n                        \n                            Defined in src/help-desk/help-desk.service.ts:115\n                        \n                    \n\n\n            \n                \n                        update a post in help desk\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateHelpDeskInput\n                                            \n                                                            UpdateHelpDeskInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(HelpDeskService.name)\n                    \n                \n                    \n                        \n                                Defined in src/help-desk/help-desk.service.ts:36\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {\n  Inject,\n  Injectable,\n  Logger,\n  NotFoundException,\n  forwardRef,\n} from '@nestjs/common';\nimport { CreateHelpDeskInput } from './dto/create-help-desk.input';\nimport { UpdateHelpDeskInput } from './dto/update-help-desk.input';\nimport { HelpDeskTicket } from './entities/help-desk.entity';\nimport { Model } from 'mongoose';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { TicketEnum } from './enum/ticket-status.enum';\nimport { HelpDeskFilterInput } from './dto/help-desk-filter.input';\nimport { AuthUser } from 'src/auth/types/auth-user';\nimport { ValidRoles } from 'src/auth/enums/valid-roles.enum';\nimport { EntrepreneurService } from 'src/entrepreneur/entrepreneur.service';\nimport { StartupService } from 'src/startup/startup.service';\nimport { NotificationStates } from 'src/notifications/enum/notification-states.enum';\nimport { NotificationTypes } from 'src/notifications/enum/notification-types.enum';\nimport { NotificationsService } from 'src/notifications/notifications.service';\n\n@Injectable()\nexport class HelpDeskService {\n  constructor(\n    @InjectModel(HelpDeskTicket.name)\n    private readonly ticketsModel: Model,\n    @Inject(forwardRef(() => EntrepreneurService))\n    private readonly entrepreneurService: EntrepreneurService,\n    @Inject(forwardRef(() => StartupService))\n    private readonly startupService: StartupService,\n    @Inject(forwardRef(() => NotificationsService))\n    private readonly notificationsService: NotificationsService,\n  ) {}\n\n  _logger = new Logger(HelpDeskService.name);\n\n  /**\n   * create a post in help desk\n   */\n  async create(createHelpDeskInput: CreateHelpDeskInput) {\n    try {\n      const newTicket = await this.ticketsModel.create({\n        ...createHelpDeskInput,\n        childs: [createHelpDeskInput.newChild],\n        status: TicketEnum.Open,\n      });\n      return newTicket.toObject();\n    } catch (error) {\n      console.log(error);\n      return null;\n    }\n  }\n\n  /**\n   * find all post in help desk\n   */\n  findAll(filter: HelpDeskFilterInput) {\n    const { status, startupId, page, perPage } = filter;\n    const query = this.ticketsModel.find();\n    if (status) {\n      query.where({ status: { $regex: new RegExp(status, 'i') } });\n    }\n    if (startupId) {\n      query.where({ startupId });\n    }\n    if (page && perPage) {\n      query.skip((page - 1) * perPage).limit(perPage);\n    }\n    return query.exec();\n  }\n\n  /**\n   * find post in help desk with filters\n   */\n  async findByFilters(user: AuthUser, filters: JSON) {\n    switch (user.rolDoc.type) {\n      case ValidRoles.user:\n        const docEntrepreneur = await this.entrepreneurService.findByAccount(\n          user.uid,\n        );\n        if (!docEntrepreneur) return [];\n        const docsStartups = await this.startupService.findByEntrepreneur(\n          docEntrepreneur._id,\n        );\n        if (docsStartups.length === 0) return [];\n        const idsStartups = docsStartups.map((i) => i._id);\n        return this.ticketsModel.find({\n          ...filters,\n          startupId: { $in: idsStartups },\n        });\n      default:\n        return this.ticketsModel.find(filters).lean();\n    }\n  }\n\n  /**\n   * find a post in help desk by id\n   */\n  async findOne(id: string): Promise {\n    const ticket = await this.ticketsModel.findOne({\n      where: {\n        _id: id,\n      },\n    });\n\n    if (!ticket) throw new NotFoundException(`Ticket with id: ${id} not found`);\n\n    return ticket;\n  }\n\n  /**\n   * update a post in help desk\n   */\n  async update(id: string, updateHelpDeskInput: UpdateHelpDeskInput) {\n    try {\n      delete updateHelpDeskInput['_id'];\n      const updatedHelpDeskTicket = await this.ticketsModel\n        .findOneAndUpdate(\n          { _id: id },\n          { ...updateHelpDeskInput },\n          { new: true },\n        )\n        .lean();\n      this.notificationsService.create(\n        this.buildNotification(updatedHelpDeskTicket),\n      );\n      return updatedHelpDeskTicket;\n    } catch (error) {\n      this._logger.error(\n        `Error updating ticket category  ${updateHelpDeskInput} ${error}`,\n      );\n    }\n  }\n\n  /**\n   * soft delete a post in help desk\n   */\n  async remove(id: string): Promise {\n    try {\n      const updatedType = await this.ticketsModel\n        .findOneAndUpdate({ _id: id }, { isDeleted: true }, { new: true })\n        .lean();\n      return updatedType;\n    } catch (error) {\n      this._logger.error(`Error removing ticket ${id} ${error}`);\n    }\n  }\n\n  /**\n   * build and instance of a notification post in help desk\n   */\n  buildNotification(ticket: HelpDeskTicket) {\n    let text = `Tu ticket ${ticket.title} ha recibido respuesta o cambios`;\n    const urlInvitation = process.env.APP_URI + '/home/helpdesk';\n    return {\n      text,\n      date: new Date(),\n      target: `userNotification ${ticket.childs[0].answerById};`,\n      state: NotificationStates.pending,\n      type: NotificationTypes.notes,\n      isDeleted: false,\n      url: urlInvitation,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HelpDeskTicket.html":{"url":"classes/HelpDeskTicket.html","title":"class - HelpDeskTicket","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HelpDeskTicket\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/help-desk/entities/help-desk.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                help desk docs\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                _id\n                            \n                            \n                                    \n                                    \n                                category\n                            \n                            \n                                    \n                                    \n                                childs\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                    \n                                isDeleted\n                            \n                            \n                                    \n                                    \n                                startupId\n                            \n                            \n                                    \n                                    \n                                startupName\n                            \n                            \n                                    \n                                    \n                                status\n                            \n                            \n                                    \n                                    \n                                title\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/help-desk/entities/help-desk.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TicketCategory\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, enum: TicketCategory, default: undefined})@Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/help-desk/entities/help-desk.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        childs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TicketChild[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/help-desk/entities/help-desk.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/help-desk/entities/help-desk.entity.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/help-desk/entities/help-desk.entity.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        startupId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/help-desk/entities/help-desk.entity.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        startupName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/help-desk/entities/help-desk.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TicketEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, enum: TicketEnum, default: undefined})@Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/help-desk/entities/help-desk.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/help-desk/entities/help-desk.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/help-desk/entities/help-desk.entity.ts:57\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ObjectType, Field, Int, ID } from '@nestjs/graphql';\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { TicketEnum } from '../enum/ticket-status.enum';\nimport { TicketCategory } from '../enum/ticket-category.enum';\nimport { GraphQLJSONObject } from 'graphql-scalars';\nimport { SchemaTypes } from 'mongoose';\nimport { IFileUpload } from 'src/shared/models/file';\n/**\n * help desk docs\n */\n@Schema({ timestamps: true })\n@ObjectType()\nexport class HelpDeskTicket {\n  @Field(() => ID)\n  _id: string;\n\n  @Field(() => String)\n  @Prop({ required: true })\n  title: string;\n\n  @Prop({\n    type: String,\n    enum: TicketCategory,\n    default: TicketCategory.support,\n  })\n  @Field(() => String)\n  category: TicketCategory;\n\n  @Prop({\n    type: String,\n    enum: TicketEnum,\n    default: TicketEnum.Open,\n  })\n  @Field(() => String)\n  status: TicketEnum;\n\n  @Field(() => [GraphQLJSONObject])\n  @Prop({ type: [{ type: SchemaTypes.Mixed }] })\n  childs: TicketChild[];\n\n  @Field(() => String)\n  @Prop({ required: true })\n  startupId: string;\n\n  @Field(() => String)\n  @Prop({ required: true })\n  startupName: string;\n\n  @Field(() => Boolean)\n  @Prop({ default: false })\n  isDeleted: boolean;\n\n  @Field(() => Date)\n  createdAt: Date;\n\n  @Field(() => Date)\n  updatedAt: Date;\n}\n/**\n * answer to post\n */\nexport class TicketChild {\n  body: string;\n  attachment: IFileUpload[];\n  isResponse: boolean;\n  answerBy: string;\n  answerById: string;\n}\n/**\n * @ignore\n */\nexport const HelpDeskTicketSchema =\n  SchemaFactory.createForClass(HelpDeskTicket);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Hours.html":{"url":"classes/Hours.html","title":"class - Hours","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Hours\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/activities-config/outputs/hours.model.ts\n        \n\n\n            \n                Description\n            \n            \n                graphql args output\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                hours\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        hours\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/activities-config/outputs/hours.model.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, ObjectType } from '@nestjs/graphql';\nimport { GraphQLJSONObject } from 'graphql-scalars';\n/**\n * graphql args output\n */\n@ObjectType()\nexport class Hours {\n  @Field(() => GraphQLJSONObject)\n  hours: { [key: string]: any };\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IAttachment.html":{"url":"interfaces/IAttachment.html","title":"interface - IAttachment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IAttachment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/applicant/entities/applicant.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                extract token from header\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            key\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ObjectType, Field, ID } from '@nestjs/graphql';\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport GraphQLJSON from 'graphql-type-json';\nimport { User } from 'src/users/entities/user.entity';\nimport { ApplicationStates } from '../enums/application-states.enum';\nimport { FormFileSubmission } from 'src/forms/factories/form-file-submission';\n\n/**\n * is the follow-up of an applicant to the announcement, with the documents and their status.\n */\n@ObjectType()\nexport class ApplicantState {\n  @Field(() => String)\n  @Prop({ default: '' })\n  notes: string;\n\n  @Field(() => [Attachment])\n  @Prop({ default: [] })\n  documents: Attachment[];\n\n  @Field(() => ApplicationStates)\n  @Prop({ required: true, enum: ApplicationStates })\n  type: ApplicationStates;\n}\n/**\n * when someone participates in a call for proposals this type of document is generated\n */\n@Schema({ timestamps: true })\n@ObjectType()\nexport class Applicant {\n  @Field(() => ID)\n  _id: string;\n\n  @Field(() => GraphQLJSON, {\n    description: 'Set of additional dynamic properties.',\n  })\n  @Prop({ type: Object })\n  item: JSON;\n\n  @Field(() => GraphQLJSON, { nullable: true })\n  documentsFields?: Record;\n\n  @Field(() => [FormFileSubmission], {\n    description: 'Submitted files from announcement form.',\n    nullable: true,\n  })\n  @Prop({ default: [] })\n  documents?: FormFileSubmission[];\n\n  @Field(() => String, {\n    description: 'Id of the announcement this document is associated to.',\n  })\n  @Prop({ required: true })\n  announcement: string;\n\n  @Field(() => String, {\n    description: 'Unique identifier for non-anonymous submissions.',\n    nullable: true,\n  })\n  @Prop()\n  participant: string;\n\n  @Field(() => ApplicantState, { nullable: true })\n  state?: ApplicantState;\n\n  @Field(() => [ApplicantState], {\n    description: 'Id of the announcement this document is associated to.',\n  })\n  @Prop({\n    required: true,\n    default: [{ notes: '', documents: [], type: ApplicationStates.enrolled }],\n  })\n  states: ApplicantState[];\n\n  @Field(() => Date, {\n    description: 'If set, The date the entity was deleted.',\n    nullable: true,\n  })\n  @Prop()\n  deletedAt: Date;\n\n  @Field(() => User, {\n    description: 'If set, Details from user who last updated the entity.',\n    nullable: true,\n  })\n  @Prop()\n  updatedBy: string;\n\n  @Field(() => Date, { description: 'Date of entity creation.' })\n  createdAt: Date;\n\n  @Field(() => Date, { description: 'Date of last entity update.' })\n  updatedAt: Date;\n\n  @Field(() => GraphQLJSON, {\n    description: 'Batch assign if participant is selected',\n    nullable: true,\n  })\n  @Prop({ type: Object })\n  batch: Record;\n}\n/**\n * @ignore\n */\nexport const ApplicantSchema = SchemaFactory.createForClass(Applicant);\n/**\n * extract token from header\n */\n@ObjectType()\nexport class Attachment implements IAttachment {\n  @Field(() => String, { description: 'Name of the attachment file.' })\n  @Prop({ default: '' })\n  name: string;\n\n  @Field(() => String, { description: 'Url for the attachment file.' })\n  @Prop({ default: '' })\n  url: string;\n\n  @Field(() => String, { description: 'Unique key used for the file.' })\n  @Prop({ default: '' })\n  key: string;\n}\n/**\n * extract token from header\n */\nexport interface IAttachment {\n  name: string;\n  url: string;\n  key: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Integration.html":{"url":"classes/Integration.html","title":"class - Integration","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Integration\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/integrations/entities/integration.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                dynamic integrations with app\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                _id\n                            \n                            \n                                    \n                                    \n                                code\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                    \n                                metadata\n                            \n                            \n                                    \n                                    \n                                typeIntegration\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/integrations/entities/integration.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})@Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/integrations/entities/integration.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Date of entity creation.'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/integrations/entities/integration.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        metadata\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Extra useful information', nullable: true})@Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/integrations/entities/integration.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        typeIntegration\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TypeIntegration\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({required: true, enum: TypeIntegration})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/integrations/entities/integration.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Date of last entity update.'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/integrations/entities/integration.entity.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ObjectType, Field, ID } from '@nestjs/graphql';\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport GraphQLJSON from 'graphql-type-json';\nimport { TypeIntegration } from '../enum/types.enum';\n/**\n * dynamic integrations with app\n */\n@Schema({ timestamps: true })\n@ObjectType()\nexport class Integration {\n  @Field(() => ID)\n  _id: string;\n\n  @Field(() => String)\n  @Prop({ required: true, enum: TypeIntegration })\n  typeIntegration: TypeIntegration;\n\n  @Prop({ required: true })\n  @Field(() => String)\n  code: string;\n\n  @Field(() => GraphQLJSON, {\n    description: 'Extra useful information',\n    nullable: true,\n  })\n  @Prop({ type: Object })\n  metadata: Record;\n\n  @Field(() => Date, { description: 'Date of entity creation.' })\n  createdAt: Date;\n\n  @Field(() => Date, { description: 'Date of last entity update.' })\n  updatedAt: Date;\n}\n/**\n * @ignore\n */\nexport const IntegrationSchema = SchemaFactory.createForClass(Integration);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/IntegrationsModule.html":{"url":"modules/IntegrationsModule.html","title":"module - IntegrationsModule","body":"\n                   \n\n\n\n\n    Modules\n    IntegrationsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_IntegrationsModule\n\n\n\ncluster_IntegrationsModule_exports\n\n\n\ncluster_IntegrationsModule_providers\n\n\n\ncluster_IntegrationsModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nIntegrationsModule\n\nIntegrationsModule\n\nIntegrationsModule -->\n\nAuthModule->IntegrationsModule\n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nIntegrationsModule -->\n\nLoggerModule->IntegrationsModule\n\n\n\n\n\nIntegrationsService \n\nIntegrationsService \n\nIntegrationsService  -->\n\nIntegrationsModule->IntegrationsService \n\n\n\n\n\nIntegrationsService\n\nIntegrationsService\n\nIntegrationsModule -->\n\nIntegrationsService->IntegrationsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/integrations/integrations.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            IntegrationsService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            LoggerModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            IntegrationsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module, forwardRef } from '@nestjs/common';\nimport { IntegrationsService } from './integrations.service';\nimport { IntegrationsResolver } from './integrations.resolver';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { LoggerModule } from 'src/logger/logger.module';\nimport { Integration, IntegrationSchema } from './entities/integration.entity';\nimport { AuthModule } from 'src/auth/auth.module';\nimport { EmailsModule } from 'src/emails/emails.module';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      { name: Integration.name, schema: IntegrationSchema },\n    ]),\n    AuthModule,\n    LoggerModule,\n    forwardRef(() => EmailsModule),\n  ],\n  providers: [IntegrationsResolver, IntegrationsService],\n  exports: [IntegrationsService],\n})\nexport class IntegrationsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IntegrationsService.html":{"url":"injectables/IntegrationsService.html","title":"injectable - IntegrationsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  IntegrationsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/integrations/integrations.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                apiZoom\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                deleteMeeting\n                            \n                            \n                                findAll\n                            \n                            \n                                    Async\n                                tokenZoom\n                            \n                            \n                                    Async\n                                updateOrCreate\n                            \n                            \n                                zoomIntegration\n                            \n                            \n                                    Async\n                                zoomMeeting\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(integrationModel: Model, emailsService: EmailsService)\n                    \n                \n                        \n                            \n                                Defined in src/integrations/integrations.service.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        integrationModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        emailsService\n                                                  \n                                                        \n                                                                        EmailsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteMeeting\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteMeeting(meetingId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/integrations/integrations.service.ts:209\n                        \n                    \n\n\n            \n                \n                        delete a zoom meeting\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                meetingId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/integrations/integrations.service.ts:45\n                        \n                    \n\n\n            \n                \n                        find all integration doc\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        tokenZoom\n                        \n                    \n                \n            \n            \n                \n                        \n                    tokenZoom()\n                \n            \n\n\n                    \n                        \n                            Defined in src/integrations/integrations.service.ts:61\n                        \n                    \n\n\n            \n                \n                        find token zoom followed integration zoom\n\n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateOrCreate\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateOrCreate(data: CreateIntegrationInput)\n                \n            \n\n\n                    \n                        \n                            Defined in src/integrations/integrations.service.ts:32\n                        \n                    \n\n\n            \n                \n                        create or update integration doc\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            CreateIntegrationInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        zoomIntegration\n                        \n                    \n                \n            \n            \n                \nzoomIntegration()\n                \n            \n\n\n                    \n                        \n                            Defined in src/integrations/integrations.service.ts:52\n                        \n                    \n\n\n            \n                \n                        find integration zoom doc\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        zoomMeeting\n                        \n                    \n                \n            \n            \n                \n                        \n                    zoomMeeting(meetingName: string, start_time, duration: number, hosting: literal type[], participants: literal type[], others?: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/integrations/integrations.service.ts:94\n                        \n                    \n\n\n            \n                \n                        create an zoom meeting\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                meetingName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                start_time\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                duration\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                hosting\n                                            \n                                                        literal type[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                participants\n                                            \n                                                        literal type[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                others\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        apiZoom\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://api.zoom.us/v2'\n                    \n                \n                    \n                        \n                                Defined in src/integrations/integrations.service.ts:21\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  NotFoundException,\n  InternalServerErrorException,\n  Inject,\n  forwardRef,\n} from '@nestjs/common';\nimport { CreateIntegrationInput } from './dto/create-integration.input';\nimport { Integration } from './entities/integration.entity';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model, Types } from 'mongoose';\nimport { TypeIntegration } from './enum/types.enum';\nimport { stringify } from 'querystring';\nimport axios from 'axios';\nimport { ZoomApiResponse } from './model/response-zoom-api';\nimport { ZoomMeetingRequest } from './model/zoom-meeting-request';\nimport { EmailsService } from 'src/emails/emails.service';\n\n@Injectable()\nexport class IntegrationsService {\n  apiZoom = 'https://api.zoom.us/v2';\n  constructor(\n    @InjectModel(Integration.name)\n    private readonly integrationModel: Model,\n    @Inject(forwardRef(() => EmailsService))\n    private readonly emailsService: EmailsService,\n  ) {}\n\n  /**\n   * create or update integration doc\n   */\n  async updateOrCreate(data: CreateIntegrationInput) {\n    return await this.integrationModel\n      .findOneAndUpdate(\n        { typeIntegration: data.typeIntegration },\n        { ...data },\n        { new: true, upsert: true },\n      )\n      .lean();\n  }\n\n  /**\n   * find all integration doc\n   */\n  findAll() {\n    return this.integrationModel.find().lean();\n  }\n\n  /**\n   * find integration zoom doc\n   */\n  zoomIntegration() {\n    return this.integrationModel\n      .findOne({ typeIntegration: TypeIntegration.zoom })\n      .lean();\n  }\n\n  /**\n   * find token zoom followed integration zoom\n   */\n  async tokenZoom() {\n    const integration = await this.zoomIntegration();\n    if (!integration)\n      throw new NotFoundException(`Couldn't find integration with zoom`);\n    let data = stringify({\n      grant_type: 'account_credentials',\n      account_id: integration.metadata['accountId'],\n    });\n\n    let config = {\n      method: 'post',\n      url: 'https://zoom.us/oauth/token',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n        Authorization:\n          'Basic ' +\n          Buffer.from(\n            `${integration.metadata['clientId']}:${integration.metadata['clientSecret']}`,\n          ).toString('base64'),\n      },\n      data,\n    };\n    try {\n      const response = await axios(config);\n      return response.data;\n    } catch (error) {\n      throw new InternalServerErrorException(error);\n    }\n  }\n\n  /**\n   * create an zoom meeting\n   */\n  async zoomMeeting(\n    meetingName: string,\n    start_time,\n    duration: number,\n    hosting: { email: string; name: string }[],\n    participants: { email: string }[],\n    others?: {\n      alternative_hosts: string;\n    },\n  ) {\n    const integration = await this.zoomIntegration();\n    if (!integration)\n      throw new NotFoundException(`Couldn't find integration with zoom`);\n    const token: {\n      access_token: string;\n      token_type: 'string';\n      expires_in: number;\n      scope: string;\n    } = await this.tokenZoom();\n    let data: ZoomMeetingRequest = {\n      agenda: meetingName,\n      default_password: false,\n      duration: duration,\n      pre_schedule: false, // if integrate addon GSuite google to ZoomAPP\n      schedule_for: integration.metadata['email'],\n      settings: {\n        allow_multiple_devices: true,\n        alternative_hosts: others?.alternative_hosts,\n        alternative_hosts_email_notification: true,\n        approval_type: 2,\n        audio: 'telephony',\n        authentication_exception: hosting,\n        auto_recording: 'cloud',\n        breakout_room: {\n          enable: true,\n          rooms: [\n            {\n              name: 'room1',\n              participants: [...participants.map((i) => i.email)],\n            },\n          ],\n        },\n        calendar_type: 1,\n        close_registration: false,\n        contact_email: integration.metadata['email'],\n        contact_name: 'Ecosystem',\n        email_notification: true,\n        encryption_type: 'enhanced_encryption',\n        focus_mode: true,\n        host_video: true,\n        jbh_time: 0,\n        join_before_host: false,\n        meeting_authentication: true,\n        meeting_invitees: participants,\n        mute_upon_entry: false,\n        participant_video: false,\n        private_meeting: false,\n        registrants_confirmation_email: true,\n        registrants_email_notification: true,\n        registration_type: 1,\n        show_share_button: true,\n        use_pmi: false,\n        waiting_room: false,\n        watermark: false,\n        host_save_video_order: true,\n        alternative_host_update_polls: true,\n        internal_meeting: false,\n        continuous_meeting_chat: {\n          enable: true,\n          auto_add_invited_external_users: true,\n        },\n        participant_focused_meeting: false,\n        push_change_to_calendar: false,\n        resources: [\n          {\n            resource_type: 'whiteboard',\n            resource_id: 'X4Hy02w3QUOdskKofgb9Jg',\n            permission_level: 'editor',\n          },\n        ],\n      },\n      start_time,\n      template_id: 'Dv4YdINdTk+Z5RToadh5ug==',\n      timezone: 'America/Bogota',\n      topic: meetingName,\n      tracking_fields: [\n        {\n          field: 'field1',\n          value: 'value1',\n        },\n      ],\n      type: 2,\n    };\n    let config = {\n      method: 'post',\n      url: this.apiZoom + `/users/me/meetings`,\n      headers: {\n        Authorization: `Bearer ${token.access_token}`,\n      },\n      data,\n    };\n\n    try {\n      const response = await axios(config);\n      let ansData: ZoomApiResponse = response.data;\n      return ansData;\n    } catch (error) {\n      console.log(error);\n      throw new InternalServerErrorException(error);\n    }\n  }\n\n  /**\n   * delete a zoom meeting\n   */\n  async deleteMeeting(meetingId: string) {\n    const integration = await this.zoomIntegration();\n    if (!integration)\n      throw new NotFoundException(`Couldn't find integration with zoom`);\n    const token: {\n      access_token: string;\n      token_type: 'string';\n      expires_in: number;\n      scope: string;\n    } = await this.tokenZoom();\n    let config = {\n      method: 'delete',\n      url: this.apiZoom + `/meetings/${meetingId}`,\n      headers: {\n        Authorization: `Bearer ${token.access_token}`,\n      },\n    };\n    try {\n      const response = await axios(config);\n      let ansData: ZoomApiResponse = response.data;\n      return ansData;\n    } catch (error) {\n      console.log(error);\n      throw new InternalServerErrorException(error);\n    }\n  }\n\n  /**\n   * @ignore\n   */\n  async testIcs() {\n    const integration = await this.zoomIntegration();\n    if (!integration)\n      throw new NotFoundException(`Couldn't find integration with zoom`);\n    try {\n      // await this.emailsService.sendIcs();\n    } catch (error) {\n      console.log(error);\n    }\n    return integration;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Invitation.html":{"url":"classes/Invitation.html","title":"class - Invitation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Invitation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/invitations/entities/invitation.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                invitations to use app\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                _id\n                            \n                            \n                                    \n                                code\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                expiresAt\n                            \n                            \n                                    \n                                    \n                                metadata\n                            \n                            \n                                    \n                                    \n                                rol\n                            \n                            \n                                    \n                                    \n                                state\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    expired\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/invitations/entities/invitation.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/invitations/entities/invitation.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/invitations/entities/invitation.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})@Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/invitations/entities/invitation.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({index: true})@Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/invitations/entities/invitation.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        expiresAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({default: () => })@Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/invitations/entities/invitation.entity.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        metadata\n                        \n                    \n                \n            \n                \n                    \n                        Type :     JSON\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Extra useful information for the subsequent registration using the invitation', nullable: true})@Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/invitations/entities/invitation.entity.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        rol\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ValidRoles\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()@Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/invitations/entities/invitation.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         InvitationStates\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({default: undefined})@Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/invitations/entities/invitation.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/invitations/entities/invitation.entity.ts:49\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        expired\n                    \n                \n\n                \n                    \n                        getexpired()\n                    \n                \n                            \n                                \n                                    Defined in src/invitations/entities/invitation.entity.ts:59\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { ObjectType, Field, ID } from '@nestjs/graphql';\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { ValidRoles } from 'src/auth/enums/valid-roles.enum';\nimport { InvitationStates } from '../enums/invitation-states.enum';\nimport { User } from 'src/users/entities/user.entity';\nimport GraphQLJSON from 'graphql-type-json';\n/**\n * invitations to use app\n */\n@ObjectType()\n@Schema({ timestamps: true })\nexport class Invitation {\n  @Field(() => ID)\n  _id: string;\n\n  @Prop()\n  code: string;\n\n  @Prop({ index: true })\n  @Field(() => String)\n  email: string;\n\n  @Prop()\n  @Field(() => ValidRoles)\n  rol: ValidRoles;\n\n  @Prop({ required: true })\n  @Field(() => User)\n  createdBy: string;\n\n  @Prop({ default: InvitationStates.enabled })\n  @Field(() => InvitationStates)\n  state: InvitationStates;\n\n  @Prop({\n    default: () => {\n      const expireDate = new Date(Date.now());\n      expireDate.setDate(expireDate.getDate() + 1);\n      return expireDate;\n    },\n  })\n  @Field(() => Date)\n  expiresAt: Date;\n\n  @Field(() => Date)\n  createdAt: Date;\n\n  @Field(() => Date)\n  updatedAt: Date;\n\n  @Field(() => GraphQLJSON, {\n    description:\n      'Extra useful information for the subsequent registration using the invitation',\n    nullable: true,\n  })\n  @Prop({ type: Object })\n  metadata: JSON;\n\n  get expired(): boolean {\n    return this.expiresAt.getTime() \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/InvitationsController.html":{"url":"controllers/InvitationsController.html","title":"controller - InvitationsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  InvitationsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/invitations/invitations.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                invitations\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                acceptInvitation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        acceptInvitation\n                        \n                    \n                \n            \n            \n                \n                        \n                    acceptInvitation(acceptInvitationDto: AcceptInvitationDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/accept')\n                \n            \n\n                    \n                        \n                            Defined in src/invitations/invitations.controller.ts:13\n                        \n                    \n\n\n            \n                \n                        accept invitation state\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                acceptInvitationDto\n                                            \n                                                            AcceptInvitationDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Post } from '@nestjs/common';\nimport { InvitationsService } from './invitations.service';\nimport { AcceptInvitationDto } from './dto/accept-invitation.dto';\n\n@Controller('invitations')\nexport class InvitationsController {\n  constructor(private readonly invitationsService: InvitationsService) {}\n\n  /**\n   * accept invitation state\n   */\n  @Post('/accept')\n  acceptInvitation(@Body() acceptInvitationDto: AcceptInvitationDto) {\n    return this.invitationsService.accept(acceptInvitationDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/InvitationsModule.html":{"url":"modules/InvitationsModule.html","title":"module - InvitationsModule","body":"\n                   \n\n\n\n\n    Modules\n    InvitationsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_InvitationsModule\n\n\n\ncluster_InvitationsModule_providers\n\n\n\ncluster_InvitationsModule_imports\n\n\n\ncluster_InvitationsModule_exports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nInvitationsModule\n\nInvitationsModule\n\nInvitationsModule -->\n\nAuthModule->InvitationsModule\n\n\n\n\n\nEmailsModule\n\nEmailsModule\n\nInvitationsModule -->\n\nEmailsModule->InvitationsModule\n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nInvitationsModule -->\n\nLoggerModule->InvitationsModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nInvitationsModule -->\n\nUsersModule->InvitationsModule\n\n\n\n\n\nInvitationsService \n\nInvitationsService \n\nInvitationsService  -->\n\nInvitationsModule->InvitationsService \n\n\n\n\n\nInvitationsService\n\nInvitationsService\n\nInvitationsModule -->\n\nInvitationsService->InvitationsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/invitations/invitations.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            InvitationsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            InvitationsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            EmailsModule\n                        \n                        \n                            LoggerModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            InvitationsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { InvitationsService } from './invitations.service';\nimport { InvitationsResolver } from './invitations.resolver';\nimport { InvitationsController } from './invitations.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Invitation, InvitationSchema } from './entities/invitation.entity';\nimport { LoggerModule } from 'src/logger/logger.module';\nimport { AuthModule } from 'src/auth/auth.module';\nimport { EmailsModule } from 'src/emails/emails.module';\nimport { UsersModule } from 'src/users/users.module';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      { name: Invitation.name, schema: InvitationSchema },\n    ]),\n    AuthModule,\n    UsersModule,\n    LoggerModule,\n    EmailsModule,\n  ],\n  providers: [InvitationsResolver, InvitationsService],\n  controllers: [InvitationsController],\n  exports: [InvitationsService],\n})\nexport class InvitationsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/InvitationsService.html":{"url":"injectables/InvitationsService.html","title":"injectable - InvitationsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  InvitationsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/invitations/invitations.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                accept\n                            \n                            \n                                    Async\n                                cancel\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                resend\n                            \n                            \n                                    Async\n                                tryFindOneByEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(invitationModel: Model, emailsService: EmailsService, usersService: UsersService, authService: AuthService, logger: AppLogger, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/invitations/invitations.service.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        invitationModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        emailsService\n                                                  \n                                                        \n                                                                        EmailsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    AppLogger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        accept\n                        \n                    \n                \n            \n            \n                \n                        \n                    accept(undefined: AcceptInvitationDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/invitations/invitations.service.ts:191\n                        \n                    \n\n\n            \n                \n                        invitation accepted\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            AcceptInvitationDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        cancel\n                        \n                    \n                \n            \n            \n                \n                        \n                    cancel(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/invitations/invitations.service.ts:173\n                        \n                    \n\n\n            \n                \n                        cancel an invitation\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(undefined: CreateInvitationArgs, adminUser: User, metadata?)\n                \n            \n\n\n                    \n                        \n                            Defined in src/invitations/invitations.service.ts:43\n                        \n                    \n\n\n            \n                \n                        create an invitation\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            CreateInvitationArgs\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                adminUser\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                metadata\n                                            \n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll(skip: number, limit: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/invitations/invitations.service.ts:114\n                        \n                    \n\n\n            \n                \n                        find all invitation\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                skip\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    0\n                                            \n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    25\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(filters: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/invitations/invitations.service.ts:121\n                        \n                    \n\n\n            \n                \n                        find invitation by filters\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filters\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        resend\n                        \n                    \n                \n            \n            \n                \n                        \n                    resend(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/invitations/invitations.service.ts:147\n                        \n                    \n\n\n            \n                \n                        resend an invitation\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        tryFindOneByEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    tryFindOneByEmail(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/invitations/invitations.service.ts:133\n                        \n                    \n\n\n            \n                \n                        find an invitation by email\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  InternalServerErrorException,\n  MethodNotAllowedException,\n  NotFoundException,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport * as uuid from 'uuid';\nimport { AppLogger } from 'src/logger/app-logger';\nimport { CreateInvitationArgs } from './args/create-invitation.args';\nimport { Invitation } from './entities/invitation.entity';\nimport { InvitationStates } from './enums/invitation-states.enum';\nimport { EmailsService } from 'src/emails/emails.service';\nimport { User } from 'src/users/entities/user.entity';\nimport { InvitationTemplate } from 'src/emails/templates/invitation';\nimport { rolNames } from 'src/auth/enums/valid-roles.enum';\nimport { UsersService } from 'src/users/users.service';\nimport { AuthService } from 'src/auth/auth.service';\nimport { AcceptInvitationDto } from './dto/accept-invitation.dto';\nimport { AppConfiguration } from 'config/app.config';\nimport { ConfigService } from '@nestjs/config';\nimport { AuthUser } from 'src/auth/types/auth-user';\n\n@Injectable()\nexport class InvitationsService {\n  constructor(\n    @InjectModel(Invitation.name)\n    private readonly invitationModel: Model,\n    private readonly emailsService: EmailsService,\n    private readonly usersService: UsersService,\n    private readonly authService: AuthService,\n    private readonly logger: AppLogger,\n    private readonly configService: ConfigService,\n  ) {\n    this.logger.setContext(InvitationsService.name);\n  }\n\n  /**\n   * create an invitation\n   */\n  async create(\n    { email, rol }: CreateInvitationArgs,\n    adminUser: User,\n    metadata?,\n  ) {\n    const currentInvitation = await this.tryFindOneByEmail(email);\n    // Limited to only one active invitation per email;\n    if (currentInvitation)\n      throw new MethodNotAllowedException(\n        `There is already one invitation pending acceptance for the email ${email}`,\n      );\n\n    let user = await this.usersService.tryFindOne({ email });\n    // if (user?.passwordSet)\n    //   throw new MethodNotAllowedException(\n    //     'A user with this email already exists',\n    //   );\n\n    const code = uuid.v4();\n    if (!user) {\n      // Create a new user\n      user = await this.authService.createAccountWithDefaultPassword(\n        email,\n        rol,\n      );\n    } else {\n      // Update the user role with the role from the new invitation\n      const rolDoc = await this.usersService.findRolByType(rol);\n      if (user.rol.toString() !== rolDoc._id.toString()) {\n        await this.usersService.update({ _id: user._id }, { rol: rolDoc._id });\n      }\n    }\n    const invitationData = {\n      email,\n      rol,\n      createdBy: adminUser.uid,\n      code: code,\n      metadata: {\n        ...metadata,\n        uidAccount: user.uid,\n      },\n    };\n    try {\n      const invitation = await this.invitationModel.create(invitationData);\n      const emailTemplate: InvitationTemplate = new InvitationTemplate();\n      emailTemplate.personalizations = [\n        {\n          to: [\n            {\n              email: invitation.email,\n            },\n          ],\n          dynamicTemplateData: {\n            redirectUri: `${this.configService.get('appUri')}/register`,\n            code: code,\n            role: rolNames[invitation.rol],\n          },\n        },\n      ];\n      await this.emailsService.sendFromTemplate(emailTemplate);\n      return invitation;\n    } catch (ex) {\n      this.logger.error(ex);\n      // console.log(ex);\n      throw new InternalServerErrorException('Failed to create invitation');\n    }\n  }\n\n  /**\n   * find all invitation\n   */\n  findAll(skip: number = 0, limit: number = 25) {\n    return this.invitationModel.find().skip(skip).limit(limit);\n  }\n\n  /**\n   * find invitation by filters\n   */\n  async findOne(filters: { _id?: string; code?: string; email?: string }) {\n    const invitation = await this.invitationModel.findOne(filters).lean();\n    if (!invitation)\n      throw new NotFoundException(\n        `No invitation found with filters ${filters}`,\n      );\n    return invitation;\n  }\n\n  /**\n   * find an invitation by email\n   */\n  async tryFindOneByEmail(email: string): Promise {\n    const invitation = await this.invitationModel\n      .findOne({\n        email: email,\n        expiresAt: { $gte: new Date().toISOString() },\n        state: InvitationStates.enabled,\n      })\n      .lean();\n    return invitation;\n  }\n\n  /**\n   * resend an invitation\n   */\n  async resend(id: string) {\n    const invitation = await this.findOne({ _id: id });\n    if (invitation.state !== InvitationStates.enabled)\n      throw new MethodNotAllowedException(`Invitation ${invitation.state}`);\n    const emailTemplate: InvitationTemplate = new InvitationTemplate();\n    emailTemplate.personalizations = [\n      {\n        to: [\n          {\n            email: invitation.email,\n          },\n        ],\n        dynamicTemplateData: {\n          redirectUri: `${this.configService.get('appUri')}/register`,\n          code: invitation.code,\n          role: rolNames[invitation.rol],\n        },\n      },\n    ];\n    await this.emailsService.sendFromTemplate(emailTemplate);\n    return invitation;\n  }\n\n  /**\n   * cancel an invitation\n   */\n  async cancel(id: string) {\n    const invitation = await this.invitationModel.findOne({ _id: id });\n    if (invitation.state === InvitationStates.disabled)\n      throw new MethodNotAllowedException('The invitation is already disabled');\n    if (invitation.state === InvitationStates.accepted)\n      throw new MethodNotAllowedException(\n        \"Can't disable an accepted invitation\",\n      );\n\n    invitation.state = InvitationStates.disabled;\n    await invitation.save();\n    // await this.authService.deleteUser();\n    return invitation;\n  }\n\n  /**\n   * invitation accepted\n   */\n  async accept({\n    code,\n    name,\n    password,\n  }: AcceptInvitationDto): Promise {\n    // Validate invitation state\n    const invitation = await this.invitationModel.findOne({ code });\n    if (invitation.expired)\n      throw new UnauthorizedException('The invitation has expired');\n    if (invitation.state === InvitationStates.disabled)\n      throw new UnauthorizedException(\n        'This invitation was disabled by an administrator',\n      );\n    if (invitation.state === InvitationStates.accepted)\n      throw new UnauthorizedException('This invitation was already accepted');\n\n    const userDoc = await this.usersService.tryFindOne({\n      email: invitation.email,\n    });\n    if (!userDoc) {\n      throw new InternalServerErrorException(\n        'We were unable to complete the operation',\n      );\n    }\n    if (password === 'googleInMethod') {\n      await this.usersService.update({ uid: userDoc.uid }, { googleIn: true });\n    } else {\n      // Update password\n      await this.authService.updatePassword(userDoc.uid, password);\n    }\n    // Update Invitation and user states\n    invitation.state = InvitationStates.accepted;\n    await invitation.save();\n    await this.usersService.update(\n      { uid: userDoc.uid },\n      { passwordSet: new Date(), fullName: name },\n    );\n    return invitation;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LastContentOutput.html":{"url":"classes/LastContentOutput.html","title":"class - LastContentOutput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LastContentOutput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/content/dto/last-content-output.ts\n        \n\n\n            \n                Description\n            \n            \n                graphql input scheme\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                contentCompleted\n                            \n                            \n                                    \n                                lastContent\n                            \n                            \n                                    \n                                numberOfContent\n                            \n                            \n                                    \n                                numberOfResourcesPending\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        contentCompleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/content/dto/last-content-output.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        lastContent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Content\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/content/dto/last-content-output.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        numberOfContent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/content/dto/last-content-output.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        numberOfResourcesPending\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/content/dto/last-content-output.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsOptional } from 'class-validator';\n\nimport { GraphQLJSONObject } from 'graphql-scalars';\nimport { Content } from '../entities/content.entity';\nimport { Field, ObjectType } from '@nestjs/graphql';\n/**\n * graphql input scheme\n */\n@ObjectType()\nexport class LastContentOutput {\n  @Field()\n  lastContent: Content;\n  @Field()\n  contentCompleted: number;\n  @Field()\n  numberOfContent: number;\n  @Field()\n  numberOfResourcesPending: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LinkExpertsToPhaseArgs.html":{"url":"classes/LinkExpertsToPhaseArgs.html","title":"class - LinkExpertsToPhaseArgs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LinkExpertsToPhaseArgs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/expert/args/link-phase-expert.args.ts\n        \n\n\n            \n                Description\n            \n            \n                graphql args input\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                experts\n                            \n                            \n                                    \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                phaseId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        experts\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/expert/args/link-phase-expert.args.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()@Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/expert/args/link-phase-expert.args.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        phaseId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()@Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/expert/args/link-phase-expert.args.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ArgsType, Field } from '@nestjs/graphql';\nimport { IsNotEmpty, IsOptional, IsString } from 'class-validator';\n/**\n * graphql args input\n */\n@ArgsType()\nexport class LinkExpertsToPhaseArgs {\n  @IsNotEmpty()\n  @IsString()\n  @Field(() => String)\n  phaseId: string;\n\n  @IsNotEmpty()\n  @IsString()\n  @Field(() => String)\n  name: string;\n\n  @IsNotEmpty()\n  @Field(() => [String])\n  experts: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LinkStartupToPhaseArgs.html":{"url":"classes/LinkStartupToPhaseArgs.html","title":"class - LinkStartupToPhaseArgs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LinkStartupToPhaseArgs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/startup/args/link-phase-startup.args.ts\n        \n\n\n            \n                Description\n            \n            \n                graphql args input\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                phaseId\n                            \n                            \n                                    \n                                    \n                                startups\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()@Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/startup/args/link-phase-startup.args.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        phaseId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()@Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/startup/args/link-phase-startup.args.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        startups\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/startup/args/link-phase-startup.args.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ArgsType, Field } from '@nestjs/graphql';\nimport { IsNotEmpty, IsOptional, IsString } from 'class-validator';\n/**\n * graphql args input\n */\n@ArgsType()\nexport class LinkStartupToPhaseArgs {\n  @IsNotEmpty()\n  @IsString()\n  @Field(() => String)\n  phaseId: string;\n\n  @IsNotEmpty()\n  @IsString()\n  @Field(() => String)\n  name: string;\n\n  @IsNotEmpty()\n  @Field(() => [String])\n  startups: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LinkStartupsExpertsArgs.html":{"url":"classes/LinkStartupsExpertsArgs.html","title":"class - LinkStartupsExpertsArgs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LinkStartupsExpertsArgs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/expert/args/link-phase-startups-expert.args.ts\n        \n\n\n            \n                Description\n            \n            \n                graphql args input\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                expertId\n                            \n                            \n                                    \n                                    \n                                    \n                                phase\n                            \n                            \n                                    \n                                    \n                                    \n                                startUps\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        expertId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()@Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/expert/args/link-phase-startups-expert.args.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        phase\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()@Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/expert/args/link-phase-startups-expert.args.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        startUps\n                        \n                    \n                \n            \n                \n                    \n                        Type :         StartupItem[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@Type(undefined)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/expert/args/link-phase-startups-expert.args.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ArgsType, InputType, Field } from '@nestjs/graphql';\nimport { IsNotEmpty, IsOptional, IsString, IsDefined } from 'class-validator';\nimport { StartupLink } from '../entities/expert.entity';\nimport { Type } from 'class-transformer';\n/**\n * graphql args input\n */\n@ArgsType()\nexport class LinkStartupsExpertsArgs {\n  @IsNotEmpty()\n  @IsString()\n  @Field(() => String)\n  expertId: string;\n\n  @IsNotEmpty()\n  @IsString()\n  @Field(() => String)\n  phase: string;\n\n  @Field(() => [StartupItem], { nullable: true })\n  @Type(() => StartupItem)\n  @IsOptional()\n  startUps: StartupItem[];\n}\n/**\n * @ignore\n */\n@InputType()\nclass StartupItem {\n  @Field(() => String)\n  @IsDefined()\n  _id: string;\n\n  @Field(() => String)\n  @IsDefined()\n  name: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LinkWithTargetsArgs.html":{"url":"classes/LinkWithTargetsArgs.html","title":"class - LinkWithTargetsArgs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LinkWithTargetsArgs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/args/link-with-targets.args.ts\n        \n\n\n            \n                Description\n            \n            \n                graphql args input\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                ids\n                            \n                            \n                                    \n                                    \n                                    \n                                targetIds\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        ids\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsNotEmpty()@IsArray()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/args/link-with-targets.args.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        targetIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsNotEmpty()@IsArray()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/args/link-with-targets.args.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, ArgsType } from '@nestjs/graphql';\nimport { IsArray, IsNotEmpty } from 'class-validator';\n/**\n * graphql args input\n */\n@ArgsType()\nexport class LinkWithTargetsArgs {\n  @Field(() => [String])\n  @IsNotEmpty()\n  @IsArray()\n  ids: string[];\n\n  @Field(() => [String])\n  @IsNotEmpty()\n  @IsArray()\n  targetIds: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LinkWithTargetsByRequestArgs.html":{"url":"classes/LinkWithTargetsByRequestArgs.html","title":"class - LinkWithTargetsByRequestArgs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LinkWithTargetsByRequestArgs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/args/link-with-targets-by-request.args.ts\n        \n\n\n            \n                Description\n            \n            \n                graphql args input\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                request\n                            \n                            \n                                    \n                                    \n                                    \n                                targetIds\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        request\n                        \n                    \n                \n            \n                \n                    \n                        Type :     PageRequest\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@ValidateNested()@Type(undefined)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/args/link-with-targets-by-request.args.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        targetIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsNotEmpty()@IsArray()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/args/link-with-targets-by-request.args.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, ArgsType } from '@nestjs/graphql';\nimport { Type } from 'class-transformer';\nimport { IsArray, IsNotEmpty, ValidateNested } from 'class-validator';\nimport { PageRequest } from 'src/shared/models/page-request';\n/**\n * graphql args input\n */\n@ArgsType()\nexport class LinkWithTargetsByRequestArgs {\n  @Field(() => PageRequest)\n  @ValidateNested()\n  @Type(() => PageRequest)\n  @IsNotEmpty()\n  request: PageRequest;\n\n  @Field(() => [String])\n  @IsNotEmpty()\n  @IsArray()\n  targetIds: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LoggerModule.html":{"url":"modules/LoggerModule.html","title":"module - LoggerModule","body":"\n                   \n\n\n\n\n    Modules\n    LoggerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LoggerModule\n\n\n\ncluster_LoggerModule_exports\n\n\n\n\nAppLogger \n\nAppLogger \n\n\n\nLoggerModule\n\nLoggerModule\n\nAppLogger  -->\n\nLoggerModule->AppLogger \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/logger/logger.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Exports\n                    \n                        \n                            AppLogger\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppLogger } from './app-logger';\n\n@Module({\n  providers: [AppLogger],\n  exports: [AppLogger]\n})\nexport class LoggerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Notification.html":{"url":"classes/Notification.html","title":"class - Notification","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Notification\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/notifications/class/notification.ts\n        \n\n\n            \n                Description\n            \n            \n                class notification global\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                date\n                            \n                            \n                                dateString\n                            \n                            \n                                isDeleted\n                            \n                            \n                                state\n                            \n                            \n                                target\n                            \n                            \n                                text\n                            \n                            \n                                type\n                            \n                            \n                                    Optional\n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data?: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/notifications/class/notification.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    Partial\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/notifications/class/notification.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/notifications/class/notification.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dateString\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/notifications/class/notification.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/notifications/class/notification.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NotificationStates\n\n                    \n                \n                    \n                        \n                                Defined in src/notifications/class/notification.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        target\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/notifications/class/notification.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        text\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/notifications/class/notification.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NotificationTypes\n\n                    \n                \n                    \n                        \n                                Defined in src/notifications/class/notification.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/notifications/class/notification.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import * as moment from 'moment';\nimport { NotificationTypes } from '../enum/notification-types.enum';\nimport { NotificationStates } from '../enum/notification-states.enum';\n/**\n * class notification global\n */\nexport class Notification {\n  _id: string;\n  text: string;\n  url?: string;\n  date: Date;\n  target: string;\n  type: NotificationTypes;\n  state: NotificationStates;\n  isDeleted: boolean;\n\n  dateString: string;\n  constructor(data?: Partial) {\n    const date = data ? new Date(data.date) : new Date();\n    Object.assign(this, {\n      ...data,\n      date,\n      dateString: moment(date).locale('es').format('dddd DD MMM - h:mm a'),\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Notification-1.html":{"url":"classes/Notification-1.html","title":"class - Notification-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Notification\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/notifications/entities/notification.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                user notifications\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                _id\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                    \n                                date\n                            \n                            \n                                    \n                                    \n                                isDeleted\n                            \n                            \n                                    \n                                    \n                                state\n                            \n                            \n                                    \n                                    \n                                target\n                            \n                            \n                                    \n                                    \n                                text\n                            \n                            \n                                    \n                                    \n                                type\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                    \n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/notifications/entities/notification.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/notifications/entities/notification.entity.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({required: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/notifications/entities/notification.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/notifications/entities/notification.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NotificationStates\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/notifications/entities/notification.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        target\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/notifications/entities/notification.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        text\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/notifications/entities/notification.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NotificationTypes\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/notifications/entities/notification.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/notifications/entities/notification.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@Prop({})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/notifications/entities/notification.entity.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ObjectType, Field, Int, ID } from '@nestjs/graphql';\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { NotificationTypes } from '../enum/notification-types.enum';\nimport { NotificationStates } from '../enum/notification-states.enum';\n/**\n * user notifications\n */\n@Schema({ timestamps: true })\n@ObjectType()\nexport class Notification {\n  @Field(() => ID)\n  _id: string;\n\n  @Field(() => String)\n  @Prop({ required: true })\n  text: string;\n\n  @Field(() => Date)\n  @Prop({ required: true, default: new Date() })\n  date: Date;\n\n  @Field(() => String, { nullable: true })\n  @Prop({})\n  url: string;\n\n  @Field(() => String)\n  @Prop({ required: true })\n  target: string;\n\n  @Field(() => String)\n  @Prop({ required: true })\n  state: NotificationStates;\n\n  @Field(() => String)\n  @Prop({ required: true })\n  type: NotificationTypes;\n\n  @Field(() => Boolean)\n  @Prop({ default: false })\n  isDeleted: boolean;\n\n  @Field(() => Date)\n  createdAt: Date;\n\n  @Field(() => Date)\n  updatedAt: Date;\n}\n/**\n * @ignore\n */\nexport const NotificationSchema = SchemaFactory.createForClass(Notification);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NotificationsModule.html":{"url":"modules/NotificationsModule.html","title":"module - NotificationsModule","body":"\n                   \n\n\n\n\n    Modules\n    NotificationsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NotificationsModule\n\n\n\ncluster_NotificationsModule_providers\n\n\n\ncluster_NotificationsModule_imports\n\n\n\ncluster_NotificationsModule_exports\n\n\n\n\nConfigNotificationsModule\n\nConfigNotificationsModule\n\n\n\nNotificationsModule\n\nNotificationsModule\n\nNotificationsModule -->\n\nConfigNotificationsModule->NotificationsModule\n\n\n\n\n\nTypesNotificationsModule\n\nTypesNotificationsModule\n\nNotificationsModule -->\n\nTypesNotificationsModule->NotificationsModule\n\n\n\n\n\nNotificationListenerService \n\nNotificationListenerService \n\nNotificationListenerService  -->\n\nNotificationsModule->NotificationListenerService \n\n\n\n\n\nNotificationsService \n\nNotificationsService \n\nNotificationsService  -->\n\nNotificationsModule->NotificationsService \n\n\n\n\n\nNotificationsService\n\nNotificationsService\n\nNotificationsModule -->\n\nNotificationsService->NotificationsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/notifications/notifications.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            NotificationsService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ConfigNotificationsModule\n                        \n                        \n                            TypesNotificationsModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NotificationListenerService\n                        \n                        \n                            NotificationsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module, forwardRef } from '@nestjs/common';\nimport { NotificationsService } from './notifications.service';\nimport { NotificationsResolver } from './notifications.resolver';\nimport { Mongoose } from 'mongoose';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport {\n  Notification,\n  NotificationSchema,\n} from './entities/notification.entity';\nimport { NotificationListenerService } from './listener/notification-listener.service';\nimport { TypesNotificationsModule } from './types-notifications/types-notifications.module';\nimport { ConfigNotificationsModule } from './config-notifications/config-notifications.module';\nimport { EntrepreneurModule } from 'src/entrepreneur/entrepreneur.module';\nimport { ExpertModule } from 'src/expert/expert.module';\n\n@Module({\n  providers: [\n    NotificationsResolver,\n    NotificationsService,\n    NotificationListenerService,\n  ],\n  imports: [\n    MongooseModule.forFeature([\n      { name: Notification.name, schema: NotificationSchema },\n    ]),\n    TypesNotificationsModule,\n    ConfigNotificationsModule,\n  ],\n  exports: [NotificationListenerService, NotificationsService],\n})\nexport class NotificationsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NotificationsService.html":{"url":"injectables/NotificationsService.html","title":"injectable - NotificationsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  NotificationsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/notifications/notifications.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                createMany\n                            \n                            \n                                findByUser\n                            \n                            \n                                    Async\n                                findNotificationsByTargets\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(notificationModel: Model, configNotificationsService: ConfigNotificationsService)\n                    \n                \n                        \n                            \n                                Defined in src/notifications/notifications.service.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        notificationModel\n                                                  \n                                                        \n                                                                    Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configNotificationsService\n                                                  \n                                                        \n                                                                        ConfigNotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createNotificationInput: CreateNotificationInput)\n                \n            \n\n\n                    \n                        \n                            Defined in src/notifications/notifications.service.ts:67\n                        \n                    \n\n\n            \n                \n                        create a notification\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createNotificationInput\n                                            \n                                                            CreateNotificationInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createMany\n                        \n                    \n                \n            \n            \n                \n                        \n                    createMany(createNotificationInput: CreateNotificationInput[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/notifications/notifications.service.ts:162\n                        \n                    \n\n\n            \n                \n                        create many notifications\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createNotificationInput\n                                            \n                                                        CreateNotificationInput[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findByUser\n                        \n                    \n                \n            \n            \n                \nfindByUser(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/notifications/notifications.service.ts:105\n                        \n                    \n\n\n            \n                \n                        find notification users\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findNotificationsByTargets\n                        \n                    \n                \n            \n            \n                \n                        \n                    findNotificationsByTargets(targets: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/notifications/notifications.service.ts:115\n                        \n                    \n\n\n            \n                \n                        find notification by list\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                targets\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/notifications/notifications.service.ts:90\n                        \n                    \n\n\n            \n                \n                        find notification by id\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/notifications/notifications.service.ts:152\n                        \n                    \n\n\n            \n                \n                        soft delete notification\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateNotificationInput: UpdateNotificationInput)\n                \n            \n\n\n                    \n                        \n                            Defined in src/notifications/notifications.service.ts:130\n                        \n                    \n\n\n            \n                \n                        update notification\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateNotificationInput\n                                            \n                                                            UpdateNotificationInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(NotificationsService.name)\n                    \n                \n                    \n                        \n                                Defined in src/notifications/notifications.service.ts:34\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  InternalServerErrorException,\n  Logger,\n  NotFoundException,\n} from '@nestjs/common';\nimport { CreateNotificationInput } from './dto/create-notification.input';\nimport { UpdateNotificationInput } from './dto/update-notification.input';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Notification } from './entities/notification.entity';\nimport { Model } from 'mongoose';\nimport { pubSubInstance } from 'src/shared/sockets/socket-instance';\nimport { AuthUser } from '../auth/types/auth-user';\nimport { channelsNotificationEnum } from './enum/chanels-notification.enum';\nimport { Entrepreneur } from 'src/entrepreneur/entities/entrepreneur.entity';\nimport { Expert } from 'src/expert/entities/expert.entity';\nimport { default_notification_types } from './types-notifications/model/types-notification.default';\nimport { EmailNotificationTypes } from './types-notifications/model/email-notification-types.enum';\nimport { ConfigNotificationsService } from './config-notifications/config-notifications.service';\nimport { ExpertEventSubmit } from 'src/events/dto/create-event.input';\nimport { Event as EventEntity } from 'src/events/entities/event.entity';\n/**\n * @ignore\n */\nconst pubSub = pubSubInstance;\n@Injectable()\nexport class NotificationsService {\n  constructor(\n    @InjectModel(Notification.name)\n    private readonly notificationModel: Model,\n    private readonly configNotificationsService: ConfigNotificationsService,\n  ) {}\n\n  _logger = new Logger(NotificationsService.name);\n\n  /**\n   * subscription channel in notification\n   * @ignore\n   */\n  subscribe(\n    user: AuthUser,\n    others?:\n      | { entrepreneurId?: string; startupId?: string; expertId?: string }\n      | Record,\n  ) {\n    const listTriggerNotifications = [\n      `${channelsNotificationEnum.userNotification} ${user._id}`,\n    ];\n    if (others?.entrepreneurId)\n      listTriggerNotifications.push(\n        `${channelsNotificationEnum.entrepreneurNotification} ${others?.entrepreneurId}`,\n      );\n    if (others?.startupId)\n      listTriggerNotifications.push(\n        `${channelsNotificationEnum.startupNotification} ${others?.startupId}`,\n      );\n    if (others?.expertId)\n      listTriggerNotifications.push(\n        `${channelsNotificationEnum.expertNotification} ${others?.expertId}`,\n      );\n    return pubSub.asyncIterator(listTriggerNotifications);\n  }\n\n  /**\n   * create a notification\n   */\n  async create(createNotificationInput: CreateNotificationInput) {\n    try {\n      var newNotification = await this.notificationModel.create(\n        createNotificationInput,\n      );\n      const targets = newNotification.target.split(';');\n      // for (const iterator of targets) {\n      //   pubSub.publish(iterator, {\n      //     newNotification: newNotification.toObject(),\n      //   });\n      // }\n      return newNotification;\n    } catch (error) {\n      this._logger.error(\n        `Error saving notification ${createNotificationInput}`,\n      );\n      throw new InternalServerErrorException(`Error creating notification`);\n    }\n  }\n\n  /**\n   * find notification by id\n   */\n  async findOne(id: string) {\n    try {\n      var ans = await this.notificationModel.findOne({ _id: id });\n      if (!ans) {\n        throw new NotFoundException(`Notification with di ${id} not found`);\n      }\n      return ans.toObject();\n    } catch (error) {\n      throw new InternalServerErrorException(`Error creating notification`);\n    }\n  }\n\n  /**\n   * find notification users\n   */\n  findByUser(userId: string) {\n    return this.notificationModel.find({\n      target: { $regex: userId },\n      isDeleted: false,\n    });\n  }\n\n  /**\n   * find notification by list\n   */\n  async findNotificationsByTargets(targets: string[]) {\n    const regexConditions = targets.map((target) => ({\n      target: { $regex: target },\n    }));\n\n    const notifications = await this.notificationModel.find({\n      $and: regexConditions,\n      isDeleted: false,\n    });\n    return notifications;\n  }\n\n  /**\n   * update notification\n   */\n  async update(id: string, updateNotificationInput: UpdateNotificationInput) {\n    try {\n      await this.findOne(id);\n\n      delete updateNotificationInput['_id'];\n      const updatedNotification = await this.notificationModel\n        .findOneAndUpdate(\n          { _id: id },\n          { ...updateNotificationInput },\n          { new: true },\n        )\n        .lean();\n      return updatedNotification;\n    } catch (error) {\n      this._logger.error(\n        `Error updating notification ${updateNotificationInput} ${error}`,\n      );\n    }\n  }\n  /**\n   * soft delete notification\n   */\n  async remove(id: string) {\n    const updatedType = await this.notificationModel\n      .findOneAndUpdate({ _id: id }, { isDeleted: true }, { new: true })\n      .lean();\n    return updatedType;\n  }\n\n  /**\n   * create many notifications\n   */\n  async createMany(createNotificationInput: CreateNotificationInput[]) {\n    try {\n      var newNotification = await this.notificationModel.insertMany(\n        createNotificationInput,\n      );\n      // for (const iterator of targets) {\n      //   pubSub.publish(iterator, {\n      //     newNotification: newNotification.toObject(),\n      //   });\n      // }\n      return newNotification;\n    } catch (error) {\n      this._logger.error(\n        `Error creating notification ${createNotificationInput}`,\n      );\n      throw new InternalServerErrorException(`Error creating notification`);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OthersInput.html":{"url":"classes/OthersInput.html","title":"class - OthersInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OthersInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/notifications/dto/others.inpt.ts\n        \n\n\n            \n                Description\n            \n            \n                graphql input scheme\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                others\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        others\n                        \n                    \n                \n            \n                \n                    \n                        Type :     JSON\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/notifications/dto/others.inpt.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsOptional, IsString } from 'class-validator';\nimport { InputType, Field } from '@nestjs/graphql';\nimport GraphQLJSON from 'graphql-type-json';\n/**\n * graphql input scheme\n */\n@InputType()\nexport class OthersInput {\n  @Field(() => GraphQLJSON) // Puedes utilizar JSON o GraphQLScalarType personalizado\n  others: JSON;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ParticipantEventLink.html":{"url":"classes/ParticipantEventLink.html","title":"class - ParticipantEventLink","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ParticipantEventLink\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/events/entities/event.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                participant link\n\n            \n\n\n            \n                Implements\n            \n            \n                            IEntityEvent\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                _id\n                            \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                startupEntrepreneur\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({type: undefined, ref: 'Entrepreneur'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/entities/event.entity.ts:117\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/entities/event.entity.ts:125\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/entities/event.entity.ts:121\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        startupEntrepreneur\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/entities/event.entity.ts:129\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ObjectType, Field, ID } from '@nestjs/graphql';\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { GraphQLJSONObject } from 'graphql-scalars';\nimport { SchemaTypes } from 'mongoose';\n/**\n * Events docs\n */\n@Schema({ timestamps: true })\n@ObjectType()\nexport class Event {\n  @Field(() => ID)\n  _id: string;\n\n  @Field(() => String)\n  @Prop({ required: true })\n  name: string;\n\n  @Field(() => String)\n  @Prop({ required: true })\n  type: string;\n\n  @Field(() => String)\n  @Prop({ required: true })\n  attendanceType: string;\n\n  @Field(() => String)\n  @Prop({})\n  description: string;\n\n  @Field(() => GraphQLJSONObject)\n  @Prop({ type: SchemaTypes.Mixed })\n  extra_options: any;\n\n  @Field(() => Date)\n  @Prop({ required: true })\n  startAt: Date;\n\n  @Field(() => Date)\n  @Prop({ required: true })\n  endAt: Date;\n\n  @Field(() => Boolean)\n  @Prop({ default: false })\n  isCanceled: boolean;\n\n  @Field(() => Boolean)\n  @Prop({ default: false })\n  isDeleted: boolean;\n\n  @Field(() => Date)\n  createdAt: Date;\n\n  @Field(() => Date)\n  updatedAt: Date;\n\n  @Field(() => String)\n  @Prop({ type: SchemaTypes.ObjectId, ref: 'Phase' })\n  batch: string;\n\n  @Field(() => [ExpertEventLink])\n  @Prop({ default: [] })\n  experts: ExpertEventLink[];\n\n  @Field(() => [TeamCoachLink])\n  @Prop({ default: [] })\n  teamCoaches: TeamCoachLink[];\n\n  @Field(() => [ParticipantEventLink])\n  @Prop({ default: [] })\n  participants: ParticipantEventLink[];\n}\n/**\n * team coach link\n */\n@Schema()\n@ObjectType()\nexport class TeamCoachLink implements IEntityEvent {\n  @Field(() => String)\n  @Prop({ type: SchemaTypes.ObjectId, ref: 'User' })\n  _id: string;\n\n  @Field(() => String)\n  @Prop()\n  name: string;\n\n  @Field(() => String)\n  @Prop()\n  email: string;\n}\n/**\n * expert link\n */\n@Schema()\n@ObjectType()\nexport class ExpertEventLink implements IEntityEvent {\n  @Field(() => String)\n  @Prop({ type: SchemaTypes.ObjectId, ref: 'Expert' })\n  _id: string;\n\n  @Field(() => String)\n  @Prop()\n  name: string;\n\n  @Field(() => String)\n  @Prop()\n  email: string;\n}\n\n/**\n * participant link\n */\n@Schema()\n@ObjectType()\nexport class ParticipantEventLink implements IEntityEvent {\n  @Field(() => String)\n  @Prop({ type: SchemaTypes.ObjectId, ref: 'Entrepreneur' })\n  _id: string;\n\n  @Field(() => String)\n  @Prop()\n  name: string;\n\n  @Field(() => String)\n  @Prop()\n  email: string;\n\n  @Field(() => String, { nullable: true })\n  @Prop()\n  startupEntrepreneur: string;\n}\n/**\n * @ignore\n */\nexport interface IEntityEvent {\n  _id: string;\n  name: string;\n  email: string;\n}\n/**\n * @ignore\n */\nexport const EventSchema = SchemaFactory.createForClass(Event);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ParticipationEvent.html":{"url":"classes/ParticipationEvent.html","title":"class - ParticipationEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ParticipationEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/events/participation-events/entities/participation-event.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                history of participants in an event\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                _id\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                    \n                                event\n                            \n                            \n                                    \n                                    \n                                metadata\n                            \n                            \n                                    \n                                    \n                                participant\n                            \n                            \n                                    \n                                    \n                                startup\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/participation-events/entities/participation-event.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/participation-events/entities/participation-event.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        event\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({type: undefined, ref: 'Event'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/participation-events/entities/participation-event.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        metadata\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/participation-events/entities/participation-event.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        participant\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({type: undefined, ref: 'Entrepreneur'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/participation-events/entities/participation-event.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        startup\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({type: undefined, ref: 'Startup'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/participation-events/entities/participation-event.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/participation-events/entities/participation-event.entity.ts:34\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ObjectType, Field, ID } from '@nestjs/graphql';\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { GraphQLJSONObject } from 'graphql-scalars';\nimport { SchemaTypes } from 'mongoose';\n/**\n * history of participants in an event\n */\n@Schema({ timestamps: true })\n@ObjectType()\nexport class ParticipationEvent {\n  @Field(() => ID)\n  _id: string;\n\n  @Field(() => String)\n  @Prop({ type: SchemaTypes.ObjectId, ref: 'Entrepreneur' })\n  participant: string;\n\n  @Field(() => String)\n  @Prop({ type: SchemaTypes.ObjectId, ref: 'Startup' })\n  startup: string;\n\n  @Field(() => String)\n  @Prop({ type: SchemaTypes.ObjectId, ref: 'Event' })\n  event: string;\n\n  @Field(() => GraphQLJSONObject)\n  @Prop({ type: SchemaTypes.Mixed })\n  metadata: any;\n\n  @Field(() => Date)\n  createdAt: Date;\n\n  @Field(() => Date)\n  updatedAt: Date;\n}\n/**\n * @ignore\n */\nexport const ParticipationEventSchema =\n  SchemaFactory.createForClass(ParticipationEvent);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ParticipationEventsModule.html":{"url":"modules/ParticipationEventsModule.html","title":"module - ParticipationEventsModule","body":"\n                   \n\n\n\n\n    Modules\n    ParticipationEventsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ParticipationEventsModule\n\n\n\ncluster_ParticipationEventsModule_imports\n\n\n\ncluster_ParticipationEventsModule_providers\n\n\n\ncluster_ParticipationEventsModule_exports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nParticipationEventsModule\n\nParticipationEventsModule\n\nParticipationEventsModule -->\n\nAuthModule->ParticipationEventsModule\n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nParticipationEventsModule -->\n\nLoggerModule->ParticipationEventsModule\n\n\n\n\n\nParticipationEventsService \n\nParticipationEventsService \n\nParticipationEventsService  -->\n\nParticipationEventsModule->ParticipationEventsService \n\n\n\n\n\nParticipationEventsService\n\nParticipationEventsService\n\nParticipationEventsModule -->\n\nParticipationEventsService->ParticipationEventsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/events/participation-events/participation-events.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ParticipationEventsService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            LoggerModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ParticipationEventsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ParticipationEventsService } from './participation-events.service';\nimport { ParticipationEventsResolver } from './participation-events.resolver';\nimport { LoggerModule } from 'src/logger/logger.module';\nimport { AuthModule } from 'src/auth/auth.module';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport {\n  ParticipationEvent,\n  ParticipationEventSchema,\n} from './entities/participation-event.entity';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      { name: ParticipationEvent.name, schema: ParticipationEventSchema },\n    ]),\n    AuthModule,\n    LoggerModule,\n  ],\n  providers: [ParticipationEventsResolver, ParticipationEventsService],\n  exports: [ParticipationEventsService],\n})\nexport class ParticipationEventsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ParticipationEventsService.html":{"url":"injectables/ParticipationEventsService.html","title":"injectable - ParticipationEventsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ParticipationEventsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/events/participation-events/participation-events.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findByEvent\n                            \n                            \n                                findByEventAndParticipant\n                            \n                            \n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(participationEventModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/events/participation-events/participation-events.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        participationEventModel\n                                                  \n                                                        \n                                                                    Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createParticipationEventInput: CreateParticipationEventInput)\n                \n            \n\n\n                    \n                        \n                            Defined in src/events/participation-events/participation-events.service.ts:18\n                        \n                    \n\n\n            \n                \n                        create a register of participant event\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createParticipationEventInput\n                                            \n                                                            CreateParticipationEventInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/events/participation-events/participation-events.service.ts:25\n                        \n                    \n\n\n            \n                \n                        find all registers\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findByEvent\n                        \n                    \n                \n            \n            \n                \nfindByEvent(event: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/events/participation-events/participation-events.service.ts:39\n                        \n                    \n\n\n            \n                \n                        find participation register by event\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findByEventAndParticipant\n                        \n                    \n                \n            \n            \n                \nfindByEventAndParticipant(event: string, participant: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/events/participation-events/participation-events.service.ts:46\n                        \n                    \n\n\n            \n                \n                        find participation register by event and participant\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                participant\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/events/participation-events/participation-events.service.ts:32\n                        \n                    \n\n\n            \n                \n                        find participation register by id\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateParticipationEventInput: UpdateParticipationEventInput)\n                \n            \n\n\n                    \n                        \n                            Defined in src/events/participation-events/participation-events.service.ts:53\n                        \n                    \n\n\n            \n                \n                        update participation register\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateParticipationEventInput\n                                            \n                                                            UpdateParticipationEventInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateParticipationEventInput } from './dto/create-participation-event.input';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { ParticipationEvent } from './entities/participation-event.entity';\nimport { Model } from 'mongoose';\nimport { UpdateParticipationEventInput } from './dto/update-participation-event.input';\n\n@Injectable()\nexport class ParticipationEventsService {\n  constructor(\n    @InjectModel(ParticipationEvent.name)\n    private readonly participationEventModel: Model,\n  ) {}\n\n  /**\n   * create a register of participant event\n   */\n  create(createParticipationEventInput: CreateParticipationEventInput) {\n    return this.participationEventModel.create(createParticipationEventInput);\n  }\n\n  /**\n   * find all registers\n   */\n  findAll() {\n    return this.participationEventModel.find({});\n  }\n\n  /**\n   * find participation register by id\n   */\n  findOne(id: string) {\n    return this.participationEventModel.findById(id).lean();\n  }\n\n  /**\n   * find participation register by event\n   */\n  findByEvent(event: string) {\n    return this.participationEventModel.find({ event }).lean();\n  }\n\n  /**\n   * find participation register by event and participant\n   */\n  findByEventAndParticipant(event: string, participant: string) {\n    return this.participationEventModel.findOne({ event, participant }).lean();\n  }\n\n  /**\n   * update participation register\n   */\n  async update(\n    id: string,\n    updateParticipationEventInput: UpdateParticipationEventInput,\n  ) {\n    delete updateParticipationEventInput['_id'];\n    const updatedEvent = await this.participationEventModel\n      .findOneAndUpdate(\n        { _id: id },\n        { ...updateParticipationEventInput },\n        { new: true },\n      )\n      .lean();\n    return updatedEvent;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Phase.html":{"url":"classes/Phase.html","title":"class - Phase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Phase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/phases/entities/phase.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                phases and batches\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                _id\n                            \n                            \n                                    \n                                    \n                                basePhase\n                            \n                            \n                                    \n                                    \n                                childrenOf\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                endAt\n                            \n                            \n                                    \n                                    \n                                finished\n                            \n                            \n                                    \n                                    \n                                index\n                            \n                            \n                                    \n                                    \n                                isActive\n                            \n                            \n                                    \n                                    \n                                isDeleted\n                            \n                            \n                                    \n                                    \n                                landing\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                published\n                            \n                            \n                                    \n                                    \n                                stage\n                            \n                            \n                                    \n                                    \n                                startAt\n                            \n                            \n                                    \n                                    \n                                thumbnail\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/phases/entities/phase.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        basePhase\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: 'boolean', default: false})@Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/phases/entities/phase.entity.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        childrenOf\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@Prop({default: ''})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/phases/entities/phase.entity.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Creation date of the entity.'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/phases/entities/phase.entity.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/phases/entities/phase.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Phase description.'})@Prop({default: ''})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/phases/entities/phase.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        endAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/phases/entities/phase.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        finished\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: 'boolean', default: false})@Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/phases/entities/phase.entity.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        index\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({default: 0})@Field(undefined, {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/phases/entities/phase.entity.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: 'boolean', default: true})@Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/phases/entities/phase.entity.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: 'boolean', default: false})@Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/phases/entities/phase.entity.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        landing\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({default: ''})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/phases/entities/phase.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Phase name.'})@Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/phases/entities/phase.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        published\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: 'boolean', default: false})@Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/phases/entities/phase.entity.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        stage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Stage the phase belongs to.'})@Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/phases/entities/phase.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        startAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/phases/entities/phase.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        thumbnail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Link to a small image to be used as thumbnail.', nullable: true})@Prop({default: ''})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/phases/entities/phase.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Update date of the entity.'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/phases/entities/phase.entity.ts:80\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ObjectType, Field, ID } from '@nestjs/graphql';\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { User } from 'src/users/entities/user.entity';\n/**\n * phases and batches\n */\n@Schema({ timestamps: true })\n@ObjectType()\nexport class Phase {\n  @Field(() => ID)\n  _id: string;\n\n  @Field(() => String, { description: 'Stage the phase belongs to.' })\n  @Prop({ required: true })\n  stage: string;\n\n  @Field(() => String, { description: 'Phase name.' })\n  @Prop({ required: true })\n  name: string;\n\n  @Field(() => String, {\n    description: 'Link to a small image to be used as thumbnail.',\n    nullable: true,\n  })\n  @Prop({ default: '' })\n  thumbnail: string;\n\n  @Field(() => String, { description: 'Phase description.' })\n  @Prop({ default: '' })\n  description: string;\n\n  @Field(() => String)\n  @Prop({ default: '' })\n  landing: string;\n\n  @Field(() => User)\n  @Prop({ required: true })\n  createdBy: string;\n\n  @Field(() => Date)\n  @Prop({ type: Date })\n  startAt: Date;\n\n  @Field(() => Date)\n  @Prop({ type: Date })\n  endAt: Date;\n\n  @Prop({ type: 'boolean', default: true })\n  @Field(() => Boolean)\n  isActive: boolean;\n\n  @Prop({ type: 'boolean', default: false })\n  @Field(() => Boolean)\n  published: boolean;\n\n  @Prop({ type: 'boolean', default: false })\n  @Field(() => Boolean)\n  isDeleted: boolean;\n\n  @Prop({ type: 'boolean', default: false })\n  @Field(() => Boolean)\n  basePhase: boolean;\n\n  @Prop({ default: 0 })\n  @Field(() => String, { nullable: true })\n  index: number;\n\n  @Field(() => String, { nullable: true })\n  @Prop({ default: '' })\n  childrenOf: string;\n\n  @Prop({ type: 'boolean', default: false })\n  @Field(() => Boolean)\n  finished: boolean;\n\n  @Field(() => Date, { description: 'Creation date of the entity.' })\n  createdAt: Date;\n\n  @Field(() => Date, { description: 'Update date of the entity.' })\n  updatedAt: Date;\n}\n/**\n * @ignore\n */\nexport const PhaseSchema = SchemaFactory.createForClass(Phase);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PhaseExpertRelationship.html":{"url":"classes/PhaseExpertRelationship.html","title":"class - PhaseExpertRelationship","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PhaseExpertRelationship\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/expert/entities/expert.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                relationship with phase\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                _id\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                startUps\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({type: undefined, ref: 'Phase'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/expert/entities/expert.entity.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/expert/entities/expert.entity.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        startUps\n                        \n                    \n                \n            \n                \n                    \n                        Type :     StartupLink[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/expert/entities/expert.entity.ts:70\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ObjectType, Field, ID } from '@nestjs/graphql';\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport GraphQLJSON from 'graphql-type-json';\nimport { SchemaTypes } from 'mongoose';\nimport { User } from 'src/users/entities/user.entity';\n/**\n * Expert docs\n */\n@Schema({ timestamps: true })\n@ObjectType()\nexport class Expert {\n  @Field(() => ID)\n  _id: string;\n\n  @Field(() => User, { nullable: true })\n  @Prop({ default: '' })\n  accountId: string;\n\n  @Field(() => String, { nullable: true })\n  @Prop({ default: '' })\n  calendlyLink: string;\n\n  @Field(() => GraphQLJSON)\n  @Prop({ type: Object })\n  item: JSON;\n\n  @Field(() => Date, {\n    description: 'If set, The date the entity was deleted.',\n    nullable: true,\n  })\n  @Prop()\n  deletedAt: Date;\n\n  @Field(() => User, {\n    description: 'If set, Details from user who last updated the entity.',\n    nullable: true,\n  })\n  @Prop()\n  updatedBy: string;\n\n  @Field(() => [PhaseExpertRelationship])\n  @Prop({ default: [] })\n  phases: PhaseExpertRelationship[];\n\n  @Field(() => Date, { description: 'Date of entity creation.' })\n  createdAt: Date;\n\n  @Field(() => Date, { description: 'Date of last entity update.' })\n  updatedAt: Date;\n\n  @Field(() => Boolean)\n  isProspect: boolean;\n}\n/**\n * relationship with phase\n */\n@Schema()\n@ObjectType()\nexport class PhaseExpertRelationship {\n  @Field(() => String)\n  @Prop({ type: SchemaTypes.ObjectId, ref: 'Phase' })\n  _id: string;\n\n  @Field(() => String)\n  @Prop()\n  name: string;\n\n  @Field(() => [StartupLink])\n  @Prop({ default: [] })\n  startUps: StartupLink[];\n}\n/**\n * relationship with startup\n */\n@Schema()\n@ObjectType()\nexport class StartupLink {\n  @Field(() => String)\n  @Prop({ type: SchemaTypes.ObjectId, ref: 'Startup' })\n  _id: string;\n\n  @Field(() => String)\n  @Prop()\n  name: string;\n}\n/**\n * @ignore\n */\nexport const ExpertSchema = SchemaFactory.createForClass(Expert);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PhaseRelationship.html":{"url":"classes/PhaseRelationship.html","title":"class - PhaseRelationship","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PhaseRelationship\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/startup/entities/startup.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                relationship with phases\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                _id\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                state\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({type: undefined, ref: 'Phase'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/startup/entities/startup.entity.ts:88\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/startup/entities/startup.entity.ts:92\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/startup/entities/startup.entity.ts:96\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ObjectType, Field, ID } from '@nestjs/graphql';\nimport { Schema, Prop, SchemaFactory } from '@nestjs/mongoose';\nimport GraphQLJSON from 'graphql-type-json';\nimport { SchemaTypes } from 'mongoose';\nimport { User } from 'src/users/entities/user.entity';\n/**\n * startup docs\n */\n@Schema({ timestamps: true })\n@ObjectType()\nexport class Startup {\n  @Field(() => ID)\n  _id: string;\n\n  @Field(() => [PhaseRelationship])\n  @Prop({ default: [] })\n  phases: PhaseRelationship[];\n\n  @Field(() => [EntrepreneurRelationship])\n  @Prop({ default: [] })\n  entrepreneurs: EntrepreneurRelationship[];\n\n  @Field(() => GraphQLJSON)\n  @Prop({ type: Object })\n  item: JSON;\n\n  @Field(() => Date, {\n    description: 'If set, The date the entity was deleted.',\n    nullable: true,\n  })\n  @Prop()\n  deletedAt: Date;\n\n  @Field(() => User, {\n    description: 'If set, Details from user who last updated the entity.',\n    nullable: true,\n  })\n  @Prop()\n  updatedBy: string;\n\n  @Field(() => Date, { description: 'Date of entity creation.' })\n  createdAt: Date;\n\n  @Field(() => Date, { description: 'Date of last entity update.' })\n  updatedAt: Date;\n\n  @Field(() => Boolean, { nullable: true })\n  isProspect: boolean;\n\n  @Field(() => String, { nullable: true })\n  @Prop({ default: '' })\n  thumbnail: string;\n}\n/**\n * relationship with entrepreneurs\n */\n@Schema()\n@ObjectType()\nexport class EntrepreneurRelationship {\n  @Field(() => String)\n  @Prop({ type: SchemaTypes.ObjectId, ref: 'Entrepreneur' })\n  _id: string;\n\n  @Field(() => GraphQLJSON)\n  @Prop({ type: Object })\n  item: JSON;\n\n  @Field(() => String)\n  @Prop()\n  rol: string;\n\n  @Field(() => String)\n  @Prop()\n  description: string;\n\n  @Field(() => String)\n  @Prop()\n  state: string;\n}\n/**\n * relationship with phases\n */\n@Schema()\n@ObjectType()\nexport class PhaseRelationship {\n  @Field(() => String)\n  @Prop({ type: SchemaTypes.ObjectId, ref: 'Phase' })\n  _id: string;\n\n  @Field(() => String)\n  @Prop()\n  name: string;\n\n  @Field(() => String)\n  @Prop()\n  state: string;\n}\n/**\n * @ignore\n */\nexport const StartupSchema = SchemaFactory.createForClass(Startup);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PhasesModule.html":{"url":"modules/PhasesModule.html","title":"module - PhasesModule","body":"\n                   \n\n\n\n\n    Modules\n    PhasesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PhasesModule\n\n\n\ncluster_PhasesModule_imports\n\n\n\ncluster_PhasesModule_exports\n\n\n\ncluster_PhasesModule_providers\n\n\n\n\nActivitiesConfigModule\n\nActivitiesConfigModule\n\n\n\nPhasesModule\n\nPhasesModule\n\nPhasesModule -->\n\nActivitiesConfigModule->PhasesModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nPhasesModule -->\n\nAuthModule->PhasesModule\n\n\n\n\n\nContentModule\n\nContentModule\n\nPhasesModule -->\n\nContentModule->PhasesModule\n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nPhasesModule -->\n\nLoggerModule->PhasesModule\n\n\n\n\n\nResourcesModule\n\nResourcesModule\n\nPhasesModule -->\n\nResourcesModule->PhasesModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nPhasesModule -->\n\nUsersModule->PhasesModule\n\n\n\n\n\nPhasesService \n\nPhasesService \n\nPhasesService  -->\n\nPhasesModule->PhasesService \n\n\n\n\n\nPhasesService\n\nPhasesService\n\nPhasesModule -->\n\nPhasesService->PhasesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/phases/phases.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PhasesService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ActivitiesConfigModule\n                        \n                        \n                            AuthModule\n                        \n                        \n                            ContentModule\n                        \n                        \n                            LoggerModule\n                        \n                        \n                            ResourcesModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PhasesService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module, forwardRef } from '@nestjs/common';\nimport { PhasesService } from './phases.service';\nimport { PhasesResolver } from './phases.resolver';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Phase, PhaseSchema } from './entities/phase.entity';\nimport { AuthModule } from 'src/auth/auth.module';\nimport { UsersModule } from 'src/users/users.module';\nimport { LoggerModule } from 'src/logger/logger.module';\nimport { ContentModule } from 'src/content/content.module';\nimport { ActivitiesConfigModule } from 'src/activities-config/activities-config.module';\nimport { ResourcesModule } from 'src/resources/resources.module';\nimport { ExpertModule } from 'src/expert/expert.module';\nimport { StartupModule } from 'src/startup/startup.module';\nimport { StagesModule } from 'src/stages/stages.module';\nimport { ResourcesRepliesModule } from 'src/resources/resources-replies/resources-replies.module';\nimport { UserLogModule } from 'src/user-log/user-log.module';\nimport { ConfigNotificationsModule } from 'src/notifications/config-notifications/config-notifications.module';\nimport { NotificationsModule } from 'src/notifications/notifications.module';\n@Module({\n  imports: [\n    MongooseModule.forFeature([{ name: Phase.name, schema: PhaseSchema }]),\n    AuthModule,\n    UsersModule,\n    LoggerModule,\n    ContentModule,\n    ResourcesModule,\n    forwardRef(() => ExpertModule),\n    forwardRef(() => StartupModule),\n    forwardRef(() => StagesModule),\n    forwardRef(() => ResourcesRepliesModule),\n    forwardRef(() => UserLogModule),\n    forwardRef(() => ConfigNotificationsModule),\n    forwardRef(() => NotificationsModule),\n    ActivitiesConfigModule,\n  ],\n  providers: [PhasesResolver, PhasesService],\n  exports: [PhasesService],\n})\nexport class PhasesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Rating.html":{"url":"classes/Rating.html","title":"class - Rating","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Rating\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rating/entities/rating.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                rating of users app\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                _id\n                            \n                            \n                                    \n                                    \n                                rate\n                            \n                            \n                                    \n                                    \n                                to\n                            \n                            \n                                    \n                                    \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/rating/entities/rating.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        rate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/rating/entities/rating.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        to\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/rating/entities/rating.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/rating/entities/rating.entity.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ObjectType, Field, Int, ID } from '@nestjs/graphql';\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\n\n/**\n * rating of users app\n */\n@Schema({ timestamps: true })\n@ObjectType()\nexport class Rating {\n  @Field(() => ID)\n  _id: string;\n\n  @Field(() => String)\n  @Prop({ required: true })\n  user: string;\n\n  @Field(() => String)\n  @Prop({ required: true })\n  to: string;\n\n  @Field(() => Int)\n  @Prop({ required: true })\n  rate: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RemoveTableJoinInput.html":{"url":"classes/RemoveTableJoinInput.html","title":"class - RemoveTableJoinInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RemoveTableJoinInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/table/table/dto/remove-table-join.input.ts\n        \n\n\n            \n                Description\n            \n            \n                graphql inputs\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                key\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Table id.'})@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/table/table/dto/remove-table-join.input.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        key\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Key of the join to be removed.'})@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/table/table/dto/remove-table-join.input.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { InputType, Field } from '@nestjs/graphql';\nimport { IsNotEmpty } from 'class-validator';\n/**\n * graphql inputs\n */\n@InputType()\nexport class RemoveTableJoinInput {\n  @Field(() => String, { description: 'Table id.' })\n  @IsNotEmpty()\n  id: string;\n\n  @Field(() => String, { description: 'Key of the join to be removed.' })\n  @IsNotEmpty()\n  key: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Resource.html":{"url":"classes/Resource.html","title":"class - Resource","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Resource\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resources/entities/resource.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                resources like homeworks, downloadable and more\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                _id\n                            \n                            \n                                    \n                                    \n                                content\n                            \n                            \n                                    \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                    \n                                extra_options\n                            \n                            \n                                    \n                                    \n                                hide\n                            \n                            \n                                    \n                                    \n                                isDeleted\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                phase\n                            \n                            \n                                    \n                                    \n                                type\n                            \n                            \n                                    \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resources/entities/resource.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({type: undefined, ref: 'Content'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resources/entities/resource.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resources/entities/resource.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        extra_options\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resources/entities/resource.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        hide\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({type: 'boolean', default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resources/entities/resource.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({type: 'boolean', default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resources/entities/resource.entity.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resources/entities/resource.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        phase\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({type: undefined, ref: 'Phase'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resources/entities/resource.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ResourceType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, enum: ResourceType})@Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resources/entities/resource.entity.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resources/entities/resource.entity.ts:41\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ObjectType, Field, ID } from '@nestjs/graphql';\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { SchemaTypes, Types, Document } from 'mongoose';\nimport { GraphQLJSONObject } from 'graphql-scalars';\nimport { ResourceType } from '../enums/resources-types';\n/**\n * resources like homeworks, downloadable and more\n */\n@Schema({ timestamps: true })\n@ObjectType()\nexport class Resource {\n  @Field(() => ID)\n  _id: string;\n\n  @Field(() => String)\n  @Prop({ required: true })\n  name: string;\n\n  @Field(() => GraphQLJSONObject)\n  @Prop({ type: SchemaTypes.Mixed })\n  extra_options: any;\n\n  @Field(() => Boolean)\n  @Prop({ type: 'boolean', default: false })\n  hide: boolean;\n\n  @Field(() => String)\n  @Prop({ type: SchemaTypes.ObjectId, ref: 'Content' })\n  content: string;\n\n  @Field(() => String)\n  @Prop({ type: SchemaTypes.ObjectId, ref: 'Phase' })\n  phase: string;\n\n  @Field(() => Date)\n  @Prop({ type: Date })\n  createdAt: Date;\n\n  @Field(() => Date)\n  @Prop({ type: Date })\n  updatedAt: Date;\n\n  @Field(() => Boolean)\n  @Prop({ type: 'boolean', default: false })\n  isDeleted: boolean;\n\n  @Prop({\n    type: String,\n    enum: ResourceType,\n  })\n  @Field(() => String)\n  type: ResourceType;\n}\n/**\n * @ignore\n */\nexport const ResourceSchema = SchemaFactory.createForClass(Resource);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ResourcesModule.html":{"url":"modules/ResourcesModule.html","title":"module - ResourcesModule","body":"\n                   \n\n\n\n\n    Modules\n    ResourcesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ResourcesModule\n\n\n\ncluster_ResourcesModule_imports\n\n\n\ncluster_ResourcesModule_providers\n\n\n\ncluster_ResourcesModule_exports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nResourcesModule\n\nResourcesModule\n\nResourcesModule -->\n\nAuthModule->ResourcesModule\n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nResourcesModule -->\n\nLoggerModule->ResourcesModule\n\n\n\n\n\nResourcesService \n\nResourcesService \n\nResourcesService  -->\n\nResourcesModule->ResourcesService \n\n\n\n\n\nResourcesService\n\nResourcesService\n\nResourcesModule -->\n\nResourcesService->ResourcesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/resources/resources.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ResourcesService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            LoggerModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ResourcesService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module, forwardRef } from '@nestjs/common';\nimport { ResourcesService } from './resources.service';\nimport { ResourcesResolver } from './resources.resolver';\nimport { Resource, ResourceSchema } from './entities/resource.entity';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { AuthModule } from 'src/auth/auth.module';\nimport { LoggerModule } from 'src/logger/logger.module';\nimport { ContentModule } from 'src/content/content.module';\nimport { ResourcesRepliesModule } from './resources-replies/resources-replies.module';\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      { name: Resource.name, schema: ResourceSchema },\n    ]),\n    AuthModule,\n    LoggerModule,\n    forwardRef(() => ContentModule),\n  ],\n  providers: [ResourcesResolver, ResourcesService],\n  exports: [ResourcesService],\n})\nexport class ResourcesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ResourcesRepliesModule.html":{"url":"modules/ResourcesRepliesModule.html","title":"module - ResourcesRepliesModule","body":"\n                   \n\n\n\n\n    Modules\n    ResourcesRepliesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ResourcesRepliesModule\n\n\n\ncluster_ResourcesRepliesModule_providers\n\n\n\ncluster_ResourcesRepliesModule_imports\n\n\n\ncluster_ResourcesRepliesModule_exports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nResourcesRepliesModule\n\nResourcesRepliesModule\n\nResourcesRepliesModule -->\n\nAuthModule->ResourcesRepliesModule\n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nResourcesRepliesModule -->\n\nLoggerModule->ResourcesRepliesModule\n\n\n\n\n\nResourcesRepliesService \n\nResourcesRepliesService \n\nResourcesRepliesService  -->\n\nResourcesRepliesModule->ResourcesRepliesService \n\n\n\n\n\nResourcesRepliesService\n\nResourcesRepliesService\n\nResourcesRepliesModule -->\n\nResourcesRepliesService->ResourcesRepliesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/resources/resources-replies/resources-replies.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ResourcesRepliesService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            LoggerModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ResourcesRepliesService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module, forwardRef } from '@nestjs/common';\nimport { ResourcesRepliesService } from './resources-replies.service';\nimport { ResourcesRepliesResolver } from './resources-replies.resolver';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport {\n  ResourceReplySchema,\n  ResourcesReply,\n} from './entities/resources-reply.entity';\nimport { AuthModule } from 'src/auth/auth.module';\nimport { LoggerModule } from 'src/logger/logger.module';\nimport { ResourcesModule } from '../resources.module';\nimport { StartupModule } from 'src/startup/startup.module';\nimport { ContentModule } from 'src/content/content.module';\nimport { EmailsModule } from 'src/emails/emails.module';\nimport { NotificationsModule } from 'src/notifications/notifications.module';\nimport { UsersModule } from 'src/users/users.module';\nimport { EntrepreneurModule } from 'src/entrepreneur/entrepreneur.module';\nimport { ConfigNotificationsModule } from 'src/notifications/config-notifications/config-notifications.module';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      { name: ResourcesReply.name, schema: ResourceReplySchema },\n    ]),\n    AuthModule,\n    LoggerModule,\n    forwardRef(() => ResourcesModule),\n    forwardRef(() => ContentModule),\n    forwardRef(() => StartupModule),\n    forwardRef(() => EntrepreneurModule),\n    forwardRef(() => EmailsModule),\n    forwardRef(() => ConfigNotificationsModule),\n    forwardRef(() => NotificationsModule),\n    forwardRef(() => UsersModule),\n  ],\n  providers: [ResourcesRepliesResolver, ResourcesRepliesService],\n  exports: [ResourcesRepliesService],\n})\nexport class ResourcesRepliesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResourcesReply.html":{"url":"classes/ResourcesReply.html","title":"class - ResourcesReply","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResourcesReply\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resources/resources-replies/entities/resources-reply.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                resources replies by users\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                _id\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                    \n                                isDeleted\n                            \n                            \n                                    \n                                    \n                                item\n                            \n                            \n                                    \n                                    \n                                modified\n                            \n                            \n                                    \n                                    \n                                observations\n                            \n                            \n                                    \n                                    \n                                phase\n                            \n                            \n                                    \n                                    \n                                resource\n                            \n                            \n                                    \n                                    \n                                sprint\n                            \n                            \n                                    \n                                    \n                                startup\n                            \n                            \n                                    \n                                    \n                                state\n                            \n                            \n                                    \n                                    \n                                type\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resources/resources-replies/entities/resources-reply.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Date of entity creation.'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resources/resources-replies/entities/resources-reply.entity.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resources/resources-replies/entities/resources-reply.entity.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        item\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Set of additional dynamic properties.'})@Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resources/resources-replies/entities/resources-reply.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        modified\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({default: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resources/resources-replies/entities/resources-reply.entity.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        observations\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({default: ''})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resources/resources-replies/entities/resources-reply.entity.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        phase\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({type: undefined, ref: 'Phase'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resources/resources-replies/entities/resources-reply.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        resource\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({type: undefined, ref: 'Resource'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resources/resources-replies/entities/resources-reply.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        sprint\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({type: undefined, ref: 'Content'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resources/resources-replies/entities/resources-reply.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        startup\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({type: undefined, ref: 'Startup'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resources/resources-replies/entities/resources-reply.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({default: 'En revisión'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resources/resources-replies/entities/resources-reply.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({default: ''})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resources/resources-replies/entities/resources-reply.entity.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Date of last entity update.'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resources/resources-replies/entities/resources-reply.entity.ts:57\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ObjectType, Field, ID } from '@nestjs/graphql';\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport GraphQLJSON from 'graphql-type-json';\nimport { Resource } from 'src/resources/entities/resource.entity';\nimport { User } from 'src/users/entities/user.entity';\nimport { SchemaTypes, Types, Document } from 'mongoose';\nimport { Startup } from 'src/startup/entities/startup.entity';\nimport { Content } from 'src/content/entities/content.entity';\nimport { Phase } from 'src/phases/entities/phase.entity';\n/**\n * resources replies by users\n */\n@Schema({ timestamps: true })\n@ObjectType()\nexport class ResourcesReply {\n  @Field(() => ID)\n  _id: string;\n\n  @Field(() => GraphQLJSON, {\n    description: 'Set of additional dynamic properties.',\n  })\n  @Prop({ type: Object })\n  item: Record;\n\n  @Field(() => Startup)\n  @Prop({ type: SchemaTypes.ObjectId, ref: 'Startup' })\n  startup: string;\n\n  @Field(() => Resource)\n  @Prop({ type: SchemaTypes.ObjectId, ref: 'Resource' })\n  resource: string;\n\n  @Field(() => Content)\n  @Prop({ type: SchemaTypes.ObjectId, ref: 'Content' })\n  sprint: string;\n\n  @Field(() => Phase)\n  @Prop({ type: SchemaTypes.ObjectId, ref: 'Phase' })\n  phase: string;\n\n  @Field(() => String)\n  @Prop({ default: '' })\n  type: string;\n\n  @Field(() => String)\n  @Prop({ default: 'En revisión' })\n  state: string;\n\n  @Field(() => String)\n  @Prop({ default: '' })\n  observations: string;\n\n  @Field(() => Date, { description: 'Date of entity creation.' })\n  createdAt: Date;\n\n  @Field(() => Date, { description: 'Date of last entity update.' })\n  updatedAt: Date;\n\n  @Field(() => Boolean)\n  @Prop({ default: false })\n  isDeleted: boolean;\n\n  @Field(() => Boolean)\n  @Prop({ default: true })\n  modified: boolean;\n}\n/**\n * @ignore\n */\nexport const ResourceReplySchema = SchemaFactory.createForClass(ResourcesReply);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ResourcesService.html":{"url":"injectables/ResourcesService.html","title":"injectable - ResourcesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ResourcesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resources/resources.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                createMany\n                            \n                            \n                                findAllByContent\n                            \n                            \n                                findAllByPhase\n                            \n                            \n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(resourceModel: Model, contentService: ContentService)\n                    \n                \n                        \n                            \n                                Defined in src/resources/resources.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        resourceModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        contentService\n                                                  \n                                                        \n                                                                        ContentService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createResourceInput: CreateResourceInput)\n                \n            \n\n\n                    \n                        \n                            Defined in src/resources/resources.service.ts:19\n                        \n                    \n\n\n            \n                \n                        create a new resource\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createResourceInput\n                                            \n                                                            CreateResourceInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createMany\n                        \n                    \n                \n            \n            \n                \ncreateMany(resources: Resource[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/resources/resources.service.ts:75\n                        \n                    \n\n\n            \n                \n                        create many resources\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                resources\n                                            \n                                                            Resource[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAllByContent\n                        \n                    \n                \n            \n            \n                \nfindAllByContent(content: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/resources/resources.service.ts:31\n                        \n                    \n\n\n            \n                \n                        find all resources of a content\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                content\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAllByPhase\n                        \n                    \n                \n            \n            \n                \nfindAllByPhase(content: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/resources/resources.service.ts:38\n                        \n                    \n\n\n            \n                \n                        find all resources of a content\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                content\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/resources/resources.service.ts:45\n                        \n                    \n\n\n            \n                \n                        find resources by id\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/resources/resources.service.ts:64\n                        \n                    \n\n\n            \n                \n                        soft delete resource\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateContentInput: UpdateResourceInput)\n                \n            \n\n\n                    \n                        \n                            Defined in src/resources/resources.service.ts:52\n                        \n                    \n\n\n            \n                \n                        update resource\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateContentInput\n                                            \n                                                            UpdateResourceInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, forwardRef } from '@nestjs/common';\nimport { CreateResourceInput } from './dto/create-resource.input';\nimport { UpdateResourceInput } from './dto/update-resource.input';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { Resource } from './entities/resource.entity';\nimport { ContentService } from 'src/content/content.service';\n@Injectable()\nexport class ResourcesService {\n  constructor(\n    @InjectModel(Resource.name) private readonly resourceModel: Model,\n    @Inject(forwardRef(() => ContentService))\n    private readonly contentService: ContentService,\n  ) {}\n\n  /**\n   * create a new resource\n   */\n  async create(createResourceInput: CreateResourceInput) {\n    const newResource = await this.resourceModel.create(createResourceInput);\n    const contentModified = await this.contentService.addResource(\n      createResourceInput.content,\n      newResource._id,\n    );\n    return newResource;\n  }\n\n  /**\n   * find all resources of a content\n   */\n  findAllByContent(content: string) {\n    return this.resourceModel.find({ content, isDeleted: false });\n  }\n\n  /**\n   * find all resources of a content\n   */\n  findAllByPhase(content: string) {\n    return this.resourceModel.find({ content, isDeleted: false });\n  }\n\n  /**\n   * find resources by id\n   */\n  findOne(id: string) {\n    return this.resourceModel.findById(id).lean();\n  }\n\n  /**\n   * update resource\n   */\n  async update(id: string, updateContentInput: UpdateResourceInput) {\n    delete updateContentInput['_id'];\n    const updatedContent = await this.resourceModel\n      .findOneAndUpdate({ _id: id }, { ...updateContentInput }, { new: true })\n\n      .lean();\n    return updatedContent;\n  }\n\n  /**\n   * soft delete resource\n   */\n  async remove(id: string) {\n    const updatedContent = await this.resourceModel\n      .findOneAndUpdate({ _id: id }, { isDeleted: true }, { new: true })\n\n      .lean();\n    return updatedContent;\n  }\n\n  /**\n   * create many resources\n   */\n  createMany(resources: Resource[]) {\n    return this.resourceModel.insertMany(resources);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Rol.html":{"url":"classes/Rol.html","title":"class - Rol","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Rol\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rol/entities/rol.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                roles in app\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                _id\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                permissions\n                            \n                            \n                                    \n                                    \n                                type\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/rol/entities/rol.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Date of entity creation.'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/rol/entities/rol.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/rol/entities/rol.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/rol/entities/rol.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/rol/entities/rol.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Date of last entity update.'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/rol/entities/rol.entity.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ObjectType, Field, ID } from '@nestjs/graphql';\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\n/**\n * roles in app\n */\n@Schema({ timestamps: true })\n@ObjectType()\nexport class Rol {\n  @Field(() => ID)\n  _id: string;\n\n  @Field(() => String)\n  @Prop({ required: true })\n  type: string;\n\n  @Field(() => String)\n  @Prop({ required: true })\n  name: string;\n\n  @Field(() => [String])\n  @Prop({ default: [] })\n  permissions: string[];\n\n  @Field(() => Date, { description: 'Date of entity creation.' })\n  createdAt: Date;\n\n  @Field(() => Date, { description: 'Date of last entity update.' })\n  updatedAt: Date;\n}\n/**\n * @ignore\n */\nexport const RolSchema = SchemaFactory.createForClass(Rol);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RolModule.html":{"url":"modules/RolModule.html","title":"module - RolModule","body":"\n                   \n\n\n\n\n    Modules\n    RolModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RolModule\n\n\n\ncluster_RolModule_providers\n\n\n\ncluster_RolModule_exports\n\n\n\ncluster_RolModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nRolModule\n\nRolModule\n\nRolModule -->\n\nAuthModule->RolModule\n\n\n\n\n\nRolService \n\nRolService \n\nRolService  -->\n\nRolModule->RolService \n\n\n\n\n\nRolService\n\nRolService\n\nRolModule -->\n\nRolService->RolModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/rol/rol.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RolService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RolService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { RolService } from './rol.service';\nimport { RolResolver } from './rol.resolver';\nimport { AuthModule } from 'src/auth/auth.module';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Rol, RolSchema } from './entities/rol.entity';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([{ name: Rol.name, schema: RolSchema }]),\n    AuthModule,\n  ],\n  providers: [RolResolver, RolService],\n  exports: [RolService],\n})\nexport class RolModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RolService.html":{"url":"injectables/RolService.html","title":"injectable - RolService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RolService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rol/rol.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findByType\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                onModuleInit\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(rolModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/rol/rol.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rolModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createRolInput: CreateRolInput)\n                \n            \n\n\n                    \n                        \n                            Defined in src/rol/rol.service.ts:25\n                        \n                    \n\n\n            \n                \n                        create a rol\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createRolInput\n                                            \n                                                            CreateRolInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/rol/rol.service.ts:32\n                        \n                    \n\n\n            \n                \n                        find all roles\n\n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findByType\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByType(type: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/rol/rol.service.ts:48\n                        \n                    \n\n\n            \n                \n                        find rol by type\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                type\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/rol/rol.service.ts:39\n                        \n                    \n\n\n            \n                \n                        find rol by id\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/rol/rol.service.ts:15\n                        \n                    \n\n\n            \n                \n                        initialize roles app\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/rol/rol.service.ts:68\n                        \n                    \n\n\n            \n                \n                        delete rol\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateRolInput: UpdateRolInput)\n                \n            \n\n\n                    \n                        \n                            Defined in src/rol/rol.service.ts:57\n                        \n                    \n\n\n            \n                \n                        update a rol\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateRolInput\n                                            \n                                                            UpdateRolInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException, OnModuleInit } from '@nestjs/common';\nimport { CreateRolInput } from './dto/create-rol.input';\nimport { UpdateRolInput } from './dto/update-rol.input';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Rol } from './entities/rol.entity';\nimport { Model, Types } from 'mongoose';\nimport { defaultRoles } from './model/rol';\n@Injectable()\nexport class RolService implements OnModuleInit {\n  constructor(@InjectModel(Rol.name) private readonly rolModel: Model) {}\n\n  /**\n   * initialize roles app\n   */\n  async onModuleInit() {\n    let roles = await this.rolModel.find({});\n    if (roles.length === 0) {\n      await this.rolModel.insertMany(defaultRoles);\n    }\n  }\n\n  /**\n   * create a rol\n   */\n  async create(createRolInput: CreateRolInput) {\n    return this.rolModel.create(createRolInput);\n  }\n\n  /**\n   * find all roles\n   */\n  async findAll() {\n    return this.rolModel.find({}).lean();\n  }\n\n  /**\n   * find rol by id\n   */\n  async findOne(id: string) {\n    const rol = await this.rolModel.findOne({ _id: id }).lean();\n    if (!rol) throw new NotFoundException(`No rol found with id ${id}`);\n    return rol;\n  }\n\n  /**\n   * find rol by type\n   */\n  async findByType(type: string) {\n    const rol = await this.rolModel.findOne({ type }).lean();\n    if (!rol) throw new NotFoundException(`No rol found with type ${type}`);\n    return rol;\n  }\n\n  /**\n   * update a rol\n   */\n  async update(id: string, updateRolInput: UpdateRolInput) {\n    delete updateRolInput['_id'];\n    const updatedRol = await this.rolModel\n      .findOneAndUpdate({ _id: id }, { ...updateRolInput }, { new: true })\n      .lean();\n    return updatedRol;\n  }\n\n  /**\n   * delete rol\n   */\n  async remove(id: string) {\n    const deletedPhase = await this.rolModel.deleteOne({ _id: id });\n    return deletedPhase;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SearchBatchInput.html":{"url":"classes/SearchBatchInput.html","title":"class - SearchBatchInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SearchBatchInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/phases/dto/others.inpt.ts\n        \n\n\n            \n                Description\n            \n            \n                graphql input scheme\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                batchIds\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                searchValue\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        batchIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/phases/dto/others.inpt.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        searchValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/phases/dto/others.inpt.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsOptional, IsString } from 'class-validator';\nimport { InputType, Field } from '@nestjs/graphql';\nimport GraphQLJSON from 'graphql-type-json';\n/**\n * graphql input scheme\n */\n@InputType()\nexport class SearchBatchInput {\n  @Field(() => String)\n  @IsOptional()\n  searchValue?: string;\n\n  @Field(() => [String])\n  @IsOptional()\n  batchIds?: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SelectApplicantsArgs.html":{"url":"classes/SelectApplicantsArgs.html","title":"class - SelectApplicantsArgs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SelectApplicantsArgs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/applicant/args/select-applicants.args.ts\n        \n\n\n            \n                Description\n            \n            \n                graphql args input\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                idApplicant\n                            \n                            \n                                    \n                                    \n                                idBatch\n                            \n                            \n                                    \n                                    \n                                metadata\n                            \n                            \n                                    \n                                    \n                                nameBatch\n                            \n                            \n                                    \n                                    \n                                typeApplicant\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        idApplicant\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/applicant/args/select-applicants.args.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        idBatch\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/applicant/args/select-applicants.args.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        metadata\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/applicant/args/select-applicants.args.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        nameBatch\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/applicant/args/select-applicants.args.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        typeApplicant\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AnnouncementTargets\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsEnum(AnnouncementTargets)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/applicant/args/select-applicants.args.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, ArgsType } from '@nestjs/graphql';\nimport { IsEnum, IsNotEmpty, IsOptional } from 'class-validator';\nimport { ApplicationStates } from '../enums/application-states.enum';\nimport { AnnouncementTargets } from 'src/announcements/enums/announcement-targets.enum';\nimport GraphQLJSON from 'graphql-type-json';\n/**\n * graphql args input\n */\n@ArgsType()\nexport class SelectApplicantsArgs {\n  @Field(() => String)\n  @IsNotEmpty()\n  idApplicant: string;\n\n  @Field(() => AnnouncementTargets)\n  @IsEnum(AnnouncementTargets)\n  typeApplicant: AnnouncementTargets;\n\n  @Field(() => String)\n  @IsNotEmpty()\n  idBatch: string;\n\n  @Field(() => String)\n  @IsNotEmpty()\n  nameBatch: string;\n\n  @Field(() => GraphQLJSON)\n  @IsOptional()\n  metadata: Record;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SendEmailInput.html":{"url":"classes/SendEmailInput.html","title":"class - SendEmailInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SendEmailInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/emails/dto/send-email.input.ts\n        \n\n\n            \n                Description\n            \n            \n                graphql input scheme\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                from\n                            \n                            \n                                    \n                                    \n                                html\n                            \n                            \n                                    \n                                    \n                                subject\n                            \n                            \n                                    \n                                    \n                                text\n                            \n                            \n                                    \n                                    \n                                to\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        from\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/emails/dto/send-email.input.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        html\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/emails/dto/send-email.input.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        subject\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/emails/dto/send-email.input.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        text\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/emails/dto/send-email.input.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        to\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/emails/dto/send-email.input.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsOptional, IsString } from 'class-validator';\n\n/**\n * graphql input scheme\n */\nexport class SendEmailInput {\n  @IsString()\n  @IsEmail()\n  to: string;\n\n  @IsString()\n  @IsOptional()\n  subject: string = '';\n\n  @IsOptional()\n  from: string;\n\n  @IsString()\n  @IsOptional()\n  text: string = '';\n\n  @IsString()\n  @IsOptional()\n  html: string = '';\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SendGridProvider.html":{"url":"classes/SendGridProvider.html","title":"class - SendGridProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SendGridProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/emails/provider/sendgrid.service.ts\n        \n\n\n            \n                Description\n            \n            \n                send grid provider emails\n\n            \n\n\n            \n                Implements\n            \n            \n                            EmailsRepository\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                apiKey\n                            \n                            \n                                    Private\n                                    Readonly\n                                defaultVerifiedEmail\n                            \n                            \n                                    Private\n                                    Readonly\n                                templatesId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                send\n                            \n                            \n                                    Async\n                                sendFromTemplate\n                            \n                            \n                                    Async\n                                sendIcs\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/emails/provider/sendgrid.service.ts:22\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        apiKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/emails/provider/sendgrid.service.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        defaultVerifiedEmail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/emails/provider/sendgrid.service.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        templatesId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Record\n\n                    \n                \n                    \n                        \n                                Defined in src/emails/provider/sendgrid.service.ts:20\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        send\n                        \n                    \n                \n            \n            \n                \n                        \n                    send(mail: SendEmailInput)\n                \n            \n\n\n                    \n                        \n                            Defined in src/emails/provider/sendgrid.service.ts:42\n                        \n                    \n\n\n            \n                \n                        send one email\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                mail\n                                            \n                                                            SendEmailInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        sendFromTemplate\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendFromTemplate(templateInput: Template)\n                \n            \n\n\n                    \n                        \n                            Defined in src/emails/provider/sendgrid.service.ts:70\n                        \n                    \n\n\n            \n                \n                        send one email by template\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                templateInput\n                                            \n                                                        Template\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        sendIcs\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendIcs(mail: literal type, event: Event, others: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/emails/provider/sendgrid.service.ts:106\n                        \n                    \n\n\n            \n                \n                        send one email with ics file\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                mail\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                event\n                                            \n                                                            Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                others\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { SendEmailInput } from '../dto/send-email.input';\nimport { EmailsRepository } from '../repository/email.repository';\nimport { Template } from '../templates/template';\nimport * as SendGrid from '@sendgrid/mail';\nimport * as SendGridClient from '@sendgrid/client';\nimport { AppLogger } from 'src/logger/app-logger';\nimport {\n  BadRequestException,\n  InternalServerErrorException,\n  MethodNotAllowedException,\n} from '@nestjs/common';\nimport { EmailTemplates, templateNames } from '../enums/email-templates';\nimport { getIcsObjectInstance } from 'src/shared/utilities/ics';\nimport { Event } from 'src/events/entities/event.entity';\n\n/**\n * send grid provider emails\n */\nexport class SendGridProvider implements EmailsRepository {\n  private readonly templatesId: Record;\n  private readonly defaultVerifiedEmail: string;\n  private readonly apiKey: string;\n  constructor() {\n    // Set api key\n    this.apiKey = process.env.SEND_GRID_KEY;\n    if (this.apiKey) {\n      SendGrid.setApiKey(this.apiKey);\n      SendGridClient.setApiKey(this.apiKey);\n    }\n    // Set available templates\n    this.templatesId = {\n      [EmailTemplates.invitation]: process.env.SEND_GRID_INVITATION_TEMPLATE_ID,\n      [EmailTemplates.notification]:\n        process.env.SEND_GRID_NOTIFICATION_TEMPLATE_ID,\n    };\n    this.defaultVerifiedEmail = process.env.SEND_GRID_DEFAULT_VERIFIED_EMAIL;\n  }\n\n  /**\n   * send one email\n   */\n  async send(mail: SendEmailInput) {\n    if (!this.apiKey)\n      throw new MethodNotAllowedException('This service is not available');\n\n    if (!mail.from) {\n      if (!this.defaultVerifiedEmail) {\n        throw new BadRequestException(\n          'Must specify a verified email for the from field',\n        );\n      }\n      mail.from = this.defaultVerifiedEmail;\n    }\n    try {\n      const transport = await SendGrid.send(mail);\n      // console.log(`Email successfully dispatched to ${mail.to}`);\n      return transport;\n    } catch (ex) {\n      console.log(ex.response.body.errors);\n      throw new InternalServerErrorException(\n        'Got an unexpected exception while trying to send an email',\n        ex,\n      );\n    }\n  }\n\n  /**\n   * send one email by template\n   */\n  async sendFromTemplate(templateInput: Template) {\n    const templateId = this.templatesId[templateInput.template];\n    if (!templateId)\n      throw new MethodNotAllowedException(\n        `This template ${\n          templateNames[templateInput.template]\n        } is not available or configuration is missing`,\n      );\n    if (!this.apiKey)\n      throw new MethodNotAllowedException('This service is not available');\n    if (!templateInput.from) {\n      if (!this.defaultVerifiedEmail) {\n        throw new BadRequestException(\n          'Must specify a verified email for the from field',\n        );\n      }\n    }\n    try {\n      const transport = await SendGrid.send({\n        ...templateInput,\n        from: this.defaultVerifiedEmail,\n        templateId: templateId,\n      });\n      return transport;\n    } catch (ex) {\n      console.log(ex.response.body.errors);\n      throw new InternalServerErrorException(\n        'Got an unexpected exception while trying to send an email',\n        ex,\n      );\n    }\n  }\n\n  /**\n   * send one email with ics file\n   */\n  async sendIcs(\n    mail: {\n      to: string | string[];\n      subject: string;\n      text: string;\n      html: string;\n    },\n    event: Event,\n    others: {\n      nameOrganizer: string;\n      emailOrganizer: string;\n      urlRedirect: string;\n      country?: string;\n    },\n  ) {\n    if (!this.apiKey)\n      throw new MethodNotAllowedException('This service is not available');\n    const toSend: SendGrid.MailDataRequired = {\n      to: mail.to,\n      subject: mail.subject,\n      from: this.defaultVerifiedEmail,\n      text: mail.text,\n      html: mail.html,\n    };\n    const ics = getIcsObjectInstance(\n      event.startAt,\n      event.endAt,\n      event.name,\n      event.description,\n      others.country ?? 'Colombia',\n      others.urlRedirect,\n      others.nameOrganizer,\n      others.emailOrganizer,\n    );\n\n    const attachment = {\n      filename: `invite${event._id}.ics`,\n      name: `invite${event._id}.ics`,\n      content: Buffer.from(ics.toString()).toString('base64'),\n      disposition: 'attachment',\n      contentId: event._id.toString(),\n      type: 'text/calendar; method=REQUEST',\n    };\n    toSend['attachments'] = [attachment];\n    try {\n      const transport = await SendGrid.send(toSend);\n      return transport;\n    } catch (ex) {\n      console.log(ex);\n      throw new InternalServerErrorException(\n        'Got an unexpected exception while trying to send an email',\n        ex,\n      );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SignUpInput.html":{"url":"classes/SignUpInput.html","title":"class - SignUpInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SignUpInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/sign-up.input.ts\n        \n\n\n            \n                Description\n            \n            \n                graphql input scheme\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                    Optional\n                                role\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/sign-up.input.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/sign-up.input.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true, defaultValue: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/sign-up.input.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType } from '@nestjs/graphql';\nimport { ValidRoles } from '../enums/valid-roles.enum';\n\n/**\n * graphql input scheme\n */\n@InputType()\nexport class SignUpInput {\n  @Field()\n  email: string;\n\n  @Field()\n  password: string;\n\n  @Field({ nullable: true, defaultValue: ValidRoles.user })\n  role?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Site.html":{"url":"classes/Site.html","title":"class - Site","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Site\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/sites/entities/site.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                sites in dashboard\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                _id\n                            \n                            \n                                    \n                                    \n                                contacts\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                directedTo\n                            \n                            \n                                    \n                                    \n                                factors\n                            \n                            \n                                    \n                                    \n                                isDeleted\n                            \n                            \n                                    \n                                    \n                                methodology\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                results\n                            \n                            \n                                    \n                                    \n                                thumbnail\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sites/entities/site.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        contacts\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ContactServiceLink[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sites/entities/site.entity.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Creation date of the entity.'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sites/entities/site.entity.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@Prop({default: ''})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sites/entities/site.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        directedTo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@Prop({default: ''})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sites/entities/site.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        factors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@Prop({default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sites/entities/site.entity.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sites/entities/site.entity.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        methodology\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@Prop({default: ''})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sites/entities/site.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sites/entities/site.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        results\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@Prop({default: ''})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sites/entities/site.entity.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        thumbnail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Link to a small image to be used as thumbnail.', nullable: true})@Prop({default: ''})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sites/entities/site.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Update date of the entity.'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sites/entities/site.entity.ts:73\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ObjectType, Field, ID } from '@nestjs/graphql';\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\n/**\n * sites in dashboard\n */\n@Schema({ timestamps: true })\n@ObjectType()\nexport class Site {\n  @Field(() => ID)\n  _id: string;\n\n  @Field(() => String)\n  @Prop({ required: true })\n  name: string;\n\n  @Field(() => String, {\n    description: 'Link to a small image to be used as thumbnail.',\n    nullable: true,\n  })\n  @Prop({ default: '' })\n  thumbnail: string;\n\n  @Field(() => String, {\n    nullable: true,\n  })\n  @Prop({ default: '' })\n  description: string;\n\n  @Field(() => String, {\n    nullable: true,\n  })\n  @Prop({ default: '' })\n  directedTo: string;\n\n  @Field(() => String, {\n    nullable: true,\n  })\n  @Prop({ default: '' })\n  methodology: string;\n\n  @Field(() => [String], {\n    nullable: true,\n  })\n  @Prop({ default: [] })\n  factors: string[];\n\n  @Field(() => String, {\n    nullable: true,\n  })\n  @Prop({ default: '' })\n  results: string;\n\n  // @Field(() => GraphQLJSONObject)\n  // @Prop({ type: SchemaTypes.Mixed, required: true })\n  // coords: any;\n\n  // @Field(() => [ServicesSiteLink])\n  // @Prop({ default: [] })\n  // services: ServicesSiteLink[];\n\n  @Field(() => [ContactServiceLink])\n  @Prop({ default: [] })\n  contacts: ContactServiceLink[];\n\n  @Field(() => Boolean)\n  @Prop({ default: false })\n  isDeleted: boolean;\n\n  @Field(() => Date, { description: 'Creation date of the entity.' })\n  createdAt: Date;\n\n  @Field(() => Date, { description: 'Update date of the entity.' })\n  updatedAt: Date;\n}\n/**\n * @ignore\n */\n@Schema()\n@ObjectType()\nexport class ServicesSiteLink {\n  @Field(() => String)\n  @Prop()\n  name: string;\n\n  @Field(() => String)\n  @Prop()\n  description: string;\n\n  @Field(() => String)\n  @Prop()\n  email: string;\n\n  @Field(() => String)\n  @Prop()\n  contact: string;\n\n  // @Field(() => GraphQLJSONObject)\n  // @Prop({ type: SchemaTypes.Mixed, required: true })\n  // coords: any;\n}\n/**\n * contact relationship\n */\n@Schema()\n@ObjectType()\nexport class ContactServiceLink {\n  @Field(() => String)\n  @Prop()\n  name: string;\n\n  @Field(() => String)\n  @Prop()\n  others: string;\n\n  @Field(() => String)\n  @Prop()\n  email: string;\n\n  @Field(() => String)\n  @Prop()\n  contact: string;\n\n  // @Field(() => GraphQLJSONObject)\n  // @Prop({ type: SchemaTypes.Mixed, required: true })\n  // coords: any;\n}\n/**\n * @ignore\n */\nexport const SiteSchema = SchemaFactory.createForClass(Site);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SitesModule.html":{"url":"modules/SitesModule.html","title":"module - SitesModule","body":"\n                   \n\n\n\n\n    Modules\n    SitesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SitesModule\n\n\n\ncluster_SitesModule_exports\n\n\n\ncluster_SitesModule_providers\n\n\n\ncluster_SitesModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nSitesModule\n\nSitesModule\n\nSitesModule -->\n\nAuthModule->SitesModule\n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nSitesModule -->\n\nLoggerModule->SitesModule\n\n\n\n\n\nSitesService \n\nSitesService \n\nSitesService  -->\n\nSitesModule->SitesService \n\n\n\n\n\nSitesService\n\nSitesService\n\nSitesModule -->\n\nSitesService->SitesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/sites/sites.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SitesService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            LoggerModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SitesService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { SitesService } from './sites.service';\nimport { SitesResolver } from './sites.resolver';\nimport { LoggerModule } from 'src/logger/logger.module';\nimport { AuthModule } from 'src/auth/auth.module';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Site, SiteSchema } from './entities/site.entity';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([{ name: Site.name, schema: SiteSchema }]),\n    AuthModule,\n    LoggerModule,\n  ],\n  providers: [SitesResolver, SitesService],\n  exports: [SitesService],\n})\nexport class SitesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SitesService.html":{"url":"injectables/SitesService.html","title":"injectable - SitesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SitesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/sites/sites.service.ts\n        \n\n\n            \n                Description\n            \n            \n                services\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(siteModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/sites/sites.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        siteModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createSiteInput: CreateSiteInput)\n                \n            \n\n\n                    \n                        \n                            Defined in src/sites/sites.service.ts:19\n                        \n                    \n\n\n            \n                \n                        create a service\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createSiteInput\n                                            \n                                                            CreateSiteInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/sites/sites.service.ts:26\n                        \n                    \n\n\n            \n                \n                        find all service\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/sites/sites.service.ts:33\n                        \n                    \n\n\n            \n                \n                        find service by id\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/sites/sites.service.ts:51\n                        \n                    \n\n\n            \n                \n                        soft delete service\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateSiteInput: UpdateSiteInput)\n                \n            \n\n\n                    \n                        \n                            Defined in src/sites/sites.service.ts:40\n                        \n                    \n\n\n            \n                \n                        update service\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateSiteInput\n                                            \n                                                            UpdateSiteInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateSiteInput } from './dto/create-site.input';\nimport { UpdateSiteInput } from './dto/update-site.input';\nimport { Model, Types } from 'mongoose';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Site } from './entities/site.entity';\n/**\n * services\n */\n@Injectable()\nexport class SitesService {\n  constructor(\n    @InjectModel(Site.name) private readonly siteModel: Model,\n  ) {}\n\n  /**\n   * create a service\n   */\n  create(createSiteInput: CreateSiteInput) {\n    return this.siteModel.create(createSiteInput);\n  }\n\n  /**\n   * find all service\n   */\n  findAll() {\n    return this.siteModel.find({ isDeleted: false });\n  }\n\n  /**\n   * find service by id\n   */\n  findOne(id: string) {\n    return this.siteModel.findById(id);\n  }\n\n  /**\n   * update service\n   */\n  async update(id: string, updateSiteInput: UpdateSiteInput) {\n    delete updateSiteInput['_id'];\n    const updatedEvent = await this.siteModel\n      .findOneAndUpdate({ _id: id }, { ...updateSiteInput }, { new: true })\n      .lean();\n    return updatedEvent;\n  }\n\n  /**\n   * soft delete service\n   */\n  async remove(id: string) {\n    const updatedType = await this.siteModel\n      .findOneAndUpdate({ _id: id }, { isDeleted: true }, { new: true })\n      .lean();\n    return updatedType;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Stage.html":{"url":"classes/Stage.html","title":"class - Stage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Stage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stages/entities/stage.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                stages of phases\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                _id\n                            \n                            \n                                    \n                                    \n                                color\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                icon\n                            \n                            \n                                    \n                                    \n                                index\n                            \n                            \n                                    \n                                    \n                                isDeleted\n                            \n                            \n                                    \n                                    \n                                label\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/stages/entities/stage.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        color\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/stages/entities/stage.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Date of entity creation.'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/stages/entities/stage.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@Prop({default: ''})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/stages/entities/stage.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        icon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/stages/entities/stage.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        index\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/stages/entities/stage.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/stages/entities/stage.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        label\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/stages/entities/stage.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/stages/entities/stage.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Date of last entity update.'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/stages/entities/stage.entity.ts:44\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ObjectType, Field, ID, Int } from '@nestjs/graphql';\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\n/**\n * stages of phases\n */\n@Schema({ timestamps: true })\n@ObjectType()\nexport class Stage {\n  @Field(() => ID)\n  _id: string;\n\n  @Field(() => Int)\n  @Prop({ required: true })\n  index: number;\n\n  @Field(() => String)\n  @Prop({ required: true })\n  name: string;\n\n  @Field(() => String, { nullable: true })\n  @Prop({ default: '' })\n  description: string;\n\n  @Field(() => String)\n  @Prop({ required: true })\n  label: string;\n\n  @Field(() => String)\n  @Prop({ required: true })\n  color: string;\n\n  @Field(() => String)\n  @Prop({ required: true })\n  icon: string;\n\n  @Field(() => Boolean)\n  @Prop({ default: false })\n  isDeleted: boolean;\n\n  @Field(() => Date, { description: 'Date of entity creation.' })\n  createdAt: Date;\n\n  @Field(() => Date, { description: 'Date of last entity update.' })\n  updatedAt: Date;\n}\n/**\n * @ignore\n */\nexport const StageSchema = SchemaFactory.createForClass(Stage);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StagesModule.html":{"url":"modules/StagesModule.html","title":"module - StagesModule","body":"\n                   \n\n\n\n\n    Modules\n    StagesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_StagesModule\n\n\n\ncluster_StagesModule_exports\n\n\n\ncluster_StagesModule_imports\n\n\n\ncluster_StagesModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nStagesModule\n\nStagesModule\n\nStagesModule -->\n\nAuthModule->StagesModule\n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nStagesModule -->\n\nLoggerModule->StagesModule\n\n\n\n\n\nStagesService \n\nStagesService \n\nStagesService  -->\n\nStagesModule->StagesService \n\n\n\n\n\nStagesService\n\nStagesService\n\nStagesModule -->\n\nStagesService->StagesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/stages/stages.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            StagesService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            LoggerModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            StagesService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { StagesService } from './stages.service';\nimport { StagesResolver } from './stages.resolver';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Stage, StageSchema } from './entities/stage.entity';\nimport { AuthModule } from 'src/auth/auth.module';\nimport { LoggerModule } from 'src/logger/logger.module';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([{ name: Stage.name, schema: StageSchema }]),\n    AuthModule,\n    LoggerModule,\n  ],\n  providers: [StagesResolver, StagesService],\n  exports: [StagesService],\n})\nexport class StagesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StagesService.html":{"url":"injectables/StagesService.html","title":"injectable - StagesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StagesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stages/stages.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                    Async\n                                modifyIndex\n                            \n                            \n                                    Async\n                                onModuleInit\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(stageModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/stages/stages.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        stageModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createStageInput: CreateStageInput)\n                \n            \n\n\n                    \n                        \n                            Defined in src/stages/stages.service.ts:28\n                        \n                    \n\n\n            \n                \n                        create a stage\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createStageInput\n                                            \n                                                            CreateStageInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/stages/stages.service.ts:35\n                        \n                    \n\n\n            \n                \n                        find all stages\n\n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/stages/stages.service.ts:44\n                        \n                    \n\n\n            \n                \n                        find a stage by id\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        modifyIndex\n                        \n                    \n                \n            \n            \n                \n                        \n                    modifyIndex(stageId: string, newIndex: number, type: \"up\" | \"down\")\n                \n            \n\n\n                    \n                        \n                            Defined in src/stages/stages.service.ts:62\n                        \n                    \n\n\n            \n                \n                        modify order of display\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                stageId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                newIndex\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                type\n                                            \n                                                        \"up\" | \"down\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/stages/stages.service.ts:18\n                        \n                    \n\n\n            \n                \n                        initialize stages\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/stages/stages.service.ts:97\n                        \n                    \n\n\n            \n                \n                        soft delete a stage\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateStageInput: UpdateStageInput)\n                \n            \n\n\n                    \n                        \n                            Defined in src/stages/stages.service.ts:51\n                        \n                    \n\n\n            \n                \n                        update a stage\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateStageInput\n                                            \n                                                            UpdateStageInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, OnModuleInit } from '@nestjs/common';\nimport { CreateStageInput } from './dto/create-stage.input';\nimport { UpdateStageInput } from './dto/update-stage.input';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Stage } from './entities/stage.entity';\nimport { Model } from 'mongoose';\nimport { default_stages } from './models/stages-default';\n\n@Injectable()\nexport class StagesService implements OnModuleInit {\n  constructor(\n    @InjectModel(Stage.name) private readonly stageModel: Model,\n  ) {}\n\n  /**\n   * initialize stages\n   */\n  async onModuleInit() {\n    let types = await this.stageModel.find({});\n    if (types.length === 0) {\n      await this.stageModel.insertMany(default_stages);\n    }\n  }\n\n  /**\n   * create a stage\n   */\n  create(createStageInput: CreateStageInput) {\n    return this.stageModel.create(createStageInput);\n  }\n\n  /**\n   * find all stages\n   */\n  async findAll() {\n    return (await this.stageModel.find({}).lean()).sort(\n      (firstItem, secondItem) => firstItem.index - secondItem.index,\n    );\n  }\n\n  /**\n   * find a stage by id\n   */\n  findOne(id: string) {\n    return this.stageModel.findById(id).lean();\n  }\n\n  /**\n   * update a stage\n   */\n  async update(id: string, updateStageInput: UpdateStageInput) {\n    delete updateStageInput['_id'];\n    const updatedStage = await this.stageModel\n      .findOneAndUpdate({ _id: id }, { ...updateStageInput }, { new: true })\n      .lean();\n    return updatedStage;\n  }\n\n  /**\n   * modify order of display\n   */\n  async modifyIndex(stageId: string, newIndex: number, type: 'up' | 'down') {\n    const updatedStage = await this.stageModel\n      .findOneAndUpdate(\n        { _id: stageId },\n        { $set: { index: newIndex } },\n        { new: true },\n      )\n      .lean();\n    switch (type) {\n      case 'up':\n        await this.stageModel.updateMany(\n          {\n            _id: { $ne: updatedStage._id },\n            index: newIndex,\n          },\n          { $set: { index: newIndex - 1 } },\n        );\n\n        break;\n      case 'down':\n        await this.stageModel.updateMany(\n          {\n            _id: { $ne: updatedStage._id },\n            index: newIndex,\n          },\n          { $set: { index: newIndex + 1 } },\n        );\n        break;\n    }\n    return updatedStage;\n  }\n\n  /**\n   * soft delete a stage\n   */\n  async remove(id: string) {\n    const updatedStage = await this.stageModel\n      .findOneAndUpdate({ _id: id }, { isDeleted: true }, { new: true })\n      .lean();\n    return updatedStage;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Startup.html":{"url":"classes/Startup.html","title":"class - Startup","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Startup\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/startup/entities/startup.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                startup docs\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                _id\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                    \n                                entrepreneurs\n                            \n                            \n                                    \n                                isProspect\n                            \n                            \n                                    \n                                    \n                                item\n                            \n                            \n                                    \n                                    \n                                phases\n                            \n                            \n                                    \n                                    \n                                thumbnail\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/startup/entities/startup.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Date of entity creation.'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/startup/entities/startup.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'If set, The date the entity was deleted.', nullable: true})@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/startup/entities/startup.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        entrepreneurs\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EntrepreneurRelationship[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/startup/entities/startup.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isProspect\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/startup/entities/startup.entity.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        item\n                        \n                    \n                \n            \n                \n                    \n                        Type :     JSON\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/startup/entities/startup.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        phases\n                        \n                    \n                \n            \n                \n                    \n                        Type :     PhaseRelationship[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/startup/entities/startup.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        thumbnail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@Prop({default: ''})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/startup/entities/startup.entity.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Date of last entity update.'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/startup/entities/startup.entity.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'If set, Details from user who last updated the entity.', nullable: true})@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/startup/entities/startup.entity.ts:39\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ObjectType, Field, ID } from '@nestjs/graphql';\nimport { Schema, Prop, SchemaFactory } from '@nestjs/mongoose';\nimport GraphQLJSON from 'graphql-type-json';\nimport { SchemaTypes } from 'mongoose';\nimport { User } from 'src/users/entities/user.entity';\n/**\n * startup docs\n */\n@Schema({ timestamps: true })\n@ObjectType()\nexport class Startup {\n  @Field(() => ID)\n  _id: string;\n\n  @Field(() => [PhaseRelationship])\n  @Prop({ default: [] })\n  phases: PhaseRelationship[];\n\n  @Field(() => [EntrepreneurRelationship])\n  @Prop({ default: [] })\n  entrepreneurs: EntrepreneurRelationship[];\n\n  @Field(() => GraphQLJSON)\n  @Prop({ type: Object })\n  item: JSON;\n\n  @Field(() => Date, {\n    description: 'If set, The date the entity was deleted.',\n    nullable: true,\n  })\n  @Prop()\n  deletedAt: Date;\n\n  @Field(() => User, {\n    description: 'If set, Details from user who last updated the entity.',\n    nullable: true,\n  })\n  @Prop()\n  updatedBy: string;\n\n  @Field(() => Date, { description: 'Date of entity creation.' })\n  createdAt: Date;\n\n  @Field(() => Date, { description: 'Date of last entity update.' })\n  updatedAt: Date;\n\n  @Field(() => Boolean, { nullable: true })\n  isProspect: boolean;\n\n  @Field(() => String, { nullable: true })\n  @Prop({ default: '' })\n  thumbnail: string;\n}\n/**\n * relationship with entrepreneurs\n */\n@Schema()\n@ObjectType()\nexport class EntrepreneurRelationship {\n  @Field(() => String)\n  @Prop({ type: SchemaTypes.ObjectId, ref: 'Entrepreneur' })\n  _id: string;\n\n  @Field(() => GraphQLJSON)\n  @Prop({ type: Object })\n  item: JSON;\n\n  @Field(() => String)\n  @Prop()\n  rol: string;\n\n  @Field(() => String)\n  @Prop()\n  description: string;\n\n  @Field(() => String)\n  @Prop()\n  state: string;\n}\n/**\n * relationship with phases\n */\n@Schema()\n@ObjectType()\nexport class PhaseRelationship {\n  @Field(() => String)\n  @Prop({ type: SchemaTypes.ObjectId, ref: 'Phase' })\n  _id: string;\n\n  @Field(() => String)\n  @Prop()\n  name: string;\n\n  @Field(() => String)\n  @Prop()\n  state: string;\n}\n/**\n * @ignore\n */\nexport const StartupSchema = SchemaFactory.createForClass(Startup);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StartupLink.html":{"url":"classes/StartupLink.html","title":"class - StartupLink","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StartupLink\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/expert/entities/expert.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                relationship with startup\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                _id\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({type: undefined, ref: 'Startup'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/expert/entities/expert.entity.ts:80\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/expert/entities/expert.entity.ts:84\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ObjectType, Field, ID } from '@nestjs/graphql';\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport GraphQLJSON from 'graphql-type-json';\nimport { SchemaTypes } from 'mongoose';\nimport { User } from 'src/users/entities/user.entity';\n/**\n * Expert docs\n */\n@Schema({ timestamps: true })\n@ObjectType()\nexport class Expert {\n  @Field(() => ID)\n  _id: string;\n\n  @Field(() => User, { nullable: true })\n  @Prop({ default: '' })\n  accountId: string;\n\n  @Field(() => String, { nullable: true })\n  @Prop({ default: '' })\n  calendlyLink: string;\n\n  @Field(() => GraphQLJSON)\n  @Prop({ type: Object })\n  item: JSON;\n\n  @Field(() => Date, {\n    description: 'If set, The date the entity was deleted.',\n    nullable: true,\n  })\n  @Prop()\n  deletedAt: Date;\n\n  @Field(() => User, {\n    description: 'If set, Details from user who last updated the entity.',\n    nullable: true,\n  })\n  @Prop()\n  updatedBy: string;\n\n  @Field(() => [PhaseExpertRelationship])\n  @Prop({ default: [] })\n  phases: PhaseExpertRelationship[];\n\n  @Field(() => Date, { description: 'Date of entity creation.' })\n  createdAt: Date;\n\n  @Field(() => Date, { description: 'Date of last entity update.' })\n  updatedAt: Date;\n\n  @Field(() => Boolean)\n  isProspect: boolean;\n}\n/**\n * relationship with phase\n */\n@Schema()\n@ObjectType()\nexport class PhaseExpertRelationship {\n  @Field(() => String)\n  @Prop({ type: SchemaTypes.ObjectId, ref: 'Phase' })\n  _id: string;\n\n  @Field(() => String)\n  @Prop()\n  name: string;\n\n  @Field(() => [StartupLink])\n  @Prop({ default: [] })\n  startUps: StartupLink[];\n}\n/**\n * relationship with startup\n */\n@Schema()\n@ObjectType()\nexport class StartupLink {\n  @Field(() => String)\n  @Prop({ type: SchemaTypes.ObjectId, ref: 'Startup' })\n  _id: string;\n\n  @Field(() => String)\n  @Prop()\n  name: string;\n}\n/**\n * @ignore\n */\nexport const ExpertSchema = SchemaFactory.createForClass(Expert);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StartupModule.html":{"url":"modules/StartupModule.html","title":"module - StartupModule","body":"\n                   \n\n\n\n\n    Modules\n    StartupModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_StartupModule\n\n\n\ncluster_StartupModule_exports\n\n\n\ncluster_StartupModule_providers\n\n\n\ncluster_StartupModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nStartupModule\n\nStartupModule\n\nStartupModule -->\n\nAuthModule->StartupModule\n\n\n\n\n\nDownloadsModule\n\nDownloadsModule\n\nStartupModule -->\n\nDownloadsModule->StartupModule\n\n\n\n\n\nStartupService \n\nStartupService \n\nStartupService  -->\n\nStartupModule->StartupService \n\n\n\n\n\nStartupService\n\nStartupService\n\nStartupModule -->\n\nStartupService->StartupModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/startup/startup.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            StartupService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            DownloadsModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            StartupService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module, forwardRef } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { StartupService } from './startup.service';\nimport { StartupResolver } from './startup.resolver';\nimport { Startup, StartupSchema } from './entities/startup.entity';\nimport { AuthModule } from 'src/auth/auth.module';\nimport { EntrepreneurModule } from 'src/entrepreneur/entrepreneur.module';\nimport { ExpertModule } from 'src/expert/expert.module';\nimport { DownloadsModule } from 'src/downloads/downloads.module';\nimport { TableModule } from 'src/table/table.module';\nimport { EmailsModule } from 'src/emails/emails.module';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([{ name: Startup.name, schema: StartupSchema }]),\n    AuthModule,\n    forwardRef(() => ExpertModule),\n    forwardRef(() => EntrepreneurModule),\n    DownloadsModule,\n    forwardRef(() => TableModule),\n    forwardRef(() => EmailsModule),\n  ],\n  providers: [StartupResolver, StartupService],\n  exports: [StartupService],\n})\nexport class StartupModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StartupRelationship.html":{"url":"classes/StartupRelationship.html","title":"class - StartupRelationship","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StartupRelationship\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/entrepreneur/entities/entrepreneur.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                Relationship between entrepreneur and startup\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                _id\n                            \n                            \n                                    \n                                    \n                                item\n                            \n                            \n                                    \n                                    \n                                phases\n                            \n                            \n                                    \n                                    \n                                state\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entrepreneur/entities/entrepreneur.entity.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        item\n                        \n                    \n                \n            \n                \n                    \n                        Type :     JSON\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entrepreneur/entities/entrepreneur.entity.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        phases\n                        \n                    \n                \n            \n                \n                    \n                        Type :     PhaseRelationship[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {defaultValue: undefined})@Prop({default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entrepreneur/entities/entrepreneur.entity.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entrepreneur/entities/entrepreneur.entity.ts:78\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ObjectType, Field, ID } from '@nestjs/graphql';\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { User } from 'src/users/entities/user.entity';\nimport GraphQLJSON from 'graphql-type-json';\nimport { PhaseRelationship } from 'src/startup/entities/startup.entity';\n/**\n * Entrepreneur docs\n */\n@Schema({ timestamps: true })\n@ObjectType()\nexport class Entrepreneur {\n  @Field(() => ID)\n  _id: string;\n\n  @Field(() => [StartupRelationship])\n  @Prop({ default: [] })\n  startups: StartupRelationship[];\n\n  @Field(() => [BusinessRelationship])\n  @Prop({ default: [] })\n  businesses: BusinessRelationship[];\n\n  @Field(() => User, { nullable: true })\n  @Prop({ default: '' })\n  accountId: string;\n\n  @Field(() => GraphQLJSON)\n  @Prop({ type: Object })\n  item: JSON;\n\n  @Field(() => Date, {\n    description: 'If set, The date the entity was deleted.',\n    nullable: true,\n  })\n  @Prop()\n  deletedAt: Date;\n\n  @Field(() => User, {\n    description: 'If set, Details from user who last updated the entity.',\n    nullable: true,\n  })\n  @Prop()\n  updatedBy: string;\n\n  @Field(() => Date, { description: 'Date of entity creation.' })\n  createdAt: Date;\n\n  @Field(() => Date, { description: 'Date of last entity update.' })\n  updatedAt: Date;\n\n  @Field(() => Boolean, { nullable: true })\n  isProspect: boolean;\n}\n/**\n * @ignore\n */\nexport const EntrepreneurSchema = SchemaFactory.createForClass(Entrepreneur);\n/**\n * Relationship between entrepreneur and startup\n */\n@Schema()\n@ObjectType()\nexport class StartupRelationship {\n  @Field(() => String)\n  @Prop()\n  _id: string;\n\n  @Field(() => GraphQLJSON)\n  @Prop({ type: Object })\n  item: JSON;\n\n  @Field(() => [PhaseRelationship], { defaultValue: [] })\n  @Prop({ default: [] })\n  phases: PhaseRelationship[];\n\n  @Field(() => String)\n  @Prop()\n  state: string;\n}\n/**\n * Relationship between entrepreneur and business\n */\n@Schema()\n@ObjectType()\nexport class BusinessRelationship {\n  @Field(() => String)\n  @Prop()\n  _id: string;\n\n  @Field(() => GraphQLJSON)\n  @Prop({ type: Object })\n  item: JSON;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/StorageController.html":{"url":"controllers/StorageController.html","title":"controller - StorageController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  StorageController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/storage/storage.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                storage\n            \n\n\n            \n                Description\n            \n            \n                upload files endpoints\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    Async\n                                get\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(body: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/storage/storage.controller.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        get\n                        \n                    \n                \n            \n            \n                \n                        \n                    get(query)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/storage/storage.controller.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Param, Post, Get, Query } from '@nestjs/common';\nimport { StorageService } from './models/storage-service';\n/**\n * upload files endpoints\n */\n@Controller('storage')\nexport class StorageController {\n  constructor(private readonly storageService: StorageService) {}\n\n  @Post()\n  async create(@Body() body: any): Promise {\n    const result = await this.storageService.createPresignedUrl(\n      body.name,\n      body.publicFile,\n    );\n    return { url: result };\n  }\n\n  @Get()\n  async get(@Query() query): Promise {\n    const result = await this.storageService.getPresignedUrl(query.key);\n    return { url: result };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StorageModule.html":{"url":"modules/StorageModule.html","title":"module - StorageModule","body":"\n                   \n\n\n\n\n    Modules\n    StorageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_StorageModule\n\n\n\ncluster_StorageModule_exports\n\n\n\n\nStorageService \n\nStorageService \n\n\n\nStorageModule\n\nStorageModule\n\nStorageService  -->\n\nStorageModule->StorageService \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/storage/storage.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            StorageController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            StorageService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { StorageController } from './storage.controller';\nimport { AwsService } from './aws/aws.service';\nimport { StorageService } from './models/storage-service';\n\n@Module({\n  controllers: [StorageController],\n  providers: [\n    {\n      provide: StorageService,\n      useClass: AwsService,\n    }\n  ],\n  exports: [\n    StorageService,\n  ]\n})\nexport class StorageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StorageService.html":{"url":"classes/StorageService.html","title":"class - StorageService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/storage/models/storage-service.ts\n        \n\n\n            \n                Description\n            \n            \n                repository of storage service\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Abstract\n                                createPresignedUrl\n                            \n                            \n                                    Public\n                                    Abstract\n                                getPresignedUrl\n                            \n                            \n                                    Public\n                                    Abstract\n                                uploadTemporaryFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        createPresignedUrl\n                        \n                    \n                \n            \n            \n                \n                        \n                    createPresignedUrl(key: string, publicFile?: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/storage/models/storage-service.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                publicFile\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        getPresignedUrl\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPresignedUrl(key: string, publicFile?: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/storage/models/storage-service.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                publicFile\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        uploadTemporaryFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    uploadTemporaryFile(key: string, data: Buffer)\n                \n            \n\n\n                    \n                        \n                            Defined in src/storage/models/storage-service.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                        Buffer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Readable } from 'stream';\n/**\n * repository of storage service\n */\nexport abstract class StorageService {\n  public abstract createPresignedUrl(\n    key: string,\n    publicFile?: any,\n  ): Promise;\n  public abstract getPresignedUrl(\n    key: string,\n    publicFile?: any,\n  ): Promise;\n  public abstract uploadTemporaryFile(\n    key: string,\n    data: Buffer,\n  ): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SubmitAnnouncementDocInput.html":{"url":"classes/SubmitAnnouncementDocInput.html","title":"class - SubmitAnnouncementDocInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SubmitAnnouncementDocInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/announcements/dto/submit-announcement-doc.input.ts\n        \n\n\n            \n                Description\n            \n            \n                graphql input scheme\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                announcement\n                            \n                            \n                                    \n                                    \n                                announcementTarget\n                            \n                            \n                                    \n                                    \n                                participant\n                            \n                            \n                                    \n                                    \n                                submission\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        announcement\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Announcement id.'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/announcements/dto/submit-announcement-doc.input.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        announcementTarget\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Announcement target.'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/announcements/dto/submit-announcement-doc.input.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        participant\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Announcement participant id.'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/announcements/dto/submit-announcement-doc.input.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        submission\n                        \n                    \n                \n            \n                \n                    \n                        Type :     JSON\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Id of the form to render for submissions'})@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/announcements/dto/submit-announcement-doc.input.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { InputType, Field } from '@nestjs/graphql';\nimport { IsNotEmpty, IsString } from 'class-validator';\nimport GraphQLJSON from 'graphql-type-json';\n\n/**\n * graphql input scheme\n */\n@InputType()\nexport class SubmitAnnouncementDocInput {\n  @Field(() => String, { description: 'Announcement id.' })\n  @IsString()\n  announcement: string;\n\n  @Field(() => String, { description: 'Announcement participant id.' })\n  @IsString()\n  participant: string;\n\n  @Field(() => GraphQLJSON, {\n    description: 'Id of the form to render for submissions',\n  })\n  @IsNotEmpty()\n  submission: JSON;\n\n  @Field(() => String, { description: 'Announcement target.' })\n  @IsString()\n  announcementTarget: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SubmitFileInput.html":{"url":"classes/SubmitFileInput.html","title":"class - SubmitFileInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SubmitFileInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/forms/form-subscription/inputs/submit-file.input.ts\n        \n\n\n            \n                Description\n            \n            \n                graphql args input\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                doc\n                            \n                            \n                                    \n                                    \n                                fileKey\n                            \n                            \n                                    \n                                    \n                                fileUrl\n                            \n                            \n                                    \n                                    \n                                form\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        doc\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Submitted document id.'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/forms/form-subscription/inputs/submit-file.input.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        fileKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Key of the file input that was submitted.'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/forms/form-subscription/inputs/submit-file.input.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        fileUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Url of the submitted file.'})@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/forms/form-subscription/inputs/submit-file.input.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Form id.'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/forms/form-subscription/inputs/submit-file.input.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { InputType, Field } from '@nestjs/graphql';\nimport { IsNotEmpty, IsString } from 'class-validator';\n/**\n * graphql args input\n */\n@InputType()\nexport class SubmitFileInput {\n  @Field(() => String, { description: 'Form id.' })\n  @IsString()\n  form: string;\n\n  @Field(() => String, { description: 'Submitted document id.' })\n  @IsString()\n  doc: string;\n\n  @Field(() => String, { description: 'Url of the submitted file.' })\n  @IsNotEmpty()\n  fileUrl: string;\n\n  @Field(() => String, {\n    description: 'Key of the file input that was submitted.',\n  })\n  @IsString()\n  fileKey: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SubmitFormSubscriptionArgs.html":{"url":"classes/SubmitFormSubscriptionArgs.html","title":"class - SubmitFormSubscriptionArgs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SubmitFormSubscriptionArgs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/forms/form-subscription/args/submit-form-subscription.args.ts\n        \n\n\n            \n                Description\n            \n            \n                graphql args input\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                data\n                            \n                            \n                                    \n                                    \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     JSON\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/forms/form-subscription/args/submit-form-subscription.args.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/forms/form-subscription/args/submit-form-subscription.args.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, ArgsType } from '@nestjs/graphql';\nimport { IsNotEmpty } from 'class-validator';\nimport GraphQLJSON from 'graphql-type-json';\n/**\n * graphql args input\n */\n@ArgsType()\nexport class SubmitFormSubscriptionArgs {\n  @Field(() => String)\n  @IsNotEmpty()\n  id: string;\n\n  @Field(() => GraphQLJSON)\n  @IsNotEmpty()\n  data: JSON;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Table.html":{"url":"classes/Table.html","title":"class - Table","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Table\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/table/table/entities/table.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                tables configs\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                _id\n                            \n                            \n                                    \n                                    Optional\n                                columnGroups\n                            \n                            \n                                    \n                                    Optional\n                                columns\n                            \n                            \n                                    \n                                    \n                                form\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                joins\n                            \n                            \n                                    \n                                    \n                                locator\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/table/table/entities/table.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        columnGroups\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ColumnGroup[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Configurable joined columns.'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/table/table/entities/table.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        columns\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TableColumn[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Configurable columns.'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/table/table/entities/table.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Form used by the table.'})@Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/table/table/entities/table.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        joins\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TableJoin[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Table joins with related forms.', nullable: true})@Prop({default: undefined, schema: TableJoinSchema})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/table/table/entities/table.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        locator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'String key used to identify the table by its location.'})@Prop({index: true, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/table/table/entities/table.entity.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ObjectType, Field, ID } from '@nestjs/graphql';\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport GraphQLJSON from 'graphql-type-json';\nimport { TableJoin, TableJoinSchema } from './table-join';\nimport { ColumnGroup } from './column-group';\nimport { TableColumn } from 'src/shared/models/table-column';\n/**\n * tables configs\n */\n@Schema()\n@ObjectType()\nexport class Table {\n  @Field(() => ID)\n  _id: string;\n\n  @Field(() => String, {\n    description: 'String key used to identify the table by its location.',\n  })\n  @Prop({ index: true, required: true })\n  locator: string;\n\n  @Field(() => String, { description: 'Form used by the table.' })\n  @Prop({ required: true })\n  form: string;\n\n  @Field(() => [GraphQLJSON], {\n    description: 'Table joins with related forms.',\n    nullable: true,\n  })\n  @Prop({ default: [], schema: TableJoinSchema })\n  joins?: TableJoin[];\n\n  @Field(() => [GraphQLJSON], { description: 'Configurable columns.' })\n  columns?: TableColumn[];\n\n  @Field(() => [GraphQLJSON], { description: 'Configurable joined columns.' })\n  columnGroups?: ColumnGroup[];\n}\n/**\n * @ignore\n */\nexport const TableSchema = SchemaFactory.createForClass(Table);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TableConfig.html":{"url":"classes/TableConfig.html","title":"class - TableConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TableConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/table/table-config/entities/table-config.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                inner relationship between table and table configs\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                _id\n                            \n                            \n                                    \n                                    \n                                columns\n                            \n                            \n                                    \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                    \n                                loadEvent\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                table\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/table/table-config/entities/table-config.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        columns\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TableColumn[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({required: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/table/table-config/entities/table-config.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'If set, The date the entity was deleted.', nullable: true})@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/table/table-config/entities/table-config.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        loadEvent\n                        \n                    \n                \n            \n                \n                    \n                        Type :     JSON\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/table/table-config/entities/table-config.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/table/table-config/entities/table-config.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        table\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Id of the parent table.'})@Prop({required: true, type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/table/table-config/entities/table-config.entity.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ObjectType, Field, ID } from '@nestjs/graphql';\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport GraphQLJSON from 'graphql-type-json';\nimport { SchemaTypes } from 'mongoose';\nimport { TableColumn } from 'src/shared/models/table-column';\n/**\n * inner relationship between table and table configs\n */\n@Schema()\n@ObjectType()\nexport class TableConfig {\n  @Field(() => ID)\n  _id: string;\n\n  @Field(() => String)\n  @Prop({ required: true })\n  name: string;\n\n  @Field(() => String, { description: 'Id of the parent table.' })\n  @Prop({ required: true, type: SchemaTypes.ObjectId })\n  table: string;\n\n  @Field(() => [GraphQLJSON])\n  @Prop({ required: true, default: [] })\n  columns: TableColumn[];\n\n  @Field(() => GraphQLJSON, { nullable: true })\n  @Prop({ type: Object })\n  loadEvent: JSON;\n\n  @Field(() => Date, {\n    description: 'If set, The date the entity was deleted.',\n    nullable: true,\n  })\n  @Prop()\n  deletedAt: Date;\n}\n/**\n * @ignore\n */\nexport const TableConfigSchema = SchemaFactory.createForClass(TableConfig);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TableConfigService.html":{"url":"injectables/TableConfigService.html","title":"injectable - TableConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TableConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/table/table-config/table-config.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createFromTable\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findMany\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(tableConfigModel: Model, formsService: FormsService)\n                    \n                \n                        \n                            \n                                Defined in src/table/table-config/table-config.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tableConfigModel\n                                                  \n                                                        \n                                                                    Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formsService\n                                                  \n                                                        \n                                                                        FormsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createFromTable\n                        \n                    \n                \n            \n            \n                \n                        \n                    createFromTable(columns: RowConfigColumn[], data: CreateTableConfigInput)\n                \n            \n\n\n                    \n                        \n                            Defined in src/table/table-config/table-config.service.ts:43\n                        \n                    \n\n\n            \n                \n                        create a new table config\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                columns\n                                            \n                                                        RowConfigColumn[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            CreateTableConfigInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/table/table-config/table-config.service.ts:67\n                        \n                    \n\n\n            \n                \n                        soft delete a table config\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findMany\n                        \n                    \n                \n            \n            \n                \n                        \n                    findMany(table: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/table/table-config/table-config.service.ts:21\n                        \n                    \n\n\n            \n                \n                        find table config by table\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                table\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/table/table-config/table-config.service.ts:31\n                        \n                    \n\n\n            \n                \n                        find table config by id\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, data: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/table/table-config/table-config.service.ts:57\n                        \n                    \n\n\n            \n                \n                        update a table config\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                        Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { CreateTableConfigInput } from './dto/create-table-config.input';\nimport { TableConfig } from './entities/table-config.entity';\nimport { FormsService } from 'src/forms/form/forms.service';\nimport { RowConfigColumn } from '../models/row-config-column';\nimport { AuthUser } from 'src/auth/types/auth-user';\n\n@Injectable()\nexport class TableConfigService {\n  constructor(\n    @InjectModel(TableConfig.name)\n    private readonly tableConfigModel: Model,\n    private readonly formsService: FormsService,\n  ) {}\n\n  /**\n   * find table config by table\n   */\n  async findMany(table: string): Promise {\n    const tableConfigs = await this.tableConfigModel\n      .find({ table, deletedAt: null })\n      .lean();\n    return tableConfigs;\n  }\n\n  /**\n   * find table config by id\n   */\n  async findOne(id: string): Promise {\n    const tableConfig = await this.tableConfigModel.findById(id).lean();\n    if (!tableConfig)\n      throw new NotFoundException(\n        `Couldn't find a table config by the specified id: ${id}`,\n      );\n    return tableConfig;\n  }\n\n  /**\n   * create a new table config\n   */\n  async createFromTable(\n    columns: RowConfigColumn[],\n    data: CreateTableConfigInput,\n  ) {\n    const createdTableConfig = await this.tableConfigModel.create({\n      ...data,\n      columns,\n    });\n    return createdTableConfig;\n  }\n\n  /**\n   * update a table config\n   */\n  async update(id: string, data: Partial) {\n    const updatedTableConfig = await this.tableConfigModel\n      .findByIdAndUpdate(id, { ...data }, { new: true })\n      .lean();\n    return updatedTableConfig;\n  }\n\n  /**\n   * soft delete a table config\n   */\n  async delete(id: string) {\n    const updateResult = await this.tableConfigModel.updateOne(\n      { _id: id },\n      { deletedAt: Date.now() },\n    );\n    return updateResult;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TableJoin.html":{"url":"classes/TableJoin.html","title":"class - TableJoin","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TableJoin\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/table/table/entities/table-join.ts\n        \n\n\n            \n                Description\n            \n            \n                joins between tables\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                extraColumns\n                            \n                            \n                                    \n                                    \n                                    \n                                form\n                            \n                            \n                                    \n                                    \n                                    \n                                key\n                            \n                            \n                                    \n                                    \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        extraColumns\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TableColumn[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsOptional()@Prop({default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/table/table/entities/table-join.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/table/table/entities/table-join.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        key\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/table/table/entities/table-join.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/table/table/entities/table-join.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType, ObjectType } from '@nestjs/graphql';\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { IsOptional, IsString } from 'class-validator';\nimport GraphQLJSON from 'graphql-type-json';\nimport { TableColumn } from 'src/shared/models/table-column';\n/**\n * joins between tables\n */\n@Schema()\n@InputType()\n@ObjectType()\nexport class TableJoin {\n  @IsString()\n  @Field()\n  @Prop()\n  name: string;\n\n  @IsString()\n  @Field()\n  @Prop()\n  key: string;\n\n  @IsString()\n  @Field()\n  @Prop()\n  form: string;\n\n  @Field(() => GraphQLJSON)\n  @IsOptional()\n  @Prop({ default: [] })\n  extraColumns: TableColumn[];\n}\n/**\n * @ignore\n */\nexport const TableJoinSchema = SchemaFactory.createForClass(TableJoin);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TableModule.html":{"url":"modules/TableModule.html","title":"module - TableModule","body":"\n                   \n\n\n\n\n    Modules\n    TableModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TableModule\n\n\n\ncluster_TableModule_providers\n\n\n\ncluster_TableModule_imports\n\n\n\ncluster_TableModule_exports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nTableModule\n\nTableModule\n\nTableModule -->\n\nAuthModule->TableModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nTableModule -->\n\nUsersModule->TableModule\n\n\n\n\n\nTableConfigService \n\nTableConfigService \n\nTableConfigService  -->\n\nTableModule->TableConfigService \n\n\n\n\n\nTableConfigService\n\nTableConfigService\n\nTableModule -->\n\nTableConfigService->TableModule\n\n\n\n\n\nTableService\n\nTableService\n\nTableModule -->\n\nTableService->TableModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/table/table.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TableConfigService\n                        \n                        \n                            TableService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            TableConfigService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module, forwardRef } from '@nestjs/common';\nimport { TableResolver } from './table/table.resolver';\nimport { TableConfigResolver } from './table-config/table-config.resolver';\nimport { TableService } from './table/table.service';\nimport { TableConfigService } from './table-config/table-config.service';\nimport { Table, TableSchema } from './table/entities/table.entity';\nimport { TableConfig, TableConfigSchema } from './table-config/entities/table-config.entity';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { AuthModule } from 'src/auth/auth.module';\nimport { UsersModule } from 'src/users/users.module';\nimport { FormsModule } from 'src/forms/forms.module';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      { name: Table.name, schema: TableSchema },\n      { name: TableConfig.name, schema: TableConfigSchema },\n    ]),\n    AuthModule,\n    UsersModule,\n    forwardRef(() => FormsModule),\n  ],\n  providers: [\n    TableResolver,\n    TableConfigResolver,\n    TableService,\n    TableConfigService,\n  ],\n  exports: [\n    TableConfigService,\n  ],\n})\nexport class TableModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TableService.html":{"url":"injectables/TableService.html","title":"injectable - TableService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TableService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/table/table/table.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addTableJoin\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                removeTableJoin\n                            \n                            \n                                    Async\n                                resolveTableColumns\n                            \n                            \n                                    Async\n                                resolveTableGroups\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(tableModel: Model, tableConfigService: TableConfigService, formsService: FormsService)\n                    \n                \n                        \n                            \n                                Defined in src/table/table/table.service.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tableModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tableConfigService\n                                                  \n                                                        \n                                                                        TableConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formsService\n                                                  \n                                                        \n                                                                        FormsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addTableJoin\n                        \n                    \n                \n            \n            \n                \n                        \n                    addTableJoin(undefined: AddTableJoinInput)\n                \n            \n\n\n                    \n                        \n                            Defined in src/table/table/table.service.ts:53\n                        \n                    \n\n\n            \n                \n                        create joins table\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            AddTableJoinInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(data: CreateTableInput)\n                \n            \n\n\n                    \n                        \n                            Defined in src/table/table/table.service.ts:31\n                        \n                    \n\n\n            \n                \n                        create a table doc\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            CreateTableInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(filters: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/table/table/table.service.ts:77\n                        \n                    \n\n\n            \n                \n                        find a table\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filters\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        removeTableJoin\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeTableJoin(undefined: RemoveTableJoinInput)\n                \n            \n\n\n                    \n                        \n                            Defined in src/table/table/table.service.ts:65\n                        \n                    \n\n\n            \n                \n                        remove joins table\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            RemoveTableJoinInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        resolveTableColumns\n                        \n                    \n                \n            \n            \n                \n                        \n                    resolveTableColumns(table: Omit)\n                \n            \n\n\n                    \n                        \n                            Defined in src/table/table/table.service.ts:122\n                        \n                    \n\n\n            \n                \n                        get table columns of a table\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                table\n                                            \n                                                            Omit\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        resolveTableGroups\n                        \n                    \n                \n            \n            \n                \n                        \n                    resolveTableGroups(table: Omit)\n                \n            \n\n\n                    \n                        \n                            Defined in src/table/table/table.service.ts:89\n                        \n                    \n\n\n            \n                \n                        find joins in table\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                table\n                                            \n                                                            Omit\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Inject,\n  Injectable,\n  InternalServerErrorException,\n  NotFoundException,\n  forwardRef,\n} from '@nestjs/common';\nimport { CreateTableInput } from './dto/create-table.input';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Table } from './entities/table.entity';\nimport { Model } from 'mongoose';\nimport { TableConfigService } from '../table-config/table-config.service';\nimport { FormsService } from 'src/forms/form/forms.service';\nimport { tableUtilities } from '../utilities/table.utilities';\nimport { AddTableJoinInput } from './dto/add-table-join.input';\nimport { ColumnGroup } from './entities/column-group';\nimport { RemoveTableJoinInput } from './dto/remove-table-join.input';\n\n@Injectable()\nexport class TableService {\n  constructor(\n    @InjectModel(Table.name) private readonly tableModel: Model,\n    private readonly tableConfigService: TableConfigService,\n    @Inject(forwardRef(() => FormsService))\n    private readonly formsService: FormsService,\n  ) {}\n\n  /**\n   * create a table doc\n   */\n  async create(data: CreateTableInput): Promise {\n    const createdTable = await this.tableModel.create(data);\n    if (!createdTable)\n      throw new InternalServerErrorException(\n        `Failed to create table with locator ${data.locator}`,\n      );\n    const initialConfigData = { name: 'Tabla', table: createdTable.id };\n    const columns = await this.resolveTableColumns(createdTable);\n    const initialConfig = await this.tableConfigService.createFromTable(\n      columns,\n      initialConfigData,\n    );\n    if (!initialConfig)\n      throw new InternalServerErrorException(\n        `Failed to create initial table configuration for table ${createdTable.id}`,\n      );\n    return createdTable;\n  }\n\n  /**\n   * create joins table\n   */\n  async addTableJoin({ id, join }: AddTableJoinInput): Promise {\n    const updatedTable = await this.tableModel.findByIdAndUpdate(\n      id,\n      { $addToSet: { joins: join } },\n      { new: true, lean: true },\n    );\n    return updatedTable;\n  }\n\n  /**\n   * remove joins table\n   */\n  async removeTableJoin({ id, key }: RemoveTableJoinInput): Promise {\n    const updatedTable = await this.tableModel.findByIdAndUpdate(\n      id,\n      { $pull: { joins: { key: key } } },\n      { new: true, lean: true },\n    );\n    return updatedTable;\n  }\n\n  /**\n   * find a table\n   */\n  async findOne(filters: { _id?: string; locator?: string }): Promise {\n    const table = await this.tableModel.findOne(filters);\n    if (!table)\n      throw new NotFoundException(\n        `Couldn't find a table by the specified filters: ${filters}`,\n      );\n    return table;\n  }\n\n  /**\n   * find joins in table\n   */\n  async resolveTableGroups(\n    table: Omit,\n  ): Promise {\n    const tableJoins = table?.joins ?? [];\n    const joinsColumns: Promise[] = tableJoins.map(\n      async (join) => {\n        const joinForm = await this.formsService.findOne(join.form);\n        const formComponents = JSON.parse(joinForm.formJson);\n        const columns = tableUtilities.convertFormToColumns(\n          formComponents.components,\n          joinForm.documents,\n          join.key,\n        );\n        const extraColumns = (join?.extraColumns ?? []).map((extraColumn) => {\n          return {\n            ...extraColumn,\n            key: `${join.key}; ${extraColumn.key}`,\n          };\n        });\n        return {\n          name: joinForm.name,\n          key: join.key,\n          columns: columns.concat(extraColumns),\n        };\n      },\n    );\n    const joins = await Promise.all(joinsColumns);\n    return joins;\n  }\n\n  /**\n   * get table columns of a table\n   */\n  async resolveTableColumns(table: Omit) {\n    const form = await this.formsService.findOne(table.form);\n    const formComponents = JSON.parse(form.formJson);\n    let columns = tableUtilities.convertFormToColumns(\n      formComponents.components,\n      form.documents,\n    );\n    if (table.locator.includes('experts phase '))\n      columns.push(tableUtilities.columnStartupsExpert());\n    if (table.locator.includes('communities')) {\n      columns.push(...tableUtilities.columnsCommunities());\n    }\n    if (table.locator.includes('evaluation')) {\n      columns.unshift(...tableUtilities.columnsEvaluations());\n    }\n    if (table.locator.includes('resource replies')) {\n      columns.unshift(...tableUtilities.columnsResourceReply());\n    }\n    if (table.locator.includes('applicants')) {\n      if (table.locator.includes('selected'))\n        columns.push(...tableUtilities.columnsAnnouncementSelected());\n    }\n\n    return columns;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TeamCoachLink.html":{"url":"classes/TeamCoachLink.html","title":"class - TeamCoachLink","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TeamCoachLink\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/events/entities/event.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                team coach link\n\n            \n\n\n            \n                Implements\n            \n            \n                            IEntityEvent\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                _id\n                            \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({type: undefined, ref: 'User'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/entities/event.entity.ts:80\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/entities/event.entity.ts:88\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/entities/event.entity.ts:84\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ObjectType, Field, ID } from '@nestjs/graphql';\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { GraphQLJSONObject } from 'graphql-scalars';\nimport { SchemaTypes } from 'mongoose';\n/**\n * Events docs\n */\n@Schema({ timestamps: true })\n@ObjectType()\nexport class Event {\n  @Field(() => ID)\n  _id: string;\n\n  @Field(() => String)\n  @Prop({ required: true })\n  name: string;\n\n  @Field(() => String)\n  @Prop({ required: true })\n  type: string;\n\n  @Field(() => String)\n  @Prop({ required: true })\n  attendanceType: string;\n\n  @Field(() => String)\n  @Prop({})\n  description: string;\n\n  @Field(() => GraphQLJSONObject)\n  @Prop({ type: SchemaTypes.Mixed })\n  extra_options: any;\n\n  @Field(() => Date)\n  @Prop({ required: true })\n  startAt: Date;\n\n  @Field(() => Date)\n  @Prop({ required: true })\n  endAt: Date;\n\n  @Field(() => Boolean)\n  @Prop({ default: false })\n  isCanceled: boolean;\n\n  @Field(() => Boolean)\n  @Prop({ default: false })\n  isDeleted: boolean;\n\n  @Field(() => Date)\n  createdAt: Date;\n\n  @Field(() => Date)\n  updatedAt: Date;\n\n  @Field(() => String)\n  @Prop({ type: SchemaTypes.ObjectId, ref: 'Phase' })\n  batch: string;\n\n  @Field(() => [ExpertEventLink])\n  @Prop({ default: [] })\n  experts: ExpertEventLink[];\n\n  @Field(() => [TeamCoachLink])\n  @Prop({ default: [] })\n  teamCoaches: TeamCoachLink[];\n\n  @Field(() => [ParticipantEventLink])\n  @Prop({ default: [] })\n  participants: ParticipantEventLink[];\n}\n/**\n * team coach link\n */\n@Schema()\n@ObjectType()\nexport class TeamCoachLink implements IEntityEvent {\n  @Field(() => String)\n  @Prop({ type: SchemaTypes.ObjectId, ref: 'User' })\n  _id: string;\n\n  @Field(() => String)\n  @Prop()\n  name: string;\n\n  @Field(() => String)\n  @Prop()\n  email: string;\n}\n/**\n * expert link\n */\n@Schema()\n@ObjectType()\nexport class ExpertEventLink implements IEntityEvent {\n  @Field(() => String)\n  @Prop({ type: SchemaTypes.ObjectId, ref: 'Expert' })\n  _id: string;\n\n  @Field(() => String)\n  @Prop()\n  name: string;\n\n  @Field(() => String)\n  @Prop()\n  email: string;\n}\n\n/**\n * participant link\n */\n@Schema()\n@ObjectType()\nexport class ParticipantEventLink implements IEntityEvent {\n  @Field(() => String)\n  @Prop({ type: SchemaTypes.ObjectId, ref: 'Entrepreneur' })\n  _id: string;\n\n  @Field(() => String)\n  @Prop()\n  name: string;\n\n  @Field(() => String)\n  @Prop()\n  email: string;\n\n  @Field(() => String, { nullable: true })\n  @Prop()\n  startupEntrepreneur: string;\n}\n/**\n * @ignore\n */\nexport interface IEntityEvent {\n  _id: string;\n  name: string;\n  email: string;\n}\n/**\n * @ignore\n */\nexport const EventSchema = SchemaFactory.createForClass(Event);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TemplateInput.html":{"url":"classes/TemplateInput.html","title":"class - TemplateInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TemplateInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/emails/dto/template.input.ts\n        \n\n\n            \n                Description\n            \n            \n                graphql input scheme\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                data\n                            \n                            \n                                    \n                                    \n                                template\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Template\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested()@IsNotEmpty()@Type( => , {keepDiscriminatorProperty: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/emails/dto/template.input.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        template\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EmailTemplates\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsEnum(EmailTemplates)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/emails/dto/template.input.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEnum, IsNotEmpty, ValidateNested } from 'class-validator';\nimport { Type } from 'class-transformer';\nimport { EmailTemplates } from '../enums/email-templates';\nimport { Template } from '../templates/template';\nimport { NotificationTemplate } from '../templates/notification';\nimport { InvitationTemplate } from '../templates/invitation';\n\n/**\n * graphql input scheme\n */\nexport class TemplateInput {\n  @IsNotEmpty()\n  @IsEnum(EmailTemplates)\n  template: EmailTemplates;\n\n  @ValidateNested()\n  @IsNotEmpty()\n  @Type(\n    ({ object }) => {\n      switch (object.template) {\n        case EmailTemplates.invitation:\n          return InvitationTemplate;\n        case EmailTemplates.notification:\n          return NotificationTemplate;\n        default:\n        // Manage edge cases\n      }\n    },\n    { keepDiscriminatorProperty: false },\n  )\n  data: Template;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TermsOfUse.html":{"url":"classes/TermsOfUse.html","title":"class - TermsOfUse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TermsOfUse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/terms-of-use/entities/terms-of-use.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                terms of use display for experts\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                _id\n                            \n                            \n                                    \n                                    \n                                content\n                            \n                            \n                                    \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                    \n                                extra_options\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/terms-of-use/entities/terms-of-use.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({required: true, default: ''})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/terms-of-use/entities/terms-of-use.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/terms-of-use/entities/terms-of-use.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        extra_options\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({type: undefined, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/terms-of-use/entities/terms-of-use.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({required: true, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/terms-of-use/entities/terms-of-use.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/terms-of-use/entities/terms-of-use.entity.ts:32\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ObjectType, Field, ID } from '@nestjs/graphql';\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { SchemaTypes, Types, Document } from 'mongoose';\nimport { GraphQLJSONObject } from 'graphql-scalars';\n/**\n * terms of use display for experts\n */\n@Schema({ timestamps: true })\n@ObjectType()\nexport class TermsOfUse {\n  @Field(() => ID)\n  _id: string;\n\n  @Field(() => String)\n  @Prop({ required: true, unique: true })\n  name: string;\n\n  @Field(() => String)\n  @Prop({ required: true, default: '' })\n  content: string;\n\n  @Field(() => GraphQLJSONObject)\n  @Prop({ type: SchemaTypes.Mixed, default: {} })\n  extra_options: any;\n\n  @Field(() => Date)\n  @Prop({ type: Date })\n  createdAt: Date;\n\n  @Field(() => Date)\n  @Prop({ type: Date })\n  updatedAt: Date;\n}\n/**\n * @ignore\n */\nexport const TermsOfUseSchema = SchemaFactory.createForClass(TermsOfUse);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TermsOfUseModule.html":{"url":"modules/TermsOfUseModule.html","title":"module - TermsOfUseModule","body":"\n                   \n\n\n\n\n    Modules\n    TermsOfUseModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TermsOfUseModule\n\n\n\ncluster_TermsOfUseModule_exports\n\n\n\ncluster_TermsOfUseModule_providers\n\n\n\ncluster_TermsOfUseModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nTermsOfUseModule\n\nTermsOfUseModule\n\nTermsOfUseModule -->\n\nAuthModule->TermsOfUseModule\n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nTermsOfUseModule -->\n\nLoggerModule->TermsOfUseModule\n\n\n\n\n\nTermsOfUseService \n\nTermsOfUseService \n\nTermsOfUseService  -->\n\nTermsOfUseModule->TermsOfUseService \n\n\n\n\n\nTermsOfUseService\n\nTermsOfUseService\n\nTermsOfUseModule -->\n\nTermsOfUseService->TermsOfUseModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/terms-of-use/terms-of-use.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TermsOfUseService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            LoggerModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            TermsOfUseService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TermsOfUseService } from './terms-of-use.service';\nimport { TermsOfUseResolver } from './terms-of-use.resolver';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { AuthModule } from 'src/auth/auth.module';\nimport { LoggerModule } from 'src/logger/logger.module';\nimport { TermsOfUse, TermsOfUseSchema } from './entities/terms-of-use.entity';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      { name: TermsOfUse.name, schema: TermsOfUseSchema },\n    ]),\n    AuthModule,\n    LoggerModule,\n  ],\n  providers: [TermsOfUseResolver, TermsOfUseService],\n  exports: [TermsOfUseService],\n})\nexport class TermsOfUseModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TermsOfUseService.html":{"url":"injectables/TermsOfUseService.html","title":"injectable - TermsOfUseService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TermsOfUseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/terms-of-use/terms-of-use.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(termsOfUseModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/terms-of-use/terms-of-use.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        termsOfUseModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/terms-of-use/terms-of-use.service.ts:21\n                        \n                    \n\n\n            \n                \n                        find all terms of use\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(name: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/terms-of-use/terms-of-use.service.ts:28\n                        \n                    \n\n\n            \n                \n                        find specific terms of use\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateTermsOfUseInput: UpdateTermsOfUseInput)\n                \n            \n\n\n                    \n                        \n                            Defined in src/terms-of-use/terms-of-use.service.ts:37\n                        \n                    \n\n\n            \n                \n                        update terms of use\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateTermsOfUseInput\n                                            \n                                                            UpdateTermsOfUseInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { UpdateTermsOfUseInput } from './dto/update-terms-of-use.input';\nimport { Model, Types } from 'mongoose';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { TermsOfUse } from './entities/terms-of-use.entity';\n\n@Injectable()\nexport class TermsOfUseService {\n  constructor(\n    @InjectModel(TermsOfUse.name)\n    private readonly termsOfUseModel: Model,\n  ) {}\n\n  // create(createTermsOfUseInput: CreateTermsOfUseInput) {\n  //   return this.termsOfUseModel.create(createTermsOfUseInput);\n  // }\n\n  /**\n   * find all terms of use\n   */\n  findAll() {\n    return this.termsOfUseModel.find().lean();\n  }\n\n  /**\n   * find specific terms of use\n   */\n  findOne(name: string) {\n    return this.termsOfUseModel\n      .findOneAndUpdate({ name: name }, { name }, { new: true, upsert: true })\n      .lean();\n  }\n\n  /**\n   * update terms of use\n   */\n  update(id: string, updateTermsOfUseInput: UpdateTermsOfUseInput) {\n    delete updateTermsOfUseInput['_id'];\n    return this.termsOfUseModel\n      .findOneAndUpdate(\n        { _id: id },\n        { ...updateTermsOfUseInput },\n        { new: true },\n      )\n      .lean();\n  }\n\n  /**\n   * @ignore\n   */\n  remove(id: number) {\n    return `This action removes a #${id} termsOfUse`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TicketCategoriesModule.html":{"url":"modules/TicketCategoriesModule.html","title":"module - TicketCategoriesModule","body":"\n                   \n\n\n\n\n    Modules\n    TicketCategoriesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TicketCategoriesModule\n\n\n\ncluster_TicketCategoriesModule_providers\n\n\n\n\nTicketCategoriesService\n\nTicketCategoriesService\n\n\n\nTicketCategoriesModule\n\nTicketCategoriesModule\n\nTicketCategoriesModule -->\n\nTicketCategoriesService->TicketCategoriesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/help-desk/categories/categories.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TicketCategoriesService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TicketCategoriesService } from './categories.service';\nimport { CategoriesResolver } from './categories.resolver';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport {\n  TicketCategory,\n  TicketCategorySchema,\n} from './entities/category.entity';\n\n@Module({\n  providers: [CategoriesResolver, TicketCategoriesService],\n  imports: [\n    MongooseModule.forFeature([\n      { name: TicketCategory.name, schema: TicketCategorySchema },\n    ]),\n  ],\n})\nexport class TicketCategoriesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TicketCategoriesService.html":{"url":"injectables/TicketCategoriesService.html","title":"injectable - TicketCategoriesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TicketCategoriesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/help-desk/categories/categories.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(ticketCategoryModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/help-desk/categories/categories.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ticketCategoryModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createCategoryInput: CreateCategoryInput)\n                \n            \n\n\n                    \n                        \n                            Defined in src/help-desk/categories/categories.service.ts:25\n                        \n                    \n\n\n            \n                \n                        create category for help desk\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createCategoryInput\n                                            \n                                                        CreateCategoryInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/help-desk/categories/categories.service.ts:44\n                        \n                    \n\n\n            \n                \n                        find all category for help desk\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/help-desk/categories/categories.service.ts:51\n                        \n                    \n\n\n            \n                \n                        find category by id\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/help-desk/categories/categories.service.ts:94\n                        \n                    \n\n\n            \n                \n                        soft delete category for help desk\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateCategoryInput: UpdateCategoryInput)\n                \n            \n\n\n                    \n                        \n                            Defined in src/help-desk/categories/categories.service.ts:67\n                        \n                    \n\n\n            \n                \n                        update category for help desk\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateCategoryInput\n                                            \n                                                        UpdateCategoryInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(TicketCategoriesService.name)\n                    \n                \n                    \n                        \n                                Defined in src/help-desk/categories/categories.service.ts:20\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  Logger,\n  InternalServerErrorException,\n} from '@nestjs/common';\nimport { CreateCategoryInput } from './dto/create-category.input';\nimport { UpdateCategoryInput } from './dto/update-category.input';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { TicketCategory } from './entities/category.entity';\nimport { Model } from 'mongoose';\nimport { NotFoundException } from '@nestjs/common';\n\n@Injectable()\nexport class TicketCategoriesService {\n  constructor(\n    @InjectModel(TicketCategory.name)\n    private readonly ticketCategoryModel: Model,\n  ) {}\n\n  _logger = new Logger(TicketCategoriesService.name);\n\n  /**\n   * create category for help desk\n   */\n  async create(\n    createCategoryInput: CreateCategoryInput,\n  ): Promise {\n    try {\n      const ans = await this.ticketCategoryModel.create({\n        CreateCategoryInput,\n      });\n      return ans.toObject();\n    } catch (error) {\n      this._logger.error(\n        `Error creating ticketcategory ${createCategoryInput} - error: ${error}`,\n      );\n      throw new InternalServerErrorException(`Check logs`);\n    }\n  }\n\n  /**\n   * find all category for help desk\n   */\n  findAll() {\n    return this.ticketCategoryModel.find({});\n  }\n\n  /**\n   * find category by id\n   */\n  async findOne(id: string): Promise {\n    const category = await this.ticketCategoryModel.findOne({\n      where: {\n        _id: id,\n      },\n    });\n    if (!category) {\n      throw new NotFoundException(`Ticket Category whit id: ${id} not found`);\n    }\n\n    return category.toObject();\n  }\n\n  /**\n   * update category for help desk\n   */\n  async update(\n    id: string,\n    updateCategoryInput: UpdateCategoryInput,\n  ): Promise {\n    try {\n      await this.findOne(id);\n\n      delete updateCategoryInput['_id'];\n      const updatedNotification = await this.ticketCategoryModel\n        .findOneAndUpdate(\n          { _id: id },\n          { ...updateCategoryInput },\n          { new: true },\n        )\n        .lean();\n\n      return updatedNotification;\n    } catch (error) {\n      this._logger.error(\n        `Error updating ticket category  ${updateCategoryInput} ${error}`,\n      );\n    }\n  }\n\n  /**\n   * soft delete category for help desk\n   */\n  async remove(id: string): Promise {\n    try {\n      const updatedType = await this.ticketCategoryModel\n        .findOneAndUpdate({ _id: id }, { isDeleted: true }, { new: true })\n        .lean();\n      return updatedType;\n    } catch (error) {\n      this._logger.error(`Error removing ticket category  ${id} ${error}`);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TicketCategory.html":{"url":"classes/TicketCategory.html","title":"class - TicketCategory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TicketCategory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/help-desk/categories/entities/category.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                category of help desk doc\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                _id\n                            \n                            \n                                    \n                                    \n                                color\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                    \n                                isDeleted\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/help-desk/categories/entities/category.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        color\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/help-desk/categories/entities/category.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/help-desk/categories/entities/category.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/help-desk/categories/entities/category.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({required: true, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/help-desk/categories/entities/category.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/help-desk/categories/entities/category.entity.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ObjectType, Field, ID } from '@nestjs/graphql';\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\n/**\n * category of help desk doc\n */\n@Schema({ timestamps: true })\n@ObjectType()\nexport class TicketCategory {\n  @Field(() => ID)\n  _id: string;\n\n  @Field(() => String)\n  @Prop({ required: true, unique: true })\n  name: string;\n\n  @Field(() => String)\n  @Prop({ required: true })\n  color: string;\n\n  @Field(() => Boolean)\n  @Prop({ default: false })\n  isDeleted: boolean;\n\n  @Field(() => Date)\n  createdAt: Date;\n\n  @Field(() => Date)\n  updatedAt: Date;\n}\n/**\n * @ignore\n */\nexport const TicketCategorySchema =\n  SchemaFactory.createForClass(TicketCategory);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TicketChild.html":{"url":"classes/TicketChild.html","title":"class - TicketChild","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TicketChild\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/help-desk/entities/help-desk.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                answer to post\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                answerBy\n                            \n                            \n                                answerById\n                            \n                            \n                                attachment\n                            \n                            \n                                body\n                            \n                            \n                                isResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        answerBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/help-desk/entities/help-desk.entity.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        answerById\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/help-desk/entities/help-desk.entity.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        attachment\n                        \n                    \n                \n            \n                \n                    \n                        Type :     IFileUpload[]\n\n                    \n                \n                    \n                        \n                                Defined in src/help-desk/entities/help-desk.entity.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        body\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/help-desk/entities/help-desk.entity.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isResponse\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/help-desk/entities/help-desk.entity.ts:65\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ObjectType, Field, Int, ID } from '@nestjs/graphql';\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { TicketEnum } from '../enum/ticket-status.enum';\nimport { TicketCategory } from '../enum/ticket-category.enum';\nimport { GraphQLJSONObject } from 'graphql-scalars';\nimport { SchemaTypes } from 'mongoose';\nimport { IFileUpload } from 'src/shared/models/file';\n/**\n * help desk docs\n */\n@Schema({ timestamps: true })\n@ObjectType()\nexport class HelpDeskTicket {\n  @Field(() => ID)\n  _id: string;\n\n  @Field(() => String)\n  @Prop({ required: true })\n  title: string;\n\n  @Prop({\n    type: String,\n    enum: TicketCategory,\n    default: TicketCategory.support,\n  })\n  @Field(() => String)\n  category: TicketCategory;\n\n  @Prop({\n    type: String,\n    enum: TicketEnum,\n    default: TicketEnum.Open,\n  })\n  @Field(() => String)\n  status: TicketEnum;\n\n  @Field(() => [GraphQLJSONObject])\n  @Prop({ type: [{ type: SchemaTypes.Mixed }] })\n  childs: TicketChild[];\n\n  @Field(() => String)\n  @Prop({ required: true })\n  startupId: string;\n\n  @Field(() => String)\n  @Prop({ required: true })\n  startupName: string;\n\n  @Field(() => Boolean)\n  @Prop({ default: false })\n  isDeleted: boolean;\n\n  @Field(() => Date)\n  createdAt: Date;\n\n  @Field(() => Date)\n  updatedAt: Date;\n}\n/**\n * answer to post\n */\nexport class TicketChild {\n  body: string;\n  attachment: IFileUpload[];\n  isResponse: boolean;\n  answerBy: string;\n  answerById: string;\n}\n/**\n * @ignore\n */\nexport const HelpDeskTicketSchema =\n  SchemaFactory.createForClass(HelpDeskTicket);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TypesEvent.html":{"url":"classes/TypesEvent.html","title":"class - TypesEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TypesEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/events/types-events/entities/types-event.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                types of events dynamic\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                _id\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                expertFocus\n                            \n                            \n                                    \n                                    \n                                extra_options\n                            \n                            \n                                    \n                                    \n                                isDeleted\n                            \n                            \n                                    \n                                    \n                                isSchedulable\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                scheduleUrl\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/types-events/entities/types-event.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/types-events/entities/types-event.entity.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({default: ''})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/types-events/entities/types-event.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        expertFocus\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/types-events/entities/types-event.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        extra_options\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/types-events/entities/types-event.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/types-events/entities/types-event.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        isSchedulable\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/types-events/entities/types-event.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/types-events/entities/types-event.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        scheduleUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({default: ''})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/types-events/entities/types-event.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/types-events/entities/types-event.entity.ts:46\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ObjectType, Field, ID } from '@nestjs/graphql';\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { GraphQLJSONObject } from 'graphql-scalars';\nimport { SchemaTypes, Types, Document } from 'mongoose';\n/**\n * types of events dynamic\n */\n@Schema({ timestamps: true })\n@ObjectType()\nexport class TypesEvent {\n  @Field(() => ID)\n  _id: string;\n\n  @Field(() => String)\n  @Prop({ required: true })\n  name: string;\n\n  @Field(() => GraphQLJSONObject)\n  @Prop({ type: SchemaTypes.Mixed })\n  extra_options: any;\n\n  @Field(() => Boolean)\n  @Prop({ default: false })\n  expertFocus: boolean;\n\n  @Field(() => Boolean)\n  @Prop({ default: false })\n  isSchedulable: boolean;\n\n  @Field(() => String)\n  @Prop({ default: '' })\n  scheduleUrl: string;\n\n  @Field(() => String)\n  @Prop({ default: '' })\n  description: string;\n\n  @Field(() => Boolean)\n  @Prop({ default: false })\n  isDeleted: boolean;\n\n  @Field(() => Date)\n  createdAt: Date;\n\n  @Field(() => Date)\n  updatedAt: Date;\n}\n/**\n * @ignore\n */\nexport const TypesEventSchema = SchemaFactory.createForClass(TypesEvent);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TypesEventsModule.html":{"url":"modules/TypesEventsModule.html","title":"module - TypesEventsModule","body":"\n                   \n\n\n\n\n    Modules\n    TypesEventsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TypesEventsModule\n\n\n\ncluster_TypesEventsModule_exports\n\n\n\ncluster_TypesEventsModule_imports\n\n\n\ncluster_TypesEventsModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nTypesEventsModule\n\nTypesEventsModule\n\nTypesEventsModule -->\n\nAuthModule->TypesEventsModule\n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nTypesEventsModule -->\n\nLoggerModule->TypesEventsModule\n\n\n\n\n\nTypesEventsService \n\nTypesEventsService \n\nTypesEventsService  -->\n\nTypesEventsModule->TypesEventsService \n\n\n\n\n\nTypesEventsService\n\nTypesEventsService\n\nTypesEventsModule -->\n\nTypesEventsService->TypesEventsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/events/types-events/types-events.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TypesEventsService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            LoggerModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            TypesEventsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { TypesEventsService } from './types-events.service';\nimport { TypesEventsResolver } from './types-events.resolver';\nimport { AuthModule } from 'src/auth/auth.module';\nimport { LoggerModule } from 'src/logger/logger.module';\nimport { TypesEvent, TypesEventSchema } from './entities/types-event.entity';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      { name: TypesEvent.name, schema: TypesEventSchema },\n    ]),\n    AuthModule,\n    LoggerModule,\n  ],\n\n  providers: [TypesEventsResolver, TypesEventsService],\n  exports: [TypesEventsService],\n})\nexport class TypesEventsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TypesEventsService.html":{"url":"injectables/TypesEventsService.html","title":"injectable - TypesEventsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TypesEventsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/events/types-events/types-events.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                    Async\n                                onModuleInit\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(typeEventModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/events/types-events/types-events.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        typeEventModel\n                                                  \n                                                        \n                                                                    Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createTypeEventInput: CreateTypesEventInput)\n                \n            \n\n\n                    \n                        \n                            Defined in src/events/types-events/types-events.service.ts:27\n                        \n                    \n\n\n            \n                \n                        create new type of event\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createTypeEventInput\n                                            \n                                                            CreateTypesEventInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/events/types-events/types-events.service.ts:34\n                        \n                    \n\n\n            \n                \n                        find all type of events\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/events/types-events/types-events.service.ts:41\n                        \n                    \n\n\n            \n                \n                        find type of event by id\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/events/types-events/types-events.service.ts:17\n                        \n                    \n\n\n            \n                \n                        initialize types of events in app\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/events/types-events/types-events.service.ts:59\n                        \n                    \n\n\n            \n                \n                        soft delete type of event\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateTypeEventInput: UpdateTypesEventInput)\n                \n            \n\n\n                    \n                        \n                            Defined in src/events/types-events/types-events.service.ts:48\n                        \n                    \n\n\n            \n                \n                        update type of event\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateTypeEventInput\n                                            \n                                                            UpdateTypesEventInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, OnModuleInit } from '@nestjs/common';\nimport { CreateTypesEventInput } from './dto/create-types-event.input';\nimport { UpdateTypesEventInput } from './dto/update-types-event.input';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { TypesEvent } from './entities/types-event.entity';\nimport { Model } from 'mongoose';\nimport { default_types_events } from './model/type-events.default';\n@Injectable()\nexport class TypesEventsService implements OnModuleInit {\n  constructor(\n    @InjectModel(TypesEvent.name)\n    private readonly typeEventModel: Model,\n  ) {}\n  /**\n   * initialize types of events in app\n   */\n  async onModuleInit() {\n    let types = await this.typeEventModel.find({});\n    if (types.length === 0) {\n      await this.typeEventModel.insertMany(default_types_events);\n    }\n  }\n\n  /**\n   * create new type of event\n   */\n  create(createTypeEventInput: CreateTypesEventInput) {\n    return this.typeEventModel.create(createTypeEventInput);\n  }\n\n  /**\n   * find all type of events\n   */\n  findAll() {\n    return this.typeEventModel.find({ isDeleted: false }).lean();\n  }\n\n  /**\n   * find type of event by id\n   */\n  findOne(id: string) {\n    return this.typeEventModel.findById(id).lean();\n  }\n\n  /**\n   * update type of event\n   */\n  async update(id: string, updateTypeEventInput: UpdateTypesEventInput) {\n    delete updateTypeEventInput['_id'];\n    const updatedType = await this.typeEventModel\n      .findOneAndUpdate({ _id: id }, { ...updateTypeEventInput }, { new: true })\n      .lean();\n    return updatedType;\n  }\n\n  /**\n   * soft delete type of event\n   */\n  async remove(id: string) {\n    const updatedType = await this.typeEventModel\n      .findOneAndUpdate({ _id: id }, { isDeleted: true }, { new: true })\n      .lean();\n    return updatedType;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TypesNotification.html":{"url":"classes/TypesNotification.html","title":"class - TypesNotification","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TypesNotification\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/notifications/types-notifications/entities/types-notification.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                type notification class\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                _id\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/notifications/types-notifications/entities/types-notification.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/notifications/types-notifications/entities/types-notification.entity.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ObjectType, Field, ID } from '@nestjs/graphql';\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\n/**\n * type notification class\n */\n@Schema()\n@ObjectType()\nexport class TypesNotification {\n  @Field(() => ID)\n  _id: string;\n\n  @Field(() => String)\n  @Prop({ required: true })\n  name: string;\n}\n/**\n * @ignore\n */\nexport const TypesNotificationSchema =\n  SchemaFactory.createForClass(TypesNotification);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TypesNotificationsModule.html":{"url":"modules/TypesNotificationsModule.html","title":"module - TypesNotificationsModule","body":"\n                   \n\n\n\n\n    Modules\n    TypesNotificationsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TypesNotificationsModule\n\n\n\ncluster_TypesNotificationsModule_providers\n\n\n\n\nTypesNotificationsService\n\nTypesNotificationsService\n\n\n\nTypesNotificationsModule\n\nTypesNotificationsModule\n\nTypesNotificationsModule -->\n\nTypesNotificationsService->TypesNotificationsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/notifications/types-notifications/types-notifications.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TypesNotificationsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypesNotificationsService } from './types-notifications.service';\nimport { TypesNotificationsResolver } from './types-notifications.resolver';\nimport { TypesNotification, TypesNotificationSchema } from './entities/types-notification.entity';\nimport { MongooseModule } from '@nestjs/mongoose';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      { name: TypesNotification.name, schema: TypesNotificationSchema },\n    ]),\n  ],\n  providers: [TypesNotificationsResolver, TypesNotificationsService],\n})\nexport class TypesNotificationsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TypesNotificationsService.html":{"url":"injectables/TypesNotificationsService.html","title":"injectable - TypesNotificationsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TypesNotificationsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/notifications/types-notifications/types-notifications.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getTypes\n                            \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(typesNotificationModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/notifications/types-notifications/types-notifications.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        typesNotificationModel\n                                                  \n                                                        \n                                                                    Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getTypes\n                        \n                    \n                \n            \n            \n                \n                        \n                    getTypes()\n                \n            \n\n\n                    \n                        \n                            Defined in src/notifications/types-notifications/types-notifications.service.ts:27\n                        \n                    \n\n\n            \n                \n                        get all types of notifications\n\n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/notifications/types-notifications/types-notifications.service.ts:17\n                        \n                    \n\n\n            \n                \n                        initialize types of notifications\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, OnModuleInit } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { TypesNotification } from './entities/types-notification.entity';\nimport { default_notification_types } from './model/types-notification.default';\n\n@Injectable()\nexport class TypesNotificationsService implements OnModuleInit {\n  constructor(\n    @InjectModel(TypesNotification.name)\n    private readonly typesNotificationModel: Model,\n  ) {}\n\n  /**\n   * initialize types of notifications\n   */\n  async onModuleInit() {\n    let types = await this.typesNotificationModel.find({});\n    if (types.length === 0) {\n      await this.typesNotificationModel.insertMany(default_notification_types);\n    }\n  }\n\n  /**\n   * get all types of notifications\n   */\n  async getTypes() {\n    return this.typesNotificationModel.find({}).lean();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateActaInput.html":{"url":"classes/UpdateActaInput.html","title":"class - UpdateActaInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateActaInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/events/acta/dto/update-acta.input.ts\n        \n\n\n            \n                Description\n            \n            \n                graphql input scheme\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                _id\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                closed\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                conclusions\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                date\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                extra_options\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                isDeleted\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                name\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                objective\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                solution\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                topics_covered\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/acta/dto/update-acta.input.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        closed\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/acta/dto/update-acta.input.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        conclusions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/acta/dto/update-acta.input.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/acta/dto/update-acta.input.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        extra_options\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/acta/dto/update-acta.input.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/acta/dto/update-acta.input.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/acta/dto/update-acta.input.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        objective\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/acta/dto/update-acta.input.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        solution\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/acta/dto/update-acta.input.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        topics_covered\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/acta/dto/update-acta.input.ts:32\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { InputType, Field, Int, PartialType, ID } from '@nestjs/graphql';\nimport { IsNotEmpty, IsOptional } from 'class-validator';\nimport { GraphQLJSONObject } from 'graphql-scalars';\nimport { CreateActaInput } from './create-acta.input';\n/**\n * graphql input scheme\n */\n@InputType()\nexport class UpdateActaInput extends PartialType(CreateActaInput) {\n  @Field(() => ID)\n  @IsNotEmpty()\n  _id: string;\n\n  @Field(() => String, { nullable: true })\n  @IsOptional()\n  name?: string;\n\n  @Field(() => String, { nullable: true })\n  @IsOptional()\n  objective?: string;\n\n  @Field(() => String, { nullable: true })\n  @IsOptional()\n  solution?: string;\n\n  @Field(() => Date, { nullable: true })\n  @IsOptional()\n  date?: Date;\n\n  @Field(() => String, { nullable: true })\n  @IsNotEmpty()\n  topics_covered?: string;\n\n  @Field(() => String, { nullable: true })\n  @IsNotEmpty()\n  conclusions?: string;\n\n  @Field(() => GraphQLJSONObject, { nullable: true })\n  @IsOptional()\n  extra_options?: Record;\n\n  @Field(() => Boolean, { nullable: true })\n  @IsOptional()\n  closed?: boolean;\n\n  @Field(() => Boolean, { nullable: true })\n  @IsOptional()\n  isDeleted?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateActivitiesConfigInput.html":{"url":"classes/UpdateActivitiesConfigInput.html","title":"class - UpdateActivitiesConfigInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateActivitiesConfigInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/activities-config/dto/update-activities-config.input.ts\n        \n\n\n            \n                Description\n            \n            \n                graphql input scheme\nonly updates the fields for limit, activities, assigned startups, experts, team coaches\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                _id\n                            \n                            \n                                    \n                                    \n                                    \n                                activities\n                            \n                            \n                                    \n                                    \n                                    \n                                experts\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                isDeleted\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                limit\n                            \n                            \n                                    \n                                    \n                                    \n                                startups\n                            \n                            \n                                    \n                                    \n                                    \n                                teamCoaches\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/activities-config/dto/update-activities-config.input.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        activities\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ActivitySetup[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@Type(undefined)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/activities-config/dto/update-activities-config.input.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        experts\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AssignSetup[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@Type(undefined)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/activities-config/dto/update-activities-config.input.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/activities-config/dto/update-activities-config.input.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/activities-config/dto/update-activities-config.input.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        startups\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AssignSetup[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@Type(undefined)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/activities-config/dto/update-activities-config.input.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        teamCoaches\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AssignSetup[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@Type(undefined)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/activities-config/dto/update-activities-config.input.ts:45\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsDefined, IsNotEmpty, IsOptional } from 'class-validator';\nimport { CreateActivitiesConfigInput } from './create-activities-config.input';\nimport { InputType, Field, Int, PartialType, ID } from '@nestjs/graphql';\nimport { IActivities, IAssign } from '../entities/activities-config.entity';\nimport { Type } from 'class-transformer';\n\n/**\n * graphql input scheme\n * only updates the fields for limit, activities, assigned startups, experts, team coaches\n */\n@InputType()\nexport class UpdateActivitiesConfigInput extends PartialType(\n  CreateActivitiesConfigInput,\n) {\n  @Field(() => ID)\n  @IsNotEmpty()\n  _id: string;\n\n  @Field(() => Int, { nullable: true })\n  @IsOptional()\n  limit?: number;\n\n  @Field(() => Boolean, { nullable: true })\n  @IsOptional()\n  isDeleted?: boolean;\n\n  @Field(() => [ActivitySetup], { nullable: true })\n  @Type(() => ActivitySetup)\n  @IsOptional()\n  activities: ActivitySetup[];\n\n  @Field(() => [AssignSetup], { nullable: true })\n  @Type(() => AssignSetup)\n  @IsOptional()\n  startups: AssignSetup[];\n\n  @Field(() => [AssignSetup], { nullable: true })\n  @Type(() => AssignSetup)\n  @IsOptional()\n  experts: AssignSetup[];\n\n  @Field(() => [AssignSetup], { nullable: true })\n  @Type(() => AssignSetup)\n  @IsOptional()\n  teamCoaches: AssignSetup[];\n}\n/**\n * @ignore\n */\n@InputType()\nclass ActivitySetup implements IActivities {\n  @Field(() => String)\n  @IsDefined()\n  id: string;\n\n  @Field(() => Int)\n  @IsDefined()\n  limit: number;\n}\n/**\n * @ignore\n */\n@InputType()\nclass AssignSetup implements IAssign {\n  @Field(() => String)\n  @IsDefined()\n  entityID: string;\n\n  @Field(() => Int)\n  @IsDefined()\n  limit: number;\n\n  @Field(() => String)\n  @IsDefined()\n  activityID: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateAnnouncementInput.html":{"url":"classes/UpdateAnnouncementInput.html","title":"class - UpdateAnnouncementInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateAnnouncementInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/announcements/dto/update-announcement.input.ts\n        \n\n\n            \n                Description\n            \n            \n                graphql input scheme\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                _id\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                description\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                endAt\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                exitText\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                landing\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                name\n                            \n                            \n                                    Optional\n                                published\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                redirectLink\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                startAt\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                thumbnail\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/announcements/dto/update-announcement.input.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/announcements/dto/update-announcement.input.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        endAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsDate()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/announcements/dto/update-announcement.input.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        exitText\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/announcements/dto/update-announcement.input.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        landing\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/announcements/dto/update-announcement.input.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/announcements/dto/update-announcement.input.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        published\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/announcements/dto/update-announcement.input.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        redirectLink\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/announcements/dto/update-announcement.input.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        startAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsDate()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/announcements/dto/update-announcement.input.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        thumbnail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/announcements/dto/update-announcement.input.ts:38\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsDate, IsNotEmpty, IsString } from 'class-validator';\nimport { CreateAnnouncementInput } from './create-announcement.input';\nimport { InputType, Field, PartialType, ID } from '@nestjs/graphql';\n\n/**\n * graphql input scheme\n */\n@InputType()\nexport class UpdateAnnouncementInput extends PartialType(CreateAnnouncementInput) {\n  @Field(() => ID)\n  @IsNotEmpty()\n  _id: string;\n\n  @Field(() => String, { nullable: true })\n  @IsString()\n  name?: string;\n\n  @Field(() => String, { nullable: true })\n  @IsString()\n  description?: string;\n\n  @Field(() => String, { nullable: true })\n  @IsString()\n  landing?: string;\n  \n  @Field(() => String, { nullable: true })\n  @IsString()\n  redirectLink?: string;\n  \n  @Field(() => String, { nullable: true })\n  @IsString()\n  exitText?: string;\n\n  published?: boolean;\n\n  @Field(() => String, { nullable: true })\n  @IsString()\n  thumbnail?: string;\n\n  @Field(() => Date, { nullable: true })\n  @IsDate()\n  startAt?: Date;\n\n  @Field(() => Date, { nullable: true })\n  @IsDate()\n  endAt?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateApplicantInput.html":{"url":"classes/UpdateApplicantInput.html","title":"class - UpdateApplicantInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateApplicantInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/applicant/dto/update-applicant.input.ts\n        \n\n\n            \n                Description\n            \n            \n                graphql input scheme\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/applicant/dto/update-applicant.input.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CreateApplicantInput } from './create-applicant.input';\nimport { InputType, Field, Int, PartialType } from '@nestjs/graphql';\n\n/**\n * graphql input scheme\n */\n@InputType()\nexport class UpdateApplicantInput extends PartialType(CreateApplicantInput) {\n  @Field(() => Int)\n  id: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateApplicantStateInput.html":{"url":"classes/UpdateApplicantStateInput.html","title":"class - UpdateApplicantStateInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateApplicantStateInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/applicant/dto/update-applicant-state.input.ts\n        \n\n\n            \n                Description\n            \n            \n                graphql input scheme\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                documents\n                            \n                            \n                                    \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                notes\n                            \n                            \n                                    \n                                    \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        documents\n                        \n                    \n                \n            \n                \n                    \n                        Type :     AttachmentSubmit[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@ValidateNested()@IsArray()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/applicant/dto/update-applicant-state.input.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/applicant/dto/update-applicant-state.input.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        notes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/applicant/dto/update-applicant-state.input.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ApplicationStates\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsEnum(ApplicationStates)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/applicant/dto/update-applicant-state.input.ts:34\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { InputType, Field } from '@nestjs/graphql';\nimport {\n  IsArray,\n  IsEnum,\n  IsNotEmpty,\n  IsString,\n  ValidateNested,\n} from 'class-validator';\nimport { ApplicationStates } from '../enums/application-states.enum';\nimport { IAttachment } from '../entities/applicant.entity';\nimport { Type } from 'class-transformer';\n\n/**\n * graphql input scheme\n */\n@InputType()\nexport class UpdateApplicantStateInput {\n  @Field(() => String)\n  @IsString()\n  id: string;\n\n  @Field(() => String)\n  @IsString()\n  notes: string;\n\n  @Field(() => [AttachmentSubmit])\n  @ValidateNested()\n  @IsArray()\n  @Type(() => AttachmentSubmit)\n  documents: AttachmentSubmit[];\n\n  @Field(() => ApplicationStates)\n  @IsEnum(ApplicationStates)\n  type: ApplicationStates;\n}\n\n/**\n * graphql input scheme\n */\n@InputType()\nclass AttachmentSubmit implements IAttachment {\n  @Field(() => String, { description: 'Name of the attachment file.' })\n  @IsString()\n  name: string;\n\n  @Field(() => String, { description: 'Url for the attachment file.' })\n  @IsString()\n  url: string;\n\n  @Field(() => String, { description: 'Unique key used for the file.' })\n  @IsString()\n  key: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateConfigEvaluationInput.html":{"url":"classes/UpdateConfigEvaluationInput.html","title":"class - UpdateConfigEvaluationInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateConfigEvaluationInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/evaluations/config-evaluations/dto/update-config-evaluation.input.ts\n        \n\n\n            \n                Description\n            \n            \n                graphql input scheme\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                _id\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                description\n                            \n                            \n                                    \n                                    \n                                endAt\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                isDeleted\n                            \n                            \n                                    \n                                    \n                                startAt\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/evaluations/config-evaluations/dto/update-config-evaluation.input.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/evaluations/config-evaluations/dto/update-config-evaluation.input.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        endAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/evaluations/config-evaluations/dto/update-config-evaluation.input.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/evaluations/config-evaluations/dto/update-config-evaluation.input.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        startAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/evaluations/config-evaluations/dto/update-config-evaluation.input.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/evaluations/config-evaluations/dto/update-config-evaluation.input.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsOptional } from 'class-validator';\nimport { CreateConfigEvaluationInput } from './create-config-evaluation.input';\nimport { InputType, Field, Int, PartialType, ID } from '@nestjs/graphql';\n/**\n * graphql input scheme\n */\n@InputType()\nexport class UpdateConfigEvaluationInput extends PartialType(\n  CreateConfigEvaluationInput,\n) {\n  @Field(() => ID)\n  @IsNotEmpty()\n  _id: string;\n\n  @Field(() => String, { nullable: true })\n  @IsOptional()\n  title?: string;\n\n  @Field(() => String, { nullable: true })\n  @IsOptional()\n  description?: string;\n\n  @Field(() => Date, { nullable: true })\n  @IsOptional()\n  startAt: Date;\n\n  @Field(() => Date, { nullable: true })\n  @IsOptional()\n  endAt: Date;\n\n  @Field(() => Boolean, { nullable: true })\n  @IsOptional()\n  isDeleted?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateConfigurationAppInput.html":{"url":"classes/UpdateConfigurationAppInput.html","title":"class - UpdateConfigurationAppInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateConfigurationAppInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/configuration-app/dto/update-configuration-app.input.ts\n        \n\n\n            \n                Description\n            \n            \n                graphql scheme\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                _id\n                            \n                            \n                                    \n                                    \n                                benefactors\n                            \n                            \n                                    \n                                    \n                                contentOfInterest\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                dashboard\n                            \n                            \n                                    \n                                    \n                                services\n                            \n                            \n                                    \n                                    \n                                verticals\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/configuration-app/dto/update-configuration-app.input.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        benefactors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/configuration-app/dto/update-configuration-app.input.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        contentOfInterest\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/configuration-app/dto/update-configuration-app.input.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        dashboard\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/configuration-app/dto/update-configuration-app.input.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        services\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/configuration-app/dto/update-configuration-app.input.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        verticals\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/configuration-app/dto/update-configuration-app.input.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { InputType, Field, Int, PartialType, ID } from '@nestjs/graphql';\nimport { IsNotEmpty, IsOptional } from 'class-validator';\nimport { GraphQLJSONObject } from 'graphql-scalars';\n\n/**\n * graphql scheme\n */\n@InputType()\nexport class UpdateConfigurationAppInput {\n  @Field(() => ID)\n  @IsNotEmpty()\n  _id: string;\n\n  @Field(() => String, { nullable: true })\n  @IsOptional()\n  dashboard?: string;\n\n  @Field(() => [GraphQLJSONObject], { nullable: true })\n  @IsOptional()\n  verticals: Record[];\n\n  @Field(() => [GraphQLJSONObject], { nullable: true })\n  @IsOptional()\n  services: Record[];\n\n  @Field(() => [GraphQLJSONObject], { nullable: true })\n  @IsOptional()\n  benefactors: Record[];\n\n  @Field(() => [GraphQLJSONObject], { nullable: true })\n  @IsOptional()\n  contentOfInterest: Record[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateContentInput.html":{"url":"classes/UpdateContentInput.html","title":"class - UpdateContentInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateContentInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/content/dto/update-content.input.ts\n        \n\n\n            \n                Description\n            \n            \n                graphql input scheme\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                _id\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                content\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                extra_options\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                hide\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                isDeleted\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/content/dto/update-content.input.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/content/dto/update-content.input.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        extra_options\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/content/dto/update-content.input.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        hide\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/content/dto/update-content.input.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/content/dto/update-content.input.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsOptional } from 'class-validator';\nimport { CreateContentInput } from './create-content.input';\nimport { InputType, Field, Int, PartialType, ID } from '@nestjs/graphql';\nimport { GraphQLJSONObject } from 'graphql-scalars';\n/**\n * graphql input scheme\n */\n@InputType()\nexport class UpdateContentInput extends PartialType(CreateContentInput) {\n  @Field(() => ID)\n  @IsNotEmpty()\n  _id: string;\n\n  @Field(() => Boolean, { nullable: true })\n  @IsOptional()\n  hide?: string;\n\n  @Field(() => String, { nullable: true })\n  @IsOptional()\n  content?: string;\n\n  @Field(() => GraphQLJSONObject, { nullable: true })\n  @IsOptional()\n  extra_options?: Record;\n\n  @Field(() => Boolean, { nullable: true })\n  @IsOptional()\n  isDeleted?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateEventInput.html":{"url":"classes/UpdateEventInput.html","title":"class - UpdateEventInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateEventInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/events/dto/update-event.input.ts\n        \n\n\n            \n                Description\n            \n            \n                graphql input scheme\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                _id\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                description\n                            \n                            \n                                    \n                                    \n                                endAt\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                experts\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                extra_options\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                isCanceled\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                isDeleted\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                name\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                participants\n                            \n                            \n                                    \n                                    \n                                startAt\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                teamCoaches\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/update-event.input.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/update-event.input.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        endAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/update-event.input.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        experts\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ExpertEventSubmit[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/update-event.input.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        extra_options\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/update-event.input.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        isCanceled\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/update-event.input.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/update-event.input.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/update-event.input.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        participants\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ParticipantEventSubmit[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/update-event.input.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        startAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/update-event.input.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        teamCoaches\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TeamCoachSubmit[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/dto/update-event.input.ts:53\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  CreateEventInput,\n  ExpertEventSubmit,\n  ParticipantEventSubmit,\n  TeamCoachSubmit,\n} from './create-event.input';\nimport { InputType, Field, Int, PartialType, ID } from '@nestjs/graphql';\nimport { IsNotEmpty, IsOptional } from 'class-validator';\nimport { GraphQLJSONObject } from 'graphql-scalars';\n/**\n * graphql input scheme\n */\n@InputType()\nexport class UpdateEventInput extends PartialType(CreateEventInput) {\n  @Field(() => ID)\n  @IsNotEmpty()\n  _id: string;\n\n  @Field(() => String, { nullable: true })\n  @IsOptional()\n  name?: string;\n\n  @Field(() => String, { nullable: true })\n  @IsOptional()\n  description?: string;\n\n  @Field(() => GraphQLJSONObject, { nullable: true })\n  @IsOptional()\n  extra_options?: Record;\n\n  @Field(() => Date, { nullable: true })\n  @IsOptional()\n  startAt: Date;\n\n  @Field(() => Date, { nullable: true })\n  @IsOptional()\n  endAt: Date;\n\n  @Field(() => Boolean, { nullable: true })\n  @IsOptional()\n  isDeleted?: boolean;\n\n  @Field(() => Boolean, { nullable: true })\n  @IsOptional()\n  isCanceled?: boolean;\n\n  @Field(() => [ExpertEventSubmit], { nullable: true })\n  @IsOptional()\n  experts?: ExpertEventSubmit[];\n\n  @Field(() => [TeamCoachSubmit], { nullable: true })\n  @IsOptional()\n  teamCoaches?: TeamCoachSubmit[];\n\n  @Field(() => [ParticipantEventSubmit], { nullable: true })\n  @IsOptional()\n  participants?: ParticipantEventSubmit[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateExpertInput.html":{"url":"classes/UpdateExpertInput.html","title":"class - UpdateExpertInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateExpertInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/expert/args/update-expert.input.ts\n        \n\n\n            \n                Description\n            \n            \n                graphql args input\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                _id\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                accountId\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                calendlyLink\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/expert/args/update-expert.input.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        accountId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/expert/args/update-expert.input.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        calendlyLink\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/expert/args/update-expert.input.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsOptional } from 'class-validator';\nimport { InputType, Field, ID } from '@nestjs/graphql';\n/**\n * graphql args input\n */\n@InputType()\nexport class UpdateExpertInput {\n  @Field(() => ID)\n  @IsNotEmpty()\n  _id: string;\n\n  @Field(() => String, { nullable: true })\n  @IsOptional()\n  accountId?: string;\n\n  @Field(() => String, { nullable: true })\n  @IsOptional()\n  calendlyLink?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateFormInput.html":{"url":"classes/UpdateFormInput.html","title":"class - UpdateFormInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateFormInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/forms/form/dto/update-form.input.ts\n        \n\n\n            \n                Description\n            \n            \n                graphql input\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                _id\n                            \n                            \n                                    \n                                    Optional\n                                deletedAt\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                description\n                            \n                            \n                                    \n                                    \n                                    \n                                documents\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                formJson\n                            \n                            \n                                    \n                                    \n                                keys\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                name\n                            \n                            \n                                    \n                                    \n                                tags\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                target\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/forms/form/dto/update-form.input.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/forms/form/dto/update-form.input.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/forms/form/dto/update-form.input.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/forms/form/dto/update-form.input.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        documents\n                        \n                    \n                \n            \n                \n                    \n                        Type :         InputFormDocument[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/forms/form/dto/update-form.input.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        formJson\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/forms/form/dto/update-form.input.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        keys\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/forms/form/dto/update-form.input.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/forms/form/dto/update-form.input.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        tags\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/forms/form/dto/update-form.input.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        target\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormCollections\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsEnum(FormCollections)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/forms/form/dto/update-form.input.ts:36\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { InputType, Field, ID } from '@nestjs/graphql';\nimport {\n  IsDefined,\n  IsEmpty,\n  IsEnum,\n  IsNotEmpty,\n  IsOptional,\n  ValidateNested,\n} from 'class-validator';\nimport { FormCollections } from '../enums/form-collections';\nimport { IFormDocument } from '../entities/form.entity';\nimport { Type } from 'class-transformer';\n/**\n * graphql input\n */\n@InputType()\nexport class UpdateFormInput {\n  @Field(() => ID)\n  @IsNotEmpty()\n  _id: string;\n\n  @Field(() => String, { nullable: true })\n  @IsOptional()\n  name?: string;\n\n  @Field(() => String, { nullable: true })\n  @IsOptional()\n  description?: string;\n\n  @Field(() => String, { nullable: true })\n  @IsOptional()\n  formJson?: string;\n\n  @Field(() => FormCollections, { nullable: true })\n  @IsEnum(FormCollections)\n  target?: FormCollections;\n\n  @Field(() => [InputFormDocument], { nullable: true })\n  @ValidateNested({ each: true })\n  @Type(() => InputFormDocument)\n  documents: InputFormDocument[];\n\n  @Field(() => [String], { nullable: true })\n  @IsOptional()\n  keys: string[];\n\n  @IsEmpty()\n  deletedAt?: Date;\n\n  @IsEmpty()\n  deletedBy: string;\n\n  @Field(() => [String], { nullable: true })\n  @IsOptional()\n  tags: string[];\n}\n/**\n * @ignore\n */\n@InputType()\nclass InputFormDocument implements IFormDocument {\n  @Field(() => String)\n  @IsDefined()\n  name: string;\n\n  @Field(() => String)\n  @IsDefined()\n  observation: string;\n\n  @Field(() => Boolean)\n  @IsDefined()\n  optional: boolean;\n\n  @Field(() => String)\n  @IsDefined()\n  key: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateFormTagInput.html":{"url":"classes/UpdateFormTagInput.html","title":"class - UpdateFormTagInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateFormTagInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/forms/form-tag/dto/update-form-tag.input.ts\n        \n\n\n            \n                Description\n            \n            \n                graphql inputs\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                _id\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/forms/form-tag/dto/update-form-tag.input.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/forms/form-tag/dto/update-form-tag.input.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { InputType, Field, ID } from '@nestjs/graphql';\nimport { IsNotEmpty } from 'class-validator';\n/**\n * graphql inputs\n */\n@InputType()\nexport class UpdateFormTagInput {\n  @Field(() => ID)\n  @IsNotEmpty()\n  _id: string;\n\n  @Field(() => String)\n  @IsNotEmpty()\n  name: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateHelpDeskInput.html":{"url":"classes/UpdateHelpDeskInput.html","title":"class - UpdateHelpDeskInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateHelpDeskInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/help-desk/dto/update-help-desk.input.ts\n        \n\n\n            \n                Description\n            \n            \n                graphql input scheme\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                _id\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                childs\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/help-desk/dto/update-help-desk.input.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        childs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TicketChild[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/help-desk/dto/update-help-desk.input.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsEnum(TicketEnum)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/help-desk/dto/update-help-desk.input.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import GraphQLJSON from 'graphql-type-json';\nimport { CreateHelpDeskInput } from './create-help-desk.input';\nimport { InputType, Field, Int, PartialType, ID } from '@nestjs/graphql';\nimport { IsEnum, IsNotEmpty, IsOptional } from 'class-validator';\nimport { TicketEnum } from '../enum/ticket-status.enum';\nimport { TicketChild } from '../entities/help-desk.entity';\n/**\n * graphql input scheme\n */\n@InputType()\nexport class UpdateHelpDeskInput extends PartialType(CreateHelpDeskInput) {\n  @Field(() => ID)\n  @IsNotEmpty()\n  _id: string;\n\n  @Field(() => [GraphQLJSON], { nullable: true })\n  @IsOptional()\n  childs?: TicketChild[];\n\n  @Field(() => String, { nullable: true })\n  @IsEnum(TicketEnum)\n  @IsOptional()\n  status?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateIntegrationInput.html":{"url":"classes/UpdateIntegrationInput.html","title":"class - UpdateIntegrationInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateIntegrationInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/integrations/dto/update-integration.input.ts\n        \n\n\n            \n                Description\n            \n            \n                graphql input scheme\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/integrations/dto/update-integration.input.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CreateIntegrationInput } from './create-integration.input';\nimport { InputType, Field, Int, PartialType } from '@nestjs/graphql';\n/**\n * graphql input scheme\n */\n@InputType()\nexport class UpdateIntegrationInput extends PartialType(\n  CreateIntegrationInput,\n) {\n  @Field(() => Int)\n  id: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateNotificationInput.html":{"url":"classes/UpdateNotificationInput.html","title":"class - UpdateNotificationInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateNotificationInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/notifications/dto/update-notification.input.ts\n        \n\n\n            \n                Description\n            \n            \n                graphql input scheme\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                _id\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                isDeleted\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                state\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/notifications/dto/update-notification.input.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/notifications/dto/update-notification.input.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NotificationStates\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/notifications/dto/update-notification.input.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsBoolean, IsString } from 'class-validator';\nimport { CreateNotificationInput } from './create-notification.input';\nimport { InputType, Field, Int, PartialType, ID } from '@nestjs/graphql';\nimport { NotificationStates } from '../enum/notification-states.enum';\nimport { IsNotEmpty, IsOptional } from 'class-validator';\n/**\n * graphql input scheme\n */\n@InputType()\nexport class UpdateNotificationInput extends PartialType(\n  CreateNotificationInput,\n) {\n  @Field(() => ID)\n  @IsNotEmpty()\n  _id: string;\n\n  @Field(() => String)\n  @IsOptional()\n  state?: NotificationStates;\n\n  @Field(() => Boolean, { nullable: true })\n  @IsOptional()\n  isDeleted?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateParticipationEventInput.html":{"url":"classes/UpdateParticipationEventInput.html","title":"class - UpdateParticipationEventInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateParticipationEventInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/events/participation-events/dto/update-participation-event.input.ts\n        \n\n\n            \n                Description\n            \n            \n                graphql input scheme\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                _id\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                metadata\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/participation-events/dto/update-participation-event.input.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        metadata\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/participation-events/dto/update-participation-event.input.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CreateParticipationEventInput } from './create-participation-event.input';\nimport { InputType, Field, Int, PartialType, ID } from '@nestjs/graphql';\nimport { IsNotEmpty, IsOptional } from 'class-validator';\nimport { GraphQLJSONObject } from 'graphql-scalars';\n/**\n * graphql input scheme\n */\n@InputType()\nexport class UpdateParticipationEventInput extends PartialType(\n  CreateParticipationEventInput,\n) {\n  @Field(() => ID)\n  @IsNotEmpty()\n  _id: string;\n\n  @Field(() => GraphQLJSONObject, { nullable: true })\n  @IsOptional()\n  metadata?: Record;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdatePhaseInput.html":{"url":"classes/UpdatePhaseInput.html","title":"class - UpdatePhaseInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatePhaseInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/phases/dto/update-phase.input.ts\n        \n\n\n            \n                Description\n            \n            \n                graphql input scheme\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                _id\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                description\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                endAt\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                index\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                landing\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                name\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                startAt\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                thumbnail\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/phases/dto/update-phase.input.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/phases/dto/update-phase.input.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        endAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/phases/dto/update-phase.input.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        index\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/phases/dto/update-phase.input.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        landing\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/phases/dto/update-phase.input.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/phases/dto/update-phase.input.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        startAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/phases/dto/update-phase.input.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        thumbnail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/phases/dto/update-phase.input.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsOptional } from 'class-validator';\nimport { InputType, Field, ID, Int } from '@nestjs/graphql';\n/**\n * graphql input scheme\n */\n@InputType()\nexport class UpdatePhaseInput {\n  @Field(() => ID)\n  @IsNotEmpty()\n  _id: string;\n\n  @Field(() => String, { nullable: true })\n  @IsOptional()\n  name?: string;\n\n  @Field(() => String, { nullable: true })\n  @IsOptional()\n  description?: string;\n\n  @Field(() => String, { nullable: true })\n  @IsOptional()\n  landing?: string;\n\n  @Field(() => String, { nullable: true })\n  @IsOptional()\n  thumbnail?: string;\n\n  @Field(() => Date, { nullable: true })\n  @IsOptional()\n  startAt?: Date;\n\n  @Field(() => Date, { nullable: true })\n  @IsOptional()\n  endAt?: Date;\n\n  @Field(() => Int, { nullable: true })\n  @IsOptional()\n  index?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateResourceInput.html":{"url":"classes/UpdateResourceInput.html","title":"class - UpdateResourceInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateResourceInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resources/dto/update-resource.input.ts\n        \n\n\n            \n                Description\n            \n            \n                graphql input scheme\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                _id\n                            \n                            \n                                    \n                                    \n                                extra_options\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                hide\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                isDeleted\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resources/dto/update-resource.input.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        extra_options\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resources/dto/update-resource.input.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        hide\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resources/dto/update-resource.input.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resources/dto/update-resource.input.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resources/dto/update-resource.input.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsOptional } from 'class-validator';\nimport { InputType, Field, Int, PartialType, ID } from '@nestjs/graphql';\nimport { GraphQLJSONObject } from 'graphql-scalars';\nimport { CreateResourceInput } from './create-resource.input';\n/**\n * graphql input scheme\n */\n@InputType()\nexport class UpdateResourceInput extends PartialType(CreateResourceInput) {\n  @Field(() => ID)\n  @IsNotEmpty()\n  _id: string;\n\n  @Field(() => String)\n  @IsNotEmpty()\n  name: string;\n\n  @Field(() => GraphQLJSONObject)\n  @IsOptional()\n  extra_options: Record;\n\n  @Field(() => Boolean, { nullable: true })\n  @IsOptional()\n  isDeleted?: boolean;\n\n  @Field(() => Boolean, { nullable: true })\n  @IsOptional()\n  hide?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateResourcesReplyInput.html":{"url":"classes/UpdateResourcesReplyInput.html","title":"class - UpdateResourcesReplyInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateResourcesReplyInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resources/resources-replies/dto/update-resources-reply.input.ts\n        \n\n\n            \n                Description\n            \n            \n                graphql input scheme\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                _id\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                item\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                modified\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                observations\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                state\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resources/resources-replies/dto/update-resources-reply.input.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        item\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resources/resources-replies/dto/update-resources-reply.input.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        modified\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resources/resources-replies/dto/update-resources-reply.input.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        observations\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resources/resources-replies/dto/update-resources-reply.input.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resources/resources-replies/dto/update-resources-reply.input.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsOptional } from 'class-validator';\nimport { InputType, Field, Int, PartialType, ID } from '@nestjs/graphql';\nimport { GraphQLJSONObject } from 'graphql-scalars';\nimport { CreateResourcesReplyInput } from './create-resources-reply.input';\n/**\n * graphql input scheme\n */\n@InputType()\nexport class UpdateResourcesReplyInput extends PartialType(\n  CreateResourcesReplyInput,\n) {\n  @Field(() => ID)\n  @IsNotEmpty()\n  _id: string;\n\n  @Field(() => String, { nullable: true })\n  @IsOptional()\n  state?: string;\n\n  @Field(() => String, { nullable: true })\n  @IsOptional()\n  observations?: string;\n\n  @Field(() => GraphQLJSONObject, { nullable: true })\n  @IsOptional()\n  item?: Record;\n\n  @Field(() => Boolean, { nullable: true })\n  @IsOptional()\n  modified?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateRolInput.html":{"url":"classes/UpdateRolInput.html","title":"class - UpdateRolInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateRolInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rol/dto/update-rol.input.ts\n        \n\n\n            \n                Description\n            \n            \n                graphql input scheme\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                _id\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                name\n                            \n                            \n                                    \n                                    \n                                permissions\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/rol/dto/update-rol.input.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/rol/dto/update-rol.input.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/rol/dto/update-rol.input.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CreateRolInput } from './create-rol.input';\nimport { IsNotEmpty, IsOptional } from 'class-validator';\nimport { InputType, Field, Int, PartialType, ID } from '@nestjs/graphql';\n/**\n * graphql input scheme\n */\n@InputType()\nexport class UpdateRolInput extends PartialType(CreateRolInput) {\n  @Field(() => ID)\n  @IsNotEmpty()\n  _id: string;\n\n  @Field(() => String, { nullable: true })\n  @IsOptional()\n  name?: string;\n\n  @Field(() => [String], { nullable: true })\n  @IsOptional()\n  permissions: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateSiteInput.html":{"url":"classes/UpdateSiteInput.html","title":"class - UpdateSiteInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateSiteInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/sites/dto/update-site.input.ts\n        \n\n\n            \n                Description\n            \n            \n                graphql inputs\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                _id\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                contacts\n                            \n                            \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                directedTo\n                            \n                            \n                                    \n                                    \n                                factors\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                isDeleted\n                            \n                            \n                                    \n                                    \n                                methodology\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                results\n                            \n                            \n                                    \n                                    \n                                thumbnail\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sites/dto/update-site.input.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        contacts\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ContactServicesInput[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sites/dto/update-site.input.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sites/dto/update-site.input.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        directedTo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sites/dto/update-site.input.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        factors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sites/dto/update-site.input.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sites/dto/update-site.input.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        methodology\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sites/dto/update-site.input.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sites/dto/update-site.input.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        results\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sites/dto/update-site.input.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        thumbnail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sites/dto/update-site.input.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CreateSiteInput } from './create-site.input';\nimport { InputType, Field, Int, PartialType, ID } from '@nestjs/graphql';\nimport { IsNotEmpty, IsOptional } from 'class-validator';\nimport { GraphQLJSONObject } from 'graphql-scalars';\n/**\n * graphql inputs\n */\n@InputType()\nexport class UpdateSiteInput {\n  @Field(() => ID)\n  @IsNotEmpty()\n  _id: string;\n\n  @Field(() => String)\n  @IsOptional()\n  name: string;\n\n  @Field(() => String)\n  @IsOptional()\n  thumbnail: string;\n\n  @Field(() => String)\n  @IsOptional()\n  description: string;\n\n  @Field(() => String)\n  @IsOptional()\n  directedTo: string;\n\n  @Field(() => String)\n  @IsOptional()\n  methodology: string;\n\n  @Field(() => [String])\n  @IsOptional()\n  factors: string[];\n\n  @Field(() => String)\n  @IsOptional()\n  results: string;\n\n  @Field(() => [ContactServicesInput], { nullable: true })\n  @IsOptional()\n  contacts?: ContactServicesInput[];\n\n  // @Field(() => GraphQLJSONObject)\n  // @IsOptional()\n  // coords: Record;\n\n  // @Field(() => [ServicesSiteInput], { nullable: true })\n  // @IsOptional()\n  // services?: ServicesSiteInput[];\n\n  @Field(() => Boolean, { nullable: true })\n  @IsOptional()\n  isDeleted?: boolean;\n}\n/**\n * @ignore\n */\n@InputType()\nexport class ServicesSiteInput {\n  @Field(() => String)\n  @IsNotEmpty()\n  name: string;\n\n  @Field(() => String)\n  description: string;\n\n  @Field(() => String)\n  @IsNotEmpty()\n  email: string;\n\n  @Field(() => String)\n  @IsNotEmpty()\n  contact: string;\n\n  @Field(() => GraphQLJSONObject)\n  @IsNotEmpty()\n  coords: Record;\n}\n/**\n * service contact person\n */\n@InputType()\nexport class ContactServicesInput {\n  @Field(() => String)\n  @IsNotEmpty()\n  name: string;\n\n  @Field(() => String)\n  @IsNotEmpty()\n  email: string;\n\n  @Field(() => String)\n  @IsNotEmpty()\n  contact: string;\n\n  @Field(() => String)\n  @IsNotEmpty()\n  others: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateStageInput.html":{"url":"classes/UpdateStageInput.html","title":"class - UpdateStageInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateStageInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stages/dto/update-stage.input.ts\n        \n\n\n            \n                Description\n            \n            \n                graphql inputs\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                _id\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                color\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                description\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                icon\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                index\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                isDeleted\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                label\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/stages/dto/update-stage.input.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        color\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/stages/dto/update-stage.input.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/stages/dto/update-stage.input.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        icon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/stages/dto/update-stage.input.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        index\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/stages/dto/update-stage.input.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/stages/dto/update-stage.input.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        label\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/stages/dto/update-stage.input.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/stages/dto/update-stage.input.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CreateStageInput } from './create-stage.input';\nimport { InputType, Field, Int, PartialType, ID } from '@nestjs/graphql';\nimport { IsNotEmpty, IsOptional } from 'class-validator';\n/**\n * graphql inputs\n */\n@InputType()\nexport class UpdateStageInput extends PartialType(CreateStageInput) {\n  @Field(() => ID)\n  @IsNotEmpty()\n  _id: string;\n\n  @Field(() => Int, { nullable: true })\n  @IsOptional()\n  index?: number;\n\n  @Field(() => String, { nullable: true })\n  @IsOptional()\n  name?: string;\n\n  @Field(() => String, { nullable: true })\n  @IsOptional()\n  description?: string;\n\n  @Field(() => String, { nullable: true })\n  @IsOptional()\n  label?: string;\n\n  @Field(() => String, { nullable: true })\n  @IsOptional()\n  color?: string;\n\n  @Field(() => String, { nullable: true })\n  @IsOptional()\n  icon?: string;\n\n  @Field(() => Boolean, { nullable: true })\n  @IsOptional()\n  isDeleted?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateTableConfigInput.html":{"url":"classes/UpdateTableConfigInput.html","title":"class - UpdateTableConfigInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateTableConfigInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/table/table-config/dto/update-table-config.input.ts\n        \n\n\n            \n                Description\n            \n            \n                graphql inputs\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                _id\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                columns\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                loadEvent\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/table/table-config/dto/update-table-config.input.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        columns\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TableColumn[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsOptional()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/table/table-config/dto/update-table-config.input.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        loadEvent\n                        \n                    \n                \n            \n                \n                    \n                        Type :     JSON\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsOptional()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/table/table-config/dto/update-table-config.input.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsOptional()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/table/table-config/dto/update-table-config.input.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsOptional } from 'class-validator';\nimport { InputType, Field, ID } from '@nestjs/graphql';\nimport GraphQLJSON from 'graphql-type-json';\nimport { TableColumn } from 'src/shared/models/table-column';\n/**\n * graphql inputs\n */\n@InputType()\nexport class UpdateTableConfigInput {\n  @Field(() => ID)\n  @IsNotEmpty()\n  _id: string;\n\n  @Field(() => String, { nullable: true })\n  @IsOptional()\n  @IsNotEmpty()\n  name?: string;\n\n  @Field(() => [GraphQLJSON], { nullable: true })\n  @IsOptional()\n  @IsNotEmpty()\n  columns?: TableColumn[];\n\n  @Field(() => GraphQLJSON, { nullable: true })\n  @IsOptional()\n  @IsNotEmpty()\n  loadEvent?: JSON;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateTermsOfUseInput.html":{"url":"classes/UpdateTermsOfUseInput.html","title":"class - UpdateTermsOfUseInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateTermsOfUseInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/terms-of-use/dto/update-terms-of-use.input.ts\n        \n\n\n            \n                Description\n            \n            \n                graphql inputs\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                _id\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                content\n                            \n                            \n                                    \n                                    \n                                extra_options\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/terms-of-use/dto/update-terms-of-use.input.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/terms-of-use/dto/update-terms-of-use.input.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        extra_options\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/terms-of-use/dto/update-terms-of-use.input.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/terms-of-use/dto/update-terms-of-use.input.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CreateTermsOfUseInput } from './create-terms-of-use.input';\nimport { InputType, Field, Int, PartialType, ID } from '@nestjs/graphql';\nimport { IsNotEmpty, IsOptional } from 'class-validator';\nimport { GraphQLJSONObject } from 'graphql-scalars';\n/**\n * graphql inputs\n */\n@InputType()\nexport class UpdateTermsOfUseInput {\n  @Field(() => ID)\n  @IsNotEmpty()\n  _id: string;\n\n  @Field(() => String, { nullable: true })\n  @IsOptional()\n  name?: string;\n\n  @Field(() => String, { nullable: true })\n  @IsOptional()\n  content?: string;\n\n  @Field(() => GraphQLJSONObject, { nullable: true })\n  @IsOptional()\n  extra_options: Record;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateTypesEventInput.html":{"url":"classes/UpdateTypesEventInput.html","title":"class - UpdateTypesEventInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateTypesEventInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/events/types-events/dto/update-types-event.input.ts\n        \n\n\n            \n                Description\n            \n            \n                graphql input scheme\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                _id\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                expertFocus\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                extra_options\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                isDeleted\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/types-events/dto/update-types-event.input.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        expertFocus\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/types-events/dto/update-types-event.input.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        extra_options\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/types-events/dto/update-types-event.input.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/types-events/dto/update-types-event.input.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CreateTypesEventInput } from './create-types-event.input';\nimport { InputType, Field, Int, PartialType, ID } from '@nestjs/graphql';\nimport { IsNotEmpty, IsOptional } from 'class-validator';\nimport { GraphQLJSONObject } from 'graphql-scalars';\n/**\n * graphql input scheme\n */\n@InputType()\nexport class UpdateTypesEventInput extends PartialType(CreateTypesEventInput) {\n  @Field(() => ID)\n  @IsNotEmpty()\n  _id: string;\n\n  @Field(() => GraphQLJSONObject, { nullable: true })\n  @IsOptional()\n  extra_options?: Record;\n\n  @Field(() => Boolean, { nullable: true })\n  @IsOptional()\n  isDeleted?: boolean;\n\n  @Field(() => Boolean, { nullable: false })\n  @IsOptional()\n  expertFocus?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserConfigInput.html":{"url":"classes/UpdateUserConfigInput.html","title":"class - UpdateUserConfigInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserConfigInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user-config/dto/update-user-config.input.ts\n        \n\n\n            \n                Description\n            \n            \n                graphql inputs\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                _id\n                            \n                            \n                                    \n                                    \n                                notifications\n                            \n                            \n                                    \n                                    \n                                uid\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user-config/dto/update-user-config.input.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        notifications\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user-config/dto/update-user-config.input.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        uid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user-config/dto/update-user-config.input.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { InputType, Field } from '@nestjs/graphql';\nimport { IsNotEmpty } from 'class-validator';\nimport { GraphQLJSONObject } from 'graphql-scalars';\n/**\n * graphql inputs\n */\n@InputType()\nexport class UpdateUserConfigInput {\n  @Field(() => String)\n  @IsNotEmpty()\n  _id: string;\n\n  @Field(() => String)\n  @IsNotEmpty()\n  uid: string;\n\n  @Field(() => GraphQLJSONObject)\n  @IsNotEmpty()\n  notifications: any;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserInput.html":{"url":"classes/UpdateUserInput.html","title":"class - UpdateUserInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/update-user.input.ts\n        \n\n\n            \n                Description\n            \n            \n                graphql inputs\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                _id\n                            \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                fullName\n                            \n                            \n                                    \n                                    \n                                permissions\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                profileImageUrl\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                relationsAssign\n                            \n                            \n                                    \n                                    \n                                uid\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/update-user.input.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/update-user.input.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        fullName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/update-user.input.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/update-user.input.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        profileImageUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/update-user.input.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        relationsAssign\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/update-user.input.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        uid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/update-user.input.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { InputType, Field, ID } from '@nestjs/graphql';\nimport { IsNotEmpty, IsOptional } from 'class-validator';\nimport { GraphQLJSONObject } from 'graphql-scalars';\n/**\n * graphql inputs\n */\n@InputType()\nexport class UpdateUserInput {\n  @Field(() => ID)\n  @IsNotEmpty()\n  _id: string;\n\n  @Field(() => String, { nullable: true })\n  @IsOptional()\n  uid: string;\n\n  @Field(() => String, { nullable: true })\n  @IsOptional()\n  fullName: string;\n\n  @Field(() => String, { nullable: true })\n  @IsOptional()\n  email: string;\n\n  @Field(() => String, { nullable: true })\n  @IsOptional()\n  profileImageUrl?: string;\n\n  @Field(() => GraphQLJSONObject, { nullable: true })\n  @IsOptional()\n  relationsAssign?: Record;\n\n  @Field(() => [String], { nullable: true })\n  @IsOptional()\n  permissions: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/entities/user.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                users docs\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                _id\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                fullName\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                googleIn\n                            \n                            \n                                    \n                                    \n                                isActive\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                passwordSet\n                            \n                            \n                                    \n                                    \n                                permissions\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                profileImageUrl\n                            \n                            \n                                    \n                                    \n                                relationsAssign\n                            \n                            \n                                    \n                                    \n                                rol\n                            \n                            \n                                    \n                                    \n                                uid\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Date of entity creation.'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Account email/username.'})@Prop({unique: true, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        fullName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'User full name.'})@Prop({default: ''})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        googleIn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@Prop({description: 'Determines if user its registered with google'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: 'boolean', default: true})@Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        passwordSet\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@Prop({description: 'Determines when the user already set its own password.'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@Prop({default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:80\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        profileImageUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        relationsAssign\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true, defaultValue: undefined})@Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        rol\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({type: undefined, ref: 'Rol'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        uid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'User unique identifier.'})@Prop({unique: true, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Date of last entity update.'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'If set, Unique Id of the user who last updated the entity.', nullable: true})@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:60\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ObjectType, Field, ID } from '@nestjs/graphql';\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { ValidRoles, rolValues } from 'src/auth/enums/valid-roles.enum';\nimport { SchemaTypes } from 'mongoose';\nimport { Rol } from 'src/rol/entities/rol.entity';\nimport { GraphQLJSONObject } from 'graphql-scalars';\n/**\n * users docs\n */\n@Schema({ timestamps: true })\n@ObjectType()\nexport class User {\n  @Field(() => ID)\n  _id: string;\n\n  @Field(() => String, { description: 'User unique identifier.' })\n  @Prop({ unique: true, required: true })\n  uid: string;\n\n  @Field(() => String, { description: 'User full name.' })\n  @Prop({ default: '' })\n  fullName: string;\n\n  @Field(() => String, { description: 'Account email/username.' })\n  @Prop({ unique: true, required: true })\n  email: string;\n\n  @Field(() => String, { nullable: true })\n  @Prop()\n  profileImageUrl?: string;\n\n  // @Prop({\n  //   type: [String],\n  //   array: true,\n  //   enum: ValidRoles,\n  //   default: [ValidRoles.user],\n  // })\n  // @Field(() => [String])\n  // roles: ValidRoles[];\n\n  @Field(() => Rol)\n  @Prop({ type: SchemaTypes.ObjectId, ref: 'Rol' })\n  rol: string;\n\n  @Prop({ type: 'boolean', default: true })\n  @Field(() => Boolean)\n  isActive: boolean;\n\n  @Field(() => Date, { description: 'Date of entity creation.' })\n  createdAt: Date;\n\n  @Field(() => Date, { description: 'Date of last entity update.' })\n  updatedAt: Date;\n\n  @Field(() => String, {\n    description: 'If set, Unique Id of the user who last updated the entity.',\n    nullable: true,\n  })\n  @Prop()\n  updatedBy: string;\n\n  @Field(() => Date, { nullable: true })\n  @Prop({\n    description: 'Determines when the user already set its own password.',\n  })\n  passwordSet?: Date;\n\n  @Field(() => Boolean, { nullable: true })\n  @Prop({\n    description: 'Determines if user its registered with google',\n  })\n  googleIn?: Boolean;\n\n  @Field(() => GraphQLJSONObject, { nullable: true, defaultValue: {} })\n  @Prop({ type: SchemaTypes.Mixed })\n  relationsAssign: any;\n\n  @Field(() => [String], { nullable: true })\n  @Prop({ default: [] })\n  permissions: string[];\n}\n\n/**\n * @ignore\n */\nexport const UserSchema = SchemaFactory.createForClass(User);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserConfig.html":{"url":"classes/UserConfig.html","title":"class - UserConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user-config/entities/user-config.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                configuration of notifications that users do not want to receive\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                _id\n                            \n                            \n                                    \n                                    \n                                notifications\n                            \n                            \n                                    \n                                    \n                                uid\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user-config/entities/user-config.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        notifications\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user-config/entities/user-config.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        uid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user-config/entities/user-config.entity.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ObjectType, Field, ID } from '@nestjs/graphql';\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { GraphQLJSONObject } from 'graphql-scalars';\nimport { SchemaTypes } from 'mongoose';\n/**\n * configuration of notifications that users do not want to receive\n */\n@Schema()\n@ObjectType()\nexport class UserConfig {\n  @Field(() => ID)\n  _id: string;\n\n  @Field(() => String)\n  @Prop({ required: true })\n  uid: string;\n\n  @Field(() => GraphQLJSONObject)\n  @Prop({ type: SchemaTypes.Mixed })\n  notifications: any;\n}\n/**\n * @ignore\n */\nexport const UserConfigSchema = SchemaFactory.createForClass(UserConfig);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserConfigModule.html":{"url":"modules/UserConfigModule.html","title":"module - UserConfigModule","body":"\n                   \n\n\n\n\n    Modules\n    UserConfigModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserConfigModule\n\n\n\ncluster_UserConfigModule_imports\n\n\n\ncluster_UserConfigModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nUserConfigModule\n\nUserConfigModule\n\nUserConfigModule -->\n\nAuthModule->UserConfigModule\n\n\n\n\n\nConfigNotificationsModule\n\nConfigNotificationsModule\n\nUserConfigModule -->\n\nConfigNotificationsModule->UserConfigModule\n\n\n\n\n\nUserConfigService\n\nUserConfigService\n\nUserConfigModule -->\n\nUserConfigService->UserConfigModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user-config/user-config.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserConfigService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            ConfigNotificationsModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UserConfigService } from './user-config.service';\nimport { UserConfigResolver } from './user-config.resolver';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { UserConfig, UserConfigSchema } from './entities/user-config.entity';\nimport { AuthModule } from 'src/auth/auth.module';\nimport { ConfigNotificationsModule } from 'src/notifications/config-notifications/config-notifications.module';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      { name: UserConfig.name, schema: UserConfigSchema },\n    ]),\n    AuthModule,\n    ConfigNotificationsModule,\n  ],\n  providers: [UserConfigResolver, UserConfigService],\n})\nexport class UserConfigModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserConfigService.html":{"url":"injectables/UserConfigService.html","title":"injectable - UserConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user-config/user-config.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userConfigModel: Model, configNotificationsService: ConfigNotificationsService)\n                    \n                \n                        \n                            \n                                Defined in src/user-config/user-config.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userConfigModel\n                                                  \n                                                        \n                                                                    Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configNotificationsService\n                                                  \n                                                        \n                                                                        ConfigNotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(uid: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user-config/user-config.service.ts:23\n                        \n                    \n\n\n            \n                \n                        create user config\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                uid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(uid: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user-config/user-config.service.ts:30\n                        \n                    \n\n\n            \n                \n                        find user config by uuid\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                uid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(updateUserConfigInput: UpdateUserConfigInput, user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user-config/user-config.service.ts:46\n                        \n                    \n\n\n            \n                \n                        update user config\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                updateUserConfigInput\n                                            \n                                                            UpdateUserConfigInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { forwardRef, Inject, Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { ConfigNotificationsService } from 'src/notifications/config-notifications/config-notifications.service';\nimport { default_notification_types } from 'src/notifications/types-notifications/model/types-notification.default';\nimport { User } from 'src/users/entities/user.entity';\nimport { UpdateUserConfigInput } from './dto/update-user-config.input';\nimport { UserConfig } from './entities/user-config.entity';\nimport { defaultUserConfig } from './model/user-config.default';\n\n@Injectable()\nexport class UserConfigService {\n  constructor(\n    @InjectModel(UserConfig.name)\n    private readonly userConfigModel: Model,\n    @Inject(forwardRef(() => ConfigNotificationsService))\n    private readonly configNotificationsService: ConfigNotificationsService,\n  ) {}\n\n  /**\n   *create user config\n   */\n  async create(uid: string) {\n    return this.userConfigModel.create({ uid, ...defaultUserConfig });\n  }\n\n  /**\n   * find user config by uuid\n   */\n  async findOne(uid: string) {\n    const config = await this.userConfigModel.findOne({ uid }).lean();\n    if (!config) return this.create(uid);\n    return {\n      ...config,\n      // Include additional configuration if any is added after it was created.\n      notifications: {\n        ...defaultUserConfig.notifications,\n        ...(config?.notifications ?? {}),\n      },\n    };\n  }\n\n  /**\n   * update user config\n   */\n  async update(updateUserConfigInput: UpdateUserConfigInput, user: User) {\n    const currentConfig = await this.findOne(updateUserConfigInput.uid);\n    const updatePromises = Object.keys(currentConfig.notifications).map(\n      async (key) => {\n        const newValue = updateUserConfigInput.notifications[key];\n        const oldValue = currentConfig.notifications[key];\n        if (oldValue == newValue) return;\n        const typeId = default_notification_types\n          .find((t) => t.type == key)\n          ._id.toString();\n        if (newValue) {\n          return this.configNotificationsService.removeExcludedUserForType(\n            typeId,\n            user.email,\n          );\n        } else {\n          return this.configNotificationsService.excludeUserForType(\n            typeId,\n            user.email,\n          );\n        }\n      },\n    );\n    await Promise.all(updatePromises);\n    const updatedConfig = {\n      ...updateUserConfigInput,\n    };\n    delete updatedConfig._id;\n    delete updatedConfig.uid;\n    return this.userConfigModel.updateOne(\n      { _id: updateUserConfigInput._id },\n      { $set: { ...updatedConfig } },\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserLog.html":{"url":"classes/UserLog.html","title":"class - UserLog","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserLog\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user-log/entities/user-log.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                dynamic logs for users\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                _id\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                    \n                                metadata\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user-log/entities/user-log.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Date of entity creation.'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user-log/entities/user-log.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        metadata\n                        \n                    \n                \n            \n                \n                    \n                        Type :     JSON\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Set of additional dynamic properties.'})@Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user-log/entities/user-log.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Date of last entity update.'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user-log/entities/user-log.entity.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ObjectType, Field, ID } from '@nestjs/graphql';\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport GraphQLJSON from 'graphql-type-json';\n/**\n * dynamic logs for users\n */\n@Schema({ timestamps: true })\n@ObjectType()\nexport class UserLog {\n  @Field(() => ID)\n  _id: string;\n\n  @Field(() => GraphQLJSON, {\n    description: 'Set of additional dynamic properties.',\n  })\n  @Prop({ type: Object })\n  metadata: JSON;\n\n  @Field(() => Date, { description: 'Date of entity creation.' })\n  createdAt: Date;\n\n  @Field(() => Date, { description: 'Date of last entity update.' })\n  updatedAt: Date;\n}\n\n/**\n * @ignore\n */\nexport const UserLogSchema = SchemaFactory.createForClass(UserLog);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserLogModule.html":{"url":"modules/UserLogModule.html","title":"module - UserLogModule","body":"\n                   \n\n\n\n\n    Modules\n    UserLogModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserLogModule\n\n\n\ncluster_UserLogModule_providers\n\n\n\ncluster_UserLogModule_exports\n\n\n\ncluster_UserLogModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nUserLogModule\n\nUserLogModule\n\nUserLogModule -->\n\nAuthModule->UserLogModule\n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nUserLogModule -->\n\nLoggerModule->UserLogModule\n\n\n\n\n\nUserLogService \n\nUserLogService \n\nUserLogService  -->\n\nUserLogModule->UserLogService \n\n\n\n\n\nUserLogService\n\nUserLogService\n\nUserLogModule -->\n\nUserLogService->UserLogModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user-log/user-log.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserLogService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            LoggerModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserLogService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UserLogService } from './user-log.service';\nimport { UserLogResolver } from './user-log.resolver';\nimport { LoggerModule } from 'src/logger/logger.module';\nimport { AuthModule } from 'src/auth/auth.module';\nimport { UserLog, UserLogSchema } from './entities/user-log.entity';\nimport { MongooseModule } from '@nestjs/mongoose';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([{ name: UserLog.name, schema: UserLogSchema }]),\n    AuthModule,\n    LoggerModule,\n    // forwardRef(() => ResourcesModule),\n    // forwardRef(() => ContentModule),\n    // forwardRef(() => StartupModule),\n  ],\n  providers: [UserLogResolver, UserLogService],\n  exports: [UserLogService],\n})\nexport class UserLogModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserLogService.html":{"url":"injectables/UserLogService.html","title":"injectable - UserLogService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserLogService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user-log/user-log.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findByFilters\n                            \n                            \n                                findOne\n                            \n                            \n                                    Async\n                                getRegistersUsers\n                            \n                            \n                                    Async\n                                getUserRegisterWeek\n                            \n                            \n                                    Async\n                                registerLogin\n                            \n                            \n                                registerLoginByDate\n                            \n                            \n                                registerResourcesByUser\n                            \n                            \n                                registerUserByDate\n                            \n                            \n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userLogModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/user-log/user-log.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userLogModel\n                                                  \n                                                        \n                                                                    Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createUserLogInput: CreateUserLogInput, user: AuthUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user-log/user-log.service.ts:19\n                        \n                    \n\n\n            \n                \n                        create a user log\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserLogInput\n                                            \n                                                            CreateUserLogInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            AuthUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/user-log/user-log.service.ts:28\n                        \n                    \n\n\n            \n                \n                        find all users logs\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findByFilters\n                        \n                    \n                \n            \n            \n                \nfindByFilters(filters: Record)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user-log/user-log.service.ts:35\n                        \n                    \n\n\n            \n                \n                        find user log by filters\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filters\n                                            \n                                                        Record\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user-log/user-log.service.ts:42\n                        \n                    \n\n\n            \n                \n                        find an user log\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getRegistersUsers\n                        \n                    \n                \n            \n            \n                \n                        \n                    getRegistersUsers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/user-log/user-log.service.ts:145\n                        \n                    \n\n\n            \n                \n                        find multiple users login sessions in a week\n\n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getUserRegisterWeek\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUserRegisterWeek(user: AuthUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user-log/user-log.service.ts:175\n                        \n                    \n\n\n            \n                \n                        find multiple users resources replies in a week\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            AuthUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        registerLogin\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerLogin(idUser: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user-log/user-log.service.ts:56\n                        \n                    \n\n\n            \n                \n                        create or update user login session\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                idUser\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerLoginByDate\n                        \n                    \n                \n            \n            \n                \nregisterLoginByDate(date: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user-log/user-log.service.ts:92\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                date\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerResourcesByUser\n                        \n                    \n                \n            \n            \n                \nregisterResourcesByUser(date: string, user: AuthUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user-log/user-log.service.ts:127\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                date\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            AuthUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerUserByDate\n                        \n                    \n                \n            \n            \n                \nregisterUserByDate(user, date: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user-log/user-log.service.ts:109\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                date\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user-log/user-log.service.ts:49\n                        \n                    \n\n\n            \n                \n                        delete a user log\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateUserLogInput } from './dto/create-user-log.input';\nimport { Model, Types } from 'mongoose';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { UserLog } from './entities/user-log.entity';\nimport { AuthUser } from 'src/auth/types/auth-user';\nimport { infoWeekDates } from 'src/shared/utilities/dates.utilities';\n\n@Injectable()\nexport class UserLogService {\n  constructor(\n    @InjectModel(UserLog.name)\n    private readonly userLogModel: Model,\n  ) {}\n\n  /**\n   * create a user log\n   */\n  create(createUserLogInput: CreateUserLogInput, user: AuthUser) {\n    return this.userLogModel.create({\n      metadata: { ...createUserLogInput.metadata, user: user._id },\n    });\n  }\n\n  /**\n   * find all users logs\n   */\n  findAll() {\n    return this.userLogModel.find().lean();\n  }\n\n  /**\n   * find user log by filters\n   */\n  findByFilters(filters: Record) {\n    return this.userLogModel.find(filters).lean();\n  }\n\n  /**\n   * find an user log\n   */\n  findOne(id: string) {\n    return this.userLogModel.findById(id).lean();\n  }\n\n  /**\n   * delete a user log\n   */\n  remove(id: string) {\n    return this.userLogModel.findByIdAndDelete(id).lean();\n  }\n\n  /**\n   * create or update user login session\n   */\n  async registerLogin(idUser: string) {\n    // let infoSemana = this.obtenerInfoSemana();\n    let today = new Date();\n    // Configura las fechas para el rango del día específico\n    const begin = new Date(today);\n    begin.setHours(0, 0, 0, 0);\n    const end = new Date(today);\n    end.setHours(23, 59, 59, 999);\n    return await this.userLogModel\n      .findOneAndUpdate(\n        {\n          'metadata.user': new Types.ObjectId(idUser),\n          'metadata.logIn': {\n            $gte: begin,\n            $lt: end,\n          },\n        },\n        {\n          $setOnInsert: {\n            'metadata.user': new Types.ObjectId(idUser),\n            'metadata.logIn': new Date(),\n            'metadata.loginApp': true,\n          },\n        },\n        {\n          upsert: true,\n          new: true,\n        },\n      )\n      .lean();\n  }\n\n  /**\n   * find user login sessions in a week\n   */\n  /** @var date: date format YYYY-MM-DD */\n  registerLoginByDate(date: string) {\n    const begin = new Date(`${date}T00:00:00.000Z`);\n    const end = new Date(`${date}T23:59:59.999Z`);\n    return this.userLogModel\n      .find({\n        'metadata.logIn': {\n          $gte: begin,\n          $lt: end,\n        },\n      })\n      .lean();\n  }\n\n  /**\n   * find user activity in a week\n   */\n  /** @var date: date format YYYY-MM-DD */\n  registerUserByDate(user, date: string) {\n    const begin = new Date(`${date}T00:00:00.000Z`);\n    const end = new Date(`${date}T23:59:59.999Z`);\n    return this.userLogModel\n      .find({\n        user,\n        createdAt: {\n          $gte: begin,\n          $lt: end,\n        },\n      })\n      .lean();\n  }\n\n  /**\n   * find user resources replies in a week\n   */\n  /** @var date: date format YYYY-MM-DD */\n  registerResourcesByUser(date: string, user: AuthUser) {\n    const begin = new Date(`${date}T00:00:00.000Z`);\n    const end = new Date(`${date}T23:59:59.999Z`);\n    return this.userLogModel\n      .find({\n        'metadata.user': user._id,\n        'metadata.content': { $exists: true },\n        createdAt: {\n          $gte: begin,\n          $lt: end,\n        },\n      })\n      .lean();\n  }\n\n  /**\n   * find multiple users login sessions in a week\n   */\n  async getRegistersUsers() {\n    let dates = infoWeekDates();\n    let labels = [\n      'Domingo',\n      'Lunes',\n      'Martes',\n      'Miércoles',\n      'Jueves',\n      'Viernes',\n      'Sábado',\n    ];\n\n    let index = 0;\n    let uniquesUsers = new Set();\n    let data = [];\n    for (const iterator of dates.fechasSemana) {\n      const docs = await this.registerLoginByDate(iterator);\n      // infoUsers.push({ day: labels[index], date: iterator, value: docs.length });\n      data.push(docs.length);\n      index++;\n      for (const iterator of docs) {\n        if (uniquesUsers.has(iterator.metadata['user'].toString())) continue;\n        uniquesUsers.add(iterator.metadata['user'].toString());\n      }\n    }\n    return { labels, data, dateLabels: dates, count: uniquesUsers.size };\n  }\n  /**\n   * find multiple users resources replies in a week\n   */\n  async getUserRegisterWeek(user: AuthUser) {\n    let dates = infoWeekDates();\n    let labels = [\n      'Domingo',\n      'Lunes',\n      'Martes',\n      'Miércoles',\n      'Jueves',\n      'Viernes',\n      'Sábado',\n    ];\n    let data = [];\n    let countDocs = 0;\n    for (const iterator of dates.fechasSemana) {\n      const docs = await this.registerResourcesByUser(iterator, user);\n      // infoUsers.push({ day: labels[index], date: iterator, value: docs.length });\n      data.push(docs.length);\n      countDocs += docs.length;\n    }\n    return { labels, data, dateLabels: dates, count: countDocs };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_imports\n\n\n\ncluster_UsersModule_providers\n\n\n\ncluster_UsersModule_exports\n\n\n\n\nRolModule\n\nRolModule\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nRolModule->UsersModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            RolModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module, forwardRef } from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { UsersResolver } from './users.resolver';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { User, UserSchema } from './entities/user.entity';\nimport { AuthModule } from 'src/auth/auth.module';\nimport { RolModule } from 'src/rol/rol.module';\nimport { UserLogModule } from 'src/user-log/user-log.module';\nimport { EmailsModule } from 'src/emails/emails.module';\nimport { NotificationsModule } from 'src/notifications/notifications.module';\n\n@Module({\n  imports: [\n    forwardRef(() => AuthModule),\n    forwardRef(() => UserLogModule),\n    MongooseModule.forFeature([{ name: User.name, schema: UserSchema }]),\n    RolModule,\n    forwardRef(() => EmailsModule),\n    forwardRef(() => NotificationsModule),\n  ],\n  providers: [UsersResolver, UsersService],\n  exports: [UsersService],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                countAll\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                deleteUser\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                findMany\n                            \n                            \n                                    Async\n                                findManyById\n                            \n                            \n                                    Async\n                                findManyByUUID\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                findRolByID\n                            \n                            \n                                    Async\n                                findRolByType\n                            \n                            \n                                    Async\n                                invite\n                            \n                            \n                                    Async\n                                tryFindOne\n                            \n                            \n                                    Async\n                                update\n                            \n                            \n                                    Async\n                                updateState\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: Model, rolService: RolService, userLogService: UserLogService, emailsService: EmailsService, notificationService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.service.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        rolService\n                                                  \n                                                        \n                                                                        RolService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userLogService\n                                                  \n                                                        \n                                                                        UserLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        emailsService\n                                                  \n                                                        \n                                                                        EmailsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                        NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        countAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    countAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:93\n                        \n                    \n\n\n            \n                \n                        count of users\n\n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createUserInput: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:101\n                        \n                    \n\n\n            \n                \n                        create a user doc\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserInput\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteUser(uid: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:149\n                        \n                    \n\n\n            \n                \n                        delete user\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                uid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:55\n                        \n                    \n\n\n            \n                \n                        find user doc by id\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findMany\n                        \n                    \n                \n            \n            \n                \n                        \n                    findMany(undefined: FindUsersArgs)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:65\n                        \n                    \n\n\n            \n                \n                        find many user doc by rol\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            FindUsersArgs\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findManyById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findManyById(ids: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:212\n                        \n                    \n\n\n            \n                \n                        find list of users docs\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ids\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findManyByUUID\n                        \n                    \n                \n            \n            \n                \n                        \n                    findManyByUUID(uidList: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:225\n                        \n                    \n\n\n            \n                \n                        find list of users docs by uid list\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                uidList\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(uid: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:43\n                        \n                    \n\n\n            \n                \n                        find user doc by uid\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                uid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findRolByID\n                        \n                    \n                \n            \n            \n                \n                        \n                    findRolByID(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:156\n                        \n                    \n\n\n            \n                \n                        find rol by id\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findRolByType\n                        \n                    \n                \n            \n            \n                \n                        \n                    findRolByType(type: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:163\n                        \n                    \n\n\n            \n                \n                        find rol by type\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                type\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        invite\n                        \n                    \n                \n            \n            \n                \n                        \n                    invite(contactArgs: ContactArgs)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:170\n                        \n                    \n\n\n            \n                \n                        send invitation email user\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                contactArgs\n                                            \n                                                            ContactArgs\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        tryFindOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    tryFindOne(filters: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:36\n                        \n                    \n\n\n            \n                \n                        find user doc by filters\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filters\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(filters: literal type, userUpdates: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:111\n                        \n                    \n\n\n            \n                \n                        update user doc\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filters\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userUpdates\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateState\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateState(uid: string, adminUser: User, setActive: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:132\n                        \n                    \n\n\n            \n                \n                        update state of a user\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                uid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                adminUser\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                setActive\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  ConflictException,\n  Injectable,\n  NotFoundException,\n  Inject,\n  forwardRef,\n} from '@nestjs/common';\nimport { Model } from 'mongoose';\nimport { User } from './entities/user.entity';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { FindUsersArgs } from './args/find-users.args';\nimport { RolService } from '../rol/rol.service';\nimport { EventEmitter2 } from '@nestjs/event-emitter';\nimport { UserLogService } from 'src/user-log/user-log.service';\nimport { EmailsService } from 'src/emails/emails.service';\nimport { NotificationsService } from 'src/notifications/notifications.service';\nimport { ContactArgs } from 'src/startup/args/contact-startup.args';\nimport { NotificationStates } from 'src/notifications/enum/notification-states.enum';\nimport { NotificationTypes } from 'src/notifications/enum/notification-types.enum';\n@Injectable()\nexport class UsersService {\n  constructor(\n    @InjectModel(User.name) private readonly userModel: Model,\n    private readonly rolService: RolService,\n    @Inject(forwardRef(() => UserLogService))\n    private readonly userLogService: UserLogService,\n    @Inject(forwardRef(() => EmailsService))\n    private readonly emailsService: EmailsService,\n    @Inject(forwardRef(() => NotificationsService))\n    private readonly notificationService: NotificationsService,\n  ) {}\n\n  /**\n   * find user doc by filters\n   */\n  async tryFindOne(filters: { uid?: string; email?: string }) {\n    return await this.userModel.findOne(filters).lean();\n  }\n\n  /**\n   * find user doc by uid\n   */\n  async findOne(uid: string) {\n    const user = await (\n      await this.userModel.findOne({ uid: uid })\n    ).populate('rol');\n    if (!user) throw new NotFoundException(`No user found with uid ${uid}`);\n    this.userLogService.registerLogin(user._id);\n    return user;\n  }\n\n  /**\n   * find user doc by id\n   */\n  async findById(id: string) {\n    const user = (await this.userModel.findById(id)).populate('rol');\n\n    if (!user) throw new NotFoundException(`No user found with id ${id}`);\n    return user;\n  }\n\n  /**\n   * find many user doc by rol\n   */\n  async findMany({ search, roles, relationsAssign }: FindUsersArgs) {\n    let filters = {};\n    let rolesDocs = [];\n    if (roles?.length) {\n      for (const iterator of roles) {\n        const docRol = await this.findRolByType(iterator);\n        rolesDocs.push(docRol._id);\n      }\n      filters['rol'] = { $in: rolesDocs };\n    }\n\n    if (search) {\n      filters['fullName'] = RegExp(`/.*${search}.*/`);\n    }\n    if (relationsAssign) {\n      const keys = Object.keys(relationsAssign);\n      for (const iterator of keys) {\n        filters[`relationsAssign.${iterator}._id`] = relationsAssign[iterator];\n      }\n    }\n\n    const users = await this.userModel.find(filters).populate('rol').lean();\n    return users;\n  }\n\n  /**\n   * count of users\n   */\n  async countAll() {\n    const docs = await this.userModel.find({ isActive: true }).lean();\n    return docs.length;\n  }\n\n  /**\n   * create a user doc\n   */\n  async create(createUserInput: Partial) {\n    const user = await this.tryFindOne({ uid: createUserInput.uid });\n    if (user) throw new ConflictException('Authenticated user already exist');\n    const createdUser = await this.userModel.create(createUserInput);\n    return await createdUser.populate('rol');\n  }\n\n  /**\n   * update user doc\n   */\n  async update(\n    filters: { _id?: string; uid?: string },\n    userUpdates: Partial,\n  ) {\n    delete userUpdates['_id'];\n    const user = await this.userModel\n      .findOneAndUpdate(\n        filters,\n        {\n          ...userUpdates,\n        },\n        { new: true },\n      )\n      .populate('rol')\n      .lean();\n    return user;\n  }\n\n  /**\n   * update state of a user\n   */\n  async updateState(uid: string, adminUser: User, setActive: boolean) {\n    const user = await this.findOne(uid);\n    if (user.isActive === setActive)\n      throw new ConflictException(\n        `The user with uid ${uid} is already ${\n          setActive ? 'enabled' : 'disabled'\n        }`,\n      );\n    user.isActive = setActive;\n    user.updatedBy = adminUser.uid;\n    await user.save();\n    return user;\n  }\n\n  /**\n   * delete user\n   */\n  async deleteUser(uid: string) {\n    return this.userModel.deleteOne({ uid }).populate('rol');\n  }\n\n  /**\n   * find rol by id\n   */\n  async findRolByID(id: string) {\n    return await this.rolService.findOne(id);\n  }\n\n  /**\n   * find rol by type\n   */\n  async findRolByType(type: string) {\n    return await this.rolService.findByType(type);\n  }\n\n  /**\n   * send invitation email user\n   */\n  async invite(contactArgs: ContactArgs) {\n    const user = await this.tryFindOne({ email: contactArgs.to });\n    if (!user)\n      throw new ConflictException(\n        `No se encuentra un usuario con el correo ${contactArgs.to}`,\n      );\n    try {\n      const defaultVerifiedEmail = process.env.SEND_GRID_DEFAULT_VERIFIED_EMAIL;\n      const urlInvitation =\n        process.env.APP_URI +\n        '/home/startup_invitation/' +\n        contactArgs.startupID;\n      await this.emailsService.send({\n        from: defaultVerifiedEmail,\n        html: `\n          ${contactArgs.from} te quiere invitar a formar parte de ${contactArgs.startupName} en EcosystemBT\n          Al hacer click aqu&iacute; o con el siguiente link para aceptar unirse a su startUp\n          &nbsp;\n          link: ${urlInvitation}\n          Recuerda que este mensaje es un intermediario y solo se envi&oacute; por EcosystemBT, y no debes responder en este hilo\n          &nbsp;\n        `,\n        subject: contactArgs.subject,\n        text: `Forma parte de ${contactArgs.startupName} en EcosystemBT`,\n        to: contactArgs.to,\n      });\n      await this.notificationService.create({\n        text: `${contactArgs.from} te quiere invitar a formar parte de ${contactArgs.startupName}`,\n        url: urlInvitation,\n        target: `userNotification ${user._id};`,\n        state: NotificationStates.pending,\n        type: NotificationTypes.advise,\n      });\n      return true;\n    } catch (error) {\n      return false;\n    }\n  }\n\n  /**\n   * find list of users docs\n   */\n  async findManyById(ids: string[]) {\n    if (!ids.length) return [];\n    const users = await this.userModel\n      .find({\n        _id: { $in: ids },\n      })\n      .lean();\n    return users;\n  }\n\n  /**\n   * find list of users docs by uid list\n   */\n  async findManyByUUID(uidList: string[]) {\n    if (!uidList.length) return [];\n    const users = await this.userModel\n      .find({\n        uid: { $in: uidList },\n      })\n      .lean();\n    return users;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/activities.html":{"url":"classes/activities.html","title":"class - activities","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  activities\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/activities-config/entities/activities-config.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                assigned activity config\n\n            \n\n\n            \n                Implements\n            \n            \n                        IActivities\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                id\n                            \n                            \n                                    \n                                limit\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/activities-config/entities/activities-config.entity.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/activities-config/entities/activities-config.entity.ts:58\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ObjectType, Field, ID, Int } from '@nestjs/graphql';\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { SchemaTypes } from 'mongoose';\n/**\n * the configuration of activities are the documents that have the global limit of hours of a batch, its allocation of hours per activity as well as the allocations to experts, startups and teamcoaches.\n */\n@Schema({ timestamps: true })\n@ObjectType()\nexport class ActivitiesConfig {\n  @Field(() => ID)\n  _id: string;\n\n  @Field(() => Int)\n  @Prop({ type: 'number', default: 0 })\n  limit: number;\n\n  @Field(() => String)\n  @Prop({ type: SchemaTypes.ObjectId, ref: 'Phase' })\n  phase: string;\n\n  @Field(() => [activities])\n  @Prop({ default: [] })\n  activities: activities[];\n\n  @Field(() => [Assign])\n  @Prop({ default: [] })\n  startups: Assign[];\n\n  @Field(() => [Assign])\n  @Prop({ default: [] })\n  experts: Assign[];\n\n  @Field(() => [Assign])\n  @Prop({ default: [] })\n  teamCoaches: Assign[];\n\n  @Field(() => Date)\n  createdAt: Date;\n\n  @Field(() => Date)\n  updatedAt: Date;\n\n  @Field(() => Boolean)\n  @Prop({ type: 'boolean', default: false })\n  isDeleted: boolean;\n}\n/**\n * assigned activity config\n */\n@Schema()\n@ObjectType()\nexport class activities implements IActivities {\n  @Field(() => String)\n  @Prop({ type: SchemaTypes.ObjectId })\n  id: string;\n\n  @Field(() => Int)\n  limit: number;\n}\n/**\n * assigned entity config\n */\n@Schema()\n@ObjectType()\nexport class Assign implements IAssign {\n  @Field(() => String)\n  @Prop({ type: SchemaTypes.ObjectId })\n  entityID: string;\n\n  @Field(() => Int)\n  limit: number;\n\n  @Field(() => String)\n  @Prop({ type: SchemaTypes.ObjectId })\n  activityID: string;\n}\n/**\n * @ignore\n */\nexport interface IActivities {\n  id: string;\n  limit: number;\n}\n/**\n * @ignore\n */\nexport interface IAssign {\n  entityID: string;\n  limit: number;\n  activityID: string;\n}\n/**\n * @ignore\n */\nexport const ActivitiesConfigSchema =\n  SchemaFactory.createForClass(ActivitiesConfig);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @aws-sdk/client-s3 : ^3.400.0\n        \n            @aws-sdk/client-ses : ^3.421.0\n        \n            @aws-sdk/s3-request-presigner : ^3.400.0\n        \n            @nestjs/apollo : ^12.0.7\n        \n            @nestjs/common : ^10.2.3\n        \n            @nestjs/config : ^3.0.1\n        \n            @nestjs/core : ^10.2.3\n        \n            @nestjs/event-emitter : ^2.0.2\n        \n            @nestjs/graphql : ^12.0.8\n        \n            @nestjs/mapped-types : ^2.0.2\n        \n            @nestjs/mongoose : ^10.0.1\n        \n            @nestjs/platform-express : ^10.2.3\n        \n            @nestjs/platform-socket.io : ^10.2.3\n        \n            @nestjs/schedule : ^4.0.0\n        \n            @nestjs/swagger : ^7.1.10\n        \n            @nestjs/websockets : ^10.2.3\n        \n            @sendgrid/mail : ^7.7.0\n        \n            apollo-server-express : ^3.12.1\n        \n            axios : ^1.5.0\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.0\n        \n            cross-env : ^7.0.3\n        \n            date-fns : ^2.30.0\n        \n            exceljs : ^4.3.0\n        \n            firebase : ^10.3.1\n        \n            firebase-admin : ^11.10.1\n        \n            graphql : ^16.8.0\n        \n            graphql-scalars : ^1.22.2\n        \n            graphql-subscriptions : ^2.0.0\n        \n            graphql-type-json : ^0.3.2\n        \n            ical-generator : ^6.0.0\n        \n            joi : ^17.10.1\n        \n            moment : ^2.29.4\n        \n            mongoose : ^7.5.0\n        \n            reflect-metadata : ^0.1.13\n        \n            uuid : ^9.0.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AnnouncementTargets   (src/.../announcement-targets.enum.ts)\n                        \n                        \n                            AnnouncementTypes   (src/.../announcement-types.enum.ts)\n                        \n                        \n                            ApplicationStates   (src/.../application-states.enum.ts)\n                        \n                        \n                            EmailNotificationTypes   (src/.../email-notification-types.enum.ts)\n                        \n                        \n                            EmailTemplates   (src/.../email-templates.ts)\n                        \n                        \n                            FormCollections   (src/.../form-collections.ts)\n                        \n                        \n                            InvitationStates   (src/.../invitation-states.enum.ts)\n                        \n                        \n                            NotificationStates   (src/.../notification-states.enum.ts)\n                        \n                        \n                            NotificationTypes   (src/.../notification-types.enum.ts)\n                        \n                        \n                            Permission   (src/.../permissions.enum.ts)\n                        \n                        \n                            ResourceReplyState   (src/.../resorce-reply-states.ts)\n                        \n                        \n                            ResourceType   (src/.../resources-types.ts)\n                        \n                        \n                            TableColumnType   (src/.../table-column-type.enum.ts)\n                        \n                        \n                            TicketCategory   (src/.../ticket-category.enum.ts)\n                        \n                        \n                            TicketEnum   (src/.../ticket-status.enum.ts)\n                        \n                        \n                            TypeIntegration   (src/.../types.enum.ts)\n                        \n                        \n                            ValidRoles   (src/.../valid-roles.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/announcements/enums/announcement-targets.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        AnnouncementTargets\n                    \n                \n                        \n                            \n                                 entrepreneurs\n                            \n                        \n                        \n                            \n                                Value : entrepreneurs\n                            \n                        \n                        \n                            \n                                 experts\n                            \n                        \n                        \n                            \n                                Value : experts\n                            \n                        \n            \n        \n\n    src/announcements/enums/announcement-types.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        AnnouncementTypes\n                    \n                \n                        \n                            \n                                 challenge\n                            \n                        \n                        \n                            \n                                Value : challenge\n                            \n                        \n                        \n                            \n                                 open\n                            \n                        \n                        \n                            \n                                Value : open\n                            \n                        \n            \n        \n\n    src/applicant/enums/application-states.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        ApplicationStates\n                    \n                \n                    \n                        \n                            applicant states\n\n                        \n                    \n                        \n                            \n                                 preregistered\n                            \n                        \n                        \n                            \n                                Value : preregistered\n                            \n                        \n                        \n                            \n                                 enrolled\n                            \n                        \n                        \n                            \n                                Value : enrolled\n                            \n                        \n                        \n                            \n                                 selected\n                            \n                        \n                        \n                            \n                                Value : selected\n                            \n                        \n            \n        \n\n    src/notifications/types-notifications/model/email-notification-types.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        EmailNotificationTypes\n                    \n                \n                    \n                        \n                            email notifications types\n\n                        \n                    \n                        \n                            \n                                 invitationToEvent\n                            \n                        \n                        \n                            \n                                Value : invitationToEvent\n                            \n                        \n                        \n                            \n                                 eventUpdate\n                            \n                        \n                        \n                            \n                                Value : eventUpdate\n                            \n                        \n                        \n                            \n                                 qualifiedResource\n                            \n                        \n                        \n                            \n                                Value : qualifiedResource\n                            \n                        \n                        \n                            \n                                 resourceExpiringSoon\n                            \n                        \n                        \n                            \n                                Value : resourceExpiringSoon\n                            \n                        \n                        \n                            \n                                 phaseCompletion\n                            \n                        \n                        \n                            \n                                Value : phaseCompletion\n                            \n                        \n                        \n                            \n                                 assessmentAvailable\n                            \n                        \n                        \n                            \n                                Value : assessmentAvailable\n                            \n                        \n                        \n                            \n                                 helpdeskTicketUpdate\n                            \n                        \n                        \n                            \n                                Value : helpdeskTicketUpdate\n                            \n                        \n            \n        \n\n    src/emails/enums/email-templates.ts\n    \n        \n            \n                \n                    \n                        \n                        EmailTemplates\n                    \n                \n                    \n                        \n                            posibles types of emails\n\n                        \n                    \n                        \n                            \n                                 invitation\n                            \n                        \n                        \n                            \n                                Value : invitation\n                            \n                        \n                        \n                            \n                                 notification\n                            \n                        \n                        \n                            \n                                Value : notification\n                            \n                        \n            \n        \n\n    src/forms/form/enums/form-collections.ts\n    \n        \n            \n                \n                    \n                        \n                        FormCollections\n                    \n                \n                    \n                        \n                            target collection for answered forms\n\n                        \n                    \n                        \n                            \n                                 announcements\n                            \n                        \n                        \n                            \n                                Value : announcements\n                            \n                        \n                        \n                            \n                                 resources\n                            \n                        \n                        \n                            \n                                Value : resources\n                            \n                        \n                        \n                            \n                                 survey\n                            \n                        \n                        \n                            \n                                Value : survey\n                            \n                        \n                        \n                            \n                                 entrepreneurs\n                            \n                        \n                        \n                            \n                                Value : entrepreneurs\n                            \n                        \n                        \n                            \n                                 startups\n                            \n                        \n                        \n                            \n                                Value : startups\n                            \n                        \n                        \n                            \n                                 evaluations\n                            \n                        \n                        \n                            \n                                Value : evaluations\n                            \n                        \n                        \n                            \n                                 experts\n                            \n                        \n                        \n                            \n                                Value : experts\n                            \n                        \n                        \n                            \n                                 businesses\n                            \n                        \n                        \n                            \n                                Value : businesses\n                            \n                        \n            \n        \n\n    src/invitations/enums/invitation-states.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        InvitationStates\n                    \n                \n                    \n                        \n                            states of invitations\n\n                        \n                    \n                        \n                            \n                                 enabled\n                            \n                        \n                        \n                            \n                                Value : enabled\n                            \n                        \n                        \n                            \n                                 disabled\n                            \n                        \n                        \n                            \n                                Value : disabled\n                            \n                        \n                        \n                            \n                                 accepted\n                            \n                        \n                        \n                            \n                                Value : accepted\n                            \n                        \n            \n        \n\n    src/notifications/enum/notification-states.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        NotificationStates\n                    \n                \n                    \n                        \n                            notifications states\n\n                        \n                    \n                        \n                            \n                                 pending\n                            \n                        \n                        \n                            \n                                Value : pending\n                            \n                        \n                        \n                            \n                                 read\n                            \n                        \n                        \n                            \n                                Value : read\n                            \n                        \n            \n        \n\n    src/notifications/enum/notification-types.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        NotificationTypes\n                    \n                \n                    \n                        \n                            notifications types\n\n                        \n                    \n                        \n                            \n                                 calendar\n                            \n                        \n                        \n                            \n                                Value : calendar\n                            \n                        \n                        \n                            \n                                 notes\n                            \n                        \n                        \n                            \n                                Value : notes\n                            \n                        \n                        \n                            \n                                 advise\n                            \n                        \n                        \n                            \n                                Value : advise\n                            \n                        \n                        \n                            \n                                 approved\n                            \n                        \n                        \n                            \n                                Value : approved\n                            \n                        \n                        \n                            \n                                 homework\n                            \n                        \n                        \n                            \n                                Value : homework\n                            \n                        \n                        \n                            \n                                 rate\n                            \n                        \n                        \n                            \n                                Value : rate\n                            \n                        \n            \n        \n\n    src/auth/enums/permissions.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        Permission\n                    \n                \n                    \n                        \n                            permission for accounts in app\n\n                        \n                    \n                        \n                            \n                                 view_startups\n                            \n                        \n                        \n                            \n                                Value : view_startups\n                            \n                        \n                        \n                            \n                                 load_all_startups\n                            \n                        \n                        \n                            \n                                Value : load_all_startups\n                            \n                        \n                        \n                            \n                                 create_startups\n                            \n                        \n                        \n                            \n                                Value : create_startups\n                            \n                        \n                        \n                            \n                                 edit_startups\n                            \n                        \n                        \n                            \n                                Value : edit_startups\n                            \n                        \n                        \n                            \n                                 view_experts\n                            \n                        \n                        \n                            \n                                Value : view_experts\n                            \n                        \n                        \n                            \n                                 create_experts\n                            \n                        \n                        \n                            \n                                Value : create_experts\n                            \n                        \n                        \n                            \n                                 edit_experts\n                            \n                        \n                        \n                            \n                                Value : edit_experts\n                            \n                        \n                        \n                            \n                                 view_entrepreneurs\n                            \n                        \n                        \n                            \n                                Value : view_entrepreneurs\n                            \n                        \n                        \n                            \n                                 load_all_entrepreneurs\n                            \n                        \n                        \n                            \n                                Value : load_all_entrepreneurs\n                            \n                        \n                        \n                            \n                                 create_entrepreneurs\n                            \n                        \n                        \n                            \n                                Value : create_entrepreneurs\n                            \n                        \n                        \n                            \n                                 edit_entrepreneurs\n                            \n                        \n                        \n                            \n                                Value : edit_entrepreneurs\n                            \n                        \n                        \n                            \n                                 view_business\n                            \n                        \n                        \n                            \n                                Value : view_business\n                            \n                        \n                        \n                            \n                                 create_business\n                            \n                        \n                        \n                            \n                                Value : create_business\n                            \n                        \n                        \n                            \n                                 edit_business\n                            \n                        \n                        \n                            \n                                Value : edit_business\n                            \n                        \n                        \n                            \n                                 download_all_tables\n                            \n                        \n                        \n                            \n                                Value : download_all_tables\n                            \n                        \n                        \n                            \n                                 reports_view\n                            \n                        \n                        \n                            \n                                Value : reports_view\n                            \n                        \n                        \n                            \n                                 reports_create\n                            \n                        \n                        \n                            \n                                Value : reports_create\n                            \n                        \n                        \n                            \n                                 reports_edit\n                            \n                        \n                        \n                            \n                                Value : reports_edit\n                            \n                        \n                        \n                            \n                                 community_view\n                            \n                        \n                        \n                            \n                                Value : community_view\n                            \n                        \n                        \n                            \n                                 community_edit\n                            \n                        \n                        \n                            \n                                Value : community_edit\n                            \n                        \n                        \n                            \n                                 form_view\n                            \n                        \n                        \n                            \n                                Value : form_view\n                            \n                        \n                        \n                            \n                                 form_create\n                            \n                        \n                        \n                            \n                                Value : form_create\n                            \n                        \n                        \n                            \n                                 form_edit\n                            \n                        \n                        \n                            \n                                Value : form_edit\n                            \n                        \n                        \n                            \n                                 help_desk_view\n                            \n                        \n                        \n                            \n                                Value : help_desk_view\n                            \n                        \n                        \n                            \n                                 help_desk_create\n                            \n                        \n                        \n                            \n                                Value : help_desk_create\n                            \n                        \n                        \n                            \n                                 help_desk_edit\n                            \n                        \n                        \n                            \n                                Value : help_desk_edit\n                            \n                        \n                        \n                            \n                                 sites_and_services_view\n                            \n                        \n                        \n                            \n                                Value : sites_and_services_view\n                            \n                        \n                        \n                            \n                                 sites_and_services_create\n                            \n                        \n                        \n                            \n                                Value : sites_and_services_create\n                            \n                        \n                        \n                            \n                                 sites_and_services_edit\n                            \n                        \n                        \n                            \n                                Value : sites_and_services_edit\n                            \n                        \n                        \n                            \n                                 announcements_view\n                            \n                        \n                        \n                            \n                                Value : announcements_view\n                            \n                        \n                        \n                            \n                                 announcements_challenges\n                            \n                        \n                        \n                            \n                                Value : announcements_challenges\n                            \n                        \n                        \n                            \n                                 announcements_edit_challenge\n                            \n                        \n                        \n                            \n                                Value : announcements_edit_challenge\n                            \n                        \n                        \n                            \n                                 announcements_create\n                            \n                        \n                        \n                            \n                                Value : announcements_create\n                            \n                        \n                        \n                            \n                                 announcements_edit\n                            \n                        \n                        \n                            \n                                Value : announcements_edit\n                            \n                        \n                        \n                            \n                                 phases_batch_access\n                            \n                        \n                        \n                            \n                                Value : phases_batch_access\n                            \n                        \n                        \n                            \n                                 phases_phase_access\n                            \n                        \n                        \n                            \n                                Value : phases_phase_access\n                            \n                        \n                        \n                            \n                                 phases_phase_edit\n                            \n                        \n                        \n                            \n                                Value : phases_phase_edit\n                            \n                        \n                        \n                            \n                                 phases_batch_create\n                            \n                        \n                        \n                            \n                                Value : phases_batch_create\n                            \n                        \n                        \n                            \n                                 phases_batch_edit\n                            \n                        \n                        \n                            \n                                Value : phases_batch_edit\n                            \n                        \n                        \n                            \n                                 phases_batch_close\n                            \n                        \n                        \n                            \n                                Value : phases_batch_close\n                            \n                        \n                        \n                            \n                                 events_view\n                            \n                        \n                        \n                            \n                                Value : events_view\n                            \n                        \n                        \n                            \n                                 load_all_events\n                            \n                        \n                        \n                            \n                                Value : load_all_events\n                            \n                        \n                        \n                            \n                                 events_create\n                            \n                        \n                        \n                            \n                                Value : events_create\n                            \n                        \n                        \n                            \n                                 events_edit\n                            \n                        \n                        \n                            \n                                Value : events_edit\n                            \n                        \n                        \n                            \n                                 actas_view\n                            \n                        \n                        \n                            \n                                Value : actas_view\n                            \n                        \n                        \n                            \n                                 actas_create\n                            \n                        \n                        \n                            \n                                Value : actas_create\n                            \n                        \n                        \n                            \n                                 actas_edit\n                            \n                        \n                        \n                            \n                                Value : actas_edit\n                            \n                        \n                        \n                            \n                                 actas_close\n                            \n                        \n                        \n                            \n                                Value : actas_close\n                            \n                        \n                        \n                            \n                                 hours_view\n                            \n                        \n                        \n                            \n                                Value : hours_view\n                            \n                        \n                        \n                            \n                                 hours_edit_activities\n                            \n                        \n                        \n                            \n                                Value : hours_edit_activities\n                            \n                        \n                        \n                            \n                                 hours_edit_startups\n                            \n                        \n                        \n                            \n                                Value : hours_edit_startups\n                            \n                        \n                        \n                            \n                                 hours_edit_experts\n                            \n                        \n                        \n                            \n                                Value : hours_edit_experts\n                            \n                        \n                        \n                            \n                                 hours_edit_teamCoach\n                            \n                        \n                        \n                            \n                                Value : hours_edit_teamCoach\n                            \n                        \n                        \n                            \n                                 evaluation_view\n                            \n                        \n                        \n                            \n                                Value : evaluation_view\n                            \n                        \n                        \n                            \n                                 evaluation_create\n                            \n                        \n                        \n                            \n                                Value : evaluation_create\n                            \n                        \n                        \n                            \n                                 evaluation_edit\n                            \n                        \n                        \n                            \n                                Value : evaluation_edit\n                            \n                        \n                        \n                            \n                                 evaluation_edit_docs\n                            \n                        \n                        \n                            \n                                Value : evaluation_edit_docs\n                            \n                        \n                        \n                            \n                                 homeworks_view\n                            \n                        \n                        \n                            \n                                Value : homeworks_view\n                            \n                        \n                        \n                            \n                                 homeworks_evaluate\n                            \n                        \n                        \n                            \n                                Value : homeworks_evaluate\n                            \n                        \n            \n        \n\n    src/resources/resources-replies/models/resorce-reply-states.ts\n    \n        \n            \n                \n                    \n                        \n                        ResourceReplyState\n                    \n                \n                    \n                        \n                            resources replies states\n\n                        \n                    \n                        \n                            \n                                 Pendiente\n                            \n                        \n                        \n                            \n                                Value : Pendiente\n                            \n                        \n                        \n                            \n                                 Sin descargar\n                            \n                        \n                        \n                            \n                                Value : Sin descargar\n                            \n                        \n                        \n                            \n                                 Sin evaluar\n                            \n                        \n                        \n                            \n                                Value : Sin evaluar\n                            \n                        \n                        \n                            \n                                 Descargado\n                            \n                        \n                        \n                            \n                                Value : Descargado\n                            \n                        \n                        \n                            \n                                 Evaluado\n                            \n                        \n                        \n                            \n                                Value : Evaluado\n                            \n                        \n                        \n                            \n                                 Aprobado\n                            \n                        \n                        \n                            \n                                Value : Aprobado\n                            \n                        \n                        \n                            \n                                 No aprobado\n                            \n                        \n                        \n                            \n                                Value : No aprobado\n                            \n                        \n            \n        \n\n    src/resources/enums/resources-types.ts\n    \n        \n            \n                \n                    \n                        \n                        ResourceType\n                    \n                \n                    \n                        \n                            resources types\n\n                        \n                    \n                        \n                            \n                                 downloadable\n                            \n                        \n                        \n                            \n                                Value : downloadable\n                            \n                        \n                        \n                            \n                                 task\n                            \n                        \n                        \n                            \n                                Value : task\n                            \n                        \n                        \n                            \n                                 form\n                            \n                        \n                        \n                            \n                                Value : form\n                            \n                        \n            \n        \n\n    src/table/models/table-column-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        TableColumnType\n                    \n                \n                    \n                        \n                            table column types\n\n                        \n                    \n                        \n                            \n                                 data\n                            \n                        \n                        \n                            \n                                Value : data\n                            \n                        \n                        \n                            \n                                 array\n                            \n                        \n                        \n                            \n                                Value : array\n                            \n                        \n            \n        \n\n    src/help-desk/enum/ticket-category.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        TicketCategory\n                    \n                \n                    \n                        \n                            category tickets\n\n                        \n                    \n                        \n                            \n                                 support\n                            \n                        \n                        \n                            \n                                Value : support\n                            \n                        \n                        \n                            \n                                 specializedConsulting\n                            \n                        \n                        \n                            \n                                Value : specializedConsulting\n                            \n                        \n                        \n                            \n                                 mentoring\n                            \n                        \n                        \n                            \n                                Value : mentoring\n                            \n                        \n                        \n                            \n                                 recommendation\n                            \n                        \n                        \n                            \n                                Value : recommendation\n                            \n                        \n                        \n                            \n                                 ctei\n                            \n                        \n                        \n                            \n                                Value : ctei\n                            \n                        \n            \n        \n\n    src/help-desk/enum/ticket-status.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        TicketEnum\n                    \n                \n                    \n                        \n                            ticket states\n\n                        \n                    \n                        \n                            \n                                 Open\n                            \n                        \n                        \n                            \n                                Value : Open\n                            \n                        \n                        \n                            \n                                 InProgress\n                            \n                        \n                        \n                            \n                                Value : InProgress\n                            \n                        \n                        \n                            \n                                 Closed\n                            \n                        \n                        \n                            \n                                Value : Closed\n                            \n                        \n            \n        \n\n    src/integrations/enum/types.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        TypeIntegration\n                    \n                \n                    \n                        \n                            types of integrations\n\n                        \n                    \n                        \n                            \n                                 zoom\n                            \n                        \n                        \n                            \n                                Value : zoom\n                            \n                        \n            \n        \n\n    src/auth/enums/valid-roles.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        ValidRoles\n                    \n                \n                    \n                        \n                            roles in app\n\n                        \n                    \n                        \n                            \n                                 superAdmin\n                            \n                        \n                        \n                            \n                                Value : superAdmin\n                            \n                        \n                        \n                            \n                                 admin\n                            \n                        \n                        \n                            \n                                Value : admin\n                            \n                        \n                        \n                            \n                                 expert\n                            \n                        \n                        \n                            \n                                Value : expert\n                            \n                        \n                        \n                            \n                                 user\n                            \n                        \n                        \n                            \n                                Value : user\n                            \n                        \n                        \n                            \n                                 host\n                            \n                        \n                        \n                            \n                                Value : host\n                            \n                        \n                        \n                            \n                                 teamCoach\n                            \n                        \n                        \n                            \n                                Value : teamCoach\n                            \n                        \n                        \n                            \n                                 challenger\n                            \n                        \n                        \n                            \n                                Value : challenger\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            getIcsObjectInstance   (src/.../ics.ts)\n                        \n                        \n                            getPermissionList   (src/.../permissions.enum.ts)\n                        \n                        \n                            infoWeekDates   (src/.../dates.utilities.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n            \n                \n                        main config app\n\n\n                \n            \n        \n    \n    src/shared/utilities/ics.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getIcsObjectInstance\n                        \n                    \n                \n            \n            \n                \ngetIcsObjectInstance(start_time, end_time, summary, description, location, url, nameOrganizer, emailOrganizer)\n                \n            \n\n\n\n\n            \n                \n                        class for ics file instance\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                start_time\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                end_time\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                summary\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                description\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                location\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                url\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                nameOrganizer\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                emailOrganizer\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/auth/enums/permissions.enum.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getPermissionList\n                        \n                    \n                \n            \n            \n                \ngetPermissionList(user: AuthUser)\n                \n            \n\n\n\n\n            \n                \n                        extract token from header\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            AuthUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/shared/utilities/dates.utilities.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        infoWeekDates\n                        \n                    \n                \n            \n            \n                \ninfoWeekDates()\n                \n            \n\n\n\n\n            \n                \n                        get dates during week\n\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\nExample :$ npm installRunning the app\nExample :# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\nExample :# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/item_permission.html":{"url":"interfaces/item_permission.html","title":"interface - item_permission","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  item_permission\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/enums/permissions.enum.ts\n        \n\n\n            \n                Description\n            \n            \n                extract token from header\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            activated\n                                        \n                                \n                                \n                                        \n                                            key\n                                        \n                                \n                                \n                                        \n                                            label\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        activated\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        activated:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        key:         Permission\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Permission\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AuthUser } from '../types/auth-user';\n\n/**\n * permission for accounts in app\n */\nexport enum Permission {\n  // Startups\n  view_startups = 'view_startups',\n  load_all_startups = 'load_all_startups',\n  create_startups = 'create_startups',\n  edit_startups = 'edit_startups',\n\n  // Experts\n  view_experts = 'view_experts',\n  create_experts = 'create_experts',\n  edit_experts = 'edit_experts',\n\n  // Entrepreneurs\n  view_entrepreneurs = 'view_entrepreneurs',\n  load_all_entrepreneurs = 'load_all_entrepreneurs',\n  create_entrepreneurs = 'create_entrepreneurs',\n  edit_entrepreneurs = 'edit_entrepreneurs',\n\n  // Business\n  view_business = 'view_business',\n  create_business = 'create_business',\n  edit_business = 'edit_business',\n\n  // Tables\n  download_all_tables = 'download_all_tables',\n\n  // Reports\n  reports_view = 'reports_view',\n  reports_create = 'reports_create',\n  reports_edit = 'reports_edit',\n\n  // Community\n  community_view = 'community_view',\n  community_edit = 'community_edit',\n\n  // Forms\n  form_view = 'form_view',\n  form_create = 'form_create',\n  form_edit = 'form_edit',\n\n  // Help Desk\n  help_desk_view = 'help_desk_view',\n  help_desk_create = 'help_desk_create',\n  help_desk_edit = 'help_desk_edit',\n\n  // Sites\n  sites_and_services_view = 'sites_and_services_view',\n  sites_and_services_create = 'sites_and_services_create',\n  sites_and_services_edit = 'sites_and_services_edit',\n\n  // Announcements\n  announcements_view = 'announcements_view',\n  announcements_challenges = 'announcements_challenges',\n  announcements_edit_challenge = 'announcements_edit_challenge',\n  announcements_create = 'announcements_create',\n  announcements_edit = 'announcements_edit',\n\n  // Phase and batch\n  phases_batch_access = 'phases_batch_access',\n  phases_phase_access = 'phases_phase_access',\n  phases_phase_edit = 'phases_phase_edit',\n\n  phases_batch_create = 'phases_batch_create',\n  phases_batch_edit = 'phases_batch_edit',\n  phases_batch_close = 'phases_batch_close',\n\n  // Phase Events\n  events_view = 'events_view',\n  load_all_events = 'load_all_events',\n  events_create = 'events_create',\n  events_edit = 'events_edit',\n\n  // Phase Actas\n  actas_view = 'actas_view',\n  actas_create = 'actas_create',\n  actas_edit = 'actas_edit',\n  actas_close = 'actas_close',\n\n  // Phase Hours bag\n  hours_view = 'hours_view',\n  hours_edit_activities = 'hours_edit_activities',\n  hours_edit_startups = 'hours_edit_startups',\n  hours_edit_experts = 'hours_edit_experts',\n  hours_edit_teamCoach = 'hours_edit_teamCoach',\n\n  // Evaluations\n  evaluation_view = 'evaluation_view',\n  evaluation_create = 'evaluation_create',\n  evaluation_edit = 'evaluation_edit',\n  evaluation_edit_docs = 'evaluation_edit_docs',\n\n  // Homeworks\n  homeworks_view = 'homeworks_view',\n  homeworks_evaluate = 'homeworks_evaluate',\n}\n\n/**\n * permission descriptions\n */\nexport const permissionDescriptions: Record = {\n  // Startups\n  [Permission.view_startups]: 'Ver sección Startups',\n  [Permission.load_all_startups]: 'Permitir que vea todas las startups',\n  [Permission.create_startups]: 'Crear startup',\n  [Permission.edit_startups]: 'Editar startup',\n\n  // Experts\n  [Permission.view_experts]: 'Ver sección expertos',\n  [Permission.create_experts]: 'Crear experto',\n  [Permission.edit_experts]: 'Editar expertos',\n\n  // Entrepreneurs\n  [Permission.view_entrepreneurs]: 'Ver sección empresarios',\n  [Permission.load_all_entrepreneurs]: 'Permitir que vea todos los empresarios',\n  [Permission.create_entrepreneurs]: 'Crear empresario',\n  [Permission.edit_entrepreneurs]: 'Editar empresarios',\n\n  // Business\n  [Permission.view_business]: 'Ver sección empresas',\n  [Permission.create_business]: 'Crear empresa',\n  [Permission.edit_business]: 'Editar empresas',\n\n  // Tables\n  [Permission.download_all_tables]: 'Descargar información de tablas',\n\n  // Reports\n  [Permission.reports_view]: 'Ver sección reportes',\n  [Permission.reports_create]: 'Crear reporte',\n  [Permission.reports_edit]: 'Editar reporte',\n\n  // Community\n  [Permission.community_view]: 'Ver sección comunidad',\n  [Permission.community_edit]: 'Editar visibilidad de comunidades',\n\n  // Forms\n  [Permission.form_view]: 'Ver sección formularios',\n  [Permission.form_create]: 'Crear formulario',\n  [Permission.form_edit]: 'Editar y borrar formularios',\n\n  // Help Desk\n  [Permission.help_desk_view]: 'Ver sección Mesa de ayuda',\n  [Permission.help_desk_create]: 'Crear hilo en mesa de ayuda',\n  [Permission.help_desk_edit]: 'Permitir editar un hilo en mesa de ayuda',\n\n  // Sites\n  [Permission.sites_and_services_view]: 'Ver sección Sedes y servicios',\n  [Permission.sites_and_services_create]: 'Crear sede y servicios',\n  [Permission.sites_and_services_edit]: 'Editar sede y servicios',\n\n  // Announcements\n  [Permission.announcements_view]: 'Ver sección convocatorias',\n  [Permission.announcements_challenges]: 'Crear reto',\n  [Permission.announcements_edit_challenge]: 'Editar reto',\n  [Permission.announcements_create]: 'Crear convocatoria',\n  [Permission.announcements_edit]: 'Editar convocatoria',\n\n  // Phase and batch\n  [Permission.phases_batch_access]: 'Ver sección fases',\n  [Permission.phases_phase_access]: 'Ver configuración de fases base',\n  [Permission.phases_phase_edit]: 'Permitir editar fase base',\n\n  [Permission.phases_batch_create]: 'Crear batch',\n  [Permission.phases_batch_edit]: 'Editar batch',\n  [Permission.phases_batch_close]:\n    'Puede cerrar un batch y asignar quienes pasan y quienes no',\n\n  // Phase Events\n  [Permission.events_view]: 'Ver sección eventos en los batch',\n  [Permission.load_all_events]: 'Permitir que vea todos los eventos del batch',\n  [Permission.events_create]: 'Crear evento',\n  [Permission.events_edit]: 'Editar evento',\n\n  // Phase Actas\n  [Permission.actas_view]: 'Ver actas de los eventos',\n  [Permission.actas_create]: 'Crear acta',\n  [Permission.actas_edit]: 'Editar acta',\n  [Permission.actas_close]: 'Cerrar acta',\n\n  // Phase Hours bag\n  [Permission.hours_view]: 'Ver sección bolsa de horas en batch',\n  [Permission.hours_edit_activities]: 'Editar límite de horas por actividad',\n  [Permission.hours_edit_startups]: 'Editar horas esperadas de los startups',\n  [Permission.hours_edit_experts]: 'Editar horas necesarios de los experto',\n  [Permission.hours_edit_teamCoach]:\n    'Editar horas necesarios de los team coach',\n\n  // Evaluations\n  [Permission.evaluation_view]: 'Ver sección de valuaciones en batch',\n  [Permission.evaluation_create]:\n    'Permitir crear una configuración para evaluaciones',\n  [Permission.evaluation_edit]:\n    'Permitir editar las configuraciones de una evaluación',\n  [Permission.evaluation_edit_docs]:\n    'Permitir evaluar en cualquiera de las evaluaciones',\n\n  // Homeworks\n  [Permission.homeworks_view]: 'Ver sección de tareas en batch',\n  [Permission.homeworks_evaluate]:\n    'Permitir evaluar las tareas de los participantes',\n};\n\n/**\n * get permission obj\n */\nexport const permissionDescription = (permission: Permission) => {\n  return permissionDescriptions[permission];\n};\n/**\n * extract token from header\n */\nexport interface item_permission {\n  label: string;\n  key: Permission;\n  activated: boolean;\n}\n/**\n * extract token from header\n */\nexport const list_of_permissions: item_permission[] = Object.entries(\n  permissionDescriptions,\n).map(([key, value]) => {\n  return {\n    label: value,\n    key: key as Permission,\n    activated: false,\n  };\n});\n/**\n * extract token from header\n */\nexport function getPermissionList(user: AuthUser) {\n  if (user.permissions && user.permissions.length !== 0) {\n    return user.permissions;\n  }\n  return user.rolDoc.permissions;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        ActaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ActivitiesConfigModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AnnouncementsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ApplicantModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthCodeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BusinessModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ConfigEvaluationsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ConfigNotificationsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ConfigurationAppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ContentModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DownloadsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EmailsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EntrepreneurModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EvaluationsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EventsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ExpertModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FormsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HelpDeskModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        IntegrationsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        InvitationsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LoggerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NotificationsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ParticipationEventsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PhasesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ResourcesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ResourcesRepliesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RolModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SitesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StagesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StartupModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StorageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TableModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TermsOfUseModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TicketCategoriesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TypesEventsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TypesNotificationsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserConfigModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserLogModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ActaModule\n\n\n\ncluster_ActaModule_imports\n\n\n\ncluster_ActaModule_exports\n\n\n\ncluster_ActaModule_providers\n\n\n\ncluster_ActivitiesConfigModule\n\n\n\ncluster_ActivitiesConfigModule_exports\n\n\n\ncluster_ActivitiesConfigModule_providers\n\n\n\ncluster_AnnouncementsModule\n\n\n\ncluster_AnnouncementsModule_imports\n\n\n\ncluster_AnnouncementsModule_providers\n\n\n\ncluster_ApplicantModule\n\n\n\ncluster_ApplicantModule_exports\n\n\n\ncluster_ApplicantModule_providers\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AuthCodeModule\n\n\n\ncluster_AuthCodeModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_BusinessModule\n\n\n\ncluster_BusinessModule_exports\n\n\n\ncluster_BusinessModule_providers\n\n\n\ncluster_ConfigEvaluationsModule\n\n\n\ncluster_ConfigEvaluationsModule_exports\n\n\n\ncluster_ConfigEvaluationsModule_providers\n\n\n\ncluster_ConfigNotificationsModule\n\n\n\ncluster_ConfigNotificationsModule_exports\n\n\n\ncluster_ConfigNotificationsModule_providers\n\n\n\ncluster_ConfigurationAppModule\n\n\n\ncluster_ConfigurationAppModule_exports\n\n\n\ncluster_ConfigurationAppModule_providers\n\n\n\ncluster_ContentModule\n\n\n\ncluster_ContentModule_exports\n\n\n\ncluster_ContentModule_providers\n\n\n\ncluster_DownloadsModule\n\n\n\ncluster_DownloadsModule_exports\n\n\n\ncluster_DownloadsModule_providers\n\n\n\ncluster_EmailsModule\n\n\n\ncluster_EmailsModule_exports\n\n\n\ncluster_EmailsModule_providers\n\n\n\ncluster_EntrepreneurModule\n\n\n\ncluster_EntrepreneurModule_exports\n\n\n\ncluster_EntrepreneurModule_providers\n\n\n\ncluster_EvaluationsModule\n\n\n\ncluster_EvaluationsModule_exports\n\n\n\ncluster_EvaluationsModule_providers\n\n\n\ncluster_EventsModule\n\n\n\ncluster_EventsModule_imports\n\n\n\ncluster_EventsModule_exports\n\n\n\ncluster_EventsModule_providers\n\n\n\ncluster_ExpertModule\n\n\n\ncluster_ExpertModule_exports\n\n\n\ncluster_ExpertModule_providers\n\n\n\ncluster_FormsModule\n\n\n\ncluster_FormsModule_imports\n\n\n\ncluster_FormsModule_exports\n\n\n\ncluster_FormsModule_providers\n\n\n\ncluster_HelpDeskModule\n\n\n\ncluster_HelpDeskModule_exports\n\n\n\ncluster_HelpDeskModule_providers\n\n\n\ncluster_IntegrationsModule\n\n\n\ncluster_IntegrationsModule_exports\n\n\n\ncluster_IntegrationsModule_providers\n\n\n\ncluster_InvitationsModule\n\n\n\ncluster_InvitationsModule_exports\n\n\n\ncluster_InvitationsModule_providers\n\n\n\ncluster_LoggerModule\n\n\n\ncluster_LoggerModule_exports\n\n\n\ncluster_NotificationsModule\n\n\n\ncluster_NotificationsModule_exports\n\n\n\ncluster_NotificationsModule_providers\n\n\n\ncluster_ParticipationEventsModule\n\n\n\ncluster_ParticipationEventsModule_exports\n\n\n\ncluster_ParticipationEventsModule_providers\n\n\n\ncluster_PhasesModule\n\n\n\ncluster_PhasesModule_exports\n\n\n\ncluster_PhasesModule_providers\n\n\n\ncluster_ResourcesModule\n\n\n\ncluster_ResourcesModule_exports\n\n\n\ncluster_ResourcesModule_providers\n\n\n\ncluster_ResourcesRepliesModule\n\n\n\ncluster_ResourcesRepliesModule_exports\n\n\n\ncluster_ResourcesRepliesModule_providers\n\n\n\ncluster_RolModule\n\n\n\ncluster_RolModule_exports\n\n\n\ncluster_RolModule_providers\n\n\n\ncluster_SitesModule\n\n\n\ncluster_SitesModule_exports\n\n\n\ncluster_SitesModule_providers\n\n\n\ncluster_StagesModule\n\n\n\ncluster_StagesModule_exports\n\n\n\ncluster_StagesModule_providers\n\n\n\ncluster_StartupModule\n\n\n\ncluster_StartupModule_exports\n\n\n\ncluster_StartupModule_providers\n\n\n\ncluster_StorageModule\n\n\n\ncluster_StorageModule_exports\n\n\n\ncluster_TableModule\n\n\n\ncluster_TableModule_exports\n\n\n\ncluster_TableModule_providers\n\n\n\ncluster_TermsOfUseModule\n\n\n\ncluster_TermsOfUseModule_exports\n\n\n\ncluster_TermsOfUseModule_providers\n\n\n\ncluster_TicketCategoriesModule\n\n\n\ncluster_TicketCategoriesModule_providers\n\n\n\ncluster_TypesEventsModule\n\n\n\ncluster_TypesEventsModule_exports\n\n\n\ncluster_TypesEventsModule_providers\n\n\n\ncluster_TypesNotificationsModule\n\n\n\ncluster_TypesNotificationsModule_providers\n\n\n\ncluster_UserConfigModule\n\n\n\ncluster_UserConfigModule_providers\n\n\n\ncluster_UserLogModule\n\n\n\ncluster_UserLogModule_exports\n\n\n\ncluster_UserLogModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nActaModule\n\nActaModule\n\nActaModule -->\n\nAuthModule->ActaModule\n\n\n\n\n\nActivitiesConfigModule\n\nActivitiesConfigModule\n\nActivitiesConfigModule -->\n\nAuthModule->ActivitiesConfigModule\n\n\n\n\n\nApplicantModule\n\nApplicantModule\n\nApplicantModule -->\n\nAuthModule->ApplicantModule\n\n\n\n\n\nFormsModule\n\nFormsModule\n\nFormsModule -->\n\nAuthModule->FormsModule\n\n\n\n\n\nAnnouncementsModule\n\nAnnouncementsModule\n\nAnnouncementsModule -->\n\nAuthModule->AnnouncementsModule\n\n\n\n\n\nAuthCodeModule\n\nAuthCodeModule\n\nAuthCodeModule -->\n\nAuthModule->AuthCodeModule\n\n\n\n\n\nBusinessModule\n\nBusinessModule\n\nBusinessModule -->\n\nAuthModule->BusinessModule\n\n\n\n\n\nConfigEvaluationsModule\n\nConfigEvaluationsModule\n\nConfigEvaluationsModule -->\n\nAuthModule->ConfigEvaluationsModule\n\n\n\n\n\nConfigurationAppModule\n\nConfigurationAppModule\n\nConfigurationAppModule -->\n\nAuthModule->ConfigurationAppModule\n\n\n\n\n\nContentModule\n\nContentModule\n\nContentModule -->\n\nAuthModule->ContentModule\n\n\n\n\n\nDownloadsModule\n\nDownloadsModule\n\nDownloadsModule -->\n\nAuthModule->DownloadsModule\n\n\n\n\n\nEntrepreneurModule\n\nEntrepreneurModule\n\nEntrepreneurModule -->\n\nAuthModule->EntrepreneurModule\n\n\n\n\n\nEvaluationsModule\n\nEvaluationsModule\n\nEvaluationsModule -->\n\nAuthModule->EvaluationsModule\n\n\n\n\n\nEventsModule\n\nEventsModule\n\nEventsModule -->\n\nAuthModule->EventsModule\n\n\n\n\n\nExpertModule\n\nExpertModule\n\nExpertModule -->\n\nAuthModule->ExpertModule\n\n\n\n\n\nHelpDeskModule\n\nHelpDeskModule\n\nHelpDeskModule -->\n\nAuthModule->HelpDeskModule\n\n\n\n\n\nIntegrationsModule\n\nIntegrationsModule\n\nIntegrationsModule -->\n\nAuthModule->IntegrationsModule\n\n\n\n\n\nInvitationsModule\n\nInvitationsModule\n\nInvitationsModule -->\n\nAuthModule->InvitationsModule\n\n\n\n\n\nPhasesModule\n\nPhasesModule\n\nPhasesModule -->\n\nAuthModule->PhasesModule\n\n\n\n\n\nResourcesModule\n\nResourcesModule\n\nResourcesModule -->\n\nAuthModule->ResourcesModule\n\n\n\n\n\nResourcesRepliesModule\n\nResourcesRepliesModule\n\nResourcesRepliesModule -->\n\nAuthModule->ResourcesRepliesModule\n\n\n\n\n\nRolModule\n\nRolModule\n\nRolModule -->\n\nAuthModule->RolModule\n\n\n\n\n\nSitesModule\n\nSitesModule\n\nSitesModule -->\n\nAuthModule->SitesModule\n\n\n\n\n\nStagesModule\n\nStagesModule\n\nStagesModule -->\n\nAuthModule->StagesModule\n\n\n\n\n\nStartupModule\n\nStartupModule\n\nStartupModule -->\n\nAuthModule->StartupModule\n\n\n\n\n\nTableModule\n\nTableModule\n\nTableModule -->\n\nAuthModule->TableModule\n\n\n\n\n\nTermsOfUseModule\n\nTermsOfUseModule\n\nTermsOfUseModule -->\n\nAuthModule->TermsOfUseModule\n\n\n\n\n\nTypesEventsModule\n\nTypesEventsModule\n\nTypesEventsModule -->\n\nAuthModule->TypesEventsModule\n\n\n\n\n\nUserConfigModule\n\nUserConfigModule\n\nUserConfigModule -->\n\nAuthModule->UserConfigModule\n\n\n\n\n\nUserLogModule\n\nUserLogModule\n\nUserLogModule -->\n\nAuthModule->UserLogModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nParticipationEventsModule\n\nParticipationEventsModule\n\nParticipationEventsModule -->\n\nAuthModule->ParticipationEventsModule\n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nAuthModule -->\n\nLoggerModule->AuthModule\n\n\n\nActaModule -->\n\nLoggerModule->ActaModule\n\n\n\nActivitiesConfigModule -->\n\nLoggerModule->ActivitiesConfigModule\n\n\n\nConfigEvaluationsModule -->\n\nLoggerModule->ConfigEvaluationsModule\n\n\n\nConfigurationAppModule -->\n\nLoggerModule->ConfigurationAppModule\n\n\n\nContentModule -->\n\nLoggerModule->ContentModule\n\n\n\n\n\nEmailsModule\n\nEmailsModule\n\nEmailsModule -->\n\nLoggerModule->EmailsModule\n\n\n\nEvaluationsModule -->\n\nLoggerModule->EvaluationsModule\n\n\n\nEventsModule -->\n\nLoggerModule->EventsModule\n\n\n\nHelpDeskModule -->\n\nLoggerModule->HelpDeskModule\n\n\n\nIntegrationsModule -->\n\nLoggerModule->IntegrationsModule\n\n\n\nInvitationsModule -->\n\nLoggerModule->InvitationsModule\n\n\n\nPhasesModule -->\n\nLoggerModule->PhasesModule\n\n\n\nResourcesModule -->\n\nLoggerModule->ResourcesModule\n\n\n\nResourcesRepliesModule -->\n\nLoggerModule->ResourcesRepliesModule\n\n\n\nSitesModule -->\n\nLoggerModule->SitesModule\n\n\n\nStagesModule -->\n\nLoggerModule->StagesModule\n\n\n\nTermsOfUseModule -->\n\nLoggerModule->TermsOfUseModule\n\n\n\nTypesEventsModule -->\n\nLoggerModule->TypesEventsModule\n\n\n\nUserLogModule -->\n\nLoggerModule->UserLogModule\n\n\n\nAppModule -->\n\nLoggerModule->AppModule\n\n\n\nParticipationEventsModule -->\n\nLoggerModule->ParticipationEventsModule\n\n\n\n\n\nAppLogger \n\nAppLogger \n\nAppLogger  -->\n\nLoggerModule->AppLogger \n\n\n\n\n\nActaService \n\nActaService \n\nActaService  -->\n\nActaModule->ActaService \n\n\n\nEventsModule -->\n\nActaModule->EventsModule\n\n\n\n\n\nActaService\n\nActaService\n\nActaModule -->\n\nActaService->ActaModule\n\n\n\n\n\nActivitiesConfigService \n\nActivitiesConfigService \n\nActivitiesConfigService  -->\n\nActivitiesConfigModule->ActivitiesConfigService \n\n\n\nPhasesModule -->\n\nActivitiesConfigModule->PhasesModule\n\n\n\nAppModule -->\n\nActivitiesConfigModule->AppModule\n\n\n\n\n\nActivitiesConfigService\n\nActivitiesConfigService\n\nActivitiesConfigModule -->\n\nActivitiesConfigService->ActivitiesConfigModule\n\n\n\nAnnouncementsModule -->\n\nApplicantModule->AnnouncementsModule\n\n\n\n\n\nApplicantService \n\nApplicantService \n\nApplicantService  -->\n\nApplicantModule->ApplicantService \n\n\n\nAppModule -->\n\nApplicantModule->AppModule\n\n\n\nAnnouncementsModule -->\n\nFormsModule->AnnouncementsModule\n\n\n\nAppModule -->\n\nFormsModule->AppModule\n\n\n\n\n\nFormsService \n\nFormsService \n\nFormsService  -->\n\nFormsModule->FormsService \n\n\n\n\n\nUsersModule\n\nUsersModule\n\nApplicantModule -->\n\nUsersModule->ApplicantModule\n\n\n\nFormsModule -->\n\nUsersModule->FormsModule\n\n\n\nAnnouncementsModule -->\n\nUsersModule->AnnouncementsModule\n\n\n\nBusinessModule -->\n\nUsersModule->BusinessModule\n\n\n\nDownloadsModule -->\n\nUsersModule->DownloadsModule\n\n\n\nEntrepreneurModule -->\n\nUsersModule->EntrepreneurModule\n\n\n\nExpertModule -->\n\nUsersModule->ExpertModule\n\n\n\nExpertModule -->\n\nUsersModule->ExpertModule\n\n\n\nInvitationsModule -->\n\nUsersModule->InvitationsModule\n\n\n\nPhasesModule -->\n\nUsersModule->PhasesModule\n\n\n\nTableModule -->\n\nUsersModule->TableModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\nAppModule -->\n\nAnnouncementsModule->AppModule\n\n\n\n\n\nAnnouncementsService\n\nAnnouncementsService\n\nAnnouncementsModule -->\n\nAnnouncementsService->AnnouncementsModule\n\n\n\n\n\nApplicantService\n\nApplicantService\n\nApplicantModule -->\n\nApplicantService->ApplicantModule\n\n\n\nAppModule -->\n\nAuthCodeModule->AppModule\n\n\n\nAppModule -->\n\nBusinessModule->AppModule\n\n\n\n\n\nBusinessService \n\nBusinessService \n\nBusinessService  -->\n\nBusinessModule->BusinessService \n\n\n\nAppModule -->\n\nConfigEvaluationsModule->AppModule\n\n\n\n\n\nConfigEvaluationsService \n\nConfigEvaluationsService \n\nConfigEvaluationsService  -->\n\nConfigEvaluationsModule->ConfigEvaluationsService \n\n\n\nAppModule -->\n\nConfigurationAppModule->AppModule\n\n\n\n\n\nConfigurationAppService \n\nConfigurationAppService \n\nConfigurationAppService  -->\n\nConfigurationAppModule->ConfigurationAppService \n\n\n\nPhasesModule -->\n\nContentModule->PhasesModule\n\n\n\nAppModule -->\n\nContentModule->AppModule\n\n\n\n\n\nContentService \n\nContentService \n\nContentService  -->\n\nContentModule->ContentService \n\n\n\nBusinessModule -->\n\nDownloadsModule->BusinessModule\n\n\n\nEntrepreneurModule -->\n\nDownloadsModule->EntrepreneurModule\n\n\n\nExpertModule -->\n\nDownloadsModule->ExpertModule\n\n\n\nStartupModule -->\n\nDownloadsModule->StartupModule\n\n\n\nAppModule -->\n\nDownloadsModule->AppModule\n\n\n\n\n\nDownloadsService \n\nDownloadsService \n\nDownloadsService  -->\n\nDownloadsModule->DownloadsService \n\n\n\nInvitationsModule -->\n\nEmailsModule->InvitationsModule\n\n\n\nAppModule -->\n\nEmailsModule->AppModule\n\n\n\n\n\nEmailsService \n\nEmailsService \n\nEmailsService  -->\n\nEmailsModule->EmailsService \n\n\n\nAppModule -->\n\nEntrepreneurModule->AppModule\n\n\n\n\n\nEntrepreneurService \n\nEntrepreneurService \n\nEntrepreneurService  -->\n\nEntrepreneurModule->EntrepreneurService \n\n\n\nAppModule -->\n\nEvaluationsModule->AppModule\n\n\n\n\n\nEvaluationsService \n\nEvaluationsService \n\nEvaluationsService  -->\n\nEvaluationsModule->EvaluationsService \n\n\n\nAppModule -->\n\nEventsModule->AppModule\n\n\n\n\n\nEventsService \n\nEventsService \n\nEventsService  -->\n\nEventsModule->EventsService \n\n\n\nAppModule -->\n\nExpertModule->AppModule\n\n\n\n\n\nExpertService \n\nExpertService \n\nExpertService  -->\n\nExpertModule->ExpertService \n\n\n\nAppModule -->\n\nHelpDeskModule->AppModule\n\n\n\n\n\nHelpDeskService \n\nHelpDeskService \n\nHelpDeskService  -->\n\nHelpDeskModule->HelpDeskService \n\n\n\nAppModule -->\n\nIntegrationsModule->AppModule\n\n\n\n\n\nIntegrationsService \n\nIntegrationsService \n\nIntegrationsService  -->\n\nIntegrationsModule->IntegrationsService \n\n\n\nAppModule -->\n\nInvitationsModule->AppModule\n\n\n\n\n\nInvitationsService \n\nInvitationsService \n\nInvitationsService  -->\n\nInvitationsModule->InvitationsService \n\n\n\n\n\nNotificationsModule\n\nNotificationsModule\n\nAppModule -->\n\nNotificationsModule->AppModule\n\n\n\n\n\nNotificationListenerService \n\nNotificationListenerService \n\nNotificationListenerService  -->\n\nNotificationsModule->NotificationListenerService \n\n\n\n\n\nNotificationsService \n\nNotificationsService \n\nNotificationsService  -->\n\nNotificationsModule->NotificationsService \n\n\n\nAppModule -->\n\nPhasesModule->AppModule\n\n\n\n\n\nPhasesService \n\nPhasesService \n\nPhasesService  -->\n\nPhasesModule->PhasesService \n\n\n\nPhasesModule -->\n\nResourcesModule->PhasesModule\n\n\n\nAppModule -->\n\nResourcesModule->AppModule\n\n\n\n\n\nResourcesService \n\nResourcesService \n\nResourcesService  -->\n\nResourcesModule->ResourcesService \n\n\n\nAppModule -->\n\nResourcesRepliesModule->AppModule\n\n\n\n\n\nResourcesRepliesService \n\nResourcesRepliesService \n\nResourcesRepliesService  -->\n\nResourcesRepliesModule->ResourcesRepliesService \n\n\n\nUsersModule -->\n\nRolModule->UsersModule\n\n\n\nAppModule -->\n\nRolModule->AppModule\n\n\n\n\n\nRolService \n\nRolService \n\nRolService  -->\n\nRolModule->RolService \n\n\n\nAppModule -->\n\nSitesModule->AppModule\n\n\n\n\n\nSitesService \n\nSitesService \n\nSitesService  -->\n\nSitesModule->SitesService \n\n\n\nAppModule -->\n\nStagesModule->AppModule\n\n\n\n\n\nStagesService \n\nStagesService \n\nStagesService  -->\n\nStagesModule->StagesService \n\n\n\nAppModule -->\n\nStartupModule->AppModule\n\n\n\n\n\nStartupService \n\nStartupService \n\nStartupService  -->\n\nStartupModule->StartupService \n\n\n\n\n\nStorageModule\n\nStorageModule\n\nDownloadsModule -->\n\nStorageModule->DownloadsModule\n\n\n\nAppModule -->\n\nStorageModule->AppModule\n\n\n\n\n\nStorageService \n\nStorageService \n\nStorageService  -->\n\nStorageModule->StorageService \n\n\n\nAppModule -->\n\nTableModule->AppModule\n\n\n\n\n\nTableConfigService \n\nTableConfigService \n\nTableConfigService  -->\n\nTableModule->TableConfigService \n\n\n\nAppModule -->\n\nTermsOfUseModule->AppModule\n\n\n\n\n\nTermsOfUseService \n\nTermsOfUseService \n\nTermsOfUseService  -->\n\nTermsOfUseModule->TermsOfUseService \n\n\n\nAppModule -->\n\nTypesEventsModule->AppModule\n\n\n\n\n\nTypesEventsService \n\nTypesEventsService \n\nTypesEventsService  -->\n\nTypesEventsModule->TypesEventsService \n\n\n\n\n\nTypesNotificationsModule\n\nTypesNotificationsModule\n\nNotificationsModule -->\n\nTypesNotificationsModule->NotificationsModule\n\n\n\nAppModule -->\n\nTypesNotificationsModule->AppModule\n\n\n\nAppModule -->\n\nUserConfigModule->AppModule\n\n\n\nAppModule -->\n\nUserLogModule->AppModule\n\n\n\n\n\nUserLogService \n\nUserLogService \n\nUserLogService  -->\n\nUserLogModule->UserLogService \n\n\n\n\n\nAuthCodeService\n\nAuthCodeService\n\nAuthCodeModule -->\n\nAuthCodeService->AuthCodeModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nBusinessService\n\nBusinessService\n\nBusinessModule -->\n\nBusinessService->BusinessModule\n\n\n\n\n\nConfigEvaluationsService\n\nConfigEvaluationsService\n\nConfigEvaluationsModule -->\n\nConfigEvaluationsService->ConfigEvaluationsModule\n\n\n\n\n\nConfigNotificationsService \n\nConfigNotificationsService \n\n\n\nConfigNotificationsModule\n\nConfigNotificationsModule\n\nNotificationsModule -->\n\nConfigNotificationsModule->NotificationsModule\n\n\n\nUserConfigModule -->\n\nConfigNotificationsModule->UserConfigModule\n\n\n\nConfigNotificationsService  -->\n\nConfigNotificationsModule->ConfigNotificationsService \n\n\n\n\n\nConfigNotificationsService\n\nConfigNotificationsService\n\nConfigNotificationsModule -->\n\nConfigNotificationsService->ConfigNotificationsModule\n\n\n\n\n\nConfigurationAppService\n\nConfigurationAppService\n\nConfigurationAppModule -->\n\nConfigurationAppService->ConfigurationAppModule\n\n\n\n\n\nContentService\n\nContentService\n\nContentModule -->\n\nContentService->ContentModule\n\n\n\n\n\nDownloadsService\n\nDownloadsService\n\nDownloadsModule -->\n\nDownloadsService->DownloadsModule\n\n\n\n\n\nEmailsService\n\nEmailsService\n\nEmailsModule -->\n\nEmailsService->EmailsModule\n\n\n\n\n\nEntrepreneurService\n\nEntrepreneurService\n\nEntrepreneurModule -->\n\nEntrepreneurService->EntrepreneurModule\n\n\n\n\n\nEvaluationsService\n\nEvaluationsService\n\nEvaluationsModule -->\n\nEvaluationsService->EvaluationsModule\n\n\n\nEventsModule -->\n\nParticipationEventsModule->EventsModule\n\n\n\n\n\nParticipationEventsService \n\nParticipationEventsService \n\nParticipationEventsService  -->\n\nParticipationEventsModule->ParticipationEventsService \n\n\n\n\n\nEventsService\n\nEventsService\n\nEventsModule -->\n\nEventsService->EventsModule\n\n\n\n\n\nExpertService\n\nExpertService\n\nExpertModule -->\n\nExpertService->ExpertModule\n\n\n\n\n\nformDocumentServiceImports\n\nformDocumentServiceImports\n\nFormsModule -->\n\nformDocumentServiceImports->FormsModule\n\n\n\n\n\nFormSubscriptionService\n\nFormSubscriptionService\n\nFormsModule -->\n\nFormSubscriptionService->FormsModule\n\n\n\n\n\nFormTagService\n\nFormTagService\n\nFormsModule -->\n\nFormTagService->FormsModule\n\n\n\n\n\nFormsService\n\nFormsService\n\nFormsModule -->\n\nFormsService->FormsModule\n\n\n\n\n\nHelpDeskService\n\nHelpDeskService\n\nHelpDeskModule -->\n\nHelpDeskService->HelpDeskModule\n\n\n\n\n\nIntegrationsService\n\nIntegrationsService\n\nIntegrationsModule -->\n\nIntegrationsService->IntegrationsModule\n\n\n\n\n\nInvitationsService\n\nInvitationsService\n\nInvitationsModule -->\n\nInvitationsService->InvitationsModule\n\n\n\n\n\nNotificationsService\n\nNotificationsService\n\nNotificationsModule -->\n\nNotificationsService->NotificationsModule\n\n\n\n\n\nParticipationEventsService\n\nParticipationEventsService\n\nParticipationEventsModule -->\n\nParticipationEventsService->ParticipationEventsModule\n\n\n\n\n\nPhasesService\n\nPhasesService\n\nPhasesModule -->\n\nPhasesService->PhasesModule\n\n\n\n\n\nResourcesService\n\nResourcesService\n\nResourcesModule -->\n\nResourcesService->ResourcesModule\n\n\n\n\n\nResourcesRepliesService\n\nResourcesRepliesService\n\nResourcesRepliesModule -->\n\nResourcesRepliesService->ResourcesRepliesModule\n\n\n\n\n\nRolService\n\nRolService\n\nRolModule -->\n\nRolService->RolModule\n\n\n\n\n\nSitesService\n\nSitesService\n\nSitesModule -->\n\nSitesService->SitesModule\n\n\n\n\n\nStagesService\n\nStagesService\n\nStagesModule -->\n\nStagesService->StagesModule\n\n\n\n\n\nStartupService\n\nStartupService\n\nStartupModule -->\n\nStartupService->StartupModule\n\n\n\n\n\nTableConfigService\n\nTableConfigService\n\nTableModule -->\n\nTableConfigService->TableModule\n\n\n\n\n\nTableService\n\nTableService\n\nTableModule -->\n\nTableService->TableModule\n\n\n\n\n\nTermsOfUseService\n\nTermsOfUseService\n\nTermsOfUseModule -->\n\nTermsOfUseService->TermsOfUseModule\n\n\n\n\n\nTicketCategoriesService\n\nTicketCategoriesService\n\n\n\nTicketCategoriesModule\n\nTicketCategoriesModule\n\nTicketCategoriesModule -->\n\nTicketCategoriesService->TicketCategoriesModule\n\n\n\n\n\nTypesEventsService\n\nTypesEventsService\n\nTypesEventsModule -->\n\nTypesEventsService->TypesEventsModule\n\n\n\n\n\nTypesNotificationsService\n\nTypesNotificationsService\n\nTypesNotificationsModule -->\n\nTypesNotificationsService->TypesNotificationsModule\n\n\n\n\n\nUserConfigService\n\nUserConfigService\n\nUserConfigModule -->\n\nUserConfigService->UserConfigModule\n\n\n\n\n\nUserLogService\n\nUserLogService\n\nUserLogModule -->\n\nUserLogService->UserLogModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        41 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    42 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    148 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    3 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            BearerToken   (src/.../bearer-token.decorator.ts)\n                        \n                        \n                            buildAggregationFromRequest   (src/.../request.utilities.ts)\n                        \n                        \n                            CurrentUser   (src/.../current-user.decorator.ts)\n                        \n                        \n                            default_notification_types   (src/.../types-notification.default.ts)\n                        \n                        \n                            default_types_events   (src/.../type-events.default.ts)\n                        \n                        \n                            defaultRoles   (src/.../rol.ts)\n                        \n                        \n                            excelUtilities   (src/.../excel.utilities.ts)\n                        \n                        \n                            list_of_permissions   (src/.../permissions.enum.ts)\n                        \n                        \n                            listPermission   (src/.../rol.ts)\n                        \n                        \n                            permissionDescription   (src/.../permissions.enum.ts)\n                        \n                        \n                            permissionDescriptions   (src/.../permissions.enum.ts)\n                        \n                        \n                            rolNames   (src/.../valid-roles.enum.ts)\n                        \n                        \n                            rolValues   (src/.../valid-roles.enum.ts)\n                        \n                        \n                            templateNames   (src/.../email-templates.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/auth/decorators/bearer-token.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        BearerToken\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n  (_params: any, context: ExecutionContext) => {\n    const ctx = GqlExecutionContext.create(context);\n    const token: string = ctx.getContext().req.token;\n    return token;\n  },\n)\n                    \n                \n\n            \n                \n                    extract token from header\n\n                \n            \n\n        \n    \n\n    src/shared/utilities/request.utilities.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        buildAggregationFromRequest\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n  request: PageRequest,\n  options: AggregateBuildOptions,\n) => {\n  const {\n    lookups,\n    project,\n    defaultMatch,\n    paginated,\n    outputProjection,\n    virtualFields,\n  } = options;\n  const aggregation: any[] = [];\n  const skip = request.skip != null ? { $skip: request.skip } : null;\n  const limit = request.limit != null ? { $limit: request.limit } : null;\n  const sort = {\n    $sort: request.sort.reduce((prev, curr) => {\n      prev[curr.field] = curr.order;\n      return prev;\n    }, {}),\n  };\n  const foreignSort = {\n    $sort: request.foreignSort.reduce((prev, curr) => {\n      prev[curr.field] = curr.order;\n      return prev;\n    }, {}),\n  };\n  const idSorting = { $sort: { _id: 1 } };\n\n  const match = _buildMatch(request.filter);\n  const foreignMatch = _buildMatch(request.foreignFilter, {});\n  const globalMatch = request?.globalFilter\n    ? _buildMatch([request.globalFilter])\n    : null;\n\n  const documentsFacet = [];\n  if (skip) {\n    documentsFacet.push(skip);\n  }\n  if (limit) {\n    documentsFacet.push(limit);\n  }\n  let output: any[];\n  if (paginated) {\n    output = [\n      {\n        $facet: {\n          documents: documentsFacet,\n          totalRecords: [{ $count: 'count' }],\n        },\n      },\n      { $unwind: { path: '$totalRecords', preserveNullAndEmptyArrays: true } },\n      {\n        $project: {\n          documents: '$documents',\n          totalRecords: { $ifNull: ['$totalRecords.count', 0] },\n        },\n      },\n    ];\n  } else {\n    output = documentsFacet;\n  }\n  // Apply default match operations first, this should use indexes.\n  aggregation.push({ $match: defaultMatch });\n  // Project calculated fields (Like separate diferent types of an array element)\n  if (project) {\n    aggregation.push(project);\n  }\n  if (virtualFields) {\n    aggregation.push(virtualFields);\n  }\n  // Add non-foreign match operations to reduce amount of elements during lookups\n  if (request.filter.length > 0) {\n    aggregation.push(match);\n  }\n  // Apply lookups to search for additional fields\n  aggregation.push(...lookups);\n  // Apply filters that are related to array fields\n  // Apply foreign filters, this should always go after lookups\n  if (request.foreignFilter.length > 0) {\n    aggregation.push(foreignMatch);\n  }\n  // Apply global match if any\n  if (globalMatch != null) {\n    aggregation.push(globalMatch);\n  }\n  // If sorting by any field do an id sort first.\n  if (request.sort.length > 0 || request.foreignSort.length > 0) {\n    aggregation.push(idSorting);\n  }\n  // Apply local sorts\n  if (request.sort.length > 0) {\n    aggregation.push(sort);\n  }\n  // Apply Foreign sorts\n  if (request.foreignSort.length > 0) {\n    aggregation.push(foreignSort);\n  }\n  // Apply output projection, remove unnecesary fields\n  if (outputProjection) {\n    documentsFacet.push(outputProjection);\n  }\n  // Push last output operation\n  // If a request is paginated (Usually case for tables, this implies)\n  aggregation.push(...output);\n\n  // const util = require('util');\n  // console.log(util.inspect(request, {showHidden: false, depth: null, colors: true}));\n  // console.log(util.inspect(aggregation, {showHidden: false, depth: null, colors: true}));\n  return aggregation;\n}\n                    \n                \n\n            \n                \n                    default pipelines for table request\n\n                \n            \n\n        \n    \n\n    src/auth/decorators/current-user.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CurrentUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n  (roles: ValidRoles[] = [], context: ExecutionContext) => {\n    const ctx = GqlExecutionContext.create(context);\n    const user: AuthUser = ctx.getContext().req.user;\n    const rol = ctx.getContext().req.rol;\n    user['rolDoc'] = rol;\n    if (!user) {\n      throw new InternalServerErrorException(\n        `No user inside the request - make sure that we used the AuthGuard`,\n      );\n    }\n\n    if (roles.length === 0) return user;\n\n    if (!user.rol) {\n      throw new ForbiddenException(\n        'Attempted to access a protected route with a user without roles or document',\n      );\n    }\n\n    if (user.isActive === false) {\n      throw new ForbiddenException(\n        'Attempted to access a protected route with a disabled user',\n      );\n    }\n\n    if (roles.includes(rol.type as ValidRoles)) {\n      return user;\n    }\n\n    throw new ForbiddenException(\n      `User ${user.fullName} need a valid role [${roles}]`,\n    );\n  },\n)\n                    \n                \n\n            \n                \n                    get user from token\n\n                \n            \n\n        \n    \n\n    src/notifications/types-notifications/model/types-notification.default.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        default_notification_types\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    _id: new Types.ObjectId('646f943cc2305c411d73f6d2'),\n    name: 'Invitación a evento',\n    type: EmailNotificationTypes.invitationToEvent,\n  },\n  {\n    _id: new Types.ObjectId('646f9538c2305c411d73f6f2'),\n    name: 'Actualización Evento',\n    type: EmailNotificationTypes.eventUpdate,\n  },\n  {\n    _id: new Types.ObjectId('646f953cc2305c411d73f702'),\n    name: 'Recurso calificado',\n    type: EmailNotificationTypes.qualifiedResource,\n  },\n  {\n    _id: new Types.ObjectId('646f941ac2305c411d73f6c2'),\n    name: 'Recurso próximo a vencer',\n    type: EmailNotificationTypes.resourceExpiringSoon,\n  },\n  {\n    _id: new Types.ObjectId('646f953dc2305c411d73f702'),\n    name: 'Culminación de fase',\n    type: EmailNotificationTypes.phaseCompletion,\n  },\n  {\n    _id: new Types.ObjectId('646f958cc2305c411d73f712'),\n    name: 'Evaluación disponible',\n    type: EmailNotificationTypes.assessmentAvailable,\n  },\n  {\n    _id: new Types.ObjectId('646f9598c2305c411d73f712'),\n    name: 'Actualización ticket mesa de ayuda',\n    type: EmailNotificationTypes.helpdeskTicketUpdate,\n  },\n]\n                    \n                \n\n            \n                \n                    default types of notifications\n\n                \n            \n\n        \n    \n\n    src/events/types-events/model/type-events.default.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        default_types_events\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    _id: new Types.ObjectId('646f943cc2305c411d73f6d0'),\n    name: 'Mentoría',\n    extra_options: {\n      allow_acta: true,\n      allow_files: true,\n    },\n    expertFocus: true,\n  },\n  {\n    _id: new Types.ObjectId('646f9538c2305c411d73f6fb'),\n    name: 'Asesoría',\n    extra_options: {\n      allow_acta: true,\n      allow_files: true,\n    },\n    expertFocus: true,\n  },\n  {\n    _id: new Types.ObjectId('646f953cc2305c411d73f700'),\n    name: 'Team Coach session',\n    extra_options: {\n      allow_acta: true,\n      allow_files: true,\n    },\n  },\n  {\n    _id: new Types.ObjectId('646f941ac2305c411d73f6c7'),\n    name: 'Entrevista',\n    extra_options: {\n      allow_acta: false,\n      allow_files: true,\n    },\n  },\n  {\n    _id: new Types.ObjectId('646f953dc2305c411d73f705'),\n    name: 'Comités',\n    extra_options: {\n      allow_acta: true,\n      allow_files: true,\n    },\n  },\n  {\n    _id: new Types.ObjectId('646f958cc2305c411d73f716'),\n    name: 'Master Class',\n    extra_options: {\n      allow_acta: false,\n      allow_files: false,\n    },\n  },\n  {\n    _id: new Types.ObjectId('646f9598c2305c411d73f71f'),\n    name: 'Workshop',\n    extra_options: {\n      allow_acta: false,\n      allow_files: false,\n    },\n  },\n  {\n    _id: new Types.ObjectId('646f95a2c2305c411d73f728'),\n    name: 'Kickoff',\n    extra_options: {\n      allow_acta: false,\n      allow_files: false,\n    },\n  },\n  {\n    _id: new Types.ObjectId('646f95e1c2305c411d73f737'),\n    name: 'Demo day',\n    extra_options: {\n      allow_acta: false,\n      allow_files: false,\n    },\n  },\n  {\n    _id: new Types.ObjectId('646f95f2c2305c411d73f740'),\n    name: 'Networking',\n    extra_options: {\n      allow_acta: false,\n      allow_files: false,\n    },\n  },\n]\n                    \n                \n\n            \n                \n                    default types events app\n\n                \n            \n\n        \n    \n\n    src/rol/model/rol.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        defaultRoles\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    type: 'superAdmin',\n    name: 'Super Admin',\n    permissions: [\n      'view_startups',\n      'load_all_startups',\n      'create_startups',\n      'edit_startups',\n      'view_experts',\n      'create_experts',\n      'edit_experts',\n      'view_entrepreneurs',\n      'load_all_entrepreneurs',\n      'create_entrepreneurs',\n      'edit_entrepreneurs',\n      'view_business',\n      'create_business',\n      'edit_business',\n      'download_all_tables',\n      'reports_view',\n      'reports_create',\n      'reports_edit',\n      'community_view',\n      'community_create',\n      'community_edit',\n      'form_view',\n      'form_create',\n      'form_edit',\n      'help_desk_view',\n      'help_desk_create',\n      'help_desk_edit',\n      'sites_and_services_view',\n      'sites_and_services_create',\n      'sites_and_services_edit',\n      'announcements_view',\n      'announcements_challenges',\n      'announcements_edit_challenge',\n      'announcements_create',\n      'announcements_edit',\n      'phases_batch_access',\n      'phases_phase_access',\n      'phases_phase_edit',\n      'phases_batch_create',\n      'phases_batch_edit',\n      'phases_batch_close',\n      'events_view',\n      'load_all_events',\n      'events_create',\n      'events_edit',\n      'actas_view',\n      'actas_create',\n      'actas_edit',\n      'actas_close',\n      'hours_view',\n      'hours_edit_activities',\n      'hours_edit_startups',\n      'hours_edit_experts',\n      'hours_edit_teamCoach',\n      'evaluation_view',\n      'evaluation_create',\n      'evaluation_edit',\n      'evaluation_edit_docs',\n      'homeworks_view',\n      'homeworks_evaluate',\n    ],\n  },\n  {\n    type: 'admin',\n    name: 'Administrador',\n    permissions: [\n      'view_startups',\n      'load_all_startups',\n      'create_startups',\n      'edit_startups',\n      'view_experts',\n      'create_experts',\n      'edit_experts',\n      'view_entrepreneurs',\n      'load_all_entrepreneurs',\n      'create_entrepreneurs',\n      'edit_entrepreneurs',\n      'view_business',\n      'create_business',\n      'edit_business',\n      'download_all_tables',\n      'reports_view',\n      'reports_create',\n      'reports_edit',\n      'community_view',\n      'community_create',\n      'community_edit',\n      'form_view',\n      'form_create',\n      'form_edit',\n      'help_desk_view',\n      'help_desk_create',\n      'help_desk_edit',\n      'sites_and_services_view',\n      'sites_and_services_create',\n      'sites_and_services_edit',\n      'announcements_view',\n      'announcements_challenges',\n      'announcements_edit_challenge',\n      'announcements_create',\n      'announcements_edit',\n      'phases_batch_access',\n      'phases_phase_access',\n      'phases_phase_edit',\n      'phases_batch_create',\n      'phases_batch_edit',\n      'phases_batch_close',\n      'events_view',\n      'load_all_events',\n      'events_create',\n      'events_edit',\n      'actas_view',\n      'actas_create',\n      'actas_edit',\n      'actas_close',\n      'hours_view',\n      'hours_edit_activities',\n      'hours_edit_startups',\n      'hours_edit_experts',\n      'hours_edit_teamCoach',\n      'evaluation_view',\n      'evaluation_create',\n      'evaluation_edit',\n      'evaluation_edit_docs',\n      'homeworks_view',\n      'homeworks_evaluate',\n    ],\n  },\n  {\n    type: 'host',\n    name: 'Host',\n    permissions: [\n      'view_startups',\n      'load_all_startups',\n      'create_startups',\n      'edit_startups',\n      'view_experts',\n      'create_experts',\n      'edit_experts',\n      'view_entrepreneurs',\n      'load_all_entrepreneurs',\n      'create_entrepreneurs',\n      'edit_entrepreneurs',\n      'download_all_tables',\n      'reports_view',\n      'reports_create',\n      'reports_edit',\n      'sites_and_services_view',\n      'phases_batch_access',\n      'events_view',\n      'load_all_events',\n      'events_create',\n      'events_edit',\n      'actas_view',\n      'actas_create',\n      'actas_edit',\n      'actas_close',\n      'hours_view',\n      'hours_edit_activities',\n      'hours_edit_startups',\n      'hours_edit_experts',\n      'hours_edit_teamCoach',\n      'evaluation_view',\n      'evaluation_create',\n      'evaluation_edit',\n      'evaluation_edit_docs',\n      'homeworks_view',\n      'homeworks_evaluate',\n    ],\n  },\n  {\n    type: 'teamCoach',\n    name: 'Team Coach',\n    permissions: [\n      'view_startups',\n      'view_entrepreneurs',\n      'community_view',\n      'phases_batch_access',\n      'events_view',\n      'events_create',\n      'events_edit',\n      'actas_view',\n      'actas_create',\n      'actas_edit',\n      'actas_close',\n      'evaluation_view',\n      'evaluation_create',\n      'evaluation_edit',\n      'evaluation_edit_docs',\n    ],\n  },\n  {\n    type: 'expert',\n    name: 'Experto',\n    permissions: [\n      'view_startups',\n      'view_entrepreneurs',\n      'phases_batch_access',\n      'actas_view',\n      'actas_view',\n      'actas_create',\n      'actas_edit',\n      'actas_close',\n      'events_view',\n      'events_create',\n      'events_edit',\n      'evaluation_view',\n      'evaluation_create',\n      'evaluation_edit',\n      'evaluation_edit_docs',\n    ],\n  },\n  {\n    type: 'user',\n    name: 'Usuario',\n    permissions: [],\n  },\n  {\n    type: 'challenger',\n    name: 'Challenger',\n    permissions: [],\n  },\n]\n                    \n                \n\n            \n                \n                    default app roles\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        listPermission\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  // Startups\n  view_startups: true,\n  create_startups: true,\n  edit_startups: true,\n\n  // Experts\n  view_experts: true,\n  create_experts: true,\n  edit_experts: true,\n\n  // Entrepreneurs\n  view_entrepreneurs: true,\n  create_entrepreneurs: true,\n  edit_entrepreneurs: true,\n\n  // Business\n  view_business: true,\n  create_business: true,\n  edit_business: true,\n\n  // Tables\n  download_all_tables: true,\n\n  // Reports\n  reports_view: true,\n  reports_create: true,\n  reports_edit: true,\n\n  // Community\n  community_view: true,\n  community_create: true,\n  community_edit: true,\n\n  // Forms\n  form_view: true,\n  form_create: true,\n  form_edit: true,\n\n  // Help Desk\n  help_desk_view: true,\n  help_desk_create: true,\n  help_desk_edit: true,\n\n  // Sites\n  sites_and_services_view: true,\n  sites_and_services_create: true,\n  sites_and_services_edit: true,\n\n  // Announcements\n  announcements_view: true,\n  announcements_challenges: true,\n  announcements_create: true,\n  announcements_edit: true,\n\n  // Phase and batch\n  phases_view: true,\n  phases_batch_create: true,\n  phases_batch_access: true,\n  phases_batch_edit: true,\n  phases_batch_content: true,\n  phases_phase_edit: true,\n\n  // Phase Events\n  events_view: true,\n  events_create: true,\n  events_edit: true,\n\n  // Phase Actas\n  actas_view: true,\n  actas_create: true,\n  actas_close: true,\n  actas_edit: true,\n\n  // Phase Hours bag\n  hours_view: true,\n  hours_edit_activities: true,\n  hours_edit_startups: true,\n  hours_edit_experts: true,\n}\n                    \n                \n\n            \n                \n                    permission list\n\n                \n            \n\n        \n    \n\n    src/shared/utilities/excel.utilities.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        excelUtilities\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  buildWorkbookBuffer,\n  parseDocumentsToRows,\n}\n                    \n                \n\n            \n                \n                    functions necessary to build excel doc\n\n                \n            \n\n        \n    \n\n    src/auth/enums/permissions.enum.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        list_of_permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         item_permission[]\n\n                    \n                \n                \n                    \n                        Default value : Object.entries(\n  permissionDescriptions,\n).map(([key, value]) => {\n  return {\n    label: value,\n    key: key as Permission,\n    activated: false,\n  };\n})\n                    \n                \n\n            \n                \n                    extract token from header\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        permissionDescription\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (permission: Permission) => {\n  return permissionDescriptions[permission];\n}\n                    \n                \n\n            \n                \n                    get permission obj\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        permissionDescriptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Record\n\n                    \n                \n                \n                    \n                        Default value : {\n  // Startups\n  [Permission.view_startups]: 'Ver sección Startups',\n  [Permission.load_all_startups]: 'Permitir que vea todas las startups',\n  [Permission.create_startups]: 'Crear startup',\n  [Permission.edit_startups]: 'Editar startup',\n\n  // Experts\n  [Permission.view_experts]: 'Ver sección expertos',\n  [Permission.create_experts]: 'Crear experto',\n  [Permission.edit_experts]: 'Editar expertos',\n\n  // Entrepreneurs\n  [Permission.view_entrepreneurs]: 'Ver sección empresarios',\n  [Permission.load_all_entrepreneurs]: 'Permitir que vea todos los empresarios',\n  [Permission.create_entrepreneurs]: 'Crear empresario',\n  [Permission.edit_entrepreneurs]: 'Editar empresarios',\n\n  // Business\n  [Permission.view_business]: 'Ver sección empresas',\n  [Permission.create_business]: 'Crear empresa',\n  [Permission.edit_business]: 'Editar empresas',\n\n  // Tables\n  [Permission.download_all_tables]: 'Descargar información de tablas',\n\n  // Reports\n  [Permission.reports_view]: 'Ver sección reportes',\n  [Permission.reports_create]: 'Crear reporte',\n  [Permission.reports_edit]: 'Editar reporte',\n\n  // Community\n  [Permission.community_view]: 'Ver sección comunidad',\n  [Permission.community_edit]: 'Editar visibilidad de comunidades',\n\n  // Forms\n  [Permission.form_view]: 'Ver sección formularios',\n  [Permission.form_create]: 'Crear formulario',\n  [Permission.form_edit]: 'Editar y borrar formularios',\n\n  // Help Desk\n  [Permission.help_desk_view]: 'Ver sección Mesa de ayuda',\n  [Permission.help_desk_create]: 'Crear hilo en mesa de ayuda',\n  [Permission.help_desk_edit]: 'Permitir editar un hilo en mesa de ayuda',\n\n  // Sites\n  [Permission.sites_and_services_view]: 'Ver sección Sedes y servicios',\n  [Permission.sites_and_services_create]: 'Crear sede y servicios',\n  [Permission.sites_and_services_edit]: 'Editar sede y servicios',\n\n  // Announcements\n  [Permission.announcements_view]: 'Ver sección convocatorias',\n  [Permission.announcements_challenges]: 'Crear reto',\n  [Permission.announcements_edit_challenge]: 'Editar reto',\n  [Permission.announcements_create]: 'Crear convocatoria',\n  [Permission.announcements_edit]: 'Editar convocatoria',\n\n  // Phase and batch\n  [Permission.phases_batch_access]: 'Ver sección fases',\n  [Permission.phases_phase_access]: 'Ver configuración de fases base',\n  [Permission.phases_phase_edit]: 'Permitir editar fase base',\n\n  [Permission.phases_batch_create]: 'Crear batch',\n  [Permission.phases_batch_edit]: 'Editar batch',\n  [Permission.phases_batch_close]:\n    'Puede cerrar un batch y asignar quienes pasan y quienes no',\n\n  // Phase Events\n  [Permission.events_view]: 'Ver sección eventos en los batch',\n  [Permission.load_all_events]: 'Permitir que vea todos los eventos del batch',\n  [Permission.events_create]: 'Crear evento',\n  [Permission.events_edit]: 'Editar evento',\n\n  // Phase Actas\n  [Permission.actas_view]: 'Ver actas de los eventos',\n  [Permission.actas_create]: 'Crear acta',\n  [Permission.actas_edit]: 'Editar acta',\n  [Permission.actas_close]: 'Cerrar acta',\n\n  // Phase Hours bag\n  [Permission.hours_view]: 'Ver sección bolsa de horas en batch',\n  [Permission.hours_edit_activities]: 'Editar límite de horas por actividad',\n  [Permission.hours_edit_startups]: 'Editar horas esperadas de los startups',\n  [Permission.hours_edit_experts]: 'Editar horas necesarios de los experto',\n  [Permission.hours_edit_teamCoach]:\n    'Editar horas necesarios de los team coach',\n\n  // Evaluations\n  [Permission.evaluation_view]: 'Ver sección de valuaciones en batch',\n  [Permission.evaluation_create]:\n    'Permitir crear una configuración para evaluaciones',\n  [Permission.evaluation_edit]:\n    'Permitir editar las configuraciones de una evaluación',\n  [Permission.evaluation_edit_docs]:\n    'Permitir evaluar en cualquiera de las evaluaciones',\n\n  // Homeworks\n  [Permission.homeworks_view]: 'Ver sección de tareas en batch',\n  [Permission.homeworks_evaluate]:\n    'Permitir evaluar las tareas de los participantes',\n}\n                    \n                \n\n            \n                \n                    permission descriptions\n\n                \n            \n\n        \n    \n\n    src/auth/enums/valid-roles.enum.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        rolNames\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Record\n\n                    \n                \n                \n                    \n                        Default value : {\n  [ValidRoles.superAdmin]: 'Super admin',\n  [ValidRoles.admin]: 'Admin',\n  [ValidRoles.user]: 'Usuario',\n  [ValidRoles.expert]: 'Experto',\n  [ValidRoles.host]: 'Host',\n  [ValidRoles.teamCoach]: 'Team Coach',\n  [ValidRoles.challenger]: 'Challenger',\n}\n                    \n                \n\n            \n                \n                    roles names\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rolValues\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Record\n\n                    \n                \n                \n                    \n                        Default value : {\n  [ValidRoles.superAdmin]: 9999,\n  [ValidRoles.admin]: 999,\n  [ValidRoles.host]: 99,\n  [ValidRoles.teamCoach]: 9,\n  [ValidRoles.expert]: 3,\n  [ValidRoles.user]: 2,\n  [ValidRoles.challenger]: 1,\n}\n                    \n                \n\n            \n                \n                    roles weight\n\n                \n            \n\n        \n    \n\n    src/emails/enums/email-templates.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        templateNames\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Record\n\n                    \n                \n                \n                    \n                        Default value : {\n  [EmailTemplates.invitation]: 'Invitatión',\n  [EmailTemplates.notification]: 'Notificatión',\n}\n                    \n                \n\n            \n                \n                    name in Spanish of type invitations\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
